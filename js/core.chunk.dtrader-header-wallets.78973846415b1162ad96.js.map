{"version":3,"file":"js/core.chunk.dtrader-header-wallets.78973846415b1162ad96.js","mappings":"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","sources":["webpack:///./App/Components/Layout/Header/wallets/accounts-info-loader-wallets.tsx","webpack:///./App/Containers/Layout/header/header-wallets.tsx"],"sourcesContent":["import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\ntype TAccountsInfoLoaderWallets = {\n    is_desktop: boolean;\n    is_logged_in: boolean;\n    is_traders_hub_routes: boolean;\n    speed: number;\n};\n\nconst AccountsInfoLoaderWallets = ({\n    is_desktop,\n    is_logged_in,\n    is_traders_hub_routes,\n    speed,\n}: TAccountsInfoLoaderWallets) => (\n    <ContentLoader\n        height={is_desktop ? 47 : 39}\n        width={is_desktop ? 350 : 161}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? (\n            <LoggedInPreloader is_desktop={is_desktop} is_traders_hub_routes={is_traders_hub_routes} />\n        ) : (\n            <LoggedOutPreloader is_desktop={is_desktop} />\n        )}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_desktop }: Pick<TAccountsInfoLoaderWallets, 'is_desktop'>) => (\n    <React.Fragment>\n        <rect x={is_desktop ? 172 : 0} y='8' rx='4' ry='4' width='66' height='30' />\n        <rect x={is_desktop ? 254 : 74} y='8' rx='4' ry='4' width='80' height='30' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({\n    is_desktop,\n    is_traders_hub_routes,\n}: Pick<TAccountsInfoLoaderWallets, 'is_desktop' | 'is_traders_hub_routes'>) =>\n    is_desktop ? (\n        <React.Fragment>\n            {!is_traders_hub_routes && (\n                <React.Fragment>\n                    <rect x='0' y='6' rx='4' ry='4' width='82' height='32' />\n                    <rect x='98' y='6' rx='4' ry='4' width='1' height='30' />\n                    <circle cx='128' cy='22' r='13' />\n                    <rect x='157' y='18' rx='4' ry='4' width='76' height='7' />\n                    <rect x='249' y='6' rx='4' ry='4' width='1' height='30' />\n                </React.Fragment>\n            )}\n            {is_traders_hub_routes && <circle cx='237' cy='20' r='13' />}\n            <circle cx='279' cy='20' r='13' />\n            <circle cx='321' cy='20' r='13' />\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            {!is_traders_hub_routes && (\n                <React.Fragment>\n                    <circle cx='13' cy='20' r='13' />\n                    <rect x='34' y='17' rx='4' ry='4' width='76' height='7' />\n                    <rect x='118' y='6' rx='4' ry='4' width='1' height='30' />\n                </React.Fragment>\n            )}\n            {is_traders_hub_routes && <circle cx='106' cy='20' r='13' />}\n            <circle cx='140' cy='20' r='13' />\n        </React.Fragment>\n    );\n\nexport default AccountsInfoLoaderWallets;\n","import React from 'react';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useIsHubRedirectionEnabled } from '@deriv/hooks';\nimport { platforms, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { AccountActionsWallets } from 'App/Components/Layout/Header/wallets/account-actions-wallets';\nimport AccountsInfoLoaderWallets from 'App/Components/Layout/Header/wallets/accounts-info-loader-wallets';\nimport platform_config from 'App/Constants/platform-config';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\n\nimport DerivShortLogo from './deriv-short-logo';\nimport TradersHubHomeButton from './traders-hub-home-button';\n\nconst MenuLeft = observer(() => {\n    const { client, common, traders_hub, ui } = useStore();\n    const { isDesktop } = useDevice();\n    const { pathname } = useLocation();\n\n    const { is_bot_allowed, is_logged_in, is_mt5_allowed, is_dxtrade_allowed } = client;\n    const { app_routing_history, current_language } = common;\n    const { setTogglePlatformType } = traders_hub;\n    const { header_extension } = ui;\n\n    const traders_hub_routes =\n        [routes.traders_hub].includes(pathname) ||\n        [routes.account, routes.wallets, routes.settings, routes.wallets_compare_accounts, routes.compare_cfds].some(\n            route => pathname.startsWith(route)\n        );\n\n    const filterPlatformsForClients = (payload: typeof platform_config) =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (config.link_to === routes.bot || config.href === routes.smarttrader) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <div className='header__menu-left'>\n            {isDesktop ? (\n                <React.Fragment>\n                    <DerivShortLogo />\n                    <div className='header__divider' />\n                    <TradersHubHomeButton />\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n                    <DerivShortLogo />\n                    {header_extension && is_logged_in && (\n                        <div className='header__menu-left-extensions'>{header_extension}</div>\n                    )}\n                </React.Fragment>\n            )}\n            <MenuLinks is_traders_hub_routes={traders_hub_routes} />\n            {isDesktop && !traders_hub_routes && (\n                <PlatformSwitcher\n                    app_routing_history={app_routing_history}\n                    platform_config={filterPlatformsForClients(platform_config)}\n                    setTogglePlatformType={setTogglePlatformType}\n                    current_language={current_language}\n                />\n            )}\n        </div>\n    );\n});\n\nconst MenuRight = observer(() => {\n    const { pathname } = useLocation();\n    const { client } = useStore();\n    const { is_logged_in, is_logging_in, is_single_logging_in, is_switching, accounts, loginid } = client;\n    const { isDesktop } = useDevice();\n\n    const history = useHistory();\n\n    const isRedirectPage = history.location.pathname.includes(routes.redirect);\n\n    const traders_hub_routes =\n        [routes.traders_hub].includes(pathname) ||\n        [routes.account, routes.wallets, routes.settings, routes.wallets_compare_accounts, routes.compare_cfds].some(\n            route => pathname.startsWith(route)\n        );\n\n    const active_account = accounts?.[loginid ?? ''];\n    const currency = active_account?.currency ?? '';\n\n    return (\n        <div className='header__menu-right'>\n            {is_logging_in || is_single_logging_in || is_switching || isRedirectPage ? (\n                <div\n                    id='dt_core_header_acc-info-preloader'\n                    className={classNames('acc-info__preloader', {\n                        'acc-info__preloader--no-currency': !currency,\n                    })}\n                >\n                    <AccountsInfoLoaderWallets\n                        is_logged_in={is_logged_in}\n                        is_desktop={isDesktop}\n                        is_traders_hub_routes={traders_hub_routes}\n                        speed={3}\n                    />\n                </div>\n            ) : (\n                <div id={'dt_core_header_acc-info-container'} className='acc-info__container'>\n                    <AccountActionsWallets is_traders_hub_routes={traders_hub_routes} />\n                </div>\n            )}\n        </div>\n    );\n});\n\nconst HeaderWallets = observer(() => {\n    const { client, common, ui, notifications } = useStore();\n    const { has_wallet, is_client_store_initialized } = client;\n    const { platform } = common;\n    const { is_app_disabled, is_route_modal_on } = ui;\n    const { addNotificationMessage, client_notifications, removeNotificationMessage } = notifications;\n    const { isHubRedirectionEnabled, isHubRedirectionLoaded } = useIsHubRedirectionEnabled();\n\n    const addUpdateNotification = () => addNotificationMessage(client_notifications.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    const excludedRoutes = [\n        routes.trade,\n        routes.trader_positions,\n        routes.complaints_policy,\n        routes.endpoint,\n        routes.redirect,\n        routes.index,\n        routes.error404,\n    ];\n\n    const isExcludedRoute = excludedRoutes.some(route => window.location.pathname.includes(route));\n\n    if (\n        (!is_client_store_initialized && !isExcludedRoute) ||\n        (has_wallet && !isHubRedirectionLoaded && !isExcludedRoute) ||\n        (has_wallet && isHubRedirectionLoaded && !isExcludedRoute && isHubRedirectionEnabled)\n    ) {\n        return null;\n    }\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <MenuLeft />\n                <MenuRight />\n            </div>\n            <RealAccountSignup />\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n});\n\nexport default withRouter(HeaderWallets);\n"],"names":["LoggedOutPreloader","is_desktop","_jsxs","React","children","_jsx","x","y","rx","ry","width","height","LoggedInPreloader","is_traders_hub_routes","cx","cy","r","AccountsInfoLoaderWallets","is_logged_in","speed","ContentLoader","backgroundColor","foregroundColor","MenuLeft","observer","client","common","traders_hub","ui","useStore","isDesktop","useDevice","pathname","useLocation","is_bot_allowed","is_mt5_allowed","is_dxtrade_allowed","app_routing_history","current_language","setTogglePlatformType","header_extension","traders_hub_routes","routes","includes","account","wallets","settings","wallets_compare_accounts","compare_cfds","some","route","startsWith","filterPlatformsForClients","payload","filter","config","link_to","mt5","dxtrade","bot","href","smarttrader","className","DerivShortLogo","TradersHubHomeButton","ToggleMenuDrawer","platform_config","MenuLinks","PlatformSwitcher","MenuRight","_active_account$curre","is_logging_in","is_single_logging_in","is_switching","accounts","loginid","isRedirectPage","useHistory","location","redirect","active_account","currency","id","classNames","AccountActionsWallets","HeaderWallets","notifications","has_wallet","is_client_store_initialized","platform","is_app_disabled","is_route_modal_on","addNotificationMessage","client_notifications","removeNotificationMessage","isHubRedirectionEnabled","isHubRedirectionLoaded","useIsHubRedirectionEnabled","removeUpdateNotification","key","document","addEventListener","removeEventListener","isExcludedRoute","trade","trader_positions","complaints_policy","endpoint","index","error404","window","platforms","RealAccountSignup","SetAccountCurrencyModal","NewVersionNotification","onUpdate","addUpdateNotification","new_version_available","withRouter"],"sourceRoot":""}