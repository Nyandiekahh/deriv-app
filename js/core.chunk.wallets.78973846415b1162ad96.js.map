{"version":3,"file":"js/core.chunk.wallets.78973846415b1162ad96.js","mappings":"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","sources":["webpack:///../../api-v2/src/ws-client/request.ts","webpack:///../../api-v2/src/ws-client/subscription.ts","webpack:///../../api-v2/src/utils/display-money.ts","webpack:///../../api-v2/src/utils/file-utils.ts","webpack:///../../api-v2/src/utils/query-utils.ts","webpack:///../../api-v2/src/utils/crypto.utils.ts","webpack:///../../api-v2/src/ws-client/subscriptions-manager.ts","webpack:///../../api-v2/src/ws-client/ws-client.ts","webpack:///../../api-v2/src/constants/countries.ts","webpack:///../../api-v2/src/constants/onfido.ts","webpack:///../../api-v2/src/constants/errorCodes.ts","webpack:///../../api-v2/src/constants/platforms.ts","webpack:///../../api-v2/src/APIProvider.tsx","webpack:///../../api-v2/src/useAPI.ts","webpack:///../../api-v2/src/useInfiniteQuery.ts","webpack:///../../api-v2/src/useMutation.ts","webpack:///../../api-v2/src/useQuery.ts","webpack:///../../api-v2/src/AuthProvider.tsx","webpack:///../../api-v2/src/useInvalidateQuery.ts","webpack:///../../api-v2/src/usePaginatedFetch.ts","webpack:///../../api-v2/src/useSubscription.ts","webpack:///../../api-v2/src/hooks/useRemoteConfig.ts","webpack:///../../api-v2/src/hooks/useAuthorize.ts","webpack:///../../api-v2/src/useAuthorizedQuery.ts","webpack:///../../api-v2/src/hooks/useWebsiteStatus.ts","webpack:///../../api-v2/src/hooks/useAccountLimits.ts","webpack:///../../api-v2/src/hooks/useGetAccountStatus.ts","webpack:///../../api-v2/src/hooks/useAccountStatus.ts","webpack:///../../api-v2/src/hooks/useAccountTypes.ts","webpack:///../../api-v2/src/hooks/useCurrencyConfig.ts","webpack:///../../api-v2/src/hooks/useDerivAccountsList.ts","webpack:///../../api-v2/src/hooks/useActiveAccount.ts","webpack:///../../api-v2/src/hooks/useWalletAccountsList.ts","webpack:///../../api-v2/src/hooks/useActiveWalletAccount.ts","webpack:///../../api-v2/src/hooks/useActiveLinkedToTradingAccount.ts","webpack:///../../api-v2/src/hooks/useTradingAccountsList.ts","webpack:///../../api-v2/src/hooks/useActiveTradingAccount.ts","webpack:///../../api-v2/src/hooks/useExchangeRates.ts","webpack:///../../api-v2/src/hooks/useCtraderAccountsList.ts","webpack:///../../api-v2/src/hooks/useDxtradeAccountsList.ts","webpack:///../../api-v2/src/hooks/useMT5AccountsList.ts","webpack:///../../api-v2/src/hooks/useCFDAccountsList.ts","webpack:///../../api-v2/src/hooks/useAllAccountsList.ts","webpack:///../../api-v2/src/hooks/useAvailableWallets.ts","webpack:///../../api-v2/src/hooks/useAllWalletAccounts.ts","webpack:///../../api-v2/src/hooks/useAuthentication.ts","webpack:///../../api-v2/src/hooks/useSettings.ts","webpack:///../../api-v2/src/hooks/useLandingCompany.ts","webpack:///../../api-v2/src/hooks/useAccesiblePlatforms.ts","webpack:///../../api-v2/src/hooks/useAvailableMT5Accounts.ts","webpack:///../../api-v2/src/hooks/useBalance.ts","webpack:///../../api-v2/src/hooks/useBalanceSubscription.ts","webpack:///../../api-v2/src/hooks/useCashierValidation.ts","webpack:///../../api-v2/src/hooks/useCloseDerivAccount.ts","webpack:///../../api-v2/src/hooks/useCFDCompareAccounts.tsx","webpack:///../../api-v2/src/hooks/useCancelCryptoTransaction.ts","webpack:///../../api-v2/src/hooks/useCashierFiatAddress.ts","webpack:///../../api-v2/src/hooks/useCashierFiatDepositAddress.ts","webpack:///../../api-v2/src/hooks/useCountryConfig.ts","webpack:///../../api-v2/src/hooks/useCreateNewRealAccount.ts","webpack:///../../api-v2/src/hooks/useCreateNewVirtualAccount.ts","webpack:///../../api-v2/src/hooks/useCreateWallet.ts","webpack:///../../api-v2/src/hooks/useCryptoConfig.ts","webpack:///../../api-v2/src/hooks/useCryptoEstimations.ts","webpack:///../../api-v2/src/hooks/useCryptoTransactions.ts","webpack:///../../api-v2/src/hooks/useCryptoWithdrawal.ts","webpack:///../../api-v2/src/hooks/useCtraderServiceToken.ts","webpack:///../../api-v2/src/hooks/useDepositCryptoAddress.ts","webpack:///../../api-v2/src/hooks/useDocumentUpload.ts","webpack:///../../api-v2/src/hooks/useDxtradeServiceToken.ts","webpack:///../../api-v2/src/hooks/useDynamicLeverage.ts","webpack:///../../api-v2/src/hooks/useExchangeRateSubscription.ts","webpack:///../../api-v2/src/hooks/useGetExchangeRate.ts","webpack:///../../api-v2/src/hooks/useGrowthbookGetFeatureValue.ts","webpack:///../../api-v2/src/hooks/useIsGrowthbookLoaded.ts","webpack:///../../api-v2/src/hooks/useGrowthbookIsOn.ts","webpack:///../../api-v2/src/hooks/useIdentityDocumentVerificationAdd.ts","webpack:///../../api-v2/src/hooks/useIsEuRegion.ts","webpack:///../../api-v2/src/hooks/useClientCountry.ts","webpack:///../../api-v2/src/hooks/useIsHubRedirectionEnabled.ts","webpack:///../../api-v2/src/hooks/useResidenceList.ts","webpack:///../../api-v2/src/hooks/usePOI.ts","webpack:///../../api-v2/src/hooks/useJurisdictionStatus.ts","webpack:///../../api-v2/src/hooks/useMT5Deposit.ts","webpack:///../../api-v2/src/hooks/useOnfidoServiceToken.ts","webpack:///../../api-v2/src/hooks/useOnfidoNotificationEvent.ts","webpack:///../../api-v2/node_modules/uuid/dist/esm-browser/native.js","webpack:///../../api-v2/node_modules/uuid/dist/esm-browser/rng.js","webpack:///../../api-v2/node_modules/uuid/dist/esm-browser/stringify.js","webpack:///../../api-v2/node_modules/uuid/dist/esm-browser/v4.js","webpack:///../../api-v2/src/hooks/useOnfido.ts","webpack:///../../api-v2/src/hooks/useOtherCFDPlatformsDeposit.ts","webpack:///../../api-v2/src/hooks/usePaymentAgentList.ts","webpack:///../../api-v2/src/hooks/usePaymentAgentWithdrawal.ts","webpack:///../../api-v2/src/hooks/usePOA.ts","webpack:///../../api-v2/src/hooks/useSendbirdServiceToken.ts","webpack:///../../api-v2/src/hooks/useServerTime.ts","webpack:///../../api-v2/src/hooks/useSortedMT5Accounts.ts","webpack:///../../api-v2/src/hooks/useMobileCarouselWalletsList.ts","webpack:///../../api-v2/src/hooks/useStatesList.ts","webpack:///../../api-v2/src/hooks/useTradingPlatformInvestorPasswordChange.ts","webpack:///../../api-v2/src/hooks/useCreateMT5Account.ts","webpack:///../../api-v2/src/hooks/useCreateOtherCFDAccount.ts","webpack:///../../api-v2/src/hooks/useTradingPlatformInvestorPasswordReset.ts","webpack:///../../api-v2/src/hooks/useTradingPlatformPasswordChange.ts","webpack:///../../api-v2/src/hooks/useTransactions.ts","webpack:///../../api-v2/src/hooks/useInfiniteTransactions.ts","webpack:///../../api-v2/src/hooks/useTransferBetweenAccounts.ts","webpack:///../../api-v2/src/hooks/useVerifyEmail.ts","webpack:///../../api-v2/src/hooks/useWalletMigration.ts","webpack:///../../api-v2/src/hooks/useTradingPlatformPasswordReset.ts","webpack:///../../api-v2/src/hooks/useResetVirtualBalance.ts","webpack:///../../api-v2/src/hooks/useIsDIELEnabled.ts","webpack:///../../api-v2/src/hooks/useKycAuthStatus.ts","webpack:///../../api-v2/src/hooks/useTradingPlatformStatus.ts","webpack:///../../wallets/dist/wallets/js/index.js"],"sourcesContent":["import {\n    TSocketResponseData,\n    TSocketResponse,\n    TSocketEndpointNames,\n    TSocketRequestPayload,\n    TSocketSubscribableEndpointNames,\n} from '../../types';\n\nconst REQ_TIMEOUT = 20000;\n\n// sequence number for requests\nlet reqSeqNumber = 0;\n\n/**\n * responsible for sending request over given WS and thats it,\n * no handling of reconnections, no state, nothing, just send\n * even request seq number is outside of its scope (reason being, that req_seq needs to be also used by the subscriptions)\n */\nfunction request<T extends TSocketSubscribableEndpointNames>(\n    ws: WebSocket,\n    name: TSocketEndpointNames,\n    payload: TSocketRequestPayload<T>['payload']\n): Promise<TSocketResponse<T>> {\n    const req_id = ++reqSeqNumber;\n\n    const promise: Promise<TSocketResponseData<T>> = new Promise((resolve, reject) => {\n        if (ws.readyState === ws.CLOSED || ws.readyState === ws.CLOSING) {\n            reject(new Error('WS is closed or closing'));\n            return;\n        }\n\n        if (ws.readyState !== ws.OPEN) {\n            reject(new Error('WS is not open'));\n            return;\n        }\n\n        const timeout: NodeJS.Timeout = setTimeout(() => {\n            ws.removeEventListener('message', receive);\n            reject(new Error(`Request timeout, request: ${name}, payload: ${JSON.stringify(payload)}`));\n        }, REQ_TIMEOUT);\n\n        function receive(messageEvent: MessageEvent) {\n            const data = JSON.parse(messageEvent.data);\n            if (data.req_id !== req_id) {\n                return;\n            }\n\n            if (data.error) {\n                clearTimeout(timeout);\n                reject(data);\n                return;\n            }\n\n            ws.removeEventListener('message', receive);\n            clearTimeout(timeout);\n            resolve(data);\n        }\n\n        ws.addEventListener('message', receive);\n\n        ws.send(\n            JSON.stringify({\n                [name]: 1,\n                ...payload,\n                req_id,\n            })\n        );\n    });\n\n    return promise;\n}\n\n/**\n * responsible for sending request over given WS and thats it,\n * response is not expected, fire and forget,\n * e.g. to unsubscribe - send unsubscribe request away and don't wait for response, e.g. when closing connection\n */\nfunction send<T extends TSocketSubscribableEndpointNames>(\n    ws: WebSocket,\n    name: TSocketEndpointNames,\n    payload: TSocketRequestPayload<T>['payload']\n): void {\n    const req_id = ++reqSeqNumber;\n\n    if (ws.readyState === ws.CLOSED || ws.readyState === ws.CLOSING) {\n        console.error('WS is closed or closing'); // eslint-disable-line no-console\n        return;\n    }\n\n    if (ws.readyState !== ws.OPEN) {\n        console.error('WS is not open'); // eslint-disable-line no-console\n        return;\n    }\n\n    ws.send(\n        JSON.stringify({\n            [name]: 1,\n            ...payload,\n            req_id,\n        })\n    );\n}\n\n/**\n * reset request sequence number\n * used in tests\n * havent found better way to reset it within tests themselves\n * without exposting extra function\n */\nexport function resetReqSeqNumber() {\n    reqSeqNumber = 0;\n}\n\nexport default request;\nexport { send };\n","import request, { send } from './request';\nimport {\n    TSocketResponse,\n    TSocketRequestPayload,\n    TSocketSubscribableEndpointNames,\n    TSocketError,\n    TSocketResponseData,\n} from '../../types';\n\n/**\n * Subscribes directly to backend stream\n * Backend does not support duplicate subscription on different subscriptionId though,\n * so thats why we have subscriptions manager - to group multiple FE subscription in one backend subscriptions\n */\nexport default class Subscription {\n    authorizedWs: WebSocket;\n    name: TSocketSubscribableEndpointNames;\n    payload: TSocketRequestPayload<TSocketSubscribableEndpointNames>['payload'];\n\n    reqId: number | null;\n    subscriptionId: string | null;\n\n    lastData: TSocketResponse<TSocketSubscribableEndpointNames> | null;\n\n    boundOnWsMessage: (messageEvent: MessageEvent) => void;\n    boundOnWsClose: () => void;\n\n    listeners: Array<(data: TSocketResponse<TSocketSubscribableEndpointNames>) => void>;\n\n    setAuthorizedWs(authorizedWs?: WebSocket) {\n        if (!authorizedWs) {\n            return;\n        }\n\n        this.authorizedWs = authorizedWs;\n\n        this.authorizedWs.removeEventListener('message', this.boundOnWsMessage);\n        this.authorizedWs.removeEventListener('close', this.boundOnWsClose);\n\n        this.subscribe();\n    }\n\n    constructor(\n        authorizedWs: WebSocket,\n        name: TSocketSubscribableEndpointNames,\n        payload: TSocketRequestPayload<TSocketSubscribableEndpointNames>['payload']\n    ) {\n        this.authorizedWs = authorizedWs;\n        this.name = name;\n        this.payload = payload;\n\n        this.reqId = null;\n        this.subscriptionId = null;\n\n        this.lastData = null;\n\n        this.boundOnWsMessage = this.onWsMessage.bind(this);\n        this.boundOnWsClose = this.onWsClose.bind(this);\n\n        this.listeners = [];\n    }\n\n    async unsubscribe() {\n        this.authorizedWs.removeEventListener('message', this.boundOnWsMessage);\n        this.authorizedWs.removeEventListener('close', this.boundOnWsClose);\n        send(this.authorizedWs, 'forget', { forget: this.subscriptionId });\n    }\n\n    onWsClose() {\n        this.authorizedWs.removeEventListener('message', this.boundOnWsMessage);\n        this.authorizedWs.removeEventListener('close', this.boundOnWsClose);\n    }\n\n    async subscribe() {\n        this.authorizedWs.addEventListener('message', this.boundOnWsMessage);\n        this.authorizedWs.addEventListener('close', this.boundOnWsClose);\n\n        const data: TSocketResponseData<TSocketSubscribableEndpointNames> = await request(\n            this.authorizedWs,\n            this.name,\n            {\n                subscribe: 1,\n                ...this.payload,\n            }\n        );\n\n        // @ts-expect-error due to incorrect type defintion, to be fixed later\n        this.reqId = data.req_id;\n        // @ts-expect-error due to incorrect type definition, to be fixed later\n        this.subscriptionId = data.subscription.id;\n        this.lastData = data;\n\n        this.listeners.forEach(listener => listener(data));\n    }\n\n    addListener(onData: (data: TSocketResponse<TSocketSubscribableEndpointNames>) => void) {\n        this.listeners.push(onData);\n    }\n\n    removeListener(onData: (data: TSocketResponse<TSocketSubscribableEndpointNames>) => void) {\n        this.listeners = this.listeners.filter(listener => listener !== onData);\n    }\n\n    onWsMessage<T extends TSocketSubscribableEndpointNames>(messageEvent: MessageEvent) {\n        const data = JSON.parse(messageEvent.data) as TSocketResponse<T> & TSocketError<T>;\n\n        if (data.req_id !== this.reqId) {\n            return;\n        }\n\n        this.lastData = data;\n        this.listeners.forEach(listener => listener(data));\n    }\n}\n","import { FormatUtils } from '@deriv-com/utils';\nimport { useAuthorize } from '../hooks';\n\ntype TCurrency = NonNullable<ReturnType<typeof useAuthorize>['data']['currency']>;\n\nexport const displayMoney = (\n    amount = 0,\n    currency: TCurrency = '',\n    options?: {\n        fractional_digits?: number;\n    }\n) => {\n    const formattedAmount = FormatUtils.formatMoney(amount, {\n        decimalPlaces: options?.fractional_digits ?? 2,\n        locale: 'en-US',\n    });\n\n    return formattedAmount + (currency ? ` ${currency}` : '');\n};\n","const DEFAULT_IMAGE_WIDTH = 2560;\nconst DEFAULT_IMAGE_QUALITY = 0.9;\nconst WORD_SIZE = 4;\n\ntype TCompressImageOption = {\n    maxWidth?: number;\n    quality?: number;\n};\n\ntype TBase64Image = {\n    filename: string;\n    src: string;\n};\n\ntype TCompressImage = TBase64Image & {\n    options?: TCompressImageOption;\n};\n\nexport type TFileObject = {\n    filename: File['name'];\n    buffer: FileReader['result'];\n    fileSize: File['size'];\n};\n\n/**\n * Compress an image and return it as a Blob.\n * @param {TCompressImage} params - The parameters for image compression.\n * @param {string} params.src - The source image URL or data URI.\n * @param {string} params.filename - The desired filename for the compressed image.\n * @param {Object} [params.options] - Options for image compression.\n * @param {number} [params.options.maxWidth=DEFAULT_IMAGE_WIDTH] - The maximum width for the compressed image.\n * @param {number} [params.options.quality=DEFAULT_IMAGE_QUALITY] - The image quality (0 to 1) for compression.\n * @returns {Promise<Blob>} A Promise that resolves with the compressed image as a Blob.\n */\nexport const compressImage = ({ src, filename, options }: TCompressImage): Promise<Blob> => {\n    const { maxWidth = DEFAULT_IMAGE_WIDTH, quality = DEFAULT_IMAGE_QUALITY } = options || {};\n\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.src = src;\n        image.onload = () => {\n            const canvas = document.createElement('canvas');\n            const canvas_context = canvas.getContext('2d');\n            if (!canvas_context || !(canvas_context instanceof CanvasRenderingContext2D)) {\n                return reject(new Error('Failed to get 2D context'));\n            }\n\n            if (image.naturalWidth > maxWidth) {\n                const width = DEFAULT_IMAGE_WIDTH;\n                const scaleFactor = width / image.naturalWidth;\n                canvas.width = width;\n                canvas.height = image.naturalHeight * scaleFactor;\n            } else {\n                canvas.width = image.naturalWidth;\n                canvas.height = image.naturalHeight;\n            }\n\n            canvas_context.fillStyle = 'transparent';\n            canvas_context.fillRect(0, 0, canvas.width, canvas.height);\n            canvas_context.save();\n            canvas_context.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n            canvas.toBlob(\n                blob => {\n                    if (!blob) return;\n                    const modified_filename = filename.replace(/\\.[^/.]+$/, '.jpg');\n                    const file = new Blob([blob], { type: 'image/jpeg' });\n                    file.lastModifiedDate = Date.now();\n                    file.name = modified_filename;\n                    resolve(file);\n                },\n                'image/jpeg',\n                quality\n            );\n        };\n    });\n};\n\n/**\n * Convert a File to a Base64 encoded image representation.\n * @param {File} file - The File object to convert to Base64.\n * @returns {Promise<TBase64Image>} A Promise that resolves with an object containing the Base64 image data and the filename.\n */\nexport const convertToBase64 = (file: File): Promise<TBase64Image> => {\n    return new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            resolve({\n                src: reader.result?.toString() || '',\n                filename: file.name,\n            });\n        };\n    });\n};\n\n/**\n * Check if a given filename has a supported image format extension.\n *\n * @param {string} filename - The filename to check for a supported image format.\n * @returns {boolean} True if the filename has a supported image format extension, false otherwise.\n */\nexport const isSupportedImageFormat = (filename: string) => /\\.(png|jpg|jpeg|gif|pdf)$/gi.test(filename ?? '');\n\n/**\n * Convert image to base64 and cmpress an image file if it is a supported image format.\n *\n * @param {File} file - The File object to compress.\n * @returns {Promise<Blob>} A Promise that resolves with the compressed image as a Blob.\n */\nexport const compressImageFile = (file: File) => {\n    return new Promise<Blob>(resolve => {\n        if (isSupportedImageFormat(file.name)) {\n            convertToBase64(file).then(img => {\n                compressImage(img).then(resolve);\n            });\n        } else {\n            resolve(file);\n        }\n    });\n};\n\n/**\n * Get Uint8Array from number\n *\n * @param {num} number - The number to convert to Uint8Array.\n * @returns {Uint8Array} Uint8Array\n */\nexport function numToUint8Array(num: number) {\n    const typedArray = new Uint8Array(WORD_SIZE);\n    const dv = new DataView(typedArray.buffer);\n    dv.setUint32(0, num);\n    return typedArray;\n}\n\n/**\n * Turn binary into array of chunks\n *\n * @param {binary} Uint8Array - Uint8Array to be chunked.\n * @returns {Uint8Array[]} Array of Uint8Array chunks\n */\nexport const generateChunks = (binary: Uint8Array, { chunkSize = 16384 /* 16KB */ }) => {\n    const chunks = [];\n    for (let i = 0; i < binary.length; i++) {\n        const item = binary[i];\n        if (i % chunkSize === 0) {\n            chunks.push([item]);\n        } else {\n            chunks[chunks.length - 1].push(item);\n        }\n    }\n    return chunks.map(b => new Uint8Array(b)).concat(new Uint8Array([]));\n};\n\n/**\n * Read a file and return it as modified object with a buffer of the file contents.\n * @param {Blob} file - The file to read.\n * @returns {Promise<TFileObject>} A Promise that resolves with the file as a TFileObject.\n *\n */\nexport const readFile = (file: Blob) => {\n    const fr = new FileReader();\n    return new Promise<\n        | TFileObject\n        | {\n              message: string;\n          }\n    >(resolve => {\n        fr.onload = () => {\n            const fileMetadata = {\n                filename: file.name,\n                buffer: fr.result,\n                fileSize: file.size,\n            };\n            resolve(fileMetadata);\n        };\n\n        fr.onerror = () => {\n            resolve({\n                message: `Unable to read file ${file.name}`,\n            });\n        };\n\n        // Reading file\n        fr.readAsArrayBuffer(file);\n    });\n};\n","export const getQueryKeys = (name: string, props?: Record<string, unknown>) => {\n    if (!props) return [name];\n\n    delete props.req_id;\n    if (name && props[name] === 1) delete props[name];\n\n    if (Object.keys(props).length === 0) return [name];\n\n    const ordered_props = Object.keys(props)\n        .sort((a, b) => a.localeCompare(b))\n        .reduce((obj, key) => {\n            obj[key] = props[key];\n\n            return obj;\n        }, {} as { [k: string]: unknown });\n\n    const query_props = JSON.stringify(ordered_props);\n\n    return [name, query_props];\n};\n","/**\n * Computes the SHA-256 hash of a JavaScript object.\n * @param {T extends object} object - The object to be hashed.\n * @returns {Promise<string>} A Promise that resolves to the SHA-256 hash of the input object as a hexadecimal string.\n * @throws {Error} Throws an error if the hashing operation fails or if the input is not a valid object.\n */\n/**\n * @deprecated Please use 'ObjectUtils.hashObject' from '@deriv-com/utils' instead of this.\n */\nexport const hashObject = async <T extends object>(object: T) => {\n    const messageBuffer = new TextEncoder().encode(JSON.stringify(object));\n    const hashBuffer = await crypto.subtle.digest('SHA-256', messageBuffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => `00${b.toString(16)}`.slice(-2)).join('');\n    return hashHex;\n};\n","import Subscription from './subscription';\nimport { TSocketResponse, TSocketRequestPayload, TSocketSubscribableEndpointNames } from '../../types';\nimport { getQueryKeys } from '../utils';\n\nexport default class SubscriptionsManager {\n    backendSubscriptions: Map<string, Subscription> = new Map();\n    authorizedWs?: WebSocket;\n\n    setAuthorizedWs(authorizedWs?: WebSocket) {\n        this.authorizedWs = authorizedWs;\n\n        this.backendSubscriptions.forEach(subscription => {\n            subscription.setAuthorizedWs(authorizedWs);\n        });\n    }\n\n    async close() {\n        if (!this.authorizedWs) {\n            return;\n        }\n\n        // Collect promises from the async unsubscribe calls\n        const unsubscribePromises = Array.from(this.backendSubscriptions.values()).map(async backendSubscription => {\n            await backendSubscription.unsubscribe();\n        });\n\n        // Clear the subscriptions map after all promises have resolved\n        this.backendSubscriptions.clear();\n\n        // Await all the unsubscribe promises to finish\n        await Promise.all(unsubscribePromises);\n    }\n\n    async subscribe(\n        name: TSocketSubscribableEndpointNames,\n        payload: TSocketRequestPayload<TSocketSubscribableEndpointNames>['payload'],\n        onData: (data: TSocketResponse<TSocketSubscribableEndpointNames>) => void\n    ) {\n        if (!this.authorizedWs) {\n            throw new Error('Unauthorized websocket connection.');\n        }\n        const keys: Array<string> = getQueryKeys(name, payload); // potentially switch to separate function, which just returns primitive values (string)\n        const key = keys.join('-'); // but until then, use \"join\" to conver array of specifci structre to just string (no idea why its overcomplicated on first place)\n\n        let backendSubscription: Subscription | undefined;\n\n        if (!this.backendSubscriptions.has(key)) {\n            backendSubscription = new Subscription(this.authorizedWs, name, payload);\n            this.backendSubscriptions.set(key, backendSubscription);\n\n            await backendSubscription.subscribe();\n        }\n\n        backendSubscription = this.backendSubscriptions.get(key);\n        backendSubscription?.addListener(onData);\n\n        if (backendSubscription?.lastData) {\n            onData(backendSubscription.lastData);\n        }\n\n        return {\n            unsubscribe: async () => {\n                // find and remove listener\n                backendSubscription?.removeListener(onData);\n\n                // if no more listeners,\n                //   - unsubscribe from backend\n                //   - remove from BEsubscriptionsByKey\n                if (backendSubscription?.listeners.length === 0) {\n                    this.backendSubscriptions.delete(key);\n\n                    await backendSubscription.unsubscribe();\n                }\n            },\n        };\n    }\n}\n","import {\n    TSocketEndpointNames,\n    TSocketRequestPayload,\n    TSocketResponse,\n    TSocketSubscribableEndpointNames,\n} from '../../types';\n\nimport request from './request';\nimport SubscriptionsManager from './subscriptions-manager';\n\n/**\n * WSClient as main instance\n */\nexport default class WSClient {\n    ws?: WebSocket;\n    subscriptionManager: SubscriptionsManager;\n    isAuthorized = false;\n    onAuthorized?: () => void;\n    endpoint?: string;\n\n    constructor(onAuthorized?: () => void) {\n        this.onAuthorized = onAuthorized;\n        this.subscriptionManager = new SubscriptionsManager();\n    }\n\n    setWs(ws: WebSocket) {\n        if (this.ws !== ws) {\n            this.isAuthorized = false;\n            this.ws = ws;\n        }\n    }\n\n    setEndpoint(endpoint: string) {\n        this.endpoint = endpoint;\n    }\n\n    private onWebsocketAuthorized() {\n        if (!this.ws) {\n            return;\n        }\n\n        this.isAuthorized = true;\n        this.onAuthorized?.();\n\n        this.subscriptionManager.setAuthorizedWs(this.ws);\n    }\n\n    async request<T extends TSocketEndpointNames>(\n        name: TSocketEndpointNames,\n        payload?: TSocketRequestPayload<T>['payload']\n    ): Promise<TSocketResponse<T>> {\n        if (!this.ws) {\n            return Promise.reject(new Error('WS is not set'));\n        }\n        return request(this.ws, name, payload).then((response: TSocketResponse<TSocketEndpointNames>) => {\n            if ('msg_type' in response && response.msg_type === 'authorize') {\n                this.onWebsocketAuthorized();\n            }\n\n            return response;\n        });\n    }\n\n    subscribe(\n        name: TSocketSubscribableEndpointNames,\n        payload: TSocketRequestPayload<TSocketSubscribableEndpointNames>['payload'],\n        onData: (data: TSocketResponse<TSocketSubscribableEndpointNames>) => void\n    ) {\n        return this.subscriptionManager?.subscribe(name, payload, onData);\n    }\n\n    async close() {\n        await this.subscriptionManager.close();\n        this.ws?.close();\n    }\n}\n","export const ALPHA_2_TO_ALPHA_3: Record<string, string> = {\n    AF: 'AFG',\n    AX: 'ALA',\n    AL: 'ALB',\n    DZ: 'DZA',\n    AS: 'ASM',\n    AD: 'AND',\n    AO: 'AGO',\n    AI: 'AIA',\n    AQ: 'ATA',\n    AG: 'ATG',\n    AR: 'ARG',\n    AM: 'ARM',\n    AW: 'ABW',\n    AU: 'AUS',\n    AT: 'AUT',\n    AZ: 'AZE',\n    BS: 'BHS',\n    BH: 'BHR',\n    BD: 'BGD',\n    BB: 'BRB',\n    BY: 'BLR',\n    BE: 'BEL',\n    BZ: 'BLZ',\n    BJ: 'BEN',\n    BM: 'BMU',\n    BT: 'BTN',\n    BO: 'BOL',\n    BQ: 'BES',\n    BA: 'BIH',\n    BW: 'BWA',\n    BV: 'BVT',\n    BR: 'BRA',\n    VG: 'VGB',\n    IO: 'IOT',\n    BN: 'BRN',\n    BG: 'BGR',\n    BF: 'BFA',\n    BI: 'BDI',\n    KH: 'KHM',\n    CM: 'CMR',\n    CA: 'CAN',\n    CV: 'CPV',\n    KY: 'CYM',\n    CF: 'CAF',\n    TD: 'TCD',\n    CL: 'CHL',\n    CN: 'CHN',\n    HK: 'HKG',\n    MO: 'MAC',\n    CX: 'CXR',\n    CC: 'CCK',\n    CO: 'COL',\n    KM: 'COM',\n    CG: 'COG',\n    CD: 'COD',\n    CK: 'COK',\n    CR: 'CRI',\n    CI: 'CIV',\n    HR: 'HRV',\n    CU: 'CUB',\n    CW: 'CUW',\n    CY: 'CYP',\n    CZ: 'CZE',\n    DK: 'DNK',\n    DJ: 'DJI',\n    DM: 'DMA',\n    DO: 'DOM',\n    EC: 'ECU',\n    EG: 'EGY',\n    SV: 'SLV',\n    GQ: 'GNQ',\n    ER: 'ERI',\n    EE: 'EST',\n    ET: 'ETH',\n    FK: 'FLK',\n    FO: 'FRO',\n    FJ: 'FJI',\n    FI: 'FIN',\n    FR: 'FRA',\n    GF: 'GUF',\n    PF: 'PYF',\n    TF: 'ATF',\n    GA: 'GAB',\n    GM: 'GMB',\n    GE: 'GEO',\n    DE: 'DEU',\n    GH: 'GHA',\n    GI: 'GIB',\n    GR: 'GRC',\n    GL: 'GRL',\n    GD: 'GRD',\n    GP: 'GLP',\n    GU: 'GUM',\n    GT: 'GTM',\n    GG: 'GGY',\n    GN: 'GIN',\n    GW: 'GNB',\n    GY: 'GUY',\n    HT: 'HTI',\n    HM: 'HMD',\n    VA: 'VAT',\n    HN: 'HND',\n    HU: 'HUN',\n    IS: 'ISL',\n    IN: 'IND',\n    ID: 'IDN',\n    IR: 'IRN',\n    IQ: 'IRQ',\n    IE: 'IRL',\n    IM: 'IMN',\n    IL: 'ISR',\n    IT: 'ITA',\n    JM: 'JAM',\n    JP: 'JPN',\n    JE: 'JEY',\n    JO: 'JOR',\n    KZ: 'KAZ',\n    KE: 'KEN',\n    KI: 'KIR',\n    KP: 'PRK',\n    KR: 'KOR',\n    KW: 'KWT',\n    KG: 'KGZ',\n    LA: 'LAO',\n    LV: 'LVA',\n    LB: 'LBN',\n    LS: 'LSO',\n    LR: 'LBR',\n    LY: 'LBY',\n    LI: 'LIE',\n    LT: 'LTU',\n    LU: 'LUX',\n    MK: 'MKD',\n    MG: 'MDG',\n    MW: 'MWI',\n    MY: 'MYS',\n    MV: 'MDV',\n    ML: 'MLI',\n    MT: 'MLT',\n    MH: 'MHL',\n    MQ: 'MTQ',\n    MR: 'MRT',\n    MU: 'MUS',\n    YT: 'MYT',\n    MX: 'MEX',\n    FM: 'FSM',\n    MD: 'MDA',\n    MC: 'MCO',\n    MN: 'MNG',\n    ME: 'MNE',\n    MS: 'MSR',\n    MA: 'MAR',\n    MZ: 'MOZ',\n    MM: 'MMR',\n    NA: 'NAM',\n    NR: 'NRU',\n    NP: 'NPL',\n    NL: 'NLD',\n    AN: 'ANT',\n    NC: 'NCL',\n    NZ: 'NZL',\n    NI: 'NIC',\n    NE: 'NER',\n    NG: 'NGA',\n    NU: 'NIU',\n    NF: 'NFK',\n    MP: 'MNP',\n    NO: 'NOR',\n    OM: 'OMN',\n    PK: 'PAK',\n    PW: 'PLW',\n    PS: 'PSE',\n    PA: 'PAN',\n    PG: 'PNG',\n    PY: 'PRY',\n    PE: 'PER',\n    PH: 'PHL',\n    PN: 'PCN',\n    PL: 'POL',\n    PT: 'PRT',\n    PR: 'PRI',\n    QA: 'QAT',\n    RE: 'REU',\n    RO: 'ROU',\n    RU: 'RUS',\n    RW: 'RWA',\n    BL: 'BLM',\n    SH: 'SHN',\n    KN: 'KNA',\n    LC: 'LCA',\n    MF: 'MAF',\n    PM: 'SPM',\n    VC: 'VCT',\n    WS: 'WSM',\n    SM: 'SMR',\n    ST: 'STP',\n    SA: 'SAU',\n    SN: 'SEN',\n    RS: 'SRB',\n    SC: 'SYC',\n    SL: 'SLE',\n    SG: 'SGP',\n    SX: 'SXM',\n    SK: 'SVK',\n    SI: 'SVN',\n    SB: 'SLB',\n    SO: 'SOM',\n    ZA: 'ZAF',\n    GS: 'SGS',\n    SS: 'SSD',\n    ES: 'ESP',\n    LK: 'LKA',\n    SD: 'SDN',\n    SR: 'SUR',\n    SJ: 'SJM',\n    SZ: 'SWZ',\n    SE: 'SWE',\n    CH: 'CHE',\n    SY: 'SYR',\n    TW: 'TWN',\n    TJ: 'TJK',\n    TZ: 'TZA',\n    TH: 'THA',\n    TL: 'TLS',\n    TG: 'TGO',\n    TK: 'TKL',\n    TO: 'TON',\n    TT: 'TTO',\n    TN: 'TUN',\n    TR: 'TUR',\n    TM: 'TKM',\n    TC: 'TCA',\n    TV: 'TUV',\n    UG: 'UGA',\n    UA: 'UKR',\n    AE: 'ARE',\n    GB: 'GBR',\n    US: 'USA',\n    UM: 'UMI',\n    UY: 'URY',\n    UZ: 'UZB',\n    VU: 'VUT',\n    VE: 'VEN',\n    VN: 'VNM',\n    VI: 'VIR',\n    WF: 'WLF',\n    EH: 'ESH',\n    YE: 'YEM',\n    ZM: 'ZMB',\n    ZW: 'ZWE',\n    XK: 'XKX',\n};\n\nexport const ALPHA_3_TO_ALPHA_2: Record<string, string> = {\n    AFG: 'AF',\n    ALA: 'AX',\n    ALB: 'AL',\n    DZA: 'DZ',\n    ASM: 'AS',\n    AND: 'AD',\n    AGO: 'AO',\n    AIA: 'AI',\n    ATA: 'AQ',\n    ATG: 'AG',\n    ARG: 'AR',\n    ARM: 'AM',\n    ABW: 'AW',\n    AUS: 'AU',\n    AUT: 'AT',\n    AZE: 'AZ',\n    BHS: 'BS',\n    BHR: 'BH',\n    BGD: 'BD',\n    BRB: 'BB',\n    BLR: 'BY',\n    BEL: 'BE',\n    BLZ: 'BZ',\n    BEN: 'BJ',\n    BMU: 'BM',\n    BTN: 'BT',\n    BOL: 'BO',\n    BES: 'BQ',\n    BIH: 'BA',\n    BWA: 'BW',\n    BVT: 'BV',\n    BRA: 'BR',\n    VGB: 'VG',\n    IOT: 'IO',\n    BRN: 'BN',\n    BGR: 'BG',\n    BFA: 'BF',\n    BDI: 'BI',\n    KHM: 'KH',\n    CMR: 'CM',\n    CAN: 'CA',\n    CPV: 'CV',\n    CYM: 'KY',\n    CAF: 'CF',\n    TCD: 'TD',\n    CHL: 'CL',\n    CHN: 'CN',\n    HKG: 'HK',\n    MAC: 'MO',\n    CXR: 'CX',\n    CCK: 'CC',\n    COL: 'CO',\n    COM: 'KM',\n    COG: 'CG',\n    COD: 'CD',\n    COK: 'CK',\n    CRI: 'CR',\n    CIV: 'CI',\n    HRV: 'HR',\n    CUB: 'CU',\n    CUW: 'CW',\n    CYP: 'CY',\n    CZE: 'CZ',\n    DNK: 'DK',\n    DJI: 'DJ',\n    DMA: 'DM',\n    DOM: 'DO',\n    ECU: 'EC',\n    EGY: 'EG',\n    SLV: 'SV',\n    GNQ: 'GQ',\n    ERI: 'ER',\n    EST: 'EE',\n    ETH: 'ET',\n    FLK: 'FK',\n    FRO: 'FO',\n    FJI: 'FJ',\n    FIN: 'FI',\n    FRA: 'FR',\n    GUF: 'GF',\n    PYF: 'PF',\n    ATF: 'TF',\n    GAB: 'GA',\n    GMB: 'GM',\n    GEO: 'GE',\n    DEU: 'DE',\n    GHA: 'GH',\n    GIB: 'GI',\n    GRC: 'GR',\n    GRL: 'GL',\n    GRD: 'GD',\n    GLP: 'GP',\n    GUM: 'GU',\n    GTM: 'GT',\n    GGY: 'GG',\n    GIN: 'GN',\n    GNB: 'GW',\n    GUY: 'GY',\n    HTI: 'HT',\n    HMD: 'HM',\n    VAT: 'VA',\n    HND: 'HN',\n    HUN: 'HU',\n    ISL: 'IS',\n    IND: 'IN',\n    IDN: 'ID',\n    IRN: 'IR',\n    IRQ: 'IQ',\n    IRL: 'IE',\n    IMN: 'IM',\n    ISR: 'IL',\n    ITA: 'IT',\n    JAM: 'JM',\n    JPN: 'JP',\n    JEY: 'JE',\n    JOR: 'JO',\n    KAZ: 'KZ',\n    KEN: 'KE',\n    KIR: 'KI',\n    PRK: 'KP',\n    KOR: 'KR',\n    KWT: 'KW',\n    KGZ: 'KG',\n    LAO: 'LA',\n    LVA: 'LV',\n    LBN: 'LB',\n    LSO: 'LS',\n    LBR: 'LR',\n    LBY: 'LY',\n    LIE: 'LI',\n    LTU: 'LT',\n    LUX: 'LU',\n    MKD: 'MK',\n    MDG: 'MG',\n    MWI: 'MW',\n    MYS: 'MY',\n    MDV: 'MV',\n    MLI: 'ML',\n    MLT: 'MT',\n    MHL: 'MH',\n    MTQ: 'MQ',\n    MRT: 'MR',\n    MUS: 'MU',\n    MYT: 'YT',\n    MEX: 'MX',\n    FSM: 'FM',\n    MDA: 'MD',\n    MCO: 'MC',\n    MNG: 'MN',\n    MNE: 'ME',\n    MSR: 'MS',\n    MAR: 'MA',\n    MOZ: 'MZ',\n    MMR: 'MM',\n    NAM: 'NA',\n    NRU: 'NR',\n    NPL: 'NP',\n    NLD: 'NL',\n    ANT: 'AN',\n    NCL: 'NC',\n    NZL: 'NZ',\n    NIC: 'NI',\n    NER: 'NE',\n    NGA: 'NG',\n    NIU: 'NU',\n    NFK: 'NF',\n    MNP: 'MP',\n    NOR: 'NO',\n    OMN: 'OM',\n    PAK: 'PK',\n    PLW: 'PW',\n    PSE: 'PS',\n    PAN: 'PA',\n    PNG: 'PG',\n    PRY: 'PY',\n    PER: 'PE',\n    PHL: 'PH',\n    PCN: 'PN',\n    POL: 'PL',\n    PRT: 'PT',\n    PRI: 'PR',\n    QAT: 'QA',\n    REU: 'RE',\n    ROU: 'RO',\n    RUS: 'RU',\n    RWA: 'RW',\n    BLM: 'BL',\n    SHN: 'SH',\n    KNA: 'KN',\n    LCA: 'LC',\n    MAF: 'MF',\n    SPM: 'PM',\n    VCT: 'VC',\n    WSM: 'WS',\n    SMR: 'SM',\n    STP: 'ST',\n    SAU: 'SA',\n    SEN: 'SN',\n    SRB: 'RS',\n    SYC: 'SC',\n    SLE: 'SL',\n    SGP: 'SG',\n    SXM: 'SX',\n    SVK: 'SK',\n    SVN: 'SI',\n    SLB: 'SB',\n    SOM: 'SO',\n    ZAF: 'ZA',\n    SGS: 'GS',\n    SSD: 'SS',\n    ESP: 'ES',\n    LKA: 'LK',\n    SDN: 'SD',\n    SUR: 'SR',\n    SJM: 'SJ',\n    SWZ: 'SZ',\n    SWE: 'SE',\n    CHE: 'CH',\n    SYR: 'SY',\n    TWN: 'TW',\n    TJK: 'TJ',\n    TZA: 'TZ',\n    THA: 'TH',\n    TLS: 'TL',\n    TGO: 'TG',\n    TKL: 'TK',\n    TON: 'TO',\n    TTO: 'TT',\n    TUN: 'TN',\n    TUR: 'TR',\n    TKM: 'TM',\n    TCA: 'TC',\n    TUV: 'TV',\n    UGA: 'UG',\n    UKR: 'UA',\n    ARE: 'AE',\n    GBR: 'GB',\n    USA: 'US',\n    UMI: 'UM',\n    URY: 'UY',\n    UZB: 'UZ',\n    VUT: 'VU',\n    VEN: 'VE',\n    VNM: 'VN',\n    VIR: 'VI',\n    WLF: 'WF',\n    ESH: 'EH',\n    YEM: 'YE',\n    ZMB: 'ZM',\n    ZWE: 'ZW',\n    XKX: 'XK',\n};\n","import React from 'react';\n\nexport const ROOT_CLASS = 'manual-poi-details';\n\nexport const DOCUMENT_TYPES = {\n    NATIONAL_IDENTITY_CARD: 'national_identity_card',\n    NIMC_SLIP: 'nimc_slip',\n    PASSPORT: 'passport',\n    DRIVING_LICENCE: 'driving_licence',\n    BIRTH_CERTIFICATE: 'birth_certificate',\n    SELFIE_WITH_ID: 'selfie_with_id',\n    OTHER: 'other',\n};\n\nconst PAGE_TYPE = {\n    FRONT: 'front',\n    BACK: 'back',\n    PHOTO: 'photo',\n};\n\nexport const SELFIE_DOCUMENT = {\n    document_type: DOCUMENT_TYPES.SELFIE_WITH_ID,\n    pageType: PAGE_TYPE.PHOTO,\n    name: 'selfie_with_id',\n    icon: 'IcSelfie',\n    info: 'Upload your selfie.',\n};\n\nexport const date_field = {\n    name: 'expiry_date',\n    label: 'Expiry date',\n    type: 'date',\n    required: true,\n};\n\nexport const ONFIDO_PHRASES = {\n    country_select: {\n        alert_dropdown: {\n            country_not_found: 'Country not found',\n        },\n        alert: {\n            another_doc:\n                'Documents from that country are not currently supported — <fallback>try another document type</fallback>',\n        },\n        button_primary: 'Submit document',\n        search: {\n            accessibility: 'Select country',\n            input_placeholder: 'e.g. United States',\n            label: 'Search for country',\n        },\n        title: 'Select issuing country',\n    },\n    cross_device_checklist: {\n        button_primary: 'Submit verification',\n        info: 'Tips',\n        list_item_doc_multiple: 'Documents uploaded',\n        list_item_doc_one: 'Document uploaded',\n        list_item_selfie: 'Selfie uploaded',\n        subtitle: \"We're now ready to verify your identity\",\n        title: \"Great, that's everything we need\",\n    },\n    cross_device_error_desktop: {\n        subtitle: 'The link only works on mobile devices',\n        title: \"Something's gone wrong\",\n    },\n    cross_device_error_restart: {\n        subtitle: \"You'll need to restart your verification on your computer\",\n        title: \"Something's gone wrong\",\n    },\n    cross_device_intro: {\n        button_primary: 'Get secure link',\n        list_accessibility: 'Steps required to continue verification on your mobile',\n        list_item_finish: 'Check back here to finish the submission',\n        list_item_open_link: 'Open the link and complete the tasks',\n        list_item_send_phone: 'Send a secure link to your phone',\n        subtitle: \"Here's how to do it:\",\n        title: 'Continue on your phone',\n    },\n    cross_device_return: {\n        body: 'Your computer may take a few seconds to update',\n        subtitle: 'You can now return to your computer to continue',\n        title: 'Uploads successful',\n    },\n    doc_confirmation: {\n        alert: {\n            blur_detail: 'Make sure everything is clear',\n            blur_title: 'Blurry photo detected',\n            crop_detail: 'Make sure full document is visible',\n            crop_title: 'Cut-off image detected',\n            glare_detail: 'Move away from direct light',\n            glare_title: 'Glare detected',\n            no_doc_detail: 'Make sure all of the document is in the photo',\n            no_doc_title: 'No document detected',\n        },\n        body_id: 'Make sure your card details are clear to read, with no blur or glare',\n        body_image_medium: 'It’ll take longer to verify you if we can’t read it',\n        body_image_poor: 'To smoothly verify you, we need a better photo',\n        body_license: 'Make sure your license details are clear to read, with no blur or glare',\n        body_passport: 'Make sure your passport details are clear to read, with no blur or glare',\n        body_permit: 'Make sure your permit details are clear to read, with no blur or glare',\n        body_tax_letter: 'Make sure details are clear to read, with no blur or glare',\n        button_close: 'Close',\n        button_primary_redo: 'Redo',\n        button_primary_upload: 'Confirm',\n        button_primary_upload_anyway: 'Upload anyway',\n        button_secondary_redo: 'Redo',\n        button_zoom: 'Enlarge image',\n        image_accessibility: 'Photo of your document',\n        title: 'Check your image',\n    },\n    doc_select: {\n        button_id: 'Identity card',\n        button_id_detail: 'Front and back',\n        button_license: \"Driver's license\",\n        button_license_detail: 'Front and back',\n        button_passport: 'Passport',\n        button_passport_detail: 'Face photo page',\n        button_permit: 'Residence permit',\n        button_permit_detail: 'Front and back',\n        extra_no_mobile: 'Sorry, no mobile phone bills',\n        list_accessibility: 'Documents you can use to verify your identity',\n        subtitle: 'It must be an official photo ID',\n        subtitle_poa: 'These are the documents most likely to show your current home address',\n        title: 'Choose document',\n        title_poa: 'Select a %{country} document',\n    },\n    doc_submit: {\n        button_link_upload: 'or upload photo – no scans or photocopies',\n        button_primary: 'Continue on phone',\n        subtitle: 'Take a photo with your phone',\n        title_id_back: 'Submit identity card (back)',\n        title_id_front: 'Submit identity card (front)',\n        title_license_back: 'Submit license (back)',\n        title_license_front: 'Submit license (front)',\n        title_passport: 'Submit passport photo page',\n        title_permit_back: 'Submit residence permit (back)',\n        title_permit_front: 'Submit residence permit (front)',\n    },\n    error_unsupported_browser: {\n        subtitle_android: 'Restart the process on the latest version of Google Chrome',\n        subtitle_ios: 'Restart the process on the latest version of Safari',\n        title_android: 'Unsupported browser',\n        title_ios: 'Unsupported browser',\n    },\n    generic: {\n        accessibility: {\n            close_sdk_screen: 'Close identity verification screen',\n            dismiss_alert: 'Dismiss alert',\n        },\n        back: 'back',\n        close: 'close',\n        errors: {\n            interrupted_flow_error: {\n                instruction: 'Restart process on a different device',\n                message: 'Camera not detected',\n            },\n            invalid_size: {\n                instruction: 'Must be under 10MB.',\n                message: 'File size exceeded.',\n            },\n            invalid_type: {\n                instruction: 'Try using another file type.',\n                message: 'File not uploaded.',\n            },\n            lazy_loading: {\n                message: 'An error occurred while loading the component',\n            },\n            multiple_faces: {\n                instruction: 'Only your face can be in the selfie',\n                message: 'Multiple faces found',\n            },\n            no_face: {\n                instruction: 'Your face is needed in the selfie',\n                message: 'No face found',\n            },\n            request_error: {\n                instruction: 'Please try again',\n                message: 'Connection lost',\n            },\n            sms_failed: {\n                instruction: 'Copy the link to your phone',\n                message: \"Something's gone wrong\",\n            },\n            sms_overuse: {\n                instruction: 'Copy the link to your phone',\n                message: 'Too many failed attempts',\n            },\n            unsupported_file: {\n                instruction: 'Try using a JPG or PNG file',\n                message: 'File type not supported',\n            },\n        },\n        lazy_load_placeholder: 'Loading...',\n        loading: 'Loading',\n    },\n    get_link: {\n        alert_wrong_number: 'Check that your number is correct',\n        button_copied: 'Copied',\n        button_copy: 'Copy',\n        button_submit: 'Send link',\n        info_qr_how: 'How to scan a QR code',\n        info_qr_how_list_item_camera: 'Point your phone’s camera at the QR code',\n        info_qr_how_list_item_download:\n            'If it doesn’t work, download a QR code scanner from Google Play or the App Store',\n        link_divider: 'or',\n        link_qr: 'Scan QR code',\n        link_sms: 'Get link via SMS',\n        link_url: 'Copy link',\n        loader_sending: 'Sending',\n        number_field_input_placeholder: 'Enter mobile number',\n        number_field_label: 'Enter your mobile number:',\n        subtitle_qr: 'Scan the QR code with your phone',\n        subtitle_sms: 'Send this one-time link to your phone',\n        subtitle_url: 'Open the link on your mobile',\n        title: 'Get your secure link',\n        url_field_label: 'Copy the link to your mobile browser',\n    },\n    linked_computer: {\n        button_primary: 'Continue',\n        info: 'Make sure§',\n        list_item_desktop_open: '2. Your desktop window stays open',\n        list_item_sent_by_you: '1. This link was sent by you',\n        subtitle: 'Continue with the verification',\n        title: 'Linked to your computer',\n    },\n    mobilePhrases: {\n        photo_upload: {\n            body_id_back: 'Take a photo of the back of your card',\n            body_id_front: 'Take a photo of the front of your card',\n            body_license_back: 'Take a photo of the back of your license',\n            body_license_front: 'Take a photo of the front of your license',\n            body_passport: 'Take a photo of your passport photo page',\n            body_selfie: 'Take a selfie showing your face',\n        },\n        selfie_capture: {\n            alert: {\n                camera_inactive: {\n                    detail: 'Take a photo using the <fallback>basic camera mode</fallback> instead',\n                },\n                camera_not_working: {\n                    detail: 'Take a photo using the <fallback>basic camera mode</fallback> instead',\n                },\n            },\n        },\n        upload_guide: {\n            button_primary: 'Take a photo',\n            title: 'Passport photo page',\n        },\n    },\n    outro: {\n        body: 'Thank you',\n        title: 'Verification complete',\n    },\n    permission_recovery: {\n        button_primary: 'Refresh',\n        info: 'Recovery',\n        list_header_cam: 'Follow these steps to recover camera access:',\n        list_item_action_cam: 'Refresh this page to restart the identity verification process',\n        list_item_how_to_cam: 'Grant access to your camera from your browser settings',\n        subtitle_cam: 'Recover camera access to continue face verification',\n        title_cam: 'Camera access is denied',\n    },\n    permission: {\n        body_cam: 'We cannot verify you without using your camera',\n        button_primary_cam: 'Enable camera',\n        subtitle_cam: 'When prompted, you must enable camera access to continue',\n        title_cam: 'Allow camera access',\n    },\n    photo_upload: {\n        body_bank_statement: 'Provide the whole document page for best results',\n        body_benefits_letter: 'Provide the whole document page for best results',\n        body_bill: 'Provide the whole document page for best results',\n        body_government_letter: 'Provide the whole document page for best results',\n        body_id_back: 'Upload back of card from your computer',\n        body_id_front: 'Upload front of card from your computer',\n        body_license_back: 'Upload back of license from your computer',\n        body_license_front: 'Upload front of license from your computer',\n        body_passport: 'Upload passport photo page from your computer',\n        body_selfie: 'Upload a selfie from your computer',\n        body_tax_letter: 'Provide the whole document page for best results',\n        button_take_photo: 'Take photo',\n        button_upload: 'Upload',\n        title_selfie: 'Selfie',\n    },\n    selfie_capture: {\n        alert: {\n            camera_inactive: {\n                detail: 'Check that it is connected and functional. You can also <fallback>continue verification on your phone</fallback>',\n                detail_no_fallback: 'Make sure your device has a working camera',\n                title: 'Camera not working?',\n            },\n            camera_not_working: {\n                detail: 'It may be disconnected. <fallback>Try using your phone instead</fallback>.',\n                detail_no_fallback: \"Make sure your device's camera works\",\n                title: 'Camera not working',\n            },\n            timeout: {\n                detail: \"Remember to press stop when you're done. <fallback>Redo video actions</fallback>\",\n                title: 'Looks like you took too long',\n            },\n        },\n        button_accessibility: 'Take a photo',\n        frame_accessibility: 'View from camera',\n        title: 'Take a selfie',\n    },\n    selfie_confirmation: {\n        image_accessibility: 'Photo of your face',\n        subtitle: 'Make sure your selfie clearly shows your face',\n        title: 'Check selfie',\n    },\n    selfie_intro: {\n        button_primary: 'Continue',\n        list_accessibility: 'Tips to take a good selfie',\n        list_item_face_forward: 'Face forward and make sure your eyes are clearly visible',\n        list_item_no_glasses: 'Remove your glasses, if necessary',\n        subtitle: \"We'll compare it with your document\",\n        title: 'Take a selfie',\n    },\n    sms_sent: {\n        info: 'Tips',\n        info_link_expire: 'Your link will expire in one hour',\n        info_link_window: 'Keep this window open while using your mobile',\n        link: 'Resend link',\n        subtitle: \"We've sent a secure link to %{number}\",\n        subtitle_minutes: 'It may take a few minutes to arrive',\n        title: 'Check your mobile',\n    },\n    switch_phone: {\n        info: 'Tips',\n        info_link_expire: 'Your mobile link will expire in one hour',\n        info_link_refresh: \"Don't refresh this page\",\n        info_link_window: 'Keep this window open while using your mobile',\n        link: 'Cancel',\n        subtitle: \"Once you've finished we'll take you to the next step\",\n        title: 'Connected to your mobile',\n    },\n    upload_guide: {\n        button_primary: 'Upload photo',\n        image_detail_blur_alt: 'Example of a blurry document',\n        image_detail_blur_label: 'All details must be clear — nothing blurry',\n        image_detail_cutoff_alt: 'Example of a cut-off document',\n        image_detail_cutoff_label: 'Show all details — including the bottom 2 lines',\n        image_detail_glare_alt: 'Example of a document with glare',\n        image_detail_glare_label: 'Move away from direct light — no glare',\n        image_detail_good_alt: 'Document example',\n        image_detail_good_label: 'The photo should clearly show your document',\n        subtitle: 'Scans and photocopies are not accepted',\n        title: 'Upload passport photo page',\n    },\n};\n","export const API_ERROR_CODES = { DISABLED_ACCOUNT: 'AccountDisabled' } as const;\n","export const PLATFORMS = { WALLETS: 'wallets' } as const;\n","import React, { createContext, PropsWithChildren, useCallback, useContext, useEffect, useRef, useState } from 'react';\n\nimport { getAppId, getSocketURL } from '@deriv/shared';\nimport { getInitialLanguage } from '@deriv-com/translations';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nimport { TSocketRequestPayload, TSocketResponseData, TSocketSubscribableEndpointNames } from '../types';\n\nimport WSClient from './ws-client/ws-client';\nimport { PLATFORMS } from './constants';\nimport { hashObject } from './utils';\n\ntype TSubscribeFunction = <T extends TSocketSubscribableEndpointNames>(\n    name: T,\n    payload: TSocketRequestPayload<T> | undefined\n) => Promise<{\n    id: string;\n    subscription: {\n        unsubscribe: () => void;\n        subscribe: (onData: (response: TSocketResponseData<TSocketSubscribableEndpointNames>) => void) => void;\n    };\n}>;\n\ntype TUnsubscribeFunction = (id: string) => void;\n\ntype APIContextData = {\n    subscribe: TSubscribeFunction;\n    unsubscribe: TUnsubscribeFunction;\n    queryClient: QueryClient;\n    setOnReconnected: (onReconnected: () => void) => void;\n    setOnConnected: (onConnected: () => void) => void;\n    connection: WebSocket;\n    wsClient: WSClient;\n    createNewWSConnection: () => void;\n};\n\n/**\n * Retrieves the WebSocket URL based on the current environment.\n * @returns {string} The WebSocket URL.\n */\nconst getWebSocketURL = (endpoint: string) => {\n    const app_id = getAppId();\n    const language = getInitialLanguage();\n    return `wss://${endpoint}/websockets/v3?app_id=${app_id}&l=${language}&brand=deriv`;\n};\n\nconst APIContext = createContext<APIContextData | null>(null);\n\n/**\n * @returns {WebSocket} The initialized WebSocket instance.\n */\nconst initializeConnection = (endpoint: string, onWSClose: () => void, onOpen?: () => void): WebSocket => {\n    const wss_url = getWebSocketURL(endpoint);\n\n    const connection = new WebSocket(wss_url);\n    connection.addEventListener('close', () => {\n        onWSClose?.();\n    });\n\n    connection.addEventListener('open', () => {\n        onOpen?.();\n    });\n\n    return connection;\n};\n\n/**\n * TODO: standlone no longer exists, as its always standalone,\n * but I do not want to remove it from all packages withint this PR, so needs to be cleaned up in subsequent PRs\n */\ntype TAPIProviderProps = {\n    /** If set to true, the APIProvider will instantiate it's own socket connection. */\n    standalone?: boolean;\n    platform?: string;\n};\n\ntype SubscribeReturnType = ReturnType<TSubscribeFunction>; // This captures the entire return type of TSubscribeFunction\ntype UnwrappedSubscription = Awaited<SubscribeReturnType>;\n\nconst APIProvider = ({ children, platform }: PropsWithChildren<TAPIProviderProps>) => {\n    const [reconnect, setReconnect] = useState(false);\n    const connectionRef = useRef<WebSocket>();\n    const subscriptionsRef = useRef<Record<string, UnwrappedSubscription['subscription']>>();\n    const reactQueryRef = useRef<QueryClient>();\n    const isMounted = useRef(true);\n\n    // on reconnected ref\n    const onReconnectedRef = useRef<() => void>();\n    const onConnectedRef = useRef<() => void>();\n    const isOpenRef = useRef<boolean>(false);\n    const wsClientRef = useRef<WSClient>(new WSClient());\n\n    const language = getInitialLanguage();\n    const [prevLanguage, setPrevLanguage] = useState<string>(language);\n    const endpoint = getSocketURL(platform === PLATFORMS.WALLETS);\n\n    useEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    if (!reactQueryRef.current) {\n        reactQueryRef.current = new QueryClient({\n            defaultOptions: {\n                queries: {\n                    refetchOnWindowFocus: false,\n                    refetchOnReconnect: false,\n                },\n            },\n        });\n    }\n\n    // have to be here and not inside useEffect as there are places in code expecting this to be available\n    if (!connectionRef.current) {\n        connectionRef.current = initializeConnection(\n            endpoint,\n            () => {\n                if (isMounted.current) setReconnect(true);\n            },\n            () => {\n                if (!connectionRef.current) {\n                    throw new Error('Connection is not set');\n                }\n\n                wsClientRef.current.setWs(connectionRef.current);\n                wsClientRef.current.setEndpoint(endpoint);\n                if (isMounted.current) {\n                    isOpenRef.current = true;\n                    if (onConnectedRef.current) {\n                        onConnectedRef.current();\n                        onConnectedRef.current = undefined;\n                    }\n                }\n            }\n        );\n    }\n\n    const setOnReconnected = useCallback((onReconnected: () => void) => {\n        onReconnectedRef.current = onReconnected;\n    }, []);\n\n    const setOnConnected = useCallback((onConnected: () => void) => {\n        if (isOpenRef.current) {\n            onConnected();\n        } else {\n            onConnectedRef.current = onConnected;\n        }\n    }, []);\n\n    const subscribe: TSubscribeFunction = async (name, payload) => {\n        const id = await hashObject({ name, payload });\n        const matchingSubscription = subscriptionsRef.current?.[id];\n        if (matchingSubscription) return { id, subscription: matchingSubscription };\n\n        const { payload: _payload } = payload ?? {};\n\n        const result: UnwrappedSubscription = {\n            id,\n            subscription: {\n                subscribe: (onData: (response: TSocketResponseData<TSocketSubscribableEndpointNames>) => void) => {\n                    wsClientRef.current?.subscribe(name, _payload, onData);\n                },\n                unsubscribe: () => {\n                    unsubscribe(id);\n                },\n            },\n        };\n\n        subscriptionsRef.current = { ...(subscriptionsRef.current ?? {}), ...{ [id]: result.subscription } };\n        return result;\n    };\n\n    const unsubscribe: TUnsubscribeFunction = id => {\n        const matchingSubscription = subscriptionsRef.current?.[id];\n        if (matchingSubscription) matchingSubscription.unsubscribe();\n    };\n\n    useEffect(() => {\n        const currentSubscriptionsRef = subscriptionsRef.current;\n\n        return () => {\n            if (currentSubscriptionsRef) {\n                Object.keys(currentSubscriptionsRef).forEach(key => {\n                    currentSubscriptionsRef[key].unsubscribe();\n                });\n            }\n\n            wsClientRef.current?.close();\n            reactQueryRef.current?.clear();\n        };\n    }, []);\n\n    useEffect(() => {\n        const interval_id: ReturnType<typeof setInterval> = setInterval(() => {\n            if (wsClientRef.current && wsClientRef.current?.ws?.readyState == 1) {\n                wsClientRef.current.request('ping');\n            }\n        }, 10000);\n        return () => clearInterval(interval_id);\n    }, []);\n\n    useEffect(() => {\n        let reconnectTimerId: NodeJS.Timeout;\n        if (reconnect) {\n            connectionRef.current = initializeConnection(\n                endpoint,\n                () => {\n                    reconnectTimerId = setTimeout(() => {\n                        if (isMounted.current) {\n                            setReconnect(true);\n                        }\n                    }, 500);\n                },\n                () => {\n                    if (!connectionRef.current) {\n                        throw new Error('Connection is not set');\n                    }\n                    wsClientRef.current.setWs(connectionRef.current);\n                    wsClientRef.current.setEndpoint(endpoint);\n                    if (onReconnectedRef.current) {\n                        onReconnectedRef.current();\n                    }\n                }\n            );\n            setReconnect(false);\n        }\n\n        return () => clearTimeout(reconnectTimerId);\n    }, [endpoint, reconnect]);\n\n    // reconnects to latest WS url for new language only when language changes\n    useEffect(() => {\n        if (prevLanguage !== language) {\n            setReconnect(true);\n            setPrevLanguage(language);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [language]);\n\n    const createNewWSConnection = useCallback(() => {\n        setReconnect(true);\n    }, []);\n\n    return (\n        <APIContext.Provider\n            value={{\n                subscribe,\n                createNewWSConnection,\n                unsubscribe,\n                queryClient: reactQueryRef.current,\n                setOnReconnected,\n                setOnConnected,\n                connection: connectionRef.current,\n                wsClient: wsClientRef.current,\n            }}\n        >\n            <QueryClientProvider client={reactQueryRef.current}>\n                {children}\n                {/* <ReactQueryDevtools /> */}\n            </QueryClientProvider>\n        </APIContext.Provider>\n    );\n};\n\nexport const useAPIContext = () => {\n    const context = useContext(APIContext);\n    if (!context) {\n        throw new Error('useAPIContext must be used within APIProvider');\n    }\n    return context;\n};\n\nexport default APIProvider;\n","import { useCallback } from 'react';\n\nimport type {\n    TSocketEndpointNames,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\nimport { useAPIContext } from './APIProvider';\n\ntype UnsubscribeFunction = () => Promise<void> | undefined;\n\nconst useAPI = () => {\n    const { wsClient, connection } = useAPIContext();\n\n    const send = useCallback(\n        async <T extends TSocketEndpointNames | TSocketPaginateableEndpointNames = TSocketEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>['payload']\n        ): Promise<TSocketResponseData<T>> => {\n            // casting needed as there is genuine type mismatch which have been there already\n            // so it needs to be fixed in one of the layers,\n            // potentially will make this consistent in upcoming PRs\n            try {\n                return wsClient?.request<T>(name, payload as unknown as TSocketRequestPayload<T>['payload']);\n            } catch (e) {\n                return e as TSocketResponseData<T>;\n            }\n        },\n        [wsClient]\n    );\n\n    const subscribe = useCallback(\n        <T extends TSocketSubscribableEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): {\n            subscribe: (\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onData: (response: any) => void,\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onError: (response: any) => void\n            ) => { unsubscribe?: VoidFunction };\n        } => {\n            const subscribeHandler = (onData: (response: any) => void): { unsubscribe?: UnsubscribeFunction } => {\n                // Start the subscription and keep the promise.\n                const subscriptionPromise = wsClient?.subscribe(name, payload, onData);\n\n                // Define unsubscribe function, which will be returned inside the object from subscribeHandler.\n                const unsubscribe: UnsubscribeFunction = async () => {\n                    const subscribeResponse = await subscriptionPromise;\n                    return subscribeResponse?.unsubscribe?.();\n                };\n\n                return { unsubscribe };\n            };\n\n            return { subscribe: subscribeHandler };\n        },\n        [wsClient]\n    );\n\n    return {\n        send,\n        subscribe,\n        connection,\n    };\n};\n\nexport default useAPI;\n","import { useInfiniteQuery as _useInfiniteQuery } from '@tanstack/react-query';\n\nimport type {\n    TSocketAcceptableProps,\n    TSocketError,\n    TSocketPaginatateableRequestCleaned,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestInfiniteQueryOptions,\n    TSocketRequestPayload,\n    TSocketResponseData,\n} from '../types';\n\nimport useAPI from './useAPI';\nimport { getQueryKeys } from './utils';\n\nconst useInfiniteQuery = <T extends TSocketPaginateableEndpointNames>(\n    name: T,\n    ...props: TSocketAcceptableProps<T, true, 'useInfiniteQuery'>\n) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketPaginatateableRequestCleaned<T>) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestInfiniteQueryOptions<T>) : undefined;\n    const { send } = useAPI();\n\n    const initial_offset = payload?.offset || 0;\n    const limit = payload?.limit || 50;\n\n    return _useInfiniteQuery<TSocketResponseData<T>, TSocketError<T>>(\n        getQueryKeys(name, payload),\n\n        ({ pageParam = 0 }) =>\n            send(name, {\n                ...payload,\n                limit,\n                offset: pageParam * limit + initial_offset,\n            } as TSocketRequestPayload<T>['payload']),\n        {\n            ...options,\n            getNextPageParam: options?.getNextPageParam ? options.getNextPageParam : (_lastPage, pages) => pages.length,\n        }\n    );\n};\n\nexport default useInfiniteQuery;\n","import { useCallback } from 'react';\nimport { useMutation as _useMutation } from '@tanstack/react-query';\nimport useAPI from './useAPI';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestMutationOptions,\n    TSocketRequestPayload,\n    TSocketResponseData,\n} from '../types';\n\nconst useMutation = <T extends TSocketEndpointNames>(name: T, options?: TSocketRequestMutationOptions<T>) => {\n    const { send } = useAPI();\n    const {\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        ...rest\n    } = _useMutation<TSocketResponseData<T>, TSocketError<T>, TSocketAcceptableProps<T>>(props => {\n        const prop = props?.[0];\n        const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>['payload']) : undefined;\n\n        return send(name, payload);\n    }, options);\n\n    const mutate = useCallback((...payload: TSocketAcceptableProps<T>) => _mutate(payload), [_mutate]);\n    const mutateAsync = useCallback((...payload: TSocketAcceptableProps<T>) => _mutateAsync(payload), [_mutateAsync]);\n\n    return {\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useMutation;\n","import { useQuery as _useQuery } from '@tanstack/react-query';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketRequestQueryOptions,\n    TSocketResponseData,\n} from '../types';\nimport useAPI from './useAPI';\nimport { getQueryKeys } from './utils';\n\nconst useQuery = <T extends TSocketEndpointNames>(name: T, ...props: TSocketAcceptableProps<T, true>) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>['payload']) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestQueryOptions<T>) : undefined;\n    const { send } = useAPI();\n\n    return _useQuery<TSocketResponseData<T>, TSocketError<T>>(\n        getQueryKeys(name, payload),\n        () => send(name, payload),\n        options\n    );\n};\n\nexport default useQuery;\n","import React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\nimport { getAccountsFromLocalStorage, getActiveLoginIDFromLocalStorage, getToken } from '@deriv/utils';\nimport { AppIDConstants } from '@deriv-com/utils';\n\nimport { TSocketRequestPayload, TSocketResponseData, TSocketSubscribableEndpointNames } from '../types';\n\nimport { useAPIContext } from './APIProvider';\nimport { API_ERROR_CODES } from './constants';\nimport useAPI from './useAPI';\nimport useMutation from './useMutation';\n\n// Define the type for the context state\ntype AuthContextType = {\n    loginIDKey?: string;\n    data: TSocketResponseData<'authorize'> | null | undefined;\n    loginid: string | null;\n    switchAccount: (loginid: string, forceRefresh?: boolean) => Promise<void>;\n    isLoading: boolean;\n    isSuccess: boolean;\n    isError: boolean;\n    refetch: () => void;\n    isFetching: boolean;\n    error: unknown;\n    isSwitching: boolean;\n    isInitializing: boolean;\n    subscribe: <T extends TSocketSubscribableEndpointNames>(\n        name: T,\n        payload?: TSocketRequestPayload<T>\n    ) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        subscribe: (onData: (response: any) => void) => Promise<{ unsubscribe: () => Promise<void> }>;\n    };\n};\n\ntype LoginToken = {\n    loginId: string;\n    token: string;\n};\n\ntype AuthProviderProps = {\n    children: React.ReactNode;\n    cookieTimeout?: number;\n    loginIDKey?: string;\n    selectDefaultAccount?: (loginids: NonNullable<ReturnType<typeof getAccountsFromLocalStorage>>) => string;\n    logout?: () => Promise<void>;\n};\n\ntype TAuthorizeError = ReturnType<typeof useMutation<'authorize'>>['error'];\n\n// Create the context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nfunction waitForLoginAndTokenWithTimeout(\n    cookieTimeout = 10000,\n    loginIDKey?: string,\n    selectDefaultAccount?: (loginids: NonNullable<ReturnType<typeof getAccountsFromLocalStorage>>) => string\n) {\n    // Default timeout of 10 seconds\n    let timeoutHandle: NodeJS.Timeout | undefined,\n        cookieTimeoutHandle: NodeJS.Timeout | undefined, // Handle for the cookieTimeout\n        rejectFunction: (reason?: string) => void; // To be used for rejecting the promise in case of a timeout or cookieTimeout expiry\n\n    const checkLogin = (\n        resolve: (value: { loginId: string; token: string }) => void,\n        reject: (reason?: string) => void\n    ) => {\n        const loginId = getActiveLoginIDFromLocalStorage(loginIDKey);\n        const token = getToken(loginId as string);\n        const storedAccounts = getAccountsFromLocalStorage();\n        if (loginId && token) {\n            clearTimeout(timeoutHandle); // Clear the checkLogin timeout as we've succeeded\n            clearTimeout(cookieTimeoutHandle); // Clear the cookieTimeout as well\n            resolve({ loginId, token });\n        } else if (selectDefaultAccount && storedAccounts && Object.keys(storedAccounts).length > 0) {\n            const selectedLoginId = selectDefaultAccount(storedAccounts);\n            clearTimeout(timeoutHandle); // Clear the checkLogin timeout as we've succeeded\n            clearTimeout(cookieTimeoutHandle); // Clear the cookieTimeout as well\n            resolve({ loginId: selectedLoginId, token: getToken(selectedLoginId) || '' });\n        } else {\n            timeoutHandle = setTimeout(checkLogin, 100, resolve, reject);\n        }\n    };\n\n    // Function to clear the timeouts and reject the promise if called\n    const cleanup = () => {\n        clearTimeout(timeoutHandle);\n        clearTimeout(cookieTimeoutHandle);\n        rejectFunction('Operation cancelled');\n    };\n\n    const promise = new Promise<LoginToken>((resolve, reject) => {\n        rejectFunction = reject; // Assign reject function to be accessible outside promise scope for cleanup\n\n        // Set up the cookieTimeout to reject the promise if not resolved in time\n        cookieTimeoutHandle = setTimeout(() => {\n            cleanup(); // Cleanup and reject the promise\n            reject(new Error('Waiting for login or token timed out'));\n        }, cookieTimeout);\n\n        checkLogin(resolve, reject);\n    });\n\n    return {\n        promise,\n        cleanup,\n    };\n}\n\nconst AuthProvider = ({ loginIDKey, children, cookieTimeout, selectDefaultAccount, logout }: AuthProviderProps) => {\n    const [loginid, setLoginid] = useState<string | null>(null);\n\n    const { mutateAsync } = useMutation('authorize');\n\n    const { queryClient, setOnReconnected, setOnConnected, wsClient, createNewWSConnection } = useAPIContext();\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [isSwitching, setIsSwitching] = useState(false);\n    const [isInitializing, setIsInitializing] = useState(true);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [isFetching, setIsFetching] = useState(false);\n    const [isAuthorized, setIsAuthorized] = useState(false);\n\n    const [data, setData] = useState<TSocketResponseData<'authorize'> | null>();\n\n    const { subscribe: _subscribe } = useAPI();\n\n    const subscribe = useCallback(\n        <T extends TSocketSubscribableEndpointNames>(name: T, payload?: TSocketRequestPayload<T>) => {\n            return {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                subscribe: (onData: (response: any) => void) => {\n                    return wsClient?.subscribe(name, payload, onData);\n                },\n            };\n        },\n        [wsClient, isAuthorized]\n    );\n\n    const processAuthorizeResponse = useCallback(\n        (authorizeResponse: TSocketResponseData<'authorize'>) => {\n            setData(authorizeResponse);\n\n            const activeLoginID = authorizeResponse.authorize?.loginid;\n            if (!activeLoginID) return;\n\n            setLoginid(activeLoginID);\n\n            const accountList = authorizeResponse.authorize?.account_list;\n            if (!accountList) return;\n\n            const activeAccount = accountList.find(acc => acc.loginid === activeLoginID);\n            if (!activeAccount) return;\n\n            localStorage.setItem(loginIDKey ?? 'active_loginid', activeLoginID);\n            sessionStorage.setItem(loginIDKey ?? 'active_loginid', activeLoginID);\n            const isDemo = activeAccount.is_virtual;\n            const shouldCreateNewWSConnection =\n                (isDemo && wsClient?.endpoint === AppIDConstants.environments.real) ||\n                (!isDemo && wsClient?.endpoint === AppIDConstants.environments.demo);\n            if (shouldCreateNewWSConnection) {\n                createNewWSConnection();\n            }\n        },\n        [loginIDKey, wsClient?.endpoint, createNewWSConnection]\n    );\n\n    useEffect(() => {\n        setOnConnected(() => {\n            initialize();\n        });\n    }, []);\n\n    useEffect(() => {\n        setOnReconnected(async () => {\n            setIsAuthorized(false);\n            await mutateAsync({ payload: { authorize: getToken(loginid || '') ?? '' } });\n            setIsAuthorized(true);\n        });\n    }, [loginid]);\n\n    function initialize() {\n        setIsLoading(true);\n        setIsInitializing(true);\n        setIsSuccess(false);\n\n        const { promise, cleanup } = waitForLoginAndTokenWithTimeout(cookieTimeout, loginIDKey, selectDefaultAccount);\n\n        let isMounted = true;\n\n        promise\n            .then(async ({ token }) => {\n                setIsLoading(true);\n                setIsInitializing(true);\n                setIsFetching(true);\n                setIsAuthorized(false);\n                await mutateAsync({ payload: { authorize: token || '' } })\n                    .then(res => {\n                        setIsAuthorized(true);\n                        processAuthorizeResponse(res);\n                        setIsLoading(false);\n                        setIsInitializing(false);\n                        setIsSuccess(true);\n                        setLoginid(res?.authorize?.loginid ?? '');\n                    })\n                    .catch(async (e: TAuthorizeError) => {\n                        if (e?.error.code === API_ERROR_CODES.DISABLED_ACCOUNT) {\n                            await logout?.();\n                        }\n                        setIsLoading(false);\n                        setIsInitializing(false);\n                        setIsError(true);\n                    })\n                    .finally(() => {\n                        setIsLoading(false);\n                        setIsInitializing(false);\n                        setIsFetching(false);\n                    });\n            })\n            .catch(() => {\n                if (isMounted) {\n                    setIsAuthorized(false);\n                    setIsLoading(false);\n                    setIsInitializing(false);\n                    setIsError(true);\n                }\n            });\n\n        return () => {\n            isMounted = false;\n            cleanup();\n        };\n    }\n\n    const switchAccount = useCallback(\n        async (newLoginId: string, forceRefresh?: boolean) => {\n            if (newLoginId === loginid && !forceRefresh) {\n                return;\n            }\n            queryClient.cancelQueries();\n\n            setIsLoading(true);\n            setIsSwitching(true);\n\n            setIsAuthorized(false);\n            try {\n                const authorizeResponse = await mutateAsync({ payload: { authorize: getToken(newLoginId) ?? '' } });\n                setIsAuthorized(true);\n                setLoginid(newLoginId);\n                processAuthorizeResponse(authorizeResponse);\n            } catch (e: unknown) {\n                if (typeof e === 'object' && (e as TAuthorizeError)?.error.code === API_ERROR_CODES.DISABLED_ACCOUNT) {\n                    await logout?.();\n                }\n            } finally {\n                setIsLoading(false);\n                setIsSwitching(false);\n            }\n        },\n        [loginid, logout, mutateAsync, processAuthorizeResponse, queryClient]\n    );\n\n    const refetch = useCallback(() => {\n        switchAccount(loginid as string);\n    }, [loginid, switchAccount]);\n\n    const value = useMemo(() => {\n        return {\n            data,\n            switchAccount,\n            refetch,\n            isLoading,\n            isError,\n            isFetching,\n            isSuccess: isSuccess && !isLoading,\n            error: isError,\n            loginid,\n            isSwitching,\n            isInitializing,\n            subscribe,\n            logout,\n            createNewWSConnection,\n        };\n    }, [\n        data,\n        switchAccount,\n        refetch,\n        isLoading,\n        isError,\n        isFetching,\n        isSuccess,\n        loginid,\n        logout,\n        createNewWSConnection,\n        subscribe,\n    ]);\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n\nexport const useAuthContext = () => {\n    const context = useContext(AuthContext);\n\n    if (!context) {\n        throw new Error('useAuthContext must be used within APIProvider');\n    }\n    return context;\n};\n","import { useCallback } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { TSocketEndpointNames } from '../types';\n\ntype TOptions = Parameters<ReturnType<typeof useQueryClient>['invalidateQueries']>[1];\n\nconst useInvalidateQuery = () => {\n    const queryClient = useQueryClient();\n\n    const invalidate = useCallback(\n        <T extends TSocketEndpointNames>(name: T | T[], options?: TOptions) => {\n            return queryClient.invalidateQueries(Array.isArray(name) ? name : [name], options);\n        },\n        [queryClient]\n    );\n\n    return invalidate;\n};\n\nexport default useInvalidateQuery;\n","import { useCallback, useState } from 'react';\n\nimport type {\n    TSocketAcceptableProps,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestPayload,\n    TSocketRequestQueryOptions,\n} from '../types';\n\nimport useQuery from './useQuery';\n\nconst usePaginatedFetch = <T extends TSocketPaginateableEndpointNames>(\n    name: T,\n    ...props: TSocketAcceptableProps<T, true>\n) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestQueryOptions<T>) : undefined;\n\n    const limit: number = payload?.payload?.limit || 10;\n    const [offset, setOffset] = useState<number>(payload?.payload?.offset || 0);\n\n    // @ts-expect-error It's safe to ignore the TS error here since the\n    // exact type of the payload is not determined at this point.\n    const { remove, ...rest } = useQuery(name, {\n        payload: { ...payload, offset, limit },\n        options: { ...options, keepPreviousData: !!offset },\n    });\n\n    const loadMore = useCallback(() => setOffset(prev => prev + limit), [limit]);\n\n    const reset = useCallback(() => {\n        remove();\n        setOffset(0);\n    }, [remove]);\n\n    return {\n        ...rest,\n        remove,\n        loadMore,\n        reset,\n    };\n};\n\nexport default usePaginatedFetch;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useAuthContext } from './AuthProvider';\nimport type {\n    TSocketAcceptableProps,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T, idle_time = 5000) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSubscribed, setSubscribed] = useState(false);\n    const [isIdle, setIdle] = useState(false);\n    const [error, setError] = useState<TSocketError<T>['error']>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const idle_timeout = useRef<NodeJS.Timeout>();\n    const { subscribe: _subscribe } = useAuthContext();\n\n    const subscribe = useCallback(async (...props: TSocketAcceptableProps<T>) => {\n        const prop = props?.[0];\n        const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n        setIsLoading(true);\n        setSubscribed(true);\n        setIdle(false);\n\n        idle_timeout.current = setTimeout(() => {\n            setIdle(true);\n        }, idle_time);\n\n        try {\n            subscriber.current = await _subscribe(name, payload).subscribe(response => {\n                setData(response);\n                setIsLoading(false);\n            });\n        } catch (e) {\n            setError((e as TSocketError<T>).error);\n        }\n    }, []);\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    useEffect(() => {\n        return () => {\n            if (idle_timeout.current) clearTimeout(idle_timeout.current);\n        };\n    }, [data]);\n\n    return {\n        subscribe,\n        unsubscribe,\n        isIdle,\n        isLoading,\n        isSubscribed,\n        error,\n        data,\n    };\n};\n\nexport default useSubscription;\n","import { useQuery } from '@tanstack/react-query';\nimport initData from '../remote_config.json';\n\nconst remoteConfigQuery = async function () {\n    const isProductionOrStaging = process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'staging';\n    const REMOTE_CONFIG_URL = process.env.REMOTE_CONFIG_URL || '';\n    if (isProductionOrStaging && REMOTE_CONFIG_URL === '') {\n        throw new Error('Remote Config URL is not set!');\n    }\n    const response = await fetch(REMOTE_CONFIG_URL);\n    if (!response.ok) {\n        throw new Error('Remote Config Server is out of reach!');\n    }\n    return response.json();\n};\n\nfunction useRemoteConfig() {\n    return useQuery({\n        queryKey: ['remoteConfig'],\n        queryFn: remoteConfigQuery,\n        initialData: initData,\n    });\n}\n\nexport default useRemoteConfig;\n","import { useMemo } from 'react';\nimport { useAuthContext } from '../AuthProvider';\nimport { getAccountListWithAuthToken } from '@deriv/utils';\n\n/** A custom hook that authorize the user with the given token. If no token is given,\n * it will use the current token from localStorage.\n */\nconst useAuthorize = () => {\n    const ctx = useAuthContext();\n    const {\n        data,\n        switchAccount,\n        isLoading,\n        isSuccess,\n        isFetching,\n        isError,\n        refetch,\n        error,\n        loginid,\n        isSwitching,\n        isInitializing,\n    } = ctx;\n\n    const modifiedData = useMemo(() => {\n        return { ...data?.authorize, account_list: getAccountListWithAuthToken(data?.authorize?.account_list) };\n    }, [data]);\n\n    const value = useMemo(() => {\n        return {\n            /** The authorize response. */\n            data: modifiedData,\n            /** Function to switch to another account */\n            switchAccount,\n            isLoading,\n            isSuccess,\n            isFetching,\n            isError,\n            refetch,\n            error,\n            loginid,\n            isSwitching,\n            isInitializing,\n        };\n    }, [modifiedData, switchAccount, isLoading, isSuccess, isFetching, isError, refetch, error, loginid]);\n\n    return value;\n};\n\nexport default useAuthorize;\n","import { useQuery as _useQuery } from '@tanstack/react-query';\nimport type {\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketRequestQueryOptions,\n    TSocketResponseData,\n} from '../types';\nimport useAPI from './useAPI';\nimport { getQueryKeys } from './utils/query-utils';\nimport useAuthorize from './hooks/useAuthorize';\n\n/**\n * just like useQuery, but only runs when user is authorized\n * plus, have couple extra option for more granular cache control\n *\n * default options are \"safe\", so its just gonna work correctly,\n * but if specific hook wants more granular control, then its that hook responsibility to understand the implications\n * e.g. useBalance with account=all does not need to be refetched when account is being switched,\n * but useBalance with account=123 does need to be refetched when account is being switched,\n *\n * unfortunatelly, there is missing bit of context/state - loginid, as normally its \"hidden\" in the connection,\n * its not a part of payload, thus, the standard \"getKeys()\" is just not enough, needs to add extra keys to handle user changing and switching\n *\n * @param name\n * @param payload\n * @param options\n * @param refreshOnAccountSwitch\n * @param refreshOnAccountAdded\n * @returns\n */\nconst useAuthorizedQuery = <T extends TSocketEndpointNames>(\n    name: T,\n    payload?: TSocketRequestPayload<T>['payload'],\n    options?: TSocketRequestQueryOptions<T>,\n    refreshOnAccountSwitch = true\n) => {\n    const { send } = useAPI();\n    const { isSuccess, isLoading, loginid, data } = useAuthorize();\n\n    // by default, we gonna invalidate cache when:\n    //  - payload changed (as previously)\n    //  - new account got added as this might have broader hard to predict implications\n    const keys = [...getQueryKeys(name, payload), `${data?.account_list?.length}`];\n\n    // also, we should invalidate cache when account is switched\n    // though thats optional - some requests might not need to be refetched, e.g. accounts_list is global\n    // balance: all is global so no need to refetch, etc,\n    if (refreshOnAccountSwitch && loginid) {\n        keys.push(loginid);\n    }\n\n    const isEnabled = typeof options?.enabled === 'boolean' ? options.enabled : true;\n\n    return _useQuery<TSocketResponseData<T>, TSocketError<T>>(keys, () => send(name, payload), {\n        ...options,\n        enabled: !!(isSuccess && !isLoading && loginid && isEnabled),\n    });\n};\n\nexport default useAuthorizedQuery;\n","import useAuthorizedQuery from '../useAuthorizedQuery';\n\nconst useWebsiteStatus = () => {\n    // pretty much static data, only refresh it when account is added (just in case, probably even then its not needed)\n    return useAuthorizedQuery(\n        'website_status',\n        {},\n        {\n            staleTime: Infinity,\n        },\n        false\n    );\n};\n\nexport default useWebsiteStatus;\n","import useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\n/** A custom hook to get account limits */\nconst useAccountLimits = () => {\n    const { isSuccess } = useAuthorize();\n    const { data, ...rest } = useQuery('get_limits', { options: { enabled: isSuccess } });\n\n    return {\n        /** Account limits response */\n        data: data?.get_limits,\n        ...rest,\n    };\n};\n\nexport default useAccountLimits;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\n\n/** A custom hook to retrieves the account status for the current user. */\nconst useGetAccountStatus = () => {\n    const { data: get_account_status_data, ...rest } = useQuery('get_account_status');\n\n    // Add additional information to the account status response.\n    const modified_account_status = useMemo(() => {\n        if (!get_account_status_data?.get_account_status) return;\n\n        const { prompt_client_to_authenticate, p2p_status } = get_account_status_data.get_account_status;\n\n        return {\n            ...get_account_status_data.get_account_status,\n            /** Indicates whether the client should be prompted to authenticate their account. */\n            should_prompt_client_to_authenticate: Boolean(prompt_client_to_authenticate),\n            /** Indicates whether the client is a P2P user. */\n            is_p2p_user: Boolean(p2p_status !== 'none' && p2p_status !== 'perm_ban'),\n        };\n    }, [get_account_status_data?.get_account_status]);\n\n    return {\n        /** The account status response. */\n        data: modified_account_status,\n        ...rest,\n    };\n};\n\nexport default useGetAccountStatus;\n","import { useMemo } from 'react';\n\nimport useGetAccountStatus from './useGetAccountStatus';\n\n/** A custom hook to check the account status for the current user. */\nconst useAccountStatus = () => {\n    const { data: get_account_status_data, ...rest } = useGetAccountStatus();\n\n    // Add additional information to the account status response.\n    const modified_account_status = useMemo(() => {\n        if (!get_account_status_data?.status) return;\n\n        const status = new Set(get_account_status_data?.status);\n\n        return {\n            /** Authentication*/\n            authentication: get_account_status_data?.authentication,\n            /** Account status. */\n            status: get_account_status_data?.status,\n            /** client's address is verified by third party services. */\n            is_address_verified: status.has('address_verified'),\n            /** client is allowed to upload documents. */\n            is_allow_document_upload: status.has('allow_document_upload'),\n            /** client is age-verified. */\n            is_age_verification: status.has('age_verification'),\n            /** client is fully authenticated. */\n            is_authenticated: status.has('authenticated'),\n            /** cashier is locked. */\n            is_cashier_locked: status.has('cashier_locked'),\n            /** client has updated tax related information. */\n            is_crs_tin_information: status.has('crs_tin_information'),\n            /** deposit is not allowed. */\n            is_deposit_locked: status.has('deposit_locked'),\n            /** account is disabled. */\n            is_disabled: status.has('disabled'),\n            /** client's submitted proof-of-identity documents have expired. */\n            is_document_expired: status.has('document_expired'),\n            /** client's submitted proof-of-identity documents are expiring within a month. */\n            is_document_expiring_soon: status.has('document_expiring_soon'),\n            /** Deriv X password is not set. */\n            is_dxtrade_password_not_set: status.has('dxtrade_password_not_set'),\n            /** client should complete their financial assessment. */\n            is_financial_assessment_not_complete: status.has('financial_assessment_not_complete'),\n            /** client has not completed financial assessment. */\n            is_financial_information_not_complete: status.has('financial_information_not_complete'),\n            /** client has accepted financial risk disclosure. */\n            is_financial_risk_approval: status.has('financial_risk_approval'),\n            /** client has not set financial limits on their account. Applies to UK and Malta clients. */\n            is_max_turnover_limit_not_set: status.has('max_turnover_limit_not_set'),\n            /** MT5 password is not set. */\n            is_mt5_password_not_set: status.has('mt5_password_not_set'),\n            /** MT5 deposits allowed, but withdrawal is not allowed. */\n            is_mt5_withdrawal_locked: status.has('mt5_withdrawal_locked'),\n            /** user must approve the Affiliate's Code of Conduct Agreement. */\n            is_needs_affiliate_coc_approval: status.has('needs_affiliate_coc_approval'),\n            /** trading is disabled. */\n            is_no_trading: status.has('no_trading'),\n            /** client cannot trade or withdraw but can deposit. */\n            is_no_withdrawal_or_trading: status.has('no_withdrawal_or_trading'),\n            /** p2p is blocked for the current payment agent client. */\n            is_p2p_blocked_for_pa: status.has('p2p_blocked_for_pa'),\n            /** withdrawal through payment agent is allowed. */\n            is_pa_withdrawal_explicitly_allowed: status.has('pa_withdrawal_explicitly_allowed'),\n            /** this client must reset their password. */\n            is_password_reset_required: status.has('password_reset_required'),\n            /** this client has opted for a professional account. */\n            is_professional: status.has('professional'),\n            /** this client has requested for a professional account. */\n            is_professional_requested: status.has('professional_requested'),\n            /** this client's request for a professional account has been rejected. */\n            is_professional_rejected: status.has('professional_rejected'),\n            /** this client is using social signup. */\n            is_social_signup: status.has('social_signup'),\n            /** client has not completed the trading experience questionnaire. */\n            is_trading_experience_not_complete: status.has('trading_experience_not_complete'),\n            /** client cannot deposit or buy contracts, but can withdraw or sell contracts. */\n            is_unwelcome: status.has('unwelcome'),\n            /** deposits allowed but withdrawals are not allowed. */\n            is_withdrawal_locked: status.has('withdrawal_locked'),\n            /** this prevent a client from changing the account currency after deposit attempt. */\n            is_deposit_attempt: status.has('deposit_attempt'),\n            /** client POI documents name mismatch. */\n            is_poi_name_mismatch: status.has('poi_name_mismatch'),\n            /** the client can resubmit POA documents. */\n            is_allow_poa_resubmission: status.has('allow_poa_resubmission'),\n            /** the client can resubmit POI documents. */\n            is_allow_poi_resubmission: status.has('allow_poi_resubmission'),\n            /** the client has been sharing payment methods. */\n            is_shared_payment_method: status.has('shared_payment_method'),\n            /** client is not allowed to edit personal profile details. */\n            is_personal_details_locked: status.has('personal_details_locked'),\n            /** it block any transfer between two accounts. */\n            is_transfers_blocked: status.has('transfers_blocked'),\n            /** the DF deposit will be blocked until the client gets age verified. */\n            is_df_deposit_requires_poi: status.has('df_deposit_requires_poi'),\n            /** the client has been fully authenticated by IDV. */\n            is_authenticated_with_idv_photoid: status.has('authenticated_with_idv_photoid'),\n            /** the client used to be fully authenticated by IDV but it was taken away due to compliance criteria. */\n            is_idv_revoked: status.has('idv_revoked'),\n        };\n    }, [get_account_status_data?.authentication, get_account_status_data?.status]);\n\n    return {\n        /** The account status response. */\n        data: modified_account_status,\n        ...rest,\n    };\n};\n\nexport default useAccountStatus;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\n\n/** A custom hook to get available account types for a specific landing company. */\nconst useAccountTypes = (landing_company?: string) => {\n    const { data, ...rest } = useQuery('get_account_types', {\n        payload: { company: landing_company },\n        options: { enabled: Boolean(landing_company) },\n    });\n\n    // Add additional information to the account types response.\n    const modified_account_types = useMemo(() => {\n        if (!data?.get_account_types) return;\n\n        return {\n            ...data.get_account_types,\n            /** Landing company for the account types */\n            landing_company,\n        };\n    }, [data?.get_account_types, landing_company]);\n\n    return {\n        /** The account types response. */\n        data: modified_account_types,\n        ...rest,\n    };\n};\n\nexport default useAccountTypes;\n","import { useCallback, useMemo } from 'react';\nimport useWebsiteStatus from './useWebsiteStatus';\n\ntype TPlatform = {\n    cashier: readonly ('doughflow' | 'crypto')[];\n    ramp: string[] | [];\n};\n\n/** A custom hook to get the currency config information from `website_status` endpoint and `crypto_config` endpoint. */\nconst useCurrencyConfig = () => {\n    const { data: website_status_data, ...rest } = useWebsiteStatus();\n\n    // Add additional information to the currency config.\n    const modified_currencies_config = useMemo(() => {\n        if (!website_status_data?.website_status?.currencies_config) return undefined;\n\n        const website_status_currencies_config = website_status_data.website_status.currencies_config;\n\n        return Object.keys(website_status_currencies_config).map(currency => {\n            const currency_config = website_status_currencies_config[currency];\n\n            return {\n                ...currency_config,\n                /** determine if the currency is a `crypto` currency */\n                is_crypto: currency_config?.type === 'crypto',\n                /** determine if the currency is a `fiat` currency */\n                is_fiat: currency_config?.type === 'fiat',\n                /** determine if the currency is `Australian Dollar` */\n                is_AUD: currency === 'AUD',\n                /** determine if the currency is `US Dollar` */\n                is_USD: currency === 'USD',\n                /** determine if the currency is `Euro` */\n                is_EUR: currency === 'EUR',\n                /** determine if the currency is `Pound Sterling` */\n                is_GBP: currency === 'GBP',\n                /** determine if the currency is `Bitcoin` */\n                is_BTC: currency === 'BTC',\n                /** determine if the currency is `Ethereum` */\n                is_ETH: currency === 'ETH',\n                /** determine if the currency is `Litecoin` */\n                is_LTC: currency === 'LTC',\n                /** determine if the currency is `Multi-Collateral DAI` */\n                is_DAI: currency === 'DAI',\n                /** determine if the currency is `IDK` */\n                is_IDK: currency === 'IDK',\n                /** determine if the currency is `Paxos Standard` */\n                is_PAX: currency === 'PAX',\n                /** determine if the currency is `Binary Coin` */\n                is_USB: currency === 'USB',\n                /** determine if the currency is `Tether Omni` */\n                is_USDT: currency === 'UST',\n                /** determine if the currency is `True USD` */\n                is_TUSD: currency === 'TUSD',\n                /** determine if the currency is `Binance USD` */\n                is_BUSD: currency === 'BUSD',\n                /** determine if the currency is `STATIS Euro` */\n                is_EURS: currency === 'EURS',\n                /** determine if the currency is `Tether ERC20` */\n                is_eUSDT: currency === 'eUSDT',\n                /** determine if the currency is `Tether TRC20` */\n                is_tUSDT: currency === 'tUSDT',\n                /** determine if the currency is `USD Coin` */\n                is_USDC: currency === 'USDC',\n                /** determine if the currency is `USDK` */\n                is_USDK: currency === 'USDK',\n                /** Currency code */\n                code: currency,\n                /** Currency display code */\n                display_code: currency === 'UST' ? 'USDT' : currency,\n                /** Platforms with providers */\n                //TODO: Remove `as TPlatform` after updating `@deriv/api-types` library\n                //@ts-expect-error need to update `@deriv/api-types` library to the latest version\n                platform: currency_config?.platform as TPlatform,\n            };\n        });\n    }, [website_status_data?.website_status?.currencies_config]);\n\n    // Transform the currency config array into a record object.\n    const transformed_currencies_config = useMemo(() => {\n        return modified_currencies_config?.reduce<Record<string, typeof modified_currencies_config[number]>>(\n            (previous, current) => ({ ...previous, [current.code]: current }),\n            {}\n        );\n    }, [modified_currencies_config]);\n\n    const getConfig = useCallback(\n        (currency: string) => transformed_currencies_config?.[currency],\n        [transformed_currencies_config]\n    );\n\n    return {\n        /** Available currencies and their information */\n        data: transformed_currencies_config,\n        /** Returns the currency config object for the given currency */\n        getConfig,\n        ...rest,\n    };\n};\n\nexport default useCurrencyConfig;\n","import { useMemo } from 'react';\nimport useAuthorize from './useAuthorize';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport useAuthorizedQuery from '../useAuthorizedQuery';\nimport { getAccountListWithAuthToken } from '@deriv/utils';\n\n/** A custom hook that returns the list of accounts for the current user. */\nconst useDerivAccountsList = () => {\n    const { data: authorize_data } = useAuthorize();\n\n    // its pretty much stale data, so never refresh, unless user creates a new account\n    const { data: account_list_data, ...rest } = useAuthorizedQuery(\n        'account_list',\n        {},\n        {\n            staleTime: Infinity,\n        }\n    );\n    const { getConfig } = useCurrencyConfig();\n\n    const account_list = account_list_data?.account_list;\n    // Add additional information to the authorize response.\n    const modified_accounts = useMemo(() => {\n        return getAccountListWithAuthToken(account_list_data?.account_list)?.map(account => {\n            return {\n                ...account,\n                /** Creation time of the account. */\n                created_at: account.created_at ? new Date(account.created_at) : undefined,\n                /** Account's currency config information */\n                currency_config: account.currency ? getConfig(account.currency) : undefined,\n                /** Date till client has excluded him/herself from the website, only present if client is self excluded. */\n                excluded_until: account.excluded_until ? new Date(account.excluded_until) : undefined,\n                /** Indicating whether the wallet is the currently active account. */\n                is_active: account.loginid === authorize_data?.loginid,\n                /** Indicating whether any linked account is active */\n                is_linked_account_active: account.linked_to?.some(\n                    account => account.loginid === authorize_data?.loginid\n                ),\n                /** indicating whether the account is marked as disabled or not. */\n                is_disabled: Boolean(account.is_disabled),\n                /** indicating whether the account is a trading account. */\n                is_trading: account.account_category === 'trading',\n                /** indicating whether the account is a virtual-money account. */\n                is_virtual: Boolean(account.is_virtual),\n                /** indicating whether the account is a wallet account. */\n                is_wallet: account.account_category === 'wallet',\n                /** The account ID of specified account. */\n                loginid: `${account.loginid}`,\n                /** The platform of the account */\n                platform: 'deriv' as const,\n                /** To indicate whether the account is MF or not */\n                is_mf: account.loginid?.startsWith('MF'),\n            } as const;\n        });\n    }, [account_list_data, account_list, authorize_data?.loginid, getConfig]);\n\n    return {\n        /** The list of accounts for the current user. */\n        data: modified_accounts,\n        ...rest,\n    };\n};\n\nexport default useDerivAccountsList;\n","import { useMemo } from 'react';\nimport useDerivAccountsList from './useDerivAccountsList';\n\n/** A custom hook that returns the account object for the current active account. */\nconst useActiveAccount = () => {\n    const { data, ...rest } = useDerivAccountsList();\n    const active_account = useMemo(() => data?.find(account => account.is_active), [data]);\n\n    return {\n        /** User's current active account. */\n        data: active_account,\n        ...rest,\n    };\n};\n\nexport default useActiveAccount;\n","import { useMemo } from 'react';\nimport useAuthorize from './useAuthorize';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook that gets the list of all wallet accounts for the current user. */\nconst useWalletAccountsList = () => {\n    const { data: authorize_data, ...rest } = useAuthorize();\n    const { getConfig } = useCurrencyConfig();\n\n    // Filter out non-wallet accounts.\n    const filtered_accounts = useMemo(\n        () => authorize_data?.account_list?.filter(account => account.account_category === 'wallet'),\n        [authorize_data]\n    );\n\n    // Add additional information to each wallet account.\n    const modified_accounts = useMemo(() => {\n        return filtered_accounts?.map(wallet => {\n            const wallet_currency_type = wallet.is_virtual ? 'Demo' : wallet.currency || '';\n            const dtrade_loginid = wallet.linked_to?.find(account => account.platform === 'dtrade')?.loginid;\n            const currency_config = wallet.currency ? getConfig(wallet.currency) : undefined;\n\n            return {\n                ...wallet,\n                /** The DTrade account ID of this wallet */\n                dtrade_loginid,\n                /** Wallet account's currency config information */\n                currency_config,\n                /** Returns the wallet's currency type. ex: `Demo`, `USD`, etc. */\n                wallet_currency_type,\n                /** Returns if the wallet is a crypto wallet. */\n                is_crypto: currency_config?.is_crypto,\n                /** Creation time of the wallet account. */\n                created_at: wallet.created_at ? new Date(wallet.created_at) : undefined,\n                /** Date till client has excluded him/herself from the website, only present if client is self excluded. */\n                excluded_until: wallet.excluded_until ? new Date(wallet.excluded_until) : undefined,\n                /** Indicating whether the wallet account is the currently active account. */\n                is_active: wallet.loginid === authorize_data?.loginid,\n                /** Indicating whether any linked account is active */\n                is_linked_account_active: wallet.linked_to?.some(\n                    account => account.loginid === authorize_data?.loginid\n                ),\n                /** indicating whether the account is marked as disabled or not. */\n                is_disabled: Boolean(wallet.is_disabled),\n                /** indicating whether the wallet account is a virtual-money account. */\n                is_virtual: Boolean(wallet.is_virtual),\n                /** The account ID of specified wallet account. */\n                loginid: `${wallet.loginid}`,\n                /** Landing company shortcode the account belongs to. */\n                landing_company_name: wallet.landing_company_name?.replace('maltainvest', 'malta'),\n                /** Indicating whether the wallet is a maltainvest wallet. */\n                is_malta_wallet: wallet.landing_company_name === 'maltainvest',\n            } as const;\n        });\n    }, [filtered_accounts, getConfig]);\n\n    // Sort wallet accounts alphabetically by fiat, crypto, then virtual.\n    const sorted_accounts = useMemo(() => {\n        if (!modified_accounts) return;\n\n        return [...modified_accounts].sort((a, b) => {\n            if (a.is_virtual !== b.is_virtual) {\n                return a.is_virtual ? 1 : -1;\n            } else if (a.currency_config?.is_crypto !== b.currency_config?.is_crypto) {\n                return a.currency_config?.is_crypto ? 1 : -1;\n            }\n\n            return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n        });\n    }, [modified_accounts]);\n\n    return {\n        /** The list of wallet accounts for the current user. */\n        data: sorted_accounts,\n        ...rest,\n    };\n};\n\nexport default useWalletAccountsList;\n","import { useMemo } from 'react';\nimport useWalletAccountsList from './useWalletAccountsList';\n\n/** A custom hook that returns the wallet object for the current active wallet. */\nconst useActiveWalletAccount = () => {\n    const { data, ...rest } = useWalletAccountsList();\n    const active_wallet = useMemo(() => data?.find(wallet => wallet.is_active), [data]);\n\n    return {\n        /** User's current active wallet. */\n        data: active_wallet,\n        ...rest,\n    };\n};\n\nexport default useActiveWalletAccount;\n","import { useMemo } from 'react';\nimport useDerivAccountsList from './useDerivAccountsList';\nimport useActiveWalletAccount from './useActiveWalletAccount';\n\n/** A custom hook that gets the active linked trading account for the current user. */\nconst useActiveLinkedToTradingAccount = () => {\n    const { data: account_list_data, isLoading: isDerivAccountListLoading } = useDerivAccountsList();\n    const { data: wallet_account_data, isLoading: isActiveWalletAccountLoading } = useActiveWalletAccount();\n\n    const modified_account = useMemo(() => {\n        if (!account_list_data || !wallet_account_data) return undefined;\n\n        const linkedDtradeLoginId = account_list_data\n            ?.filter(account => account.loginid === wallet_account_data?.loginid)[0]\n            ?.linked_to?.find(linked => linked.loginid && linked?.platform === 'dtrade')?.loginid;\n\n        const matchingTradingAccount = account_list_data?.filter(account => account.loginid === linkedDtradeLoginId)[0];\n\n        return { ...matchingTradingAccount };\n    }, [account_list_data, wallet_account_data]);\n\n    return {\n        /** The active linked trading account for the current user. */\n        data: modified_account,\n        isLoading: isDerivAccountListLoading || isActiveWalletAccountLoading,\n    };\n};\n\nexport default useActiveLinkedToTradingAccount;\n","import { useMemo } from 'react';\nimport useDerivAccountsList from './useDerivAccountsList';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook that gets the list of all trading accounts for the current user. */\nconst useTradingAccountsList = () => {\n    const { data: account_list_data, ...rest } = useDerivAccountsList();\n    const { getConfig } = useCurrencyConfig();\n\n    // Filter out non-trading accounts.\n    const filtered_accounts = useMemo(\n        () => account_list_data?.filter(account => account.is_trading) ?? [],\n        [account_list_data]\n    );\n\n    // Add additional information to each trading account.\n    const modified_accounts = useMemo(() => {\n        return filtered_accounts?.map(trading => ({\n            ...trading,\n            first_real_loginid: filtered_accounts?.find(account => account.account_type === 'real')?.loginid[0],\n            demo_loginid: filtered_accounts?.find(account => account.account_type === 'demo')?.loginid,\n        }));\n    }, [filtered_accounts]);\n\n    const fiat_account =\n        modified_accounts?.find(account => getConfig(account.currency ?? '')?.is_fiat)?.currency ?? 'USD';\n\n    return {\n        /** The list of trading accounts for the current user. */\n        data: modified_accounts,\n        /** The currency of the fiat account. */\n        fiat_account,\n        ...rest,\n    };\n};\n\nexport default useTradingAccountsList;\n","import { useMemo } from 'react';\nimport useTradingAccountsList from './useTradingAccountsList';\n\n/** A custom hook that returns the trading object for the current active trading. */\nconst useActiveTradingAccount = () => {\n    const { data, ...rest } = useTradingAccountsList();\n    const active_trading = useMemo(() => data?.find(trading => trading.is_active), [data]);\n\n    return {\n        /** User's current active trading. */\n        data: active_trading,\n        ...rest,\n    };\n};\n\nexport default useActiveTradingAccount;\n","import { useRef, useState } from 'react';\nimport { TSocketRequestPayload, TSocketResponseData } from '../../types';\nimport { hashObject } from '../utils';\nimport { useAPIContext } from '../APIProvider';\n\ntype TCurrencyPayload = Exclude<\n    NonNullable<TSocketRequestPayload<'exchange_rates'>>['payload']['target_currency'],\n    undefined\n>;\ntype TCurrencyRateData = NonNullable<TSocketResponseData<'exchange_rates'>['exchange_rates']>['rates'];\ntype TCurrencyExchangeSubscribeFunction<T> = { base_currency: T; target_currencies: T[] };\n\nconst useExchangeRates = <T extends TCurrencyPayload>() => {\n    const { subscribe: _subscribe, unsubscribe: _unsubscribe } = useAPIContext();\n    const exchangeRatesSubscriptions = useRef<string[]>([]);\n    const [data, setData] = useState<Record<TCurrencyPayload, TCurrencyRateData>>();\n\n    const subscribe = async ({ base_currency, target_currencies }: TCurrencyExchangeSubscribeFunction<T>) => {\n        await Promise.all(\n            target_currencies.map(async c => {\n                const { id, subscription } = await _subscribe('exchange_rates', {\n                    payload: { base_currency, target_currency: c },\n                });\n                if (!exchangeRatesSubscriptions.current.includes(id)) {\n                    exchangeRatesSubscriptions.current.push(id);\n                    subscription.subscribe((response: TSocketResponseData<'exchange_rates'>) => {\n                        const rates = response.exchange_rates?.rates;\n                        if (rates) {\n                            setData(prev => {\n                                const currentData = { ...(prev ?? {}) };\n                                if (currentData) {\n                                    currentData[base_currency] = { ...currentData[base_currency], ...rates };\n                                    return currentData;\n                                }\n                                return { [base_currency]: rates };\n                            });\n                        }\n                    });\n                }\n            })\n        );\n    };\n\n    const unsubscribe = async (payload: TCurrencyExchangeSubscribeFunction<T>) => {\n        if (payload) {\n            const id = await hashObject({ name: 'exchange_rates', payload });\n            exchangeRatesSubscriptions.current = exchangeRatesSubscriptions.current.filter(s => s !== id);\n            _unsubscribe(id);\n            setData(prev => {\n                const currData = { ...(prev ?? {}) };\n                delete currData[payload.base_currency];\n                return currData;\n            });\n            return;\n        }\n        exchangeRatesSubscriptions.current.forEach(s => _unsubscribe(s));\n    };\n\n    const getExchangeRate = (base: string, target: string) => {\n        if (data) {\n            return data?.[base]?.[target] ?? 1;\n        }\n        return 1;\n    };\n\n    return { data, subscribe, unsubscribe, getExchangeRate };\n};\n\nexport default useExchangeRates;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport { displayMoney } from '../utils';\nimport useExchangeRates from './useExchangeRates';\nimport useTradingAccountsList from './useTradingAccountsList';\n\n/** A custom hook that gets the list of created cTrader accounts. */\nconst useCtraderAccountsList = () => {\n    const { isSuccess } = useAuthorize();\n    const { data: ctrader_accounts, ...rest } = useQuery('trading_platform_accounts', {\n        payload: { platform: 'ctrader' },\n        options: { enabled: isSuccess },\n    });\n    const { getConfig } = useCurrencyConfig();\n    const { fiat_account } = useTradingAccountsList();\n    const { getExchangeRate } = useExchangeRates();\n\n    /** Adding neccesary properties to cTrader accounts */\n    const modified_ctrader_accounts = useMemo(\n        () =>\n            ctrader_accounts?.trading_platform_accounts?.map(account => {\n                const balance = account.balance ?? 0;\n                return {\n                    ...account,\n                    /** Account's currency config information */\n                    currency_config: account.currency ? getConfig(account.currency) : undefined,\n                    /** The login id of the cTrader account */\n                    loginid: account.account_id,\n                    /** indicating whether the account is a virtual-money account. */\n                    is_virtual: account.account_type === 'demo',\n                    /** Landing company shortcode the account belongs to. */\n                    landing_company_name: account.landing_company_short,\n                    /** The platform of the account */\n                    platform: 'ctrader' as const,\n                    /** Formatted display balance */\n                    display_balance: displayMoney(account.balance || 0, account.currency || 'USD'),\n                    /** Converted balance from the exchange rate */\n                    converted_balance: getExchangeRate(fiat_account, account.currency ?? 'USD') * balance,\n                };\n            }),\n        [fiat_account, getConfig, getExchangeRate, ctrader_accounts?.trading_platform_accounts]\n    );\n    return {\n        /** List of all created cTrader accounts */\n        data: modified_ctrader_accounts,\n        ...rest,\n    };\n};\n\nexport default useCtraderAccountsList;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport { displayMoney } from '../utils';\nimport useTradingAccountsList from './useTradingAccountsList';\nimport useExchangeRates from './useExchangeRates';\n\n/** A custom hook that gets the list of created Deriv X accounts. */\nconst useDxtradeAccountsList = () => {\n    const { isSuccess } = useAuthorize();\n    const { data: dxtrade_accounts, ...rest } = useQuery('trading_platform_accounts', {\n        payload: { platform: 'dxtrade' },\n        options: { enabled: isSuccess },\n    });\n    const { getConfig } = useCurrencyConfig();\n    const { getExchangeRate } = useExchangeRates();\n    const { fiat_account } = useTradingAccountsList();\n\n    /** Adding necessary properties to Deriv X accounts */\n    const modified_dxtrade_accounts = useMemo(\n        () =>\n            dxtrade_accounts?.trading_platform_accounts?.map(account => {\n                const balance = account.balance ?? 0;\n                return {\n                    ...account,\n                    /** Account's currency config information */\n                    currency_config: account.currency ? getConfig(account.currency) : undefined,\n                    /** The balance of the account in currency format. */\n                    display_balance: displayMoney(account?.balance || 0, account?.currency || 'USD'),\n                    /** indicating whether the account is a virtual-money account. */\n                    is_virtual: account.account_type === 'demo',\n                    /** Landing company shortcode the account belongs to. */\n                    landing_company_name: account.landing_company_short,\n                    /** The login id of the Deriv X account */\n                    loginid: account.account_id,\n                    /** The platform of the account */\n                    platform: 'dxtrade' as const,\n                    /** Converted balance from the exchange rate */\n                    converted_balance: getExchangeRate(fiat_account, account.currency ?? 'USD') * balance,\n                };\n            }),\n        [dxtrade_accounts?.trading_platform_accounts, fiat_account, getConfig, getExchangeRate]\n    );\n\n    return {\n        /** List of all created Deriv X accounts */\n        data: modified_dxtrade_accounts,\n        ...rest,\n    };\n};\n\nexport default useDxtradeAccountsList;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport { displayMoney } from '../utils';\nimport useTradingAccountsList from './useTradingAccountsList';\nimport useExchangeRates from './useExchangeRates';\n\n/** A custom hook that gets the list created MT5 accounts of the user. */\nconst useMT5AccountsList = () => {\n    const { isSuccess } = useAuthorize();\n    const { getConfig } = useCurrencyConfig();\n    const { fiat_account } = useTradingAccountsList();\n    const { getExchangeRate } = useExchangeRates();\n\n    const { data: mt5_accounts, ...mt5_accounts_rest } = useQuery('mt5_login_list', {\n        options: { enabled: isSuccess },\n    });\n\n    /**\n     * @description The list of created MT5 accounts\n     */\n    const modified_mt5_accounts = useMemo(() => {\n        return mt5_accounts?.mt5_login_list?.map(account => {\n            const balance = account.balance ?? 0;\n            return {\n                ...account,\n                /** Account's currency config information */\n                currency_config: account.currency ? getConfig(account.currency) : undefined,\n                /** The formatted display login of the account */\n                display_login: account.login?.replace(/^(MT[DR]?)/, ''),\n                /** Landing company shortcode the account belongs to. */\n                landing_company_name: account.landing_company_short,\n                /** The id of the account */\n                loginid: account.login,\n                /** The balance of the account in currency format. */\n                display_balance: displayMoney(account.balance || 0, account.currency || 'USD'),\n                /** indicating whether the account is a virtual-money account. */\n                is_virtual: account.account_type === 'demo',\n                /** The platform of the account */\n                platform: 'mt5' as const,\n                /** Converted balance from the exchange rate */\n                converted_balance: getExchangeRate(fiat_account, account.currency ?? 'USD') * balance,\n            };\n        });\n    }, [fiat_account, getConfig, getExchangeRate, mt5_accounts?.mt5_login_list]);\n\n    return {\n        /** The list of created MT5 accounts */\n        data: modified_mt5_accounts,\n        ...mt5_accounts_rest,\n    };\n};\n\nexport default useMT5AccountsList;\n","import { useMemo } from 'react';\n\nimport useCtraderAccountsList from './useCtraderAccountsList';\nimport useDxtradeAccountsList from './useDxtradeAccountsList';\nimport useMT5AccountsList from './useMT5AccountsList';\n\n/** A custom hook that gets the list all created CFD accounts of the user. */\nconst useCFDAccountsList = () => {\n    const {\n        data: mt5_accounts,\n        isError: isMT5AccountsListError,\n        isLoading: isMT5AccountsListLoading,\n        isSuccess: isMT5AccountsListSuccess,\n    } = useMT5AccountsList();\n    const {\n        data: dxtrade_accounts,\n        isError: isDxtradeAccountsListError,\n        isLoading: isDxtradeAccountsListLoading,\n        isSuccess: isDxtradeAccountsListSuccess,\n    } = useDxtradeAccountsList();\n    const {\n        data: ctrader_accounts,\n        isError: isCtraderAccountsListError,\n        isLoading: CtraderAccountsListLoading,\n        isSuccess: isCtraderAccountsListSuccess,\n    } = useCtraderAccountsList();\n\n    const data = useMemo(() => {\n        if (!mt5_accounts || !dxtrade_accounts || !ctrader_accounts) return;\n\n        return {\n            mt5: mt5_accounts,\n            dxtrade: dxtrade_accounts,\n            ctrader: ctrader_accounts,\n        };\n    }, [mt5_accounts, dxtrade_accounts, ctrader_accounts]);\n\n    const isError = isMT5AccountsListError || isDxtradeAccountsListError || isCtraderAccountsListError;\n\n    const isLoading = isMT5AccountsListLoading || isDxtradeAccountsListLoading || CtraderAccountsListLoading;\n\n    const isSuccess = isMT5AccountsListSuccess && isDxtradeAccountsListSuccess && isCtraderAccountsListSuccess;\n\n    return {\n        data,\n        isError,\n        isLoading,\n        isSuccess,\n    };\n};\n\nexport default useCFDAccountsList;\n","import { useMemo } from 'react';\nimport useDerivAccountsList from './useDerivAccountsList';\nimport useCFDAccountsList from './useCFDAccountsList';\n\n/** A custom hook to get all user accounts, including external apps accounts */\nconst useAllAccountsList = () => {\n    const {\n        data: accountsList,\n        isError: isAccountsListError,\n        isLoading: isAccountsListLoading,\n    } = useDerivAccountsList();\n    const {\n        data: cfdsList,\n        isError: isCFDAccountsListError,\n        isLoading: isCFDAccountsListLoading,\n    } = useCFDAccountsList();\n\n    const accounts = useMemo(\n        () => ({\n            wallets: accountsList?.filter(account => account.is_wallet),\n            dtrade: accountsList?.filter(account => account.is_trading),\n            ...cfdsList,\n        }),\n        [accountsList, cfdsList]\n    );\n    const isError = isAccountsListError || isCFDAccountsListError;\n    const isLoading = isAccountsListLoading || isCFDAccountsListLoading;\n\n    return {\n        data: accounts,\n        isError,\n        isLoading,\n    };\n};\n\nexport default useAllAccountsList;\n","import { useMemo } from 'react';\nimport useAuthorizedQuery from '../useAuthorizedQuery';\n\n/** A custom hook that gets the list of available wallets. */\nconst useAvailableWallets = () => {\n    // pretty much stale data, unless user creates a new wallet\n    const { data, ...rest } = useAuthorizedQuery(\n        'available_accounts',\n        {\n            categories: ['wallet'],\n        },\n        {\n            staleTime: Infinity,\n        },\n        false\n    );\n\n    const modifiedData = useMemo(() => {\n        if (!data?.available_accounts?.wallets) return;\n\n        return data.available_accounts.wallets;\n    }, [data]);\n\n    return {\n        /** List of available wallet accounts to create */\n        data: modifiedData,\n        ...rest,\n    };\n};\n\nexport default useAvailableWallets;\n","import { useCallback, useMemo } from 'react';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport useWalletAccountsList from './useWalletAccountsList';\nimport useAvailableWallets from './useAvailableWallets';\n\n/** A custom hook that gets the list of added and non-added wallet accounts. */\nconst useAllWalletAccounts = () => {\n    const { data: nonAddedWallets, ...rest } = useAvailableWallets();\n    const { data: addedWallets } = useWalletAccountsList();\n    const { getConfig } = useCurrencyConfig();\n\n    /** Get all the added and non-added wallets account */\n    const modifiedWallets = useMemo(() => {\n        const nonVirtualWallets = addedWallets?.filter(wallet => !wallet.is_virtual);\n\n        /** Modify added wallets list with adding `is_added` and `is_crypto` flag */\n        const modifiedAddedWallets = nonVirtualWallets?.map(wallet => ({\n            currency: wallet.currency,\n            landing_company_name: wallet.landing_company_name,\n            is_added: true,\n            is_crypto: wallet.currency ? getConfig(wallet.currency)?.is_crypto : false,\n        }));\n\n        /** Modify non-added wallets list with adding `is_added` and `is_crypto` flag */\n        const modifiedNonAddedWallets = nonAddedWallets?.map(wallet => ({\n            currency: wallet.currency,\n            landing_company_name: wallet.landing_company,\n            is_added: false,\n            is_crypto: wallet.account_type === 'crypto',\n        }));\n\n        return [...(modifiedAddedWallets || []), ...(modifiedNonAddedWallets || [])];\n    }, [nonAddedWallets, addedWallets, getConfig]);\n\n    /** Function to sort wallet based on currency */\n    const sortWalletsByCurrency = useCallback(\n        (a: typeof modifiedWallets[number], b: typeof modifiedWallets[number]) => {\n            if (a.is_crypto !== b.is_crypto) return a.is_crypto ? 1 : -1;\n\n            return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n        },\n        []\n    );\n\n    /** Sort the wallets by fiat, crypto, then virtual */\n    const sortedWallets = useMemo(() => {\n        if (!modifiedWallets) return;\n\n        // Sort wallets by non-added wallets then added wallets\n        modifiedWallets.sort((a, b) => {\n            if (a.is_added !== b.is_added) return a.is_added ? 1 : -1;\n\n            return 0;\n        });\n\n        // Sort the added wallets alphabetically by fiat, crypto, then virtual (if any)\n        modifiedWallets.sort((a, b) => {\n            if (!a.is_added || !b.is_added) return 0;\n            return sortWalletsByCurrency(a, b);\n        });\n\n        // Sort the non-added wallets alphabetically by fiat, crypto, then virtual (if any)\n        modifiedWallets.sort((a, b) => {\n            if (a.is_added || b.is_added) return 0;\n            return sortWalletsByCurrency(a, b);\n        });\n\n        return [...modifiedWallets];\n    }, [modifiedWallets, sortWalletsByCurrency]);\n\n    return {\n        /** Sorted wallets accounts */\n        data: sortedWallets,\n        ...rest,\n    };\n};\n\nexport default useAllWalletAccounts;\n","import { useMemo } from 'react';\nimport useGetAccountStatus from './useGetAccountStatus';\n\n/** A custom hook to get the verification status (basically any poi, poa, poinc, poo) of the current user. */\nconst useAuthentication = () => {\n    const { data: get_account_status_data, ...rest } = useGetAccountStatus();\n\n    const modified_account_status = useMemo(() => {\n        if (!get_account_status_data) return;\n\n        const needs_verification = new Set(get_account_status_data.authentication?.needs_verification);\n        const account_status = new Set(get_account_status_data?.status);\n\n        return {\n            ...get_account_status_data.authentication,\n            /** client has been authenticated with IDV photo ID feature */\n            is_authenticated_with_idv_photoid: account_status.has('is_authenticated_with_idv_photoid'),\n            /** client is required to verify their document (proof of address) */\n            is_poa_needed: needs_verification.has('document'),\n            /** client is required to verify their identity */\n            is_poi_needed: needs_verification.has('identity'),\n            /** client has been age-verified */\n            is_age_verified: account_status.has('age_verification'),\n            /** client is prevented from verifying from idv */\n            is_idv_disallowed: account_status.has('idv_disallowed'),\n            /** client IDV is revoked */\n            is_idv_revoked: account_status.has('idv_revoked'),\n            /** client is allowed to perform POI and POA (allow uploading documents) */\n            is_allow_document_upload: account_status.has('allow_document_upload'),\n            /** client can resubmit POI documents */\n            is_poi_resubmission_allowed: account_status.has('allow_poi_resubmission'),\n            /** client can resubmit POA documents */\n            is_poa_resubmission_allowed: account_status.has('allow_poa_resubmission'),\n            /** client's name in POI documents does not match */\n            is_poi_name_mismatch: account_status.has('poi_name_mismatch'),\n            /** client's name in POA documents does not match */\n            is_poa_address_mismatch: account_status.has('poa_address_mismatch'),\n            /** client has attempted POA before */\n            has_poa_been_attempted: get_account_status_data?.authentication?.document?.status !== 'none',\n            /** client has attempted POI before */\n            has_poi_been_attempted: get_account_status_data?.authentication?.identity?.status !== 'none',\n            /** client's poi verification status */\n            poi_status: get_account_status_data?.authentication?.identity?.status,\n            /** client's poa verification status */\n            poa_status: get_account_status_data?.authentication?.document?.status,\n            /** client's risk classification: `low`, `standard`, `high`.  */\n            risk_classification: get_account_status_data?.risk_classification,\n        };\n    }, [get_account_status_data]);\n\n    return {\n        data: modified_account_status,\n        ...rest,\n    };\n};\n\nexport default useAuthentication;\n","import { useCallback, useMemo } from 'react';\nimport useAuthorize from './useAuthorize';\nimport useQuery from '../useQuery';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useMutation from '../useMutation';\n\ntype TSetSettingsPayload = NonNullable<\n    NonNullable<NonNullable<Parameters<ReturnType<typeof useMutation<'set_settings'>>['mutate']>>[0]>['payload']\n>;\n\n/** A custom hook to get and update the user settings. */\nconst useSettings = () => {\n    const { isSuccess } = useAuthorize();\n    const { data, ...rest } = useQuery('get_settings', { options: { enabled: isSuccess } });\n    const { mutate, mutateAsync, ...mutate_rest } = useMutation('set_settings', {\n        onSuccess: () => invalidate('get_settings'),\n    });\n    const invalidate = useInvalidateQuery();\n\n    const update = useCallback((payload: TSetSettingsPayload) => mutate({ payload }), [mutate]);\n    const updateAsync = useCallback((payload: TSetSettingsPayload) => mutateAsync({ payload }), [mutateAsync]);\n\n    // Add additional information to the settings response.\n    const modified_settings = useMemo(() => {\n        const citizenship = data?.get_settings?.citizen ?? '';\n        const account = data?.get_settings?.account_opening_reason ?? '';\n        const placeofbirth = data?.get_settings?.place_of_birth ?? '';\n        const taxResidence = data?.get_settings?.tax_residence ?? '';\n        const taxIdentificationnumber = data?.get_settings?.tax_identification_number ?? '';\n\n        return {\n            ...data?.get_settings,\n            has_submitted_personal_details: Boolean(\n                citizenship && account && placeofbirth && taxResidence && taxIdentificationnumber\n            ),\n        };\n    }, [data?.get_settings]);\n\n    return {\n        /** The settings response. */\n        data: modified_settings,\n        /** Function to update user settings */\n        update,\n        /** Function to update user settings synchronously */\n        updateAsync,\n        /** The mutation related information */\n        mutation: mutate_rest,\n        ...rest,\n    };\n};\n\nexport default useSettings;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useSettings from './useSettings';\n\n/** A custom hook that returns the available landing companies of the user's country. */\nconst useLandingCompany = () => {\n    const { data: settings_data } = useSettings();\n    const { data, ...rest } = useQuery('landing_company', {\n        payload: { landing_company: settings_data?.country_code || '' },\n        options: { enabled: Boolean(settings_data?.country_code) },\n    });\n\n    // Add additional information to the landing company response.\n    const modified_landing_company = useMemo(() => {\n        if (!data?.landing_company) return;\n\n        return { ...data.landing_company };\n    }, [data?.landing_company]);\n\n    return {\n        /** The landing company response. */\n        data: modified_landing_company,\n        ...rest,\n    };\n};\n\nexport default useLandingCompany;\n","import { useMemo } from 'react';\nimport useLandingCompany from './useLandingCompany';\n\n/**\n * A custom hook that provides flags to determine the accessibility status of cTrader and Dxtrade based on the current country of residence.\n */\nconst useAccesiblePlatforms = () => {\n    const { data: landing_company, ...rest } = useLandingCompany();\n\n    const modified_accesible_platform = useMemo(() => {\n        if (!landing_company) return;\n\n        /** check if ctrader jurisdiction is offered in the landing_company response  */\n        const is_ctrader_available = landing_company?.ctrader?.all?.standard === 'svg';\n        /** check if dxtrade is in the landing_company response */\n        const is_dxtrade_available = landing_company?.dxtrade_all_company;\n        /** check if MT5 is in the landing_company response */\n        const is_mt5_available =\n            landing_company?.mt_financial_company ||\n            landing_company?.mt_gaming_company ||\n            landing_company?.mt_all_company;\n\n        return {\n            /** is ctrader accessible for this country of residence */\n            is_ctrader_available: !!is_ctrader_available,\n            /** is dxtrade accessible for this country of residence */\n            is_dxtrade_available: !!is_dxtrade_available,\n            /** is mt5 accessible for this country of residence */\n            is_mt5_available: !!is_mt5_available,\n        };\n    }, [landing_company]);\n\n    return {\n        data: modified_accesible_platform,\n        ...rest,\n    };\n};\n\nexport default useAccesiblePlatforms;\n","import { useMemo } from 'react';\n\nimport useQuery from '../useQuery';\n\nimport useAuthorize from './useAuthorize';\n\nconst market_type_to_leverage_mapper: Record<string, number> = {\n    gaming: 500,\n    financial: 1000,\n    all: 100,\n};\n\n/** A custom hook to get the list of available MT5 accounts. */\nconst useAvailableMT5Accounts = () => {\n    const { isSuccess } = useAuthorize();\n    const { data: mt5_available_accounts, ...rest } = useQuery('trading_platform_available_accounts', {\n        payload: { platform: 'mt5' },\n        options: { enabled: isSuccess },\n    });\n    const financialPlatforms = ['svg', 'bvi', 'vanuatu', 'dml'];\n\n    const modified_mt5_available_accounts = useMemo(\n        () =>\n            mt5_available_accounts?.trading_platform_available_accounts?.map(account => {\n                const shouldUpdateForex =\n                    account.product === 'financial' && financialPlatforms.includes(account.shortcode ?? '');\n                const accountWithInstruments = account as typeof account & { instruments?: string[] };\n                return {\n                    ...account,\n                    /** The market type for the account */\n                    market_type: account.market_type === 'gaming' ? 'synthetic' : account.market_type,\n                    /** The platform for the account */\n                    platform: 'mt5',\n                    /** Updated instruments array */\n                    ...(shouldUpdateForex && accountWithInstruments.instruments\n                        ? {\n                              instruments: accountWithInstruments.instruments.map((instrument: string) =>\n                                  instrument === 'Forex: standard/micro' ? 'Forex' : instrument\n                              ),\n                          }\n                        : {}),\n                    /** Leverage for the account */\n                    leverage:\n                        market_type_to_leverage_mapper[\n                            account.market_type as keyof typeof market_type_to_leverage_mapper\n                        ],\n                } as const;\n            }),\n        [mt5_available_accounts?.trading_platform_available_accounts]\n    );\n\n    return {\n        /** The available MT5 accounts */\n        data: modified_mt5_available_accounts,\n        ...rest,\n    };\n};\n\nexport default useAvailableMT5Accounts;\n","import { useMemo } from 'react';\nimport useAuthorizedQuery from '../useAuthorizedQuery';\n\n/** A custom hook that gets the balance for all the user accounts. */\nconst useBalance = () => {\n    const { data: balance_data, ...rest } = useAuthorizedQuery(\n        'balance',\n        {\n            account: 'all',\n        },\n        {\n            // 30 seconds, just enough to avoid duplicated calls, but without freezing it for too long if someone actually wants to update it,\n            // though if user wants it to get updated, its likely that they will refresh page, so then its gonna be invalidated anyway\n            staleTime: 30 * 1000,\n        },\n        false\n    );\n\n    // Add additional information to the balance data.\n    const modified_balance = useMemo(() => ({ ...balance_data?.balance }), [balance_data?.balance]);\n\n    return {\n        /** The balance response. */\n        data: modified_balance,\n        ...rest,\n    };\n};\n\nexport default useBalance;\n","import { useCallback, useMemo } from 'react';\nimport useSubscription from '../useSubscription';\n\ntype TPayload = NonNullable<Parameters<ReturnType<typeof useSubscription<'balance'>>['subscribe']>[0]>['payload'];\n\n/** A custom hook that subscribes to the balance call and continuously gets the balance for the user account(s) provided. */\nconst useBalanceSubscription = () => {\n    const { data: balance_data, subscribe: _subscribe, ...rest } = useSubscription('balance');\n\n    const subscribe = useCallback(\n        (payload: TPayload) => {\n            _subscribe({ payload });\n        },\n        [_subscribe]\n    );\n\n    // Add additional information to the balance data.\n    const modified_balance = useMemo(() => ({ ...balance_data?.balance }), [balance_data?.balance]);\n\n    return {\n        /** The balance response. */\n        data: modified_balance,\n        /** Function to subscribe to balance */\n        subscribe,\n        ...rest,\n    };\n};\n\nexport default useBalanceSubscription;\n","import { useMemo } from 'react';\nimport useGetAccountStatus from './useGetAccountStatus';\n\n/** A custom hook to check the cashier validations for the cashier locked scenarios. */\nconst useCashierValidation = () => {\n    const { data: get_account_status_data, ...rest } = useGetAccountStatus();\n\n    const modified_cashier_validation = useMemo(() => {\n        if (!get_account_status_data?.cashier_validation) return;\n\n        const cashier_validation = new Set(get_account_status_data?.cashier_validation);\n\n        const system_maintenance = Array.from(cashier_validation).some(status => status.includes('system_maintenance'));\n\n        return {\n            transfer_blocked: cashier_validation.has('transfer_blocked'),\n            no_residence: cashier_validation.has('no_residence'),\n            unwelcome_status: cashier_validation.has('unwelcome_status'),\n            self_exclusion: cashier_validation.has('SelfExclusion'),\n            no_withdrawal_or_trading_status: cashier_validation.has('no_withdrawal_or_trading_status'),\n            only_pa_withdrawals_allowed_status: cashier_validation.has('only_pa_withdrawals_allowed_status'),\n            withdraw_service_unavailable_for_pa: cashier_validation.has('WithdrawServiceUnavailableForPA'),\n            withdrawal_locked_status: cashier_validation.has('withdrawal_locked_status'),\n            documents_expired: cashier_validation.has('documents_expired'),\n            cashier_locked_status: cashier_validation.has('cashier_locked_status'),\n            disabled_status: cashier_validation.has('disabled_status'),\n            financial_assessment_required: cashier_validation.has('FinancialAssessmentRequired'),\n            ask_currency: cashier_validation.has('ASK_CURRENCY'),\n            ask_authenticate: cashier_validation.has('ASK_AUTHENTICATE'),\n            ask_financial_risk_approval: cashier_validation.has('ASK_FINANCIAL_RISK_APPROVAL'),\n            ask_tin_information: cashier_validation.has('ASK_TIN_INFORMATION'),\n            ask_self_exclusion_max_turnover_set: cashier_validation.has('ASK_SELF_EXCLUSION_MAX_TURNOVER_SET'),\n            ask_fix_details: cashier_validation.has('ASK_FIX_DETAILS'),\n            pa_commision_withdrawal_limit: cashier_validation.has('PACommisionWithdrawalLimit'),\n            system_maintenance,\n        };\n    }, [get_account_status_data?.cashier_validation]);\n\n    return {\n        /** The cashier validation response. */\n        data: modified_cashier_validation,\n        ...rest,\n    };\n};\n\nexport default useCashierValidation;\n","import useMutation from '../useMutation';\n\n/**\n * A custom hook that calls the `account_closure` api. This call allows clients to close all their accounts (including virtual-money account)\n */\nconst useCloseDerivAccount = () => {\n    const response = useMutation('account_closure');\n    return response;\n};\n\nexport default useCloseDerivAccount;\n","import { useMemo } from 'react';\n\nimport useAvailableMT5Accounts from './useAvailableMT5Accounts';\nimport useLandingCompany from './useLandingCompany';\n\n// Remove the hardcoded values and use the values from the API once it's ready\nexport const MARKET_TYPE = {\n    ALL: 'all',\n    FINANCIAL: 'financial',\n    SYNTHETIC: 'synthetic',\n} as const;\n\n// Remove the hardcoded values and use the values from the API once it's ready\nexport const PRODUCT = {\n    CTRADER: 'ctrader',\n    DERIVX: 'derivx',\n    SWAPFREE: 'swap_free',\n    ZEROSPREAD: 'zero_spread',\n} as const;\n\n// Remove the hardcoded values and use the values from the API once it's ready\nexport const CFD_PLATFORMS = {\n    CFDS: 'CFDs',\n    CTRADER: 'ctrader',\n    DXTRADE: 'dxtrade',\n    MT5: 'mt5',\n} as const;\n\n// Remove the hardcoded values and use the values from the API once it's ready\nexport const JURISDICTION = {\n    BVI: 'bvi',\n    LABUAN: 'labuan',\n    MALTAINVEST: 'maltainvest',\n    SVG: 'svg',\n    VANUATU: 'vanuatu',\n} as const;\n\n// Remove the hardcoded values and use the values from the API once it's ready\nconst dxtradeAccount = {\n    leverage: 0,\n    market_type: MARKET_TYPE.ALL,\n    name: 'Deriv X',\n    platform: CFD_PLATFORMS.DXTRADE,\n    requirements: {\n        after_first_deposit: {\n            financial_assessment: [''],\n        },\n        compliance: {\n            mt5: [''],\n            tax_information: [''],\n        },\n        signup: [''],\n    },\n    shortcode: JURISDICTION.SVG,\n};\n\n// Remove the hardcoded values and use the values from the API once it's ready\nconst ctraderAccount = {\n    leverage: 0,\n    market_type: MARKET_TYPE.ALL,\n    name: 'cTrader',\n    platform: CFD_PLATFORMS.CTRADER,\n    requirements: {\n        after_first_deposit: {\n            financial_assessment: [''],\n        },\n        compliance: {\n            mt5: [''],\n            tax_information: [''],\n        },\n        signup: [''],\n    },\n    shortcode: JURISDICTION.SVG,\n};\n\n/** A custom hook that gets compare accounts values. */\nconst useCFDCompareAccounts = () => {\n    const { data: all_available_mt5_accounts, ...rest } = useAvailableMT5Accounts();\n    const { data: landingCompany } = useLandingCompany();\n\n    const hasDxtradeAccountAvailable = landingCompany?.dxtrade_all_company;\n    const hasCTraderAccountAvailable = landingCompany?.ctrader?.all?.standard === JURISDICTION.SVG;\n\n    const sortedMt5Accounts = useMemo(() => {\n        const sorting_order = ['standard', 'financial', 'stp', 'swap_free', 'zero_spread', 'gold'];\n\n        if (!all_available_mt5_accounts) return;\n\n        const sorted_data = sorting_order.reduce(\n            (acc, sort_order) => {\n                const accounts = all_available_mt5_accounts.filter(account => account.product === sort_order);\n                if (!accounts.length) return acc;\n                return [...acc, ...accounts];\n            },\n            [] as typeof all_available_mt5_accounts\n        );\n\n        return sorted_data;\n    }, [all_available_mt5_accounts]);\n\n    const modifiedData = useMemo(() => {\n        return {\n            ctraderAccount: hasCTraderAccountAvailable ? ctraderAccount : undefined,\n            dxtradeAccount: hasDxtradeAccountAvailable ? dxtradeAccount : undefined,\n            mt5Accounts: sortedMt5Accounts?.filter(\n                //@ts-expect-error need update api-types\n                account => account.is_default_jurisdiction === 'true'\n            ),\n        };\n    }, [hasCTraderAccountAvailable, hasDxtradeAccountAvailable, sortedMt5Accounts]);\n\n    return {\n        data: modifiedData,\n        hasCTraderAccountAvailable,\n        hasDxtradeAccountAvailable,\n        ...rest,\n    };\n};\n\nexport default useCFDCompareAccounts;\n","import useMutation from '../useMutation';\n\n/** A custom hooks for cancelling crypto transaction  */\nconst useCancelCryptoTransaction = () => {\n    const { data, mutate, ...rest } = useMutation('cashier_withdrawal_cancel');\n\n    return {\n        /** The cancel crypto transaction response */\n        data: data?.cashier_withdrawal_cancel,\n        /** Function to cancel crypto transaction */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useCancelCryptoTransaction;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TCashierParam = NonNullable<\n    Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>\n>[0]['payload']['cashier'];\n\ntype TParams = Omit<\n    NonNullable<Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>>[0]['payload'],\n    'cashier' | 'provider'\n>;\n\n/** A custom hook to get the deposit and withdrawal fiat address. */\nconst useCashierFiatAddress = () => {\n    const { data, mutate: _mutate, mutateAsync: _mutateAsync, ...rest } = useMutation('cashier');\n    const iframe_url = typeof data?.cashier === 'string' ? `${data?.cashier}&DarkMode=off` : undefined;\n\n    const mutate = useCallback(\n        (cashier: TCashierParam, payload?: TParams) =>\n            _mutate({ payload: { cashier, provider: 'doughflow', ...payload } }),\n        [_mutate]\n    );\n    const mutateAsync = useCallback(\n        (cashier: TCashierParam, payload?: TParams) =>\n            _mutateAsync({ payload: { cashier, provider: 'doughflow', ...payload } }),\n        [_mutateAsync]\n    );\n\n    return {\n        /** The deposit/withdrawal fiat iframe */\n        data: iframe_url,\n        /** Function to get deposit/withdrawal fiat address */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useCashierFiatAddress;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { getToken } from '@deriv/utils';\nimport { getInitialLanguage, useTranslations } from '@deriv-com/translations';\n\nimport { useAPIContext } from '../APIProvider';\nimport useMutation from '../useMutation';\n\nimport useAuthorize from './useAuthorize';\n\ntype TCashierParam = NonNullable<\n    Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>\n>[0]['payload']['cashier'];\n\ntype TParams = Omit<\n    NonNullable<Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>>[0]['payload'],\n    'cashier' | 'provider'\n>;\n\n/** A custom hook to get the deposit and withdrawal fiat address. */\nconst useCashierFiatDepositAddress = () => {\n    const { data: authorizeData, isSuccess: isAuthorizeSuccess } = useAuthorize();\n    const { mutateAsync: mutateAsyncAuthorize } = useMutation('authorize');\n    const { data, mutateAsync: _mutateAsync, ...rest } = useMutation('cashier');\n\n    const iframe_url = typeof data?.cashier === 'string' ? `${data?.cashier}&DarkMode=off` : undefined;\n    const [isAuthorizing, setIsAuthorizing] = useState(false);\n    const { setOnReconnected } = useAPIContext();\n    const i18nLanguage = getInitialLanguage();\n    const { currentLang } = useTranslations();\n    const loginid = authorizeData.loginid;\n\n    const mutateAsync = useCallback(\n        (cashier: TCashierParam, payload?: TParams) =>\n            _mutateAsync({ payload: { cashier, provider: 'doughflow', ...payload } }),\n        [_mutateAsync]\n    );\n\n    // This useEffect is used to handle deposit fiat address as usual\n    useEffect(() => {\n        if (isAuthorizeSuccess) {\n            setIsAuthorizing(true);\n            mutateAsync('deposit').then(() => setIsAuthorizing(false));\n        }\n    }, [isAuthorizeSuccess, mutateAsync]);\n\n    // This useEffect is used to handle deposit fiat address when the language is changed\n    useEffect(() => {\n        if (!loginid) return;\n\n        if (currentLang !== i18nLanguage) {\n            setIsAuthorizing(true);\n            setOnReconnected(async () => {\n                await mutateAsyncAuthorize({ payload: { authorize: getToken(loginid || '') ?? '' } });\n                await mutateAsync('deposit');\n                setIsAuthorizing(false);\n                // Reset the onReconnected callback to avoid multiple calls\n                setOnReconnected(() => undefined);\n            });\n        }\n    }, [currentLang, i18nLanguage, loginid, mutateAsync, mutateAsyncAuthorize, setOnReconnected]);\n\n    return {\n        ...rest,\n        /** The deposit/withdrawal fiat iframe */\n        data: iframe_url,\n        /** Function to get deposit/withdrawal fiat address */\n        isAuthorizing,\n    };\n};\n\nexport default useCashierFiatDepositAddress;\n","import { useCallback, useMemo } from 'react';\nimport useQuery from '../useQuery';\n\n/** A custom hook to get the country config information from `residence_list` endpoint. */\nconst useCountryConfig = () => {\n    const { data: residence_list_data, ...rest } = useQuery('residence_list');\n\n    // Add additional information to the country config.\n    const modified_residence_list = useMemo(\n        () =>\n            residence_list_data?.residence_list?.map(country_config => {\n                return {\n                    ...country_config,\n                    /** Determine if the country is disabled */\n                    is_disabled: country_config.disabled !== undefined,\n                    /** 2-letter country code */\n                    code: `${country_config.value}`.toUpperCase(),\n                    /** Country name */\n                    name: `${country_config.text}`,\n                    /** Determine if the IDV service is supported for the country */\n                    is_idv_supported: country_config.identity?.services?.idv?.is_country_supported === 1,\n                    /** Determine if the Onfido service is supported for the country */\n                    is_onfido_supported: country_config.identity?.services?.onfido?.is_country_supported === 1,\n                };\n            }),\n        [residence_list_data?.residence_list]\n    );\n\n    // Transform the country config array into a record object.\n    const transformed_residence_list = useMemo(() => {\n        return modified_residence_list?.reduce<Record<string, typeof modified_residence_list[number]>>(\n            (previous, current) => ({ ...previous, [current.code]: current }),\n            {}\n        );\n    }, [modified_residence_list]);\n\n    const getConfig = useCallback(\n        (currency: string) => transformed_residence_list?.[currency as string],\n        [transformed_residence_list]\n    );\n\n    return {\n        /** Available countries and their information */\n        data: transformed_residence_list,\n        /** Returns the country config object for the given country code */\n        getConfig,\n        ...rest,\n    };\n};\n\nexport default useCountryConfig;\n","import { useMemo } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A custom hook that creates a new real trading account. */\nconst useCreateNewRealAccount = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('new_account_real', {\n        onSuccess: () => {\n            invalidate('account_list');\n        },\n    });\n\n    // Add additional information to the new real trading account response.\n    const modified_data = useMemo(() => {\n        if (!data?.new_account_real) return;\n\n        return { ...data?.new_account_real };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the new account real API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateNewRealAccount;\n","import { useMemo } from 'react';\n\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useMutation from '../useMutation';\n\n/** A custom hook that creates a new virtual trading account. */\nconst useCreateNewVirtualAccount = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('new_account_virtual', {\n        onSuccess: () => {\n            invalidate('account_list');\n        },\n    });\n\n    // Add additional information to the new virtual trading account response.\n    const modified_data = useMemo(() => {\n        if (!data?.new_account_virtual) return;\n\n        return { ...data?.new_account_virtual };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the new account virtual API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateNewVirtualAccount;\n","import { useMemo } from 'react';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useMutation from '../useMutation';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport { displayMoney } from '../utils';\n\n/** A custom hook to create new wallet account */\nconst useCreateWallet = () => {\n    const invalidate = useInvalidateQuery();\n    const { getConfig } = useCurrencyConfig();\n    const {\n        data,\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        ...rest\n    } = useMutation('new_account_wallet', {\n        onSuccess: () => {\n            invalidate('authorize');\n            invalidate('available_accounts');\n        },\n    });\n\n    const mutate = (params: Parameters<typeof _mutate>[0]['payload']) => {\n        return _mutate({ payload: params });\n    };\n\n    const mutateAsync = (params: Parameters<typeof _mutateAsync>[0]['payload']) => {\n        return _mutateAsync({ payload: params });\n    };\n\n    const modified_data = useMemo(() => {\n        if (!data?.new_account_wallet) return;\n        const currencyConfig = getConfig(data?.new_account_wallet.currency || 'USD');\n        return {\n            ...data.new_account_wallet,\n            /** The balance of the account in currency format. */\n            display_balance: displayMoney(0, currencyConfig?.display_code || 'USD', {\n                fractional_digits: currencyConfig?.fractional_digits,\n            }),\n        };\n    }, [data?.new_account_wallet, getConfig]);\n\n    return {\n        /** New account information */\n        data: modified_data,\n        /** A function to create new wallet */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useCreateWallet;\n","import { useCallback } from 'react';\nimport useAuthorize from './useAuthorize';\nimport useAuthorizedQuery from '../useAuthorizedQuery';\n\n/** A custom hook to get the cryptocurrencies config information from `crypto_config` endpoint. */\nconst useCryptoConfig = (options?: Parameters<typeof useAuthorizedQuery<'crypto_config'>>[2]) => {\n    const { data: authorizeData, isLoading: isAuthorizeLoading } = useAuthorize();\n\n    const { data, isLoading: isCryptConfigLoading, ...rest } = useAuthorizedQuery('crypto_config', {}, { ...options });\n\n    const cryptoConfig = authorizeData?.currency\n        ? data?.crypto_config?.currencies_config[authorizeData?.currency]\n        : null;\n\n    const getConfig = useCallback(\n        (currency: string) => data?.crypto_config?.currencies_config[currency],\n        [data?.crypto_config?.currencies_config]\n    );\n\n    return {\n        /** Available cryptocurrencies config for authorized account*/\n        data: cryptoConfig,\n        /** Returns the crypto config object for the given currency */\n        getConfig,\n        isLoading: isAuthorizeLoading || isCryptConfigLoading,\n        ...rest,\n    };\n};\n\nexport default useCryptoConfig;\n","import { useEffect, useRef, useState } from 'react';\nimport { epochToMoment, toMoment } from '@deriv/utils';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { CryptoEstimations } from '@deriv/api-types';\nimport { TSocketError } from '../../types';\nimport useSubscription from '../useSubscription';\n\n/** A custom hook that returns the crypto_estimations fee for given currency code along with count_down and an unique_id */\nconst useCryptoEstimations = () => {\n    const {\n        subscribe,\n        data,\n        error: subscription_error,\n        isLoading,\n        unsubscribe,\n    } = useSubscription('crypto_estimations');\n    const [cryptoEstimationsFeeDetails, setCryptoEstimationsFeeDetails] = useState<\n        CryptoEstimations['k']['withdrawal_fee']\n    >({});\n    const [cryptoEstimationsFeeDetailsLatest, setCryptoEstimationsFeeDetailsLatest] = useState<\n        CryptoEstimations['k']['withdrawal_fee']\n    >({});\n    const [currencyCode, setCurrencyCode] = useState<string>('BTC');\n    const [error, setError] = useState<TSocketError<'crypto_estimations'>['error']>();\n    const [countDown, setCountDown] = useState<number>(0);\n    const [serverTime, setServerTime] = useState<string>('');\n    const timer = useRef<NodeJS.Timeout | null>(null);\n\n    useEffect(() => {\n        if (data?.crypto_estimations?.[currencyCode].withdrawal_fee?.expiry_time) {\n            setCryptoEstimationsFeeDetailsLatest(data?.crypto_estimations?.[currencyCode].withdrawal_fee ?? {});\n        }\n    }, [currencyCode, data]);\n\n    useEffect(() => {\n        if (subscription_error) setError(subscription_error as unknown as TSocketError<'crypto_estimations'>['error']);\n    }, [subscription_error]);\n\n    useEffect(() => {\n        if (cryptoEstimationsFeeDetailsLatest?.expiry_time && countDown === 0) {\n            setCryptoEstimationsFeeDetails(cryptoEstimationsFeeDetailsLatest);\n            const currentTime = toMoment();\n            setServerTime(`${currentTime.utc().format('HH:mm:ss')} GMT`);\n            const expiryTime =\n                epochToMoment(cryptoEstimationsFeeDetailsLatest?.expiry_time ?? 0).diff(currentTime, 'seconds') - 1;\n            setCountDown(expiryTime);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [countDown, cryptoEstimationsFeeDetailsLatest?.expiry_time]);\n\n    useEffect(() => {\n        timer.current = setTimeout(() => {\n            if (countDown === 1) {\n                clearTimeout(timer.current as NodeJS.Timeout);\n                setCountDown(prevTime => prevTime - 1);\n            } else if (countDown > 0) {\n                setCountDown(prevTime => prevTime - 1);\n            }\n        }, 1000);\n\n        return () => {\n            if (timer) {\n                clearInterval(timer.current as NodeJS.Timeout);\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [countDown]);\n\n    return {\n        countDown,\n        cryptoEstimationsFee: cryptoEstimationsFeeDetails?.value ?? 0,\n        cryptoEstimationsFeeUniqueId: cryptoEstimationsFeeDetails?.unique_id ?? '',\n        cryptoEstimationsFeeExpiryTime: cryptoEstimationsFeeDetails?.expiry_time ?? 0,\n        error,\n        getCryptoEstimations: subscribe,\n        isLoading,\n        setCurrencyCode,\n        serverTime,\n        unsubscribeCryptoEstimations: unsubscribe,\n    };\n};\n\nexport default useCryptoEstimations;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport useSubscription from '../useSubscription';\n\ntype TTransaction = NonNullable<\n    NonNullable<ReturnType<typeof useSubscription<'cashier_payments'>>['data']>['cashier_payments']\n>['crypto'][number];\n\ntype TStatus = TTransaction['status_code'];\n\ntype TDepositStatus = 'PENDING' | 'CONFIRMED' | 'ERROR';\n\ntype TWithdrawalStatus = Exclude<TStatus, TDepositStatus>;\n\n// Since BE sends the `status_code` for both `deposit` and `withdrawal` in the same field,\n// Here we modify the BE type to make `status_code` type more specific to the `transaction_type` field.\ntype TModifiedTransaction = Omit<TTransaction, 'status_code' | 'transaction_type'> &\n    (\n        | { transaction_type: 'deposit'; status_code: TDepositStatus }\n        | { transaction_type: 'withdrawal'; status_code: TWithdrawalStatus }\n    );\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nconst useCryptoTransactions = () => {\n    const { subscribe, data, ...rest } = useSubscription('cashier_payments');\n    const [transactions, setTransactions] = useState<TModifiedTransaction[]>();\n\n    // Reset transactions data\n    const resetData = useCallback(() => setTransactions(undefined), []);\n\n    useEffect(() => {\n        setTransactions(old_transactions => {\n            const new_transactions = data?.cashier_payments?.crypto as TModifiedTransaction[] | undefined;\n\n            if (!new_transactions) return old_transactions;\n\n            if (!old_transactions) return new_transactions;\n\n            const updated_transactions = [...old_transactions];\n\n            // For each new transaction, check if it exists in the old transactions.\n            new_transactions.forEach(new_transaction => {\n                // Find the index of the new transaction in the old transactions if exists.\n                const index = updated_transactions.findIndex(\n                    old_transaction => old_transaction.id === new_transaction.id\n                );\n\n                // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n                if (index === -1) {\n                    updated_transactions.push(new_transaction);\n                } else {\n                    updated_transactions[index] = new_transaction;\n                }\n            });\n\n            return updated_transactions;\n        });\n    }, [data?.cashier_payments?.crypto]);\n\n    // Add additional information to each transaction.\n    const modified_transactions = useMemo(() => {\n        if (!transactions || !transactions.length) return undefined;\n\n        return transactions.map(transaction => ({\n            ...transaction,\n            /** Determine if the transaction is a deposit or not. */\n            is_deposit: transaction.transaction_type === 'deposit',\n            /** Determine if the transaction is a withdrawal or not. */\n            is_withdrawal: transaction.transaction_type === 'withdrawal',\n        }));\n    }, [transactions]);\n\n    // Sort transactions by submit time.\n    const sorted_transactions = useMemo(\n        () => modified_transactions?.sort((a, b) => b.submit_date - a.submit_date),\n        [modified_transactions]\n    );\n    // Get the last transaction if exists.\n    const last_transaction = modified_transactions?.[0];\n\n    return {\n        /** List of user transactions sorted by submit time. */\n        data: sorted_transactions,\n        /** Returns the last transaction if exists. */\n        last_transaction,\n        /** Reset transactions data */\n        resetData,\n        subscribe,\n        ...rest,\n    };\n};\n\nexport default useCryptoTransactions;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Omit<\n    NonNullable<Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>>[0]['payload'],\n    'cashier' | 'provider' | 'type'\n>;\n\n/** A custom hook that used for crypto withdrawal */\nconst useCryptoWithdrawal = () => {\n    const { mutate: _mutate, mutateAsync: _mutateAsync, ...rest } = useMutation('cashier');\n\n    const mutate = useCallback(\n        (payload: TPayload) =>\n            _mutate({ payload: { cashier: 'withdraw', provider: 'crypto', type: 'api', ...payload } }),\n        [_mutate]\n    );\n    const mutateAsync = useCallback(\n        (payload: TPayload) =>\n            _mutateAsync({ payload: { cashier: 'withdraw', provider: 'crypto', type: 'api', ...payload } }),\n        [_mutateAsync]\n    );\n\n    return {\n        /** Function to request for crypto withdrawal */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useCryptoWithdrawal;\n","import useMutation from '../useMutation';\n\n/** A custom hook that get Service Token for CTrader Platform. */\nconst useCtraderServiceToken = () => {\n    const { data: ctrader_token, ...rest } = useMutation('service_token');\n\n    return {\n        /** return the ctrader account token */\n        data: ctrader_token?.service_token?.ctrader?.token,\n        ...rest,\n    };\n};\n\nexport default useCtraderServiceToken;\n","import useAuthorizedQuery from '../useAuthorizedQuery';\n\n/** A custom hook to get the deposit crypto address. */\nconst useDepositCryptoAddress = () => {\n    const { data, ...rest } = useAuthorizedQuery(\n        'cashier',\n        { cashier: 'deposit', provider: 'crypto', type: 'api' },\n        {\n            staleTime: Infinity,\n        }\n    );\n\n    // typing sadly is not corret ;( so need the \"as unknonw\"\n    const response = data?.cashier as unknown as { deposit: { address: string } };\n\n    return {\n        ...rest,\n        data: response?.deposit?.address,\n    };\n};\n\nexport default useDepositCryptoAddress;\n","import { useState } from 'react';\nimport md5 from 'md5';\nimport { TSocketError, TSocketRequestPayload, TSocketResponse } from '../../types';\nimport { useAPIContext } from '../APIProvider';\nimport { compressImageFile, generateChunks, numToUint8Array, readFile } from '../utils';\n\ntype TDocumentUploadRequest = TSocketRequestPayload<'document_upload'>;\ntype TDocumentUploadRequestPayload = Partial<TDocumentUploadRequest['payload']> & { file?: File };\ntype TDocumentUploadResponse = TSocketResponse<'document_upload'> & TSocketError<'document_upload'>;\n\ntype TFileInfo = {\n    fileBuffer: Uint8Array;\n    fileType: File['type'];\n};\n\nexport enum DocumentUploadStatus {\n    LOADING = 'loading',\n    IDLE = 'idle',\n    ERROR = 'error',\n    SUCCESS = 'success',\n}\n\nconst REQ_TIMEOUT = 20000;\n\nconst useDocumentUpload = () => {\n    const { wsClient, connection } = useAPIContext();\n    const [status, setStatus] = useState<DocumentUploadStatus>(DocumentUploadStatus.IDLE);\n\n    const getFileInfo = async (file: TDocumentUploadRequestPayload['file']): Promise<TFileInfo> => {\n        if (!file) return Promise.reject(new Error('No file selected'));\n\n        const fileType = file.type;\n        const fileBlob = await compressImageFile(file);\n        const modifiedFile = await readFile(fileBlob);\n        // @ts-expect-error type mismatch\n        const fileBuffer = new Uint8Array(modifiedFile.buffer);\n        return { fileBuffer, fileType };\n    };\n\n    /** Perform the initial handshake to get the upload_id from BE */\n    const handshake = async ({ fileType, fileBuffer }: TFileInfo, payload: TDocumentUploadRequestPayload) => {\n        const checksum = md5(Array.from(fileBuffer));\n\n        const updatedPayload = {\n            ...payload,\n            document_format: fileType\n                .split('/')[1]\n                .toLocaleUpperCase() as TDocumentUploadRequestPayload['document_format'],\n            expected_checksum: checksum,\n            file_size: fileBuffer.length,\n            passthrough: {\n                document_upload: true,\n            },\n        };\n\n        try {\n            const response = (await wsClient.request(\n                'document_upload',\n                updatedPayload\n            )) as Promise<TDocumentUploadResponse>;\n            return response;\n        } catch (error) {\n            return error as TDocumentUploadResponse;\n        }\n    };\n\n    /** asynchronously sends file data over WS */\n    const sendFile = (fileBuffer: TFileInfo['fileBuffer'], response: TDocumentUploadResponse) => {\n        const chunks = generateChunks(fileBuffer, {});\n        const id = numToUint8Array(response?.document_upload?.upload_id || 0);\n        const type = numToUint8Array(response?.document_upload?.call_type || 0);\n\n        chunks.forEach(chunk => {\n            const size = numToUint8Array(chunk.length);\n            const payload = new Uint8Array([...type, ...id, ...size, ...chunk]);\n            connection?.send(payload);\n        });\n    };\n\n    /** Initiates file upload and handles the 2nd response received  */\n    const fileUploader = async (fileBuffer: TFileInfo['fileBuffer'], response: TDocumentUploadResponse) => {\n        /** Request id of the initial document_upload call */\n        const reqId = response.req_id;\n        /** Upload id received from BE for the particular file which is appended to every chunk uploaded */\n        const uploadId = response.document_upload?.upload_id;\n        /** Timeout reference for removing WS eventListener */\n        let timeout: NodeJS.Timeout;\n\n        return new Promise((resolve, reject) => {\n            timeout = setTimeout(() => {\n                wsClient.ws?.removeEventListener('message', handleUploadStatus);\n                reject(new Error(`Request timeout for document_upload`));\n            }, REQ_TIMEOUT);\n\n            const handleUploadStatus = (messageEvent: MessageEvent) => {\n                const data = JSON.parse(messageEvent.data) as TDocumentUploadResponse;\n\n                if (data.req_id !== reqId && data.document_upload?.upload_id !== uploadId) {\n                    return;\n                }\n                if (data.error) {\n                    wsClient.ws?.removeEventListener('message', handleUploadStatus);\n                    clearTimeout(timeout);\n                    setStatus(DocumentUploadStatus.ERROR);\n                    reject(data);\n                    return;\n                }\n\n                if (data.document_upload && data.document_upload?.status === 'failure') {\n                    wsClient.ws?.removeEventListener('message', handleUploadStatus);\n\n                    clearTimeout(timeout);\n                    setStatus(DocumentUploadStatus.ERROR);\n                    reject(data);\n                    return;\n                }\n\n                if (data.document_upload && data.document_upload?.status === 'success') {\n                    wsClient.ws?.removeEventListener('message', handleUploadStatus);\n                    clearTimeout(timeout);\n                    setStatus(DocumentUploadStatus.SUCCESS);\n                    resolve(data);\n                }\n            };\n\n            wsClient.ws?.addEventListener('message', handleUploadStatus);\n\n            sendFile(fileBuffer, response);\n        }) as Promise<TDocumentUploadResponse>;\n    };\n\n    const upload = async (payload: TDocumentUploadRequestPayload) => {\n        setStatus(DocumentUploadStatus.LOADING);\n        const { file, ...rest } = payload;\n        const fileInfo = await getFileInfo(file);\n        const handshakeResponse = await handshake(fileInfo, rest);\n        if (handshakeResponse.error) {\n            setStatus(DocumentUploadStatus.ERROR);\n            return Promise.reject(handshakeResponse);\n        }\n        const uploadResponse = await fileUploader(fileInfo.fileBuffer, handshakeResponse);\n        return Promise.resolve(uploadResponse);\n    };\n\n    return {\n        upload,\n        status,\n        resetStatus: setStatus,\n    };\n};\n\nexport default useDocumentUpload;\n","import useQuery from '../useQuery';\nimport useActiveAccount from './useActiveAccount';\n\n/** A custom hook that get Service Token for Deriv X Platform. */\nconst useDxtradeServiceToken = () => {\n    const { data: account } = useActiveAccount();\n    const { data: dxtrade_token, ...rest } = useQuery('service_token', {\n        payload: { service: 'dxtrade', server: account?.is_virtual ? 'demo' : 'real' },\n    });\n\n    return {\n        /** return the Deriv X account token */\n        data: dxtrade_token?.service_token?.dxtrade?.token,\n        ...rest,\n    };\n};\n\nexport default useDxtradeServiceToken;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\n\n/** A custom hook that gets dynamic leverage values. */\nconst useDynamicLeverage = (platform: 'mt5' | 'dxtrade' | 'ctrader') => {\n    const { data, ...rest } = useQuery('trading_platform_leverage', {\n        payload: { platform },\n    });\n\n    // Add additional information to the dynamic leverage response.\n    const modified_data = useMemo(() => {\n        if (!data?.trading_platform_leverage) return;\n\n        return { ...data?.trading_platform_leverage };\n    }, [data]);\n\n    return {\n        data: modified_data?.leverage,\n        ...rest,\n    };\n};\n\nexport default useDynamicLeverage;\n","import { useCallback } from 'react';\nimport useSubscription from '../useSubscription';\n\ntype TPayload = WithRequiredProperty<\n    NonNullable<Parameters<ReturnType<typeof useSubscription<'exchange_rates'>>['subscribe']>>[0]['payload'],\n    'target_currency'\n>;\n\n/** A custom hook that gets exchange rates from base currency to target currency */\nconst useExchangeRateSubscription = () => {\n    const { data, subscribe: _subscribe, ...rest } = useSubscription('exchange_rates');\n\n    const subscribe = useCallback(\n        (payload: TPayload) => {\n            _subscribe({ payload });\n        },\n        [_subscribe]\n    );\n\n    return {\n        /** The exchange rates response */\n        data: data?.exchange_rates,\n        /** Function to subscribe to exchange rates */\n        subscribe,\n        ...rest,\n    };\n};\n\nexport default useExchangeRateSubscription;\n","import useQuery from '../useQuery';\n\ntype TProps = Required<Parameters<typeof useQuery<'exchange_rates'>>[1]>['payload'];\n\nconst useGetExchangeRate = ({ base_currency, loginid, target_currency }: TProps) => {\n    const { data, ...rest } = useQuery('exchange_rates', { payload: { base_currency, loginid, target_currency } });\n\n    return {\n        /** The exchange rates response */\n        data: data?.exchange_rates,\n        ...rest,\n    };\n};\n\nexport default useGetExchangeRate;\n","import { useEffect, useState } from 'react';\nimport { useIsMounted } from 'usehooks-ts';\n\nimport { getFeatureFlag } from '@deriv/utils';\nimport { Analytics } from '@deriv-com/analytics';\n\ninterface UseGrowthbookGetFeatureValueArgs<T> {\n    featureFlag: string;\n    defaultValue?: T;\n}\n\nconst useGrowthbookGetFeatureValue = <T extends string | boolean>({\n    featureFlag,\n    defaultValue,\n}: UseGrowthbookGetFeatureValueArgs<T>) => {\n    const resolvedDefaultValue: T = defaultValue !== undefined ? defaultValue : (false as T);\n    const [featureFlagValue, setFeatureFlagValue] = useState<boolean>(false);\n    const [isGBLoaded, setIsGBLoaded] = useState(false);\n    const isMounted = useIsMounted();\n\n    // Required for debugging Growthbook, this will be removed after this is added in the Analytics directly.\n    if (typeof window !== 'undefined') {\n        window.Analytics = Analytics;\n    }\n\n    useEffect(() => {\n        const fetchFeatureFlag = async () => {\n            const is_enabled = await getFeatureFlag(featureFlag, resolvedDefaultValue);\n            if (isMounted()) {\n                setFeatureFlagValue(is_enabled);\n                setIsGBLoaded(true);\n            }\n        };\n\n        fetchFeatureFlag();\n    }, [featureFlag, resolvedDefaultValue, isMounted]);\n\n    return [featureFlagValue, isGBLoaded];\n};\n\nexport default useGrowthbookGetFeatureValue;\n","import { useState, useEffect } from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport useRemoteConfig from './useRemoteConfig';\n\nconst useIsGrowthbookIsLoaded = () => {\n    const [isGBLoaded, setIsGBLoaded] = useState(false);\n    const { data } = useRemoteConfig();\n\n    useEffect(() => {\n        let analytics_interval: NodeJS.Timeout;\n        if (data?.marketing_growthbook) {\n            let checksCounter = 0;\n            analytics_interval = setInterval(() => {\n                // Check if the analytics instance is available for 10 seconds before setting the feature flag value\n                if (checksCounter > 20) {\n                    // If the analytics instance is not available after 10 seconds, clear the interval\n                    clearInterval(analytics_interval);\n                    return;\n                }\n                checksCounter += 1;\n                if (Analytics?.getInstances()?.ab) {\n                    setIsGBLoaded(true);\n                    clearInterval(analytics_interval);\n                }\n            }, 500);\n        }\n        return () => {\n            clearInterval(analytics_interval);\n        };\n    }, [data.marketing_growthbook]);\n\n    return isGBLoaded;\n};\n\nexport default useIsGrowthbookIsLoaded;\n","import { useState, useEffect } from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport useIsGrowthbookIsLoaded from './useIsGrowthbookLoaded';\n\ninterface UseGrowthbookIsOneArgs {\n    featureFlag: string;\n}\n\nconst useGrowthbookIsOn = ({ featureFlag }: UseGrowthbookIsOneArgs) => {\n    const [featureIsOn, setFeatureIsOn] = useState(Analytics?.isFeatureOn(featureFlag));\n    const isGBLoaded = useIsGrowthbookIsLoaded();\n\n    useEffect(() => {\n        if (isGBLoaded) {\n            if (Analytics?.getInstances()?.ab) {\n                const setFeatureValue = () => {\n                    const value = Analytics?.isFeatureOn(featureFlag);\n                    setFeatureIsOn(value);\n                };\n                setFeatureValue();\n                Analytics?.getInstances()?.ab?.GrowthBook?.setRenderer(() => {\n                    // this will be called whenever the feature flag value changes and acts as a event listener\n                    setFeatureValue();\n                });\n            }\n        }\n    }, [isGBLoaded, featureFlag]);\n\n    return [featureIsOn, isGBLoaded];\n};\n\nexport default useGrowthbookIsOn;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TIdentityVerificationDocumentAddPayload = Parameters<\n    ReturnType<typeof useMutation<'identity_verification_document_add'>>['mutate']\n>[0]['payload'];\n\n/** A custom hook to submit IDV details for POI verification.\n *\n * Use cases:\n * - To submit IDV verification for verification flow in Wallets.\n */\nconst useIdentityDocumentVerificationAdd = () => {\n    const { mutate: _mutate, ...rest } = useMutation('identity_verification_document_add');\n\n    const submitIDVDocuments = useCallback(\n        (payload: TIdentityVerificationDocumentAddPayload) =>\n            _mutate({\n                payload,\n            }),\n        [_mutate]\n    );\n\n    return {\n        /** Call this function upon IDV submission.\n         *\n         * @param payload - The payload to pass in which these fields are required:\n         * - document_number: The document number passed in by the user\n         * - document_type: The type of document in which the document_number is based on. Examples are either drivers_license, passport, ssnit, etc depending on the issuing country.\n         *                  These document types can often be retrieved from the `useResidenceList` hook\n         * - issuing_country: The country in which the documents are issued and supported.\n         */\n        submitIDVDocuments,\n        /** The original mutate function returned by useMutation */\n        _mutate,\n        ...rest,\n    };\n};\n\nexport default useIdentityDocumentVerificationAdd;\n","import { useMemo } from 'react';\nimport useLandingCompany from './useLandingCompany';\n\n/** * A hook to determine if region is Eu using the useLandingCompany hook */\nconst useIsEuRegion = () => {\n    /** Retrieve landing company data*/\n    const { data: landing_company, ...rest } = useLandingCompany();\n\n    const isEuRegion = useMemo(() => {\n        if (!landing_company) return false;\n\n        /** Regular expressions for EU shortcodes and excluded residence */\n        const eu_shortcode_regex = /^maltainvest$/;\n        const eu_excluded_regex = /^mt$/;\n\n        /** Destructure landing company response */\n        const { gaming_company, financial_company, mt_gaming_company, mt_all_company, id: residence } = landing_company;\n        const financial_shortcode = financial_company?.shortcode;\n        const gaming_shortcode = gaming_company?.shortcode;\n        const mt_gaming_shortcode = mt_gaming_company?.financial?.shortcode || mt_all_company?.swap_free?.shortcode;\n\n        /** Determine if the region falls in the EU using destructured data */\n        const is_financial_maltainvest = financial_shortcode === 'maltainvest';\n        const shortcodes = financial_shortcode || gaming_shortcode || mt_gaming_shortcode;\n        const is_financial_eu_and_not_gaming_svg =\n            eu_shortcode_regex.test(financial_shortcode as unknown as string) && gaming_shortcode !== 'svg';\n        const is_gaming_eu = eu_shortcode_regex.test(gaming_shortcode as string);\n        const is_residence_eu = eu_excluded_regex.test(residence as string);\n\n        /** is region Eu based on shortcode */\n        const is_eu_based_on_shortcodes = shortcodes && (is_financial_eu_and_not_gaming_svg || is_gaming_eu);\n        /** is region Eu based on residence */\n        const is_eu_based_on_residence = !shortcodes && is_residence_eu;\n\n        return is_financial_maltainvest || is_eu_based_on_shortcodes || is_eu_based_on_residence;\n    }, [landing_company]);\n\n    // New method to test, if this works will remove the legacy method above\n    const isEUCountry = useMemo(() => {\n        if (!landing_company) return;\n\n        const { gaming_company, financial_company } = landing_company;\n        const isEuRegion = !gaming_company && financial_company?.shortcode === 'maltainvest';\n\n        return isEuRegion;\n    }, [landing_company]);\n\n    return {\n        /** A boolean flag indicating if the region is within the EU */\n        data: isEuRegion,\n        isEUCountry,\n        /** Additional properties inherited from the useLandingCompany hook */\n        ...rest,\n    };\n};\n\nexport default useIsEuRegion;\n","import { useMemo } from 'react';\nimport useWebsiteStatus from './useWebsiteStatus';\n\n/** A custom hook that gets the client country. */\nconst useClientCountry = () => {\n    const { data, ...rest } = useWebsiteStatus();\n\n    /** Modify the client country. */\n    const modified_client_country = useMemo(() => {\n        return data?.website_status?.clients_country;\n    }, [data]);\n\n    return {\n        /** The client's country */\n        data: modified_client_country,\n        ...rest,\n    };\n};\n\nexport default useClientCountry;\n","import useClientCountry from './useClientCountry';\nimport useRemoteConfig from './useRemoteConfig';\nimport useSettings from './useSettings';\n\nconst useIsHubRedirectionEnabled = () => {\n    const { data } = useRemoteConfig();\n    const hub_enabled_country_list = data?.hub_enabled_country_list ?? [];\n\n    const { data: clientCountry } = useClientCountry();\n    const { data: accountSettings } = useSettings();\n    const countryCode = accountSettings?.country_code;\n\n    const isHubRedirectionEnabled =\n        Array.isArray(hub_enabled_country_list) && countryCode && hub_enabled_country_list.includes(countryCode);\n\n    const isChangingToHubAppId =\n        Array.isArray(hub_enabled_country_list) && clientCountry && hub_enabled_country_list.includes(clientCountry);\n\n    return {\n        isHubRedirectionEnabled,\n        isChangingToHubAppId,\n        isHubRedirectionLoaded: !!hub_enabled_country_list.length,\n    };\n};\n\nexport default useIsHubRedirectionEnabled;\n","import { useMemo } from 'react';\n\nimport useQuery from '../useQuery';\n\n/** A custom hook that gets the residence list. */\nconst useResidenceList = () => {\n    const { data, ...residence_list_rest } = useQuery('residence_list');\n\n    /** Modify the residence list data. */\n    const modified_residence_list = useMemo(() => {\n        if (!data || !data.residence_list) return [];\n\n        return data.residence_list.map(residence => ({\n            ...residence,\n        }));\n    }, [data]);\n\n    return {\n        /** The residence list */\n        data: modified_residence_list,\n        ...residence_list_rest,\n    };\n};\n\nexport default useResidenceList;\n","import { useMemo } from 'react';\nimport useAuthentication from './useAuthentication';\nimport useResidenceList from './useResidenceList';\nimport useSettings from './useSettings';\n\nconst acknowledged_statuses = ['pending', 'verified'];\nconst failed_statuses = ['rejected', 'expired', 'suspected'];\n\n/** A custom hook to get the proof of identity verification info of the current user. */\nconst usePOI = () => {\n    const { data: authentication_data, isSuccess: isAuthenticationSuccess, ...rest } = useAuthentication();\n    const { data: residence_list_data, isSuccess: isResidenceListSuccess } = useResidenceList();\n    const { data: get_settings_data, isSuccess: isGetSettingsSuccess } = useSettings();\n\n    /**\n     * @description Get the previous POI attempts details (if any)\n     */\n    const previous_service = useMemo(() => {\n        const latest_poi_attempt = authentication_data?.attempts?.latest;\n        return latest_poi_attempt;\n    }, [authentication_data?.attempts?.latest]);\n\n    const is_poi_required = useMemo(() => {\n        const { services = {} } = authentication_data?.identity || {};\n        const statuses = [services.idv?.status, services.onfido?.status, services.manual?.status];\n\n        if (statuses.some(status => !status)) {\n            return null;\n        }\n\n        const hasAcknowledgedStatus = statuses.some(status => status && acknowledged_statuses.includes(status));\n        const isPreviousStatusFailed = failed_statuses.includes(previous_service?.status as string);\n\n        return !hasAcknowledgedStatus || isPreviousStatusFailed;\n    }, [authentication_data?.identity, previous_service?.status]);\n\n    const needs_verification = useMemo(() => {\n        return new Set(authentication_data?.needs_verification);\n    }, [authentication_data?.needs_verification]);\n\n    /**\n     * @description Get the current step based on a few checks. Returns configuration for document validation as well.\n     */\n    const current_poi = useMemo(() => {\n        const user_country_code = get_settings_data?.citizen || get_settings_data?.country_code;\n        const matching_residence_data = residence_list_data?.find(r => r.value === user_country_code);\n        const is_idv_supported = matching_residence_data?.identity?.services?.idv?.is_country_supported;\n        const is_onfido_supported = matching_residence_data?.identity?.services?.onfido?.is_country_supported;\n        const services = authentication_data?.identity?.services;\n        const idv_submission_left = services?.idv?.submissions_left ?? 0;\n        const onfido_submission_left = services?.onfido?.submissions_left ?? 0;\n        const is_ng_client = user_country_code === 'ng'; // flag for checking if client is from Nigeria\n        if (is_idv_supported && idv_submission_left && !authentication_data?.is_idv_disallowed) {\n            return {\n                country_code: user_country_code,\n                service: 'idv',\n                status: services?.idv?.status,\n                submission_left: idv_submission_left,\n                document_supported: matching_residence_data?.identity?.services?.idv?.documents_supported,\n                ...(is_ng_client &&\n                    is_onfido_supported &&\n                    onfido_submission_left && {\n                        onfido_supported: ['passport', 'driving-license', 'identity-card'],\n                    }),\n            };\n        } else if (is_onfido_supported && onfido_submission_left) {\n            if (is_ng_client) {\n                return {\n                    country_code: user_country_code,\n                    service: 'manual',\n                    onfido_supported: ['passport', 'driving-license', 'identity-card'],\n                    status: services?.manual?.status,\n                };\n            }\n\n            return {\n                country_code: user_country_code,\n                service: 'onfido',\n                status: services?.onfido?.status,\n                submission_left: onfido_submission_left,\n                document_supported: matching_residence_data?.identity?.services?.onfido?.documents_supported,\n            };\n        }\n        return {\n            country_code: user_country_code,\n            service: 'manual',\n            status: services?.manual?.status,\n        };\n    }, [\n        get_settings_data?.citizen,\n        get_settings_data?.country_code,\n        residence_list_data,\n        authentication_data?.identity?.services,\n        authentication_data?.is_idv_disallowed,\n    ]);\n\n    const modified_verification_data = useMemo(() => {\n        if (!authentication_data) return;\n\n        return {\n            ...authentication_data?.identity,\n            previous: previous_service,\n            current: current_poi,\n            has_attempted_poi: authentication_data?.identity?.status !== 'none',\n            is_poi_required,\n            is_pending: authentication_data?.identity?.status === 'pending',\n            is_rejected: authentication_data?.identity?.status === 'rejected',\n            is_expired: authentication_data?.identity?.status === 'expired',\n            is_suspected: authentication_data?.identity?.status === 'suspected',\n            is_verified: authentication_data?.identity?.status === 'verified',\n            poi_needs_verification: needs_verification.has('identity'),\n        };\n    }, [authentication_data, current_poi, is_poi_required, needs_verification, previous_service]);\n\n    return {\n        data: modified_verification_data,\n        isSuccess: isAuthenticationSuccess && isGetSettingsSuccess && isResidenceListSuccess,\n        ...rest,\n    };\n};\n\nexport default usePOI;\n","import { useCallback, useMemo } from 'react';\nimport useAuthentication from './useAuthentication';\nimport usePOI from './usePOI';\nimport useMT5AccountsList from './useMT5AccountsList';\n\ntype TAccount = NonNullable<ReturnType<typeof useMT5AccountsList>['data']>[number];\ntype TServices = NonNullable<NonNullable<ReturnType<typeof usePOI>['data']>['services']>;\ntype TServiceStatus = NonNullable<NonNullable<ReturnType<typeof usePOI>['data']>['status']>;\n\n/**\n * Hook that calculates/checks the verification status for a landing company/jurisdiction.\n *\n * Some jurisdictions such as Labuan requires checks for other statuses such as `is_authenticated_with_idv_photoid` status from `get_account_status` endpoint.\n * This hook verifies these checks internally and returns the appropriate verification status for a landing company/jurisdiction.\n *\n * Use cases:\n * - To show the verification badge for a MT5 account with a certain landing company/jurisdiction\n *\n */\nconst useJurisdictionStatus = () => {\n    const { data: authenticationStatus, isSuccess: isSuccessAuthenticationStatus } = useAuthentication();\n    const { data: poiStatus } = usePOI();\n\n    const isSuccess = useMemo(() => {\n        return isSuccessAuthenticationStatus && poiStatus?.current?.service;\n    }, [isSuccessAuthenticationStatus, poiStatus]);\n\n    const getVerificationStatus = useCallback(\n        (jurisdiction: TAccount['landing_company_short'], mt5_account_status: TAccount['status']) => {\n            const isPOIServiceStatus = (...statuses: TServiceStatus[]) => {\n                const current_service = poiStatus?.current?.service as keyof TServices;\n                const service = poiStatus?.services?.[current_service];\n                if (service?.status) {\n                    return statuses.includes(service.status);\n                }\n            };\n\n            const pendingStatus = ['verification_pending'];\n            const isStatusPending = pendingStatus.includes(mt5_account_status ?? '');\n\n            const status = {\n                is_failed: false,\n                is_not_applicable: false,\n                is_pending: false,\n                is_verified: false,\n            };\n            switch (jurisdiction) {\n                case 'bvi':\n                    if (\n                        isPOIServiceStatus('expired', 'rejected', 'suspected') ||\n                        authenticationStatus?.is_idv_revoked ||\n                        mt5_account_status === 'proof_failed'\n                    ) {\n                        status.is_failed = true;\n                    } else if (isPOIServiceStatus('pending') || isStatusPending) {\n                        status.is_pending = true;\n                    } else if (isPOIServiceStatus('verified')) {\n                        status.is_verified = true;\n                    }\n                    break;\n                case 'labuan':\n                    if (\n                        isPOIServiceStatus('expired', 'rejected', 'suspected') ||\n                        authenticationStatus?.is_idv_revoked ||\n                        // NOTE: BE plans to rename this to `authenticated_with_idv`\n                        authenticationStatus?.is_authenticated_with_idv_photoid ||\n                        mt5_account_status === 'proof_failed'\n                    ) {\n                        status.is_failed = true;\n                    } else if (isPOIServiceStatus('pending') || isStatusPending) {\n                        status.is_pending = true;\n                    } else if (isPOIServiceStatus('verified')) {\n                        status.is_verified = true;\n                    }\n                    break;\n                case 'svg':\n                    status.is_not_applicable = true;\n                    break;\n                default:\n                    // for other jurisdictions, MT5 account status already checks for POA status in BE\n                    if (mt5_account_status === 'proof_failed') {\n                        status.is_failed = true;\n                    } else if (isStatusPending) {\n                        status.is_pending = true;\n                    } else if (isPOIServiceStatus('verified')) {\n                        status.is_verified = true;\n                    }\n            }\n\n            return status;\n        },\n        [poiStatus, authenticationStatus?.is_idv_revoked, authenticationStatus?.is_authenticated_with_idv_photoid]\n    );\n\n    return {\n        /**\n         * Function to get verification status\n         * @param jurisdiction - the jurisdiction/landing company, i.e. 'svg', 'bvi', 'labuan', 'vanuatu'\n         * @param mt5_account_status - the status of the MT5 account, usually retrieved from MT5 accounts list item\n         * @returns The following statuses:\n         * - `is_failed`: The verification status for the landing company/jurisdiction has currently failed either due to expiration, rejection, suspicion status or other factors\n         * - `is_pending`: The verification status for the landing company/jurisdiction is currently pending verification\n         * - `is_not_applicable`: The landing company/jurisdiction is not applicable for verification. This status is only applied for `SVG` landing company/jurisdiction\n         * - `is_verified`: The verification status for the landing company/jurisdiction is currently verified\n         *  */\n        getVerificationStatus,\n        /** checks if the hook has completed verification checks for the landing company/jurisdiction */\n        isSuccess,\n    };\n};\n\nexport default useJurisdictionStatus;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'mt5_deposit'>>['mutate']>[0]['payload'];\n\n/** A custom hook for top-up of MT5 Accounts */\nconst useMT5Deposit = () => {\n    const invalidate = useInvalidateQuery();\n\n    const {\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        ...rest\n    } = useMutation('mt5_deposit', {\n        onSuccess: () => {\n            invalidate('mt5_login_list');\n        },\n    });\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n    const mutateAsync = useCallback((payload: TPayload) => _mutateAsync({ payload }), [_mutateAsync]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useMT5Deposit;\n","import { ALPHA_3_TO_ALPHA_2 } from '../constants';\nimport useQuery from '../useQuery';\nimport useSettings from './useSettings';\n\n// TODO: Merge service token hooks into a single service token hook call\n/** A custom hook that get Service Token for Onfido.\n * @param [country] - The country code to be used to retrieve the Onfido service token.\n * For example:\n * ```\n * const { data: { token } } = useOnfidoServiceToken()\n * ```\n */\n\nconst useOnfidoServiceToken = (country?: string) => {\n    const { data: settings } = useSettings();\n    const country_code = country ?? settings.country_code ?? '';\n    const countryCode = country_code.length >= 3 ? ALPHA_3_TO_ALPHA_2[country_code] : country_code;\n    const { data: onfido_token_data, ...rest } = useQuery('service_token', {\n        payload: {\n            service: 'onfido',\n            country: countryCode,\n        },\n        options: {\n            retry: 3,\n            enabled: !!countryCode,\n        },\n    });\n\n    return {\n        /** return the onfido account token */\n        data: {\n            ...onfido_token_data?.service_token?.onfido,\n        },\n        ...rest,\n    };\n};\n\nexport default useOnfidoServiceToken;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\n/** A custom hook to send notification event to backend about Onfido successful documents uploaded */\nconst useOnfidoNotificationEvent = () => {\n    const { mutate: _mutate, ...rest } = useMutation('notification_event');\n\n    const mutate = useCallback(\n        (documentIds: string[]) =>\n            _mutate({\n                payload: {\n                    category: 'authentication',\n                    event: 'poi_documents_uploaded',\n                    args: {\n                        documents: documentIds,\n                    },\n                },\n            }),\n        [_mutate]\n    );\n\n    return {\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useOnfidoNotificationEvent;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport { LocalStorageUtils } from '@deriv-com/utils';\nimport useOnfidoServiceToken from './useOnfidoServiceToken';\nimport { ALPHA_2_TO_ALPHA_3, ONFIDO_PHRASES } from '../constants';\nimport useSettings from './useSettings';\nimport useResidenceList from './useResidenceList';\nimport type { SdkHandle, SdkResponse } from '../types/onfido';\nimport useOnfidoNotificationEvent from './useOnfidoNotificationEvent';\nimport { v4 as uuidv4 } from 'uuid';\n\n/** A custom hook to initialize Onfido SDK.\n * To initialize Onfido, ensure that an empty container is present.\n * Call the hook and use `onfidoContainerId` to mark the empty container where the Onfido UI is to be mounted.\n *  @param [country] - The country code to be used to retrieve the Onfido service token.\n *  @param [selectedDocument] - Type of document to be passed to bypass the document selection screen\n * For example:\n * ```\n * const { data: { onfidoContainerId } } = useOnfido()\n * ...\n * return (\n *    <>\n *       ...\n *       <div id={onfidoContainerId}></div>\n *       ...\n *    </>\n * )\n * ```\n */\nconst useOnfido = (country?: string, selectedDocument?: string) => {\n    // use to check that we do not re-attempt to reload the onfido script while its still loading\n    const [isOnfidoLoading, setIsOnfidoLoading] = useState(false);\n    const [isOnfidoInitialized, setIsOnfidoInitialized] = useState(false);\n    const [onfidoInitializationError, setOnfidoInitializationError] = useState<Error | null>(null);\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    /**\n     * A reference to the Onfido SDK\n     */\n    const onfidoRef = useRef<SdkHandle | null>(null);\n    /**\n     * A generated ID which should be assigned to a container where the Onfido UI is to be mounted.\n     * For example:\n     * ```\n     * const { data: { onfidoContainerId } } = useOnfido()\n     * ...\n     * return (\n     *    <>\n     *       ...\n     *       <div id={onfidoContainerId}></div>\n     *       ...\n     *    </>\n     * )\n     * ```\n     */\n    const onfidoContainerId = useMemo(() => uuidv4(), []);\n\n    // settings for retrieving country code\n    const { data: settings } = useSettings();\n    // residence list for retrieving supported documents for onfido for the user's country\n    const { data: residenceList } = useResidenceList();\n    const countryCode = useMemo(() => {\n        return country ?? settings?.country_code ?? '';\n    }, [country, settings?.country_code]);\n    // onfido service token to be passed in Onfido SDK\n    const {\n        data: { token },\n        error: serviceTokenError,\n        isLoading: isServiceTokenLoading,\n    } = useOnfidoServiceToken(countryCode);\n    // notification event for onfido once user submits documents\n    const { mutate: submitDocuments } = useOnfidoNotificationEvent();\n\n    const supportedDocuments = useMemo(() => {\n        if (countryCode && residenceList.length) {\n            // TODO: Replace these logic with data from useKycAuthStatus hook.\n            const onfidoResidence = residenceList.find(residence => residence?.value === countryCode)?.identity\n                ?.services?.onfido;\n            if (selectedDocument && onfidoResidence?.documents_supported) {\n                return [onfidoResidence?.documents_supported[selectedDocument]?.display_name];\n            }\n            if (onfidoResidence && onfidoResidence.is_country_supported) {\n                return Object.keys(onfidoResidence.documents_supported ?? {}).map(\n                    (document: string) => onfidoResidence.documents_supported?.[document].display_name\n                );\n            }\n        }\n        return [];\n    }, [residenceList, countryCode, selectedDocument]);\n\n    const onComplete = useCallback(\n        (data: Omit<SdkResponse, 'data'> & { data?: { id?: string } }) => {\n            const document_ids = Object.keys(data).map(key => data[key as keyof SdkResponse]?.id ?? '');\n            submitDocuments(document_ids);\n            setHasSubmitted(true);\n        },\n        [submitDocuments]\n    );\n\n    const initOnfido = useCallback(async () => {\n        const localizeLanguage = LocalStorageUtils.getValue<string>('i18n_language');\n        const i18NLanguage = localizeLanguage || 'en';\n        const onfidoCountryCode =\n            countryCode.length !== 3 ? ALPHA_2_TO_ALPHA_3[countryCode.toUpperCase()] : countryCode;\n        try {\n            onfidoRef.current = await window.Onfido.init({\n                containerId: onfidoContainerId,\n                language: {\n                    locale: i18NLanguage.toLowerCase(),\n                    phrases: ONFIDO_PHRASES,\n                    mobilePhrases: ONFIDO_PHRASES,\n                },\n                token,\n                useModal: false,\n                useMemoryHistory: true,\n                onComplete,\n                steps: [\n                    {\n                        type: 'document',\n                        options: {\n                            documentTypes: {\n                                passport: supportedDocuments.some(doc => /Passport/g.test(doc ?? '')),\n                                driving_licence: supportedDocuments.some(doc => /Driving Licence/g.test(doc ?? ''))\n                                    ? {\n                                          country: onfidoCountryCode,\n                                      }\n                                    : false,\n                                national_identity_card: supportedDocuments.some(doc =>\n                                    /National Identity Card/g.test(doc ?? '')\n                                )\n                                    ? {\n                                          country: onfidoCountryCode,\n                                      }\n                                    : false,\n                            },\n                            hideCountrySelection: true,\n                        },\n                    },\n                    'face',\n                ],\n            });\n            setIsOnfidoInitialized(true);\n        } catch (error) {\n            if (error instanceof Error) {\n                setOnfidoInitializationError(error);\n            }\n            setIsOnfidoInitialized(false);\n        }\n    }, [countryCode, onComplete, onfidoContainerId, supportedDocuments, token]);\n\n    const loadOnfidoSdkScript = useCallback(() => {\n        const hasOnfidoScriptNode = !!document.getElementById('onfido_sdk');\n        // check if the onfido sdk script has been loaded, and if its still loading the onfido script, don't re-attempt to load the script again\n        if (hasOnfidoScriptNode) {\n            if (!isOnfidoLoading) initOnfido();\n        } else {\n            setIsOnfidoLoading(true);\n            const scriptNode = document.createElement('script');\n            const linkNode = document.createElement('link');\n            // [TODO] - Need to lock version of onfido sdk - Current version in CDN is 13.8.4\n            scriptNode.id = 'onfido_sdk';\n            scriptNode.src = 'https://assets.onfido.com/web-sdk-releases/13.8.4/onfido.min.js';\n            linkNode.href = 'https://assets.onfido.com/web-sdk-releases/13.8.4/style.css';\n            linkNode.rel = 'stylesheet';\n\n            document.body.appendChild(scriptNode);\n            document.body.appendChild(linkNode);\n\n            scriptNode.addEventListener('load', () => {\n                initOnfido();\n                setIsOnfidoLoading(false);\n            });\n        }\n    }, [initOnfido, isOnfidoLoading]);\n\n    useEffect(() => {\n        if (token && supportedDocuments.length && countryCode) {\n            loadOnfidoSdkScript();\n        }\n    }, [token, supportedDocuments, countryCode, loadOnfidoSdkScript]);\n\n    return {\n        data: {\n            onfidoRef,\n            onfidoContainerId,\n            hasSubmitted,\n        },\n        isOnfidoInitialized,\n        isLoading: isServiceTokenLoading || isOnfidoLoading,\n        serviceTokenError,\n        onfidoInitializationError,\n    };\n};\n\nexport default useOnfido;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'trading_platform_deposit'>>['mutate']>[0]['payload'];\n\n/** A custom hook for top-up of Other CFD Accounts */\nconst useOtherCFDPlatformsDeposit = () => {\n    const invalidate = useInvalidateQuery();\n\n    const {\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        ...rest\n    } = useMutation('trading_platform_deposit', {\n        onSuccess: () => {\n            invalidate('trading_platform_accounts');\n        },\n    });\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n    const mutateAsync = useCallback((payload: TPayload) => _mutateAsync({ payload }), [_mutateAsync]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useOtherCFDPlatformsDeposit;\n","import useQuery from '../useQuery';\nimport useActiveAccount from './useActiveAccount';\nimport useSettings from './useSettings';\n\n/** A custom hook to get paymentagent list */\nconst usePaymentAgentList = () => {\n    const { data: settings } = useSettings();\n    const { data: activeAccount } = useActiveAccount();\n\n    const { data, ...rest } = useQuery('paymentagent_list', {\n        options: { enabled: Boolean(settings.country_code) },\n        payload: { currency: activeAccount?.currency, paymentagent_list: settings.country_code ?? '' },\n    });\n\n    return {\n        /** Paymentagent list response */\n        data: data?.paymentagent_list?.list,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentList;\n","import useMutation from '../useMutation';\n\n/** A custom hook to request paymentagent withdrawal */\nconst usePaymentAgentWithdrawal = () => {\n    const { data, ...rest } = useMutation('paymentagent_withdraw');\n\n    /** Paymentagent withdrawal response */\n    return {\n        data,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentWithdrawal;\n","import { useMemo } from 'react';\nimport useAuthentication from './useAuthentication';\n\n/** A custom hook to get the proof of address (poa) verification info of the current user  */\nconst usePOA = () => {\n    const { data: authentication_data, ...rest } = useAuthentication();\n\n    const modified_authentication_data = useMemo(() => {\n        if (!authentication_data?.document) return;\n\n        const needs_verification = new Set(authentication_data?.needs_verification);\n\n        return {\n            ...authentication_data.document,\n            has_attempted_poa: authentication_data?.document.status !== 'none',\n            is_pending: authentication_data?.document.status === 'pending',\n            is_rejected: authentication_data?.document.status === 'rejected',\n            is_expired: authentication_data?.document.status === 'expired',\n            is_suspected: authentication_data?.document.status === 'suspected',\n            is_verified: authentication_data?.document.status === 'verified',\n            is_need_submission: !['pending', 'verified'].includes(authentication_data?.document.status || ''),\n            poa_needs_verification: needs_verification.has('document'),\n        };\n    }, [authentication_data]);\n\n    return {\n        data: modified_authentication_data,\n        ...rest,\n    };\n};\n\nexport default usePOA;\n","import useQuery from '../useQuery';\nimport useSettings from './useSettings';\n\nconst SEVEN_DAYS_MILLISECONDS = 604800000;\n\n/** A custom hook that get Service Token for Sendbird. */\nconst useSendbirdServiceToken = () => {\n    const { isSuccess } = useSettings();\n    const { data: sendbird_token_data, ...rest } = useQuery('service_token', {\n        payload: {\n            service: 'sendbird',\n        },\n        options: {\n            enabled: isSuccess,\n            staleTime: SEVEN_DAYS_MILLISECONDS, // Sendbird tokens expire 7 days by default\n        },\n    });\n\n    return {\n        /** return the sendbird service token */\n        data: {\n            ...sendbird_token_data?.service_token?.sendbird,\n        },\n        ...rest,\n    };\n};\n\nexport default useSendbirdServiceToken;\n","import React from 'react';\nimport useQuery from '../useQuery';\nimport { toMoment } from '@deriv/utils';\n\n/**\n * Hook that returns the current server time fetched using `time` endpoint\n */\nconst useServerTime = () => {\n    const { data, ...rest } = useQuery('time');\n\n    const modified_data = React.useMemo(() => {\n        if (!data) return;\n\n        const server_time_moment = toMoment(data.time);\n        return {\n            ...data,\n            /** Returns the server time in UTC format */\n            server_time_utc: server_time_moment.utc().valueOf(),\n            /** Returns the server time in an instance of Moment */\n            server_time_moment,\n        };\n    }, [data]);\n\n    return {\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useServerTime;\n","import { useMemo } from 'react';\n\nimport useActiveAccount from './useActiveAccount';\nimport useAvailableMT5Accounts from './useAvailableMT5Accounts';\nimport useIsEuRegion from './useIsEuRegion';\nimport useMT5AccountsList from './useMT5AccountsList';\n\n/** A custom hook to get the sorted added and non-added MT5 accounts. */\nconst useSortedMT5Accounts = (isEUClient: boolean = false) => {\n    const { data: all_available_mt5_accounts } = useAvailableMT5Accounts();\n    const { isEUCountry } = useIsEuRegion();\n    const { data: mt5_accounts, ...rest } = useMT5AccountsList();\n    const { data: activeAccount } = useActiveAccount();\n\n    const isEU = isEUClient || isEUCountry;\n\n    const modified_data = useMemo(() => {\n        if (!all_available_mt5_accounts || !mt5_accounts) return;\n\n        const filtered_available_accounts = isEU\n            ? all_available_mt5_accounts.filter(account => account.shortcode === 'maltainvest')\n            : all_available_mt5_accounts;\n\n        const filtered_mt5_accounts = mt5_accounts.filter(\n            account =>\n                account.is_virtual === activeAccount?.is_virtual &&\n                (isEU\n                    ? account.landing_company_short === 'maltainvest'\n                    : account.landing_company_short !== 'maltainvest')\n        );\n\n        const available_accounts = filtered_available_accounts\n            .filter(available => {\n                return (\n                    !filtered_mt5_accounts.find(added => added.product === available.product) &&\n                    // @ts-expect-error type for is_default_jurisdiction is unavailable in mt5_login_list and trading_platform_available_accounts\n                    available.is_default_jurisdiction === 'true'\n                );\n            })\n            //@ts-expect-error needs backend type\n            .filter(account => !activeAccount?.is_virtual || account.product !== 'stp');\n\n        const combined_accounts = [\n            ...available_accounts.map(account => ({ ...account, is_added: false })),\n            ...filtered_mt5_accounts.map(account => ({ ...account, is_added: true })),\n        ];\n        return combined_accounts;\n    }, [activeAccount?.is_virtual, all_available_mt5_accounts, isEU, mt5_accounts]);\n\n    const sorted_data = useMemo(() => {\n        const sorting_order = ['standard', 'financial', 'stp', 'swap_free', 'zero_spread', 'gold'];\n\n        if (!modified_data) return;\n\n        const sorted_data = sorting_order.reduce(\n            (acc, sort_order) => {\n                const accounts = modified_data.filter(account => account.product === sort_order);\n                if (!accounts.length) return acc;\n                return [...acc, ...accounts];\n            },\n            [] as typeof modified_data\n        );\n\n        return sorted_data;\n    }, [modified_data]);\n\n    const areAllAccountsCreated = modified_data?.length === all_available_mt5_accounts?.length;\n\n    return {\n        data: sorted_data,\n        /** Determine if all the accounts are created */\n        areAllAccountsCreated,\n        ...rest,\n    };\n};\n\nexport default useSortedMT5Accounts;\n","import { useState, useEffect } from 'react';\nimport useWalletAccountsList from './useWalletAccountsList';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook that gets the list of all wallet accounts for the current user. */\nconst useMobileCarouselWalletsList = () => {\n    const { data: walletAccountsList, isLoading } = useWalletAccountsList();\n    const { isLoading: isCurrencyConfigLoading } = useCurrencyConfig();\n\n    const [staleWalletAccountsList, setStaleWalletAccountslist] = useState(walletAccountsList);\n    const [staleIsLoading, setStaleIsLoading] = useState(true);\n\n    useEffect(() => {\n        if (!isLoading && !isCurrencyConfigLoading) {\n            setStaleIsLoading(false);\n            setStaleWalletAccountslist(walletAccountsList);\n        }\n\n        // due to quirky nature of underlying hooks chain, need this complex list of conditions\n        if (\n            !isLoading &&\n            !isCurrencyConfigLoading &&\n            walletAccountsList &&\n            staleWalletAccountsList &&\n            staleWalletAccountsList?.length !== walletAccountsList?.length &&\n            walletAccountsList?.length > staleWalletAccountsList?.length\n        ) {\n            setStaleIsLoading(false);\n            setStaleWalletAccountslist(walletAccountsList);\n        }\n    }, [isLoading, isCurrencyConfigLoading, walletAccountsList]);\n\n    return {\n        /** The list of wallet accounts for the current user. */\n        data: staleWalletAccountsList,\n        isLoading: staleIsLoading,\n    };\n};\n\nexport default useMobileCarouselWalletsList;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useSettings from './useSettings';\nimport { TSocketRequestQueryOptions } from '../../types';\n\n/** Custom hook to get states list for a particular country. */\ntype TStatesList = Exclude<NonNullable<ReturnType<typeof useSettings>['data']['residence' | 'country']>, undefined>;\n\nconst useStatesList = (country: TStatesList, options?: TSocketRequestQueryOptions<'states_list'>) => {\n    const { data, ...rest } = useQuery('states_list', {\n        // @ts-expect-error The `states_list` type from `@deriv/api-types` is not correct.\n        // The type should be `string`, but it's an alias to string type.\n        payload: { states_list: country },\n        options,\n    });\n\n    const modified_states_list = useMemo(() => [...(data?.states_list ?? [])], [data?.states_list]);\n\n    return {\n        /** The states list for the given country. */\n        data: modified_states_list,\n        ...rest,\n    };\n};\n\nexport default useStatesList;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<\n    ReturnType<typeof useMutation<'trading_platform_investor_password_change'>>['mutate']\n>[0]['payload'];\n\n/** A custom hook that change the Trading Platform Investor Password. */\nconst useTradingPlatformInvestorPasswordChange = () => {\n    const {\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        ...rest\n    } = useMutation('trading_platform_investor_password_change');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n    const mutateAsync = useCallback((payload: TPayload) => _mutateAsync({ payload }), [_mutateAsync]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useTradingPlatformInvestorPasswordChange;\n","import { useMemo } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A custom hook to create MT5 accounts. */\nconst useCreateMT5Account = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('mt5_new_account', {\n        onSuccess: () => {\n            invalidate('mt5_login_list');\n        },\n    });\n\n    // Add additional information to the create MT5 account response.\n    const modified_data = useMemo(() => {\n        if (!data?.mt5_new_account) return undefined;\n\n        return { ...data?.mt5_new_account };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the create MT5 account API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateMT5Account;\n","import { useMemo } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A custom hook to create third party CFD accounts. */\nconst useCreateOtherCFDAccount = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('trading_platform_new_account', {\n        onSuccess: () => {\n            invalidate('trading_platform_accounts');\n        },\n    });\n\n    // Add additional information to the create Other CFD account response.\n    const modified_data = useMemo(() => {\n        if (!data) return undefined;\n\n        return { ...data.trading_platform_new_account };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the create third party CFDs API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateOtherCFDAccount;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<\n    ReturnType<typeof useMutation<'trading_platform_investor_password_reset'>>['mutate']\n>[0]['payload'];\n\n/** A custom hook that reset the Trading Platform Investor Password. */\nconst useTradingPlatformInvestorPasswordReset = () => {\n    const { mutate: _mutate, ...rest } = useMutation('trading_platform_investor_password_reset');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useTradingPlatformInvestorPasswordReset;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'trading_platform_password_change'>>['mutate']>[0]['payload'];\ntype TPayloadAsync = Parameters<\n    ReturnType<typeof useMutation<'trading_platform_password_change'>>['mutateAsync']\n>[0]['payload'];\n\n/** A custom hook that change the Trading Platform Password. */\nconst useTradingPlatformPasswordChange = () => {\n    const { mutate: _mutate, mutateAsync: _mutateAsync, ...rest } = useMutation('trading_platform_password_change');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n    const mutateAsync = useCallback((payload: TPayloadAsync) => _mutateAsync({ payload }), [_mutateAsync]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useTradingPlatformPasswordChange;\n","import { useEffect, useMemo, useState } from 'react';\nimport { TSocketRequestPayload } from '../../types';\nimport useAuthorize from './useAuthorize';\nimport useQuery from '../useQuery';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useActiveAccount from './useActiveAccount';\nimport { displayMoney } from '../utils';\n\ntype TFilter = NonNullable<TSocketRequestPayload<'statement'>['payload']>['action_type'];\n\n/** A custom hook to get the summary of account transactions */\nconst useTransactions = () => {\n    const { isFetching, isSuccess } = useAuthorize();\n\n    const { data: account } = useActiveAccount();\n    const display_code = account?.currency_config?.display_code || 'USD';\n    const fractional_digits = account?.currency_config?.fractional_digits || 2;\n\n    const [filter, setFilter] = useState<TFilter>();\n    const { data, remove, ...rest } = useQuery('statement', {\n        options: {\n            enabled: !isFetching && isSuccess,\n            getNextPageParam: (lastPage, pages) => {\n                if (!lastPage?.statement?.count) return;\n\n                return pages.length;\n            },\n        },\n        payload: {\n            action_type: filter,\n            description: 1,\n        },\n    });\n\n    const invalidate = useInvalidateQuery();\n    useEffect(() => {\n        invalidate('statement');\n    }, [filter, invalidate]);\n\n    useEffect(() => {\n        return remove;\n    }, [remove]);\n\n    // Modify the data.\n    const modified_data = useMemo(() => {\n        if (!data?.statement?.transactions?.length) return;\n\n        return data?.statement?.transactions?.map(transaction => ({\n            ...transaction,\n            /** The transaction amount in currency format. */\n            display_amount: displayMoney(transaction?.amount || 0, display_code, { fractional_digits }),\n            /** The balance of account after the transaction in currency format. */\n            display_balance_after: displayMoney(transaction?.balance_after || 0, display_code, { fractional_digits }),\n        }));\n    }, [data?.statement?.transactions, display_code, fractional_digits]);\n\n    return {\n        /** List of account transactions */\n        data: modified_data,\n        /** Filter the transactions by type */\n        setFilter,\n        ...rest,\n    };\n};\n\nexport default useTransactions;\n","import { useEffect, useMemo, useState } from 'react';\nimport useInfiniteQuery from '../useInfiniteQuery';\nimport { TSocketRequestPayload } from '../../types';\nimport useAuthorize from './useAuthorize';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useActiveAccount from './useActiveAccount';\nimport { displayMoney } from '../utils';\n\ntype TFilter = NonNullable<TSocketRequestPayload<'statement'>['payload']>['action_type'];\n\n/** A custom hook to get the summary of account transactions */\nconst useInfiniteTransactions = () => {\n    const { isFetching, isSuccess } = useAuthorize();\n\n    const { data: account } = useActiveAccount();\n    const display_code = account?.currency_config?.display_code || 'USD';\n    const fractional_digits = account?.currency_config?.fractional_digits || 2;\n\n    const [filter, setFilter] = useState<TFilter>();\n    const { data, fetchNextPage, remove, ...rest } = useInfiniteQuery('statement', {\n        options: {\n            enabled: !isFetching && isSuccess,\n            getNextPageParam: (lastPage, pages) => {\n                if (!lastPage?.statement?.count) return;\n\n                return pages.length;\n            },\n        },\n        payload: {\n            action_type: filter,\n            description: 1,\n        },\n    });\n\n    const invalidate = useInvalidateQuery();\n    useEffect(() => {\n        invalidate('statement');\n    }, [filter, invalidate]);\n\n    useEffect(() => {\n        return remove;\n    }, [remove]);\n\n    // Flatten the data array.\n    const flatten_data = useMemo(() => {\n        if (!data?.pages?.length) return;\n\n        return data?.pages?.flatMap(page => page?.statement?.transactions);\n    }, [data?.pages]);\n\n    // Modify the data.\n    const modified_data = useMemo(() => {\n        if (!flatten_data?.length) return;\n\n        return flatten_data?.map(transaction => ({\n            ...transaction,\n            /** The balance of account after the transaction in currency format. */\n            display_balance_after: displayMoney(transaction?.balance_after || 0, display_code, { fractional_digits }),\n        }));\n    }, [flatten_data, fractional_digits, display_code]);\n\n    return {\n        /** List of account transactions */\n        data: modified_data,\n        /** Fetch the next page of transactions */\n        fetchNextPage,\n        /** Filter the transactions by type */\n        setFilter,\n        ...rest,\n    };\n};\n\nexport default useInfiniteTransactions;\n","import { useCallback } from 'react';\n\nimport useMutation from '../useMutation';\nimport useQuery from '../useQuery';\n\ntype TPayload = NonNullable<\n    NonNullable<Parameters<ReturnType<typeof useMutation<'transfer_between_accounts'>>['mutate']>[0]>['payload']\n>;\n\n/** A custom hook used to transfer money between client accounts */\nconst useTransferBetweenAccounts = () => {\n    const {\n        data,\n        refetch: refetchQuery,\n        ...rest\n    } = useQuery('transfer_between_accounts', {\n        payload: { accounts: 'all' },\n    });\n\n    const {\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        error: mutateError,\n        isLoading: mutateIsLoading,\n        reset,\n    } = useMutation('transfer_between_accounts');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n    const mutateAsync = useCallback((payload: TPayload) => _mutateAsync({ payload }), [_mutateAsync]);\n    const refetch = useCallback(async () => {\n        reset();\n        await refetchQuery();\n    }, [refetchQuery, reset]);\n\n    return {\n        ...rest,\n        data,\n        /** The mutation function that accepts a payload and sends it to the server */\n        error: rest.error || mutateError,\n        isLoading: rest.isLoading || mutateIsLoading,\n        mutate,\n        mutateAsync,\n        refetch,\n    };\n};\n\nexport default useTransferBetweenAccounts;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'verify_email'>>['mutate']>[0]['payload'];\n\n/** A custom hook for verifying email address */\nconst useVerifyEmail = () => {\n    const { mutate: _mutate, ...rest } = useMutation('verify_email');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useVerifyEmail;\n","import { useCallback } from 'react';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useMutation from '../useMutation';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\n/** A custom hook to get the status of wallet_migration API and to start/reset the migration process */\nconst useWalletMigration = () => {\n    const { isSuccess } = useAuthorize();\n    const invalidate = useInvalidateQuery();\n\n    /** Make a request to wallet_migration API and onSuccess it will invalidate the cached data  */\n    const { mutate } = useMutation('wallet_migration', { onSuccess: () => invalidate('wallet_migration') });\n\n    /** Fetch the wallet_migration API and refetch it every second if the status is in_progress */\n    const { data } = useQuery('wallet_migration', {\n        payload: { wallet_migration: 'state' },\n        options: {\n            refetchInterval: response => (response?.wallet_migration?.state === 'in_progress' ? 500 : false),\n            enabled: isSuccess,\n        },\n    });\n\n    const startMigration = useCallback(() => mutate({ payload: { wallet_migration: 'start' } }), [mutate]);\n\n    const resetMigration = useCallback(() => mutate({ payload: { wallet_migration: 'reset' } }), [mutate]);\n\n    const state = data?.wallet_migration?.state;\n\n    return {\n        /** The status of the wallet_migration API */\n        state,\n        /** A boolean to check if the status is not_eligible */\n        is_ineligible: state === 'ineligible',\n        /** A boolean to check if the status is eligible */\n        is_eligible: state === 'eligible',\n        /** A boolean to check if the status is in_progress */\n        is_in_progress: state === 'in_progress',\n        /** A boolean to check if the status is completed */\n        is_migrated: state === 'migrated',\n        /** A boolean to check if the status is failed */\n        is_failed: state === 'failed',\n        /** Sends a request to wallet_migration API to start the migration process */\n        startMigration,\n        /** Sends a request to wallet_migration API to reset the migration process */\n        resetMigration,\n    };\n};\n\nexport default useWalletMigration;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'trading_platform_password_reset'>>['mutate']>[0]['payload'];\ntype TPayloadAsync = Parameters<\n    ReturnType<typeof useMutation<'trading_platform_password_reset'>>['mutateAsync']\n>[0]['payload'];\n\n/** A custom hook that reset the Trading Platform Password. */\nconst useTradingPlatformPasswordReset = () => {\n    const { mutate: _mutate, mutateAsync: _mutateAsync, ...rest } = useMutation('trading_platform_password_reset');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n    const mutateAsync = useCallback((payload: TPayloadAsync) => _mutateAsync({ payload }), [_mutateAsync]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useTradingPlatformPasswordReset;\n","import useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A  custom hook for resetting the virtual balance */\nconst useResetVirtualBalance = () => {\n    const invalidate = useInvalidateQuery();\n\n    const { mutate, ...rest } = useMutation('topup_virtual', {\n        onSuccess: () => {\n            invalidate('balance');\n        },\n    });\n\n    return {\n        /** The mutation function for resetting the virtual balance */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useResetVirtualBalance;\n","import { useMemo } from 'react';\nimport useLandingCompany from './useLandingCompany';\n\n/**\n * @returns {boolean} isDIELEnabled\n * description: A custom hook to check if the DIEL landing company is enabled\n */\nconst useIsDIELEnabled = () => {\n    const { data, ...rest } = useLandingCompany();\n\n    const modifiedData = useMemo(() => {\n        if (!data) return;\n\n        const { financial_company, gaming_company } = data;\n\n        const isDIELEnabled = financial_company?.shortcode === 'maltainvest' && gaming_company?.shortcode === 'svg';\n\n        return isDIELEnabled;\n    }, [data]);\n\n    return {\n        /**\n         * Initially known as LOW_RISK, this is a landing company that is a combination of\n         * financial_company: { shortcode: 'maltainvest' }\n         * gaming_company: { shortcode: 'svg' }\n         */\n        data: modifiedData,\n        ...rest,\n    };\n};\n\nexport default useIsDIELEnabled;\n","import { TSocketRequestPayload } from '../../types';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\ntype TKycAuthStatusPayload = TSocketRequestPayload<'kyc_auth_status'>['payload'];\n\n/** Custom hook that returns Proof of Identity (POI) and Proof of Address (POA) authentication status details. */\nconst useKycAuthStatus = (payload?: TKycAuthStatusPayload) => {\n    const { isSuccess } = useAuthorize();\n    const { data, ...kyc_auth_status_rest } = useQuery('kyc_auth_status', {\n        payload,\n        options: { enabled: isSuccess },\n    });\n    return {\n        /** The KYC auth status */\n        kyc_auth_status: data?.kyc_auth_status,\n        ...kyc_auth_status_rest,\n    };\n};\n\nexport default useKycAuthStatus;\n","import { CFD_PLATFORMS } from '@deriv/shared';\nimport { useCallback } from 'react';\nimport useAuthorizedQuery from '../useAuthorizedQuery';\nimport useQuery from '../useQuery';\n\ntype TPlatformStatus = Exclude<\n    NonNullable<ReturnType<typeof useQuery<'trading_platform_status'>>['data']>['trading_platform_status'][0],\n    undefined\n>;\n\n/** A custom hook that gets the list of statuses of ctrader dxtrade mt5 platform. */\nconst useTradingPlatformStatus = () => {\n    const { data, ...rest } = useAuthorizedQuery(\n        'trading_platform_status',\n        {},\n        {\n            refetchInterval: 120000,\n        }\n    );\n\n    const tradingPlatformStatusData = data?.trading_platform_status;\n\n    /**\n     * Retrieves the status of a specified trading platform.\n     * @param platform The platform identifier (e.g., 'ctrader', 'dxtrade', 'mt5').\n     * @returns The status of the identified platform ('active', 'maintenance', 'unavailable').\n     */\n    const getPlatformStatus = useCallback(\n        (platform: string) => {\n            const platformStatus =\n                platform === CFD_PLATFORMS.MT5 ||\n                platform === CFD_PLATFORMS.DXTRADE ||\n                platform === CFD_PLATFORMS.CTRADER\n                    ? tradingPlatformStatusData?.find((status: TPlatformStatus) => status.platform === platform)?.status\n                    : undefined; // cashier may pass non-cfd platform (i.e. doughflow, p2p, paymentagent, etc) which doesn't have status property\n\n            return platformStatus;\n        },\n        [tradingPlatformStatusData]\n    );\n\n    return {\n        ...rest,\n        data: tradingPlatformStatusData,\n        getPlatformStatus,\n    };\n};\n\nexport default useTradingPlatformStatus;\n","/*! For license information please see index.js.LICENSE.txt */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\"),require(\"@deriv/api-v2\"),require(\"@deriv-com/translations\"),require(\"classnames\"),require(\"@deriv-com/analytics\"),require(\"react-dom\"),require(\"react-router-dom\"),require(\"@deriv/quill-icons\"),require(\"react/jsx-runtime\"),require(\"@deriv/utils\"),require(\"@deriv-com/utils\"),require(\"@deriv/shared\")):\"function\"==typeof define&&define.amd?define([\"react\",\"@deriv/api-v2\",\"@deriv-com/translations\",\"classnames\",\"@deriv-com/analytics\",\"react-dom\",\"react-router-dom\",\"@deriv/quill-icons\",\"react/jsx-runtime\",\"@deriv/utils\",\"@deriv-com/utils\",\"@deriv/shared\"],t):\"object\"==typeof exports?exports[\"@deriv/wallets\"]=t(require(\"react\"),require(\"@deriv/api-v2\"),require(\"@deriv-com/translations\"),require(\"classnames\"),require(\"@deriv-com/analytics\"),require(\"react-dom\"),require(\"react-router-dom\"),require(\"@deriv/quill-icons\"),require(\"react/jsx-runtime\"),require(\"@deriv/utils\"),require(\"@deriv-com/utils\"),require(\"@deriv/shared\")):e[\"@deriv/wallets\"]=t(e.react,e[\"@deriv/api-v2\"],e[\"@deriv-com/translations\"],e.classnames,e[\"@deriv-com/analytics\"],e[\"react-dom\"],e[\"react-router-dom\"],e[\"@deriv/quill-icons\"],e[\"react/jsx-runtime\"],e[\"@deriv/utils\"],e[\"@deriv-com/utils\"],e[\"@deriv/shared\"])}(self,((e,t,r,n,o,i,a,u,c,s,l,f)=>(()=>{var d,p,y={65160:(e,t,r)=>{\"use strict\";r.d(t,{default:()=>l});var n,o,i=r(39155),a=r.n(i),u=r(86007),c=r.n(u),s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1500;return new Promise((function(n,o){e().then(n).catch((function(i){setTimeout((function(){1!==t?s(e,t-1,r).then(n,o):o(i)}),r)}))}))};const l=(n=function(){return s((function(){return Promise.all([r.e(179),r.e(269),r.e(689)]).then(r.bind(r,43666))}))},o=function(){return a().createElement(\"div\",null)},function(e){return c().Map({loader:{ComponentModule:n},loading:o,render:function(t,r){var n=e?t.ComponentModule.default[e]:t.ComponentModule.default;return a().createElement(n,r)}})})()},12112:e=>{\"use strict\";var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t[\"_\"+String.fromCharCode(r)]=r;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,a,u=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var s in i=Object(arguments[c]))r.call(i,s)&&(u[s]=i[s]);if(t){a=t(i);for(var l=0;l<a.length;l++)n.call(i,a[l])&&(u[a[l]]=i[a[l]])}}return u}},20512:(e,t,r)=>{\"use strict\";var n=function(){},o=r(905),i={},a=r(17140);function u(e,t,r,u,c){for(var s in e)if(a(e,s)){var l;try{if(\"function\"!=typeof e[s]){var f=Error((u||\"React class\")+\": \"+r+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw f.name=\"Invariant Violation\",f}l=e[s](t,s,u,r,null,o)}catch(e){l=e}if(!l||l instanceof Error||n((u||\"React class\")+\": type specification of \"+r+\" `\"+s+\"` is invalid; the type checker function must return `null` or an `Error` but returned a \"+typeof l+\". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\"),l instanceof Error&&!(l.message in i)){i[l.message]=!0;var d=c?c():\"\";n(\"Failed \"+r+\" type: \"+l.message+(null!=d?d:\"\"))}}}n=function(e){var t=\"Warning: \"+e;\"undefined\"!=typeof console&&console.error(t);try{throw new Error(t)}catch(e){}},u.resetWarningCache=function(){i={}},e.exports=u},81690:(e,t,r)=>{\"use strict\";var n=r(80906),o=r(12112),i=r(905),a=r(17140),u=r(20512),c=function(){};function s(){return null}c=function(e){var t=\"Warning: \"+e;\"undefined\"!=typeof console&&console.error(t);try{throw new Error(t)}catch(e){}},e.exports=function(e,t){var r=\"function\"==typeof Symbol&&Symbol.iterator;var l=\"<<anonymous>>\",f={array:m(\"array\"),bigint:m(\"bigint\"),bool:m(\"boolean\"),func:m(\"function\"),number:m(\"number\"),object:m(\"object\"),string:m(\"string\"),symbol:m(\"symbol\"),any:y(s),arrayOf:function(e){return y((function(t,r,n,o,a){if(\"function\"!=typeof e)return new p(\"Property `\"+a+\"` of component `\"+n+\"` has invalid PropType notation inside arrayOf.\");var u=t[r];if(!Array.isArray(u))return new p(\"Invalid \"+o+\" `\"+a+\"` of type `\"+h(u)+\"` supplied to `\"+n+\"`, expected an array.\");for(var c=0;c<u.length;c++){var s=e(u,c,n,o,a+\"[\"+c+\"]\",i);if(s instanceof Error)return s}return null}))},element:y((function(t,r,n,o,i){var a=t[r];return e(a)?null:new p(\"Invalid \"+o+\" `\"+i+\"` of type `\"+h(a)+\"` supplied to `\"+n+\"`, expected a single ReactElement.\")})),elementType:y((function(e,t,r,o,i){var a=e[t];return n.isValidElementType(a)?null:new p(\"Invalid \"+o+\" `\"+i+\"` of type `\"+h(a)+\"` supplied to `\"+r+\"`, expected a single ReactElement type.\")})),instanceOf:function(e){return y((function(t,r,n,o,i){if(!(t[r]instanceof e)){var a=e.name||l;return new p(\"Invalid \"+o+\" `\"+i+\"` of type `\"+(((u=t[r]).constructor&&u.constructor.name?u.constructor.name:l)+\"` supplied to `\")+n+\"`, expected instance of `\"+a+\"`.\")}var u;return null}))},node:y((function(e,t,r,n,o){return b(e[t])?null:new p(\"Invalid \"+n+\" `\"+o+\"` supplied to `\"+r+\"`, expected a ReactNode.\")})),objectOf:function(e){return y((function(t,r,n,o,u){if(\"function\"!=typeof e)return new p(\"Property `\"+u+\"` of component `\"+n+\"` has invalid PropType notation inside objectOf.\");var c=t[r],s=h(c);if(\"object\"!==s)return new p(\"Invalid \"+o+\" `\"+u+\"` of type `\"+s+\"` supplied to `\"+n+\"`, expected an object.\");for(var l in c)if(a(c,l)){var f=e(c,l,n,o,u+\".\"+l,i);if(f instanceof Error)return f}return null}))},oneOf:function(e){if(!Array.isArray(e))return c(arguments.length>1?\"Invalid arguments supplied to oneOf, expected an array, got \"+arguments.length+\" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).\":\"Invalid argument supplied to oneOf, expected an array.\"),s;return y((function(t,r,n,o,i){for(var a=t[r],u=0;u<e.length;u++)if(d(a,e[u]))return null;var c=JSON.stringify(e,(function(e,t){return\"symbol\"===g(t)?String(t):t}));return new p(\"Invalid \"+o+\" `\"+i+\"` of value `\"+String(a)+\"` supplied to `\"+n+\"`, expected one of \"+c+\".\")}))},oneOfType:function(e){if(!Array.isArray(e))return c(\"Invalid argument supplied to oneOfType, expected an instance of array.\"),s;for(var t=0;t<e.length;t++){var r=e[t];if(\"function\"!=typeof r)return c(\"Invalid argument supplied to oneOfType. Expected an array of check functions, but received \"+w(r)+\" at index \"+t+\".\"),s}return y((function(t,r,n,o,u){for(var c=[],s=0;s<e.length;s++){var l=(0,e[s])(t,r,n,o,u,i);if(null==l)return null;l.data&&a(l.data,\"expectedType\")&&c.push(l.data.expectedType)}return new p(\"Invalid \"+o+\" `\"+u+\"` supplied to `\"+n+\"`\"+(c.length>0?\", expected one of type [\"+c.join(\", \")+\"]\":\"\")+\".\")}))},shape:function(e){return y((function(t,r,n,o,a){var u=t[r],c=h(u);if(\"object\"!==c)return new p(\"Invalid \"+o+\" `\"+a+\"` of type `\"+c+\"` supplied to `\"+n+\"`, expected `object`.\");for(var s in e){var l=e[s];if(\"function\"!=typeof l)return v(n,o,a,s,g(l));var f=l(u,s,n,o,a+\".\"+s,i);if(f)return f}return null}))},exact:function(e){return y((function(t,r,n,u,c){var s=t[r],l=h(s);if(\"object\"!==l)return new p(\"Invalid \"+u+\" `\"+c+\"` of type `\"+l+\"` supplied to `\"+n+\"`, expected `object`.\");var f=o({},t[r],e);for(var d in f){var y=e[d];if(a(e,d)&&\"function\"!=typeof y)return v(n,u,c,d,g(y));if(!y)return new p(\"Invalid \"+u+\" `\"+c+\"` key `\"+d+\"` supplied to `\"+n+\"`.\\nBad object: \"+JSON.stringify(t[r],null,\"  \")+\"\\nValid keys: \"+JSON.stringify(Object.keys(e),null,\"  \"));var m=y(s,d,n,u,c+\".\"+d,i);if(m)return m}return null}))}};function d(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function p(e,t){this.message=e,this.data=t&&\"object\"==typeof t?t:{},this.stack=\"\"}function y(e){var r={},n=0;function o(o,a,u,s,f,d,y){if(s=s||l,d=d||u,y!==i){if(t){var m=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types\");throw m.name=\"Invariant Violation\",m}if(\"undefined\"!=typeof console){var v=s+\":\"+u;!r[v]&&n<3&&(c(\"You are manually calling a React.PropTypes validation function for the `\"+d+\"` prop on `\"+s+\"`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.\"),r[v]=!0,n++)}}return null==a[u]?o?null===a[u]?new p(\"The \"+f+\" `\"+d+\"` is marked as required in `\"+s+\"`, but its value is `null`.\"):new p(\"The \"+f+\" `\"+d+\"` is marked as required in `\"+s+\"`, but its value is `undefined`.\"):null:e(a,u,s,f,d)}var a=o.bind(null,!1);return a.isRequired=o.bind(null,!0),a}function m(e){return y((function(t,r,n,o,i,a){var u=t[r];return h(u)!==e?new p(\"Invalid \"+o+\" `\"+i+\"` of type `\"+g(u)+\"` supplied to `\"+n+\"`, expected `\"+e+\"`.\",{expectedType:e}):null}))}function v(e,t,r,n,o){return new p((e||\"React class\")+\": \"+t+\" type `\"+r+\".\"+n+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+o+\"`.\")}function b(t){switch(typeof t){case\"number\":case\"string\":case\"undefined\":return!0;case\"boolean\":return!t;case\"object\":if(Array.isArray(t))return t.every(b);if(null===t||e(t))return!0;var n=function(e){var t=e&&(r&&e[r]||e[\"@@iterator\"]);if(\"function\"==typeof t)return t}(t);if(!n)return!1;var o,i=n.call(t);if(n!==t.entries){for(;!(o=i.next()).done;)if(!b(o.value))return!1}else for(;!(o=i.next()).done;){var a=o.value;if(a&&!b(a[1]))return!1}return!0;default:return!1}}function h(e){var t=typeof e;return Array.isArray(e)?\"array\":e instanceof RegExp?\"object\":function(e,t){return\"symbol\"===e||!!t&&(\"Symbol\"===t[\"@@toStringTag\"]||\"function\"==typeof Symbol&&t instanceof Symbol)}(t,e)?\"symbol\":t}function g(e){if(null==e)return\"\"+e;var t=h(e);if(\"object\"===t){if(e instanceof Date)return\"date\";if(e instanceof RegExp)return\"regexp\"}return t}function w(e){var t=g(e);switch(t){case\"array\":case\"object\":return\"an \"+t;case\"boolean\":case\"date\":case\"regexp\":return\"a \"+t;default:return t}}return p.prototype=Error.prototype,f.checkPropTypes=u,f.resetWarningCache=u.resetWarningCache,f.PropTypes=f,f}},15152:(e,t,r)=>{var n=r(80906);e.exports=r(81690)(n.isElement,!0)},905:e=>{\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},17140:e=>{e.exports=Function.call.bind(Object.prototype.hasOwnProperty)},40462:(e,t)=>{\"use strict\";(function(){var e=\"function\"==typeof Symbol&&Symbol.for,r=e?Symbol.for(\"react.element\"):60103,n=e?Symbol.for(\"react.portal\"):60106,o=e?Symbol.for(\"react.fragment\"):60107,i=e?Symbol.for(\"react.strict_mode\"):60108,a=e?Symbol.for(\"react.profiler\"):60114,u=e?Symbol.for(\"react.provider\"):60109,c=e?Symbol.for(\"react.context\"):60110,s=e?Symbol.for(\"react.async_mode\"):60111,l=e?Symbol.for(\"react.concurrent_mode\"):60111,f=e?Symbol.for(\"react.forward_ref\"):60112,d=e?Symbol.for(\"react.suspense\"):60113,p=e?Symbol.for(\"react.suspense_list\"):60120,y=e?Symbol.for(\"react.memo\"):60115,m=e?Symbol.for(\"react.lazy\"):60116,v=e?Symbol.for(\"react.block\"):60121,b=e?Symbol.for(\"react.fundamental\"):60117,h=e?Symbol.for(\"react.responder\"):60118,g=e?Symbol.for(\"react.scope\"):60119;function w(e){if(\"object\"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:var p=e.type;switch(p){case s:case l:case o:case a:case i:case d:return p;default:var v=p&&p.$$typeof;switch(v){case c:case f:case m:case y:case u:return v;default:return t}}case n:return t}}}var x=s,j=l,O=c,S=u,T=r,E=f,_=o,q=m,P=y,k=n,C=a,I=i,R=d,M=!1;function $(e){return w(e)===l}t.AsyncMode=x,t.ConcurrentMode=j,t.ContextConsumer=O,t.ContextProvider=S,t.Element=T,t.ForwardRef=E,t.Fragment=_,t.Lazy=q,t.Memo=P,t.Portal=k,t.Profiler=C,t.StrictMode=I,t.Suspense=R,t.isAsyncMode=function(e){return M||(M=!0,console.warn(\"The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.\")),$(e)||w(e)===s},t.isConcurrentMode=$,t.isContextConsumer=function(e){return w(e)===c},t.isContextProvider=function(e){return w(e)===u},t.isElement=function(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return w(e)===f},t.isFragment=function(e){return w(e)===o},t.isLazy=function(e){return w(e)===m},t.isMemo=function(e){return w(e)===y},t.isPortal=function(e){return w(e)===n},t.isProfiler=function(e){return w(e)===a},t.isStrictMode=function(e){return w(e)===i},t.isSuspense=function(e){return w(e)===d},t.isValidElementType=function(e){return\"string\"==typeof e||\"function\"==typeof e||e===o||e===l||e===a||e===i||e===d||e===p||\"object\"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===y||e.$$typeof===u||e.$$typeof===c||e.$$typeof===f||e.$$typeof===b||e.$$typeof===h||e.$$typeof===g||e.$$typeof===v)},t.typeOf=w})()},80906:(e,t,r)=>{\"use strict\";e.exports=r(40462)},86007:(e,t,r)=>{\"use strict\";var n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function a(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=r(39155),c=r(15152),s=[],l=[];function f(e){var t=e(),r={loading:!0,loaded:null,error:null};return r.promise=t.then((function(e){return r.loading=!1,r.loaded=e,e})).catch((function(e){throw r.loading=!1,r.error=e,e})),r}function d(e){var t={loading:!1,loaded:{},error:null},r=[];try{Object.keys(e).forEach((function(n){var o=f(e[n]);o.loading?t.loading=!0:(t.loaded[n]=o.loaded,t.error=o.error),r.push(o.promise),o.promise.then((function(e){t.loaded[n]=e})).catch((function(e){t.error=e}))}))}catch(e){t.error=e}return t.promise=Promise.all(r).then((function(e){return t.loading=!1,e})).catch((function(e){throw t.loading=!1,e})),t}function p(e,t){return u.createElement((r=e)&&r.__esModule?r.default:r,t);var r}function y(e,t){var f,d;if(!t.loading)throw new Error(\"react-loadable requires a `loading` component\");var y=Object.assign({loader:null,loading:null,delay:200,timeout:null,render:p,webpack:null,modules:null},t),m=null;function v(){return m||(m=e(y.loader)),m.promise}return s.push(v),\"function\"==typeof y.webpack&&l.push((function(){if(e=y.webpack,\"object\"===n(r.m)&&e().every((function(e){return void 0!==e&&void 0!==r.m[e]})))return v();var e})),d=f=function(t){function r(n){o(this,r);var a=i(this,t.call(this,n));return a.retry=function(){a.setState({error:null,loading:!0,timedOut:!1}),m=e(y.loader),a._loadModule()},v(),a.state={error:m.error,pastDelay:!1,timedOut:!1,loading:m.loading,loaded:m.loaded},a}return a(r,t),r.preload=function(){return v()},r.prototype.componentWillMount=function(){this._mounted=!0,this._loadModule()},r.prototype._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(y.modules)&&y.modules.forEach((function(t){e.context.loadable.report(t)})),m.loading){\"number\"==typeof y.delay&&(0===y.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){e.setState({pastDelay:!0})}),y.delay)),\"number\"==typeof y.timeout&&(this._timeout=setTimeout((function(){e.setState({timedOut:!0})}),y.timeout));var t=function(){e._mounted&&(e.setState({error:m.error,loaded:m.loaded,loading:m.loading}),e._clearTimeouts())};m.promise.then((function(){t()})).catch((function(e){t()}))}},r.prototype.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},r.prototype._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},r.prototype.render=function(){return this.state.loading||this.state.error?u.createElement(y.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?y.render(this.state.loaded,this.props):null},r}(u.Component),f.contextTypes={loadable:c.shape({report:c.func.isRequired})},d}function m(e){return y(f,e)}m.Map=function(e){if(\"function\"!=typeof e.render)throw new Error(\"LoadableMap requires a `render(loaded, props)` function\");return y(d,e)};var v=function(e){function t(){return o(this,t),i(this,e.apply(this,arguments))}return a(t,e),t.prototype.getChildContext=function(){return{loadable:{report:this.props.report}}},t.prototype.render=function(){return u.Children.only(this.props.children)},t}(u.Component);function b(e){for(var t=[];e.length;){var r=e.pop();t.push(r())}return Promise.all(t).then((function(){if(e.length)return b(e)}))}v.propTypes={report:c.func.isRequired},v.childContextTypes={loadable:c.shape({report:c.func.isRequired}).isRequired},m.Capture=v,m.preloadAll=function(){return new Promise((function(e,t){b(s).then(e,t)}))},m.preloadReady=function(){return new Promise((function(e,t){b(l).then(e,e)}))},e.exports=m},48191:e=>{\"use strict\";e.exports=o},1005:e=>{\"use strict\";e.exports=r},37810:e=>{\"use strict\";e.exports=l},38262:e=>{\"use strict\";e.exports=t},13717:e=>{\"use strict\";e.exports=u},36464:e=>{\"use strict\";e.exports=f},82086:e=>{\"use strict\";e.exports=s},60992:e=>{\"use strict\";e.exports=n},39155:t=>{\"use strict\";t.exports=e},69514:e=>{\"use strict\";e.exports=i},4442:e=>{\"use strict\";e.exports=a},35272:e=>{\"use strict\";e.exports=c}},m={};function v(e){var t=m[e];if(void 0!==t)return t.exports;var r=m[e]={id:e,loaded:!1,exports:{}};return y[e].call(r.exports,r,r.exports,v),r.loaded=!0,r.exports}v.m=y,v.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return v.d(t,{a:t}),t},v.d=(e,t)=>{for(var r in t)v.o(t,r)&&!v.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},v.f={},v.e=e=>Promise.all(Object.keys(v.f).reduce(((t,r)=>(v.f[r](e,t),t)),[])),v.u=e=>\"wallets/js/wallets.\"+({179:\"components\",484:\"wallets-listing-route\",689:\"wallets-app\",886:\"cashier-modal-route\",989:\"compare-accounts-route\"}[e]||e)+\".\"+{12:\"6049172ae58fe82f74a9\",179:\"ddf2f673476b4c642223\",190:\"57edd2d54e617f8157c6\",200:\"3829b79708d140828c43\",269:\"99abdbd8267e452fcdb9\",380:\"91f56b2303af6cfa4a13\",428:\"1b19ea580c40a36d3d76\",476:\"27c29ce65b92bbb61aa4\",484:\"353a3798837367abd59e\",544:\"7091540d0a5446733b3d\",596:\"a7321e7dffd599d1512c\",636:\"2b8bdbf11cd37e74f282\",689:\"025ed87f474e6ed26709\",717:\"f35e4f4fe39cab9927e6\",719:\"4e916d9deb362c9a4435\",886:\"cd2cf3f6e257e5d8d7aa\",989:\"d9d21d687f386af7ae6b\"}[e]+\".js\",v.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),v.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),d={},p=\"@deriv/wallets:\",v.l=(e,t,r,n)=>{if(d[e])d[e].push(t);else{var o,i;if(void 0!==r)for(var a=document.getElementsByTagName(\"script\"),u=0;u<a.length;u++){var c=a[u];if(c.getAttribute(\"src\")==e||c.getAttribute(\"data-webpack\")==p+r){o=c;break}}o||(i=!0,(o=document.createElement(\"script\")).charset=\"utf-8\",o.timeout=120,v.nc&&o.setAttribute(\"nonce\",v.nc),o.setAttribute(\"data-webpack\",p+r),o.src=e),d[e]=[t];var s=(t,r)=>{o.onerror=o.onload=null,clearTimeout(l);var n=d[e];if(delete d[e],o.parentNode&&o.parentNode.removeChild(o),n&&n.forEach((e=>e(r))),t)return t(r)},l=setTimeout(s.bind(null,void 0,{type:\"timeout\",target:o}),12e4);o.onerror=s.bind(null,o.onerror),o.onload=s.bind(null,o.onload),i&&document.head.appendChild(o)}},v.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},v.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),v.p=\"/\",(()=>{var e={57:0};v.f.j=(t,r)=>{var n=v.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,o)=>n=e[t]=[r,o]));r.push(n[2]=o);var i=v.p+v.u(t),a=new Error;v.l(i,(r=>{if(v.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&(\"load\"===r.type?\"missing\":r.type),i=r&&r.target&&r.target.src;a.message=\"Loading chunk \"+t+\" failed.\\n(\"+o+\": \"+i+\")\",a.name=\"ChunkLoadError\",a.type=o,a.request=i,n[1](a)}}),\"chunk-\"+t,t)}};var t=(t,r)=>{var n,o,[i,a,u]=r,c=0;if(i.some((t=>0!==e[t]))){for(n in a)v.o(a,n)&&(v.m[n]=a[n]);if(u)u(v)}for(t&&t(r);c<i.length;c++)o=i[c],v.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=self.webpackChunk_deriv_wallets=self.webpackChunk_deriv_wallets||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),v.nc=void 0;var b=v(65160);return b=b.default})()));\n//# sourceMappingURL=index.js.map"],"names":["reqSeqNumber","ws","name","payload","req_id","Promise","resolve","reject","readyState","CLOSED","CLOSING","Error","OPEN","timeout","setTimeout","removeEventListener","receive","JSON","stringify","messageEvent","data","parse","error","clearTimeout","addEventListener","send","_objectSpread","Subscription","setAuthorizedWs","authorizedWs","this","boundOnWsMessage","boundOnWsClose","subscribe","constructor","reqId","subscriptionId","lastData","listeners","onWsMessage","bind","onWsClose","unsubscribe","console","forget","request","subscription","id","forEach","listener","addListener","onData","push","removeListener","filter","displayMoney","amount","currency","options","_options$fractional_d","FormatUtils","formatMoney","decimalPlaces","fractional_digits","locale","DEFAULT_IMAGE_WIDTH","DEFAULT_IMAGE_QUALITY","compressImageFile","file","filename","test","reader","FileReader","readAsDataURL","onloadend","_reader$result","src","result","toString","convertToBase64","then","img","compressImage","maxWidth","quality","image","Image","onload","canvas","document","createElement","canvas_context","getContext","CanvasRenderingContext2D","naturalWidth","width","scaleFactor","height","naturalHeight","fillStyle","fillRect","save","drawImage","toBlob","blob","modified_filename","replace","Blob","type","lastModifiedDate","Date","now","numToUint8Array","num","typedArray","Uint8Array","DataView","buffer","setUint32","getQueryKeys","props","Object","keys","length","ordered_props","sort","a","b","localeCompare","reduce","obj","key","hashObject","async","messageBuffer","TextEncoder","encode","object","hashBuffer","crypto","subtle","digest","Array","from","map","slice","join","SubscriptionsManager","backendSubscriptions","Map","close","unsubscribePromises","values","backendSubscription","clear","all","_backendSubscription","_backendSubscription2","has","set","get","_backendSubscription3","_backendSubscription4","delete","WSClient","onAuthorized","subscriptionManager","isAuthorized","endpoint","setWs","setEndpoint","onWebsocketAuthorized","_this$onAuthorized","call","response","msg_type","_this$subscriptionMan","_this$ws","ALPHA_2_TO_ALPHA_3","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW","XK","ALPHA_3_TO_ALPHA_2","AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","VGB","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","HKG","MAC","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","ANT","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VIR","WLF","ESH","YEM","ZMB","ZWE","XKX","ONFIDO_PHRASES","country_select","alert_dropdown","country_not_found","alert","another_doc","button_primary","search","accessibility","input_placeholder","label","title","cross_device_checklist","info","list_item_doc_multiple","list_item_doc_one","list_item_selfie","subtitle","cross_device_error_desktop","cross_device_error_restart","cross_device_intro","list_accessibility","list_item_finish","list_item_open_link","list_item_send_phone","cross_device_return","body","doc_confirmation","blur_detail","blur_title","crop_detail","crop_title","glare_detail","glare_title","no_doc_detail","no_doc_title","body_id","body_image_medium","body_image_poor","body_license","body_passport","body_permit","body_tax_letter","button_close","button_primary_redo","button_primary_upload","button_primary_upload_anyway","button_secondary_redo","button_zoom","image_accessibility","doc_select","button_id","button_id_detail","button_license","button_license_detail","button_passport","button_passport_detail","button_permit","button_permit_detail","extra_no_mobile","subtitle_poa","title_poa","doc_submit","button_link_upload","title_id_back","title_id_front","title_license_back","title_license_front","title_passport","title_permit_back","title_permit_front","error_unsupported_browser","subtitle_android","subtitle_ios","title_android","title_ios","generic","close_sdk_screen","dismiss_alert","back","errors","interrupted_flow_error","instruction","message","invalid_size","invalid_type","lazy_loading","multiple_faces","no_face","request_error","sms_failed","sms_overuse","unsupported_file","lazy_load_placeholder","loading","get_link","alert_wrong_number","button_copied","button_copy","button_submit","info_qr_how","info_qr_how_list_item_camera","info_qr_how_list_item_download","link_divider","link_qr","link_sms","link_url","loader_sending","number_field_input_placeholder","number_field_label","subtitle_qr","subtitle_sms","subtitle_url","url_field_label","linked_computer","list_item_desktop_open","list_item_sent_by_you","mobilePhrases","photo_upload","body_id_back","body_id_front","body_license_back","body_license_front","body_selfie","selfie_capture","camera_inactive","detail","camera_not_working","upload_guide","outro","permission_recovery","list_header_cam","list_item_action_cam","list_item_how_to_cam","subtitle_cam","title_cam","permission","body_cam","button_primary_cam","body_bank_statement","body_benefits_letter","body_bill","body_government_letter","button_take_photo","button_upload","title_selfie","detail_no_fallback","button_accessibility","frame_accessibility","selfie_confirmation","selfie_intro","list_item_face_forward","list_item_no_glasses","sms_sent","info_link_expire","info_link_window","link","subtitle_minutes","switch_phone","info_link_refresh","image_detail_blur_alt","image_detail_blur_label","image_detail_cutoff_alt","image_detail_cutoff_label","image_detail_glare_alt","image_detail_glare_label","image_detail_good_alt","image_detail_good_label","API_ERROR_CODES","PLATFORMS","APIContext","createContext","initializeConnection","onWSClose","onOpen","wss_url","getAppId","getInitialLanguage","getWebSocketURL","connection","WebSocket","useAPIContext","context","useContext","APIProvider","children","platform","reconnect","setReconnect","useState","connectionRef","useRef","subscriptionsRef","reactQueryRef","isMounted","onReconnectedRef","onConnectedRef","isOpenRef","wsClientRef","language","prevLanguage","setPrevLanguage","getSocketURL","useEffect","current","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnReconnect","undefined","setOnReconnected","useCallback","onReconnected","setOnConnected","onConnected","_subscriptionsRef$cur3","matchingSubscription","currentSubscriptionsRef","_wsClientRef$current2","_reactQueryRef$curren","interval_id","setInterval","_wsClientRef$current3","clearInterval","reconnectTimerId","createNewWSConnection","_jsx","Provider","value","_subscriptionsRef$cur","_subscriptionsRef$cur2","_payload","_wsClientRef$current","queryClient","wsClient","QueryClientProvider","client","useAPI","e","subscriptionPromise","_subscribeResponse$un","subscribeResponse","useInfiniteQuery","prop","initial_offset","offset","limit","_useInfiniteQuery","pageParam","getNextPageParam","_lastPage","pages","useMutation","_useMutation2","_useMutation","mutate","_mutate","mutateAsync","_mutateAsync","rest","_objectWithoutProperties","_excluded","useQuery","_useQuery","AuthContext","AuthProvider","loginIDKey","cookieTimeout","selectDefaultAccount","logout","loginid","setLoginid","isLoading","setIsLoading","isSwitching","setIsSwitching","isInitializing","setIsInitializing","isSuccess","setIsSuccess","isError","setIsError","isFetching","setIsFetching","setIsAuthorized","setData","_subscribe","processAuthorizeResponse","authorizeResponse","_authorizeResponse$au","_authorizeResponse$au2","activeLoginID","authorize","accountList","account_list","activeAccount","find","acc","localStorage","setItem","sessionStorage","isDemo","is_virtual","AppIDConstants","environments","real","demo","promise","cleanup","timeoutHandle","cookieTimeoutHandle","rejectFunction","checkLogin","loginId","getActiveLoginIDFromLocalStorage","token","getToken","storedAccounts","getAccountsFromLocalStorage","selectedLoginId","waitForLoginAndTokenWithTimeout","res","_res$authorize$logini","_res$authorize","catch","code","finally","initialize","_getToken","switchAccount","newLoginId","forceRefresh","cancelQueries","_getToken2","refetch","useMemo","useAuthContext","useInvalidateQuery","useQueryClient","invalidateQueries","isArray","usePaginatedFetch","_payload$payload","_payload$payload2","setOffset","keepPreviousData","remove","loadMore","prev","reset","useSubscription","idle_time","isSubscribed","setSubscribed","isIdle","setIdle","setError","subscriber","idle_timeout","_subscriber$current","_subscriber$current$u","remoteConfigQuery","queryKey","queryFn","initialData","initData","useAuthorize","ctx","modifiedData","_data$authorize","getAccountListWithAuthToken","useAuthorizedQuery","refreshOnAccountSwitch","_data$account_list","isEnabled","enabled","useWebsiteStatus","staleTime","Infinity","useAccountLimits","get_limits","useGetAccountStatus","get_account_status_data","modified_account_status","get_account_status","prompt_client_to_authenticate","p2p_status","should_prompt_client_to_authenticate","Boolean","is_p2p_user","useAccountStatus","_useGetAccountStatus","status","Set","authentication","is_address_verified","is_allow_document_upload","is_age_verification","is_authenticated","is_cashier_locked","is_crs_tin_information","is_deposit_locked","is_disabled","is_document_expired","is_document_expiring_soon","is_dxtrade_password_not_set","is_financial_assessment_not_complete","is_financial_information_not_complete","is_financial_risk_approval","is_max_turnover_limit_not_set","is_mt5_password_not_set","is_mt5_withdrawal_locked","is_needs_affiliate_coc_approval","is_no_trading","is_no_withdrawal_or_trading","is_p2p_blocked_for_pa","is_pa_withdrawal_explicitly_allowed","is_password_reset_required","is_professional","is_professional_requested","is_professional_rejected","is_social_signup","is_trading_experience_not_complete","is_unwelcome","is_withdrawal_locked","is_deposit_attempt","is_poi_name_mismatch","is_allow_poa_resubmission","is_allow_poi_resubmission","is_shared_payment_method","is_personal_details_locked","is_transfers_blocked","is_df_deposit_requires_poi","is_authenticated_with_idv_photoid","is_idv_revoked","landing_company","company","modified_account_types","get_account_types","useCurrencyConfig","_website_status_data$2","_useWebsiteStatus","website_status_data","modified_currencies_config","_website_status_data$","website_status","currencies_config","website_status_currencies_config","currency_config","is_crypto","is_fiat","is_AUD","is_USD","is_EUR","is_GBP","is_BTC","is_ETH","is_LTC","is_DAI","is_IDK","is_PAX","is_USB","is_USDT","is_TUSD","is_BUSD","is_EURS","is_eUSDT","is_tUSDT","is_USDC","is_USDK","display_code","transformed_currencies_config","previous","getConfig","useDerivAccountsList","authorize_data","_useAuthorizedQuery","account_list_data","modified_accounts","_getAccountListWithAu","account","_account$linked_to","_account$loginid","created_at","excluded_until","is_active","is_linked_account_active","linked_to","some","is_trading","account_category","is_wallet","is_mf","startsWith","useActiveAccount","_useDerivAccountsList","useWalletAccountsList","_useAuthorize","filtered_accounts","_authorize_data$accou","wallet","_wallet$linked_to","_wallet$linked_to2","_wallet$landing_compa","wallet_currency_type","dtrade_loginid","landing_company_name","is_malta_wallet","_a$currency_config","_b$currency_config","_a$currency_config2","useActiveWalletAccount","_useWalletAccountsLis","useActiveLinkedToTradingAccount","isDerivAccountListLoading","wallet_account_data","isActiveWalletAccountLoading","_account_list_data$fi","linkedDtradeLoginId","linked","useTradingAccountsList","_modified_accounts$fi","_modified_accounts$fi2","trading","_filtered_accounts$fi","_filtered_accounts$fi2","first_real_loginid","account_type","demo_loginid","fiat_account","_getConfig","_account$currency","useActiveTradingAccount","_useTradingAccountsLi","useExchangeRates","_unsubscribe","exchangeRatesSubscriptions","base_currency","target_currencies","target_currency","c","includes","_response$exchange_ra","rates","exchange_rates","currentData","s","currData","getExchangeRate","base","target","_data$base$target","_data$base","useCtraderAccountsList","ctrader_accounts","modified_ctrader_accounts","_ctrader_accounts$tra","trading_platform_accounts","_account$balance","balance","account_id","landing_company_short","display_balance","converted_balance","useDxtradeAccountsList","dxtrade_accounts","modified_dxtrade_accounts","_dxtrade_accounts$tra","useMT5AccountsList","mt5_accounts","mt5_accounts_rest","modified_mt5_accounts","_mt5_accounts$mt5_log","mt5_login_list","_account$login","display_login","login","useCFDAccountsList","isMT5AccountsListError","isMT5AccountsListLoading","isMT5AccountsListSuccess","isDxtradeAccountsListError","isDxtradeAccountsListLoading","isDxtradeAccountsListSuccess","isCtraderAccountsListError","CtraderAccountsListLoading","isCtraderAccountsListSuccess","mt5","dxtrade","ctrader","useAllAccountsList","accountsList","isAccountsListError","isAccountsListLoading","cfdsList","isCFDAccountsListError","isCFDAccountsListLoading","wallets","dtrade","useAvailableWallets","categories","_data$available_accou","available_accounts","useAllWalletAccounts","_useAvailableWallets","nonAddedWallets","addedWallets","modifiedWallets","nonVirtualWallets","is_added","sortWalletsByCurrency","useAuthentication","_get_account_status_d","_get_account_status_d2","_get_account_status_d3","_get_account_status_d4","_get_account_status_d5","needs_verification","account_status","is_poa_needed","is_poi_needed","is_age_verified","is_idv_disallowed","is_poi_resubmission_allowed","is_poa_resubmission_allowed","is_poa_address_mismatch","has_poa_been_attempted","has_poi_been_attempted","identity","poi_status","poa_status","risk_classification","useSettings","onSuccess","invalidate","mutate_rest","_excluded2","update","updateAsync","modified_settings","_data$get_settings$ci","_data$get_settings","_data$get_settings$ac","_data$get_settings2","_data$get_settings$pl","_data$get_settings3","_data$get_settings$ta","_data$get_settings4","_data$get_settings$ta2","_data$get_settings5","citizenship","get_settings","citizen","account_opening_reason","placeofbirth","place_of_birth","taxResidence","tax_residence","taxIdentificationnumber","tax_identification_number","has_submitted_personal_details","mutation","useLandingCompany","settings_data","country_code","modified_landing_company","useAccesiblePlatforms","_useLandingCompany","_landing_company$ctra","is_ctrader_available","standard","is_dxtrade_available","dxtrade_all_company","is_mt5_available","mt_financial_company","mt_gaming_company","mt_all_company","market_type_to_leverage_mapper","gaming","financial","useAvailableMT5Accounts","mt5_available_accounts","financialPlatforms","modified_mt5_available_accounts","_mt5_available_accoun","trading_platform_available_accounts","_account$shortcode","shouldUpdateForex","product","shortcode","accountWithInstruments","market_type","instruments","instrument","leverage","useBalance","balance_data","modified_balance","useBalanceSubscription","_useSubscription","useCashierValidation","cashier_validation","system_maintenance","transfer_blocked","no_residence","unwelcome_status","self_exclusion","no_withdrawal_or_trading_status","only_pa_withdrawals_allowed_status","withdraw_service_unavailable_for_pa","withdrawal_locked_status","documents_expired","cashier_locked_status","disabled_status","financial_assessment_required","ask_currency","ask_authenticate","ask_financial_risk_approval","ask_tin_information","ask_self_exclusion_max_turnover_set","ask_fix_details","pa_commision_withdrawal_limit","useCloseDerivAccount","MARKET_TYPE","JURISDICTION","dxtradeAccount","requirements","after_first_deposit","financial_assessment","compliance","tax_information","signup","ctraderAccount","useCFDCompareAccounts","_landingCompany$ctrad","_useAvailableMT5Accou","all_available_mt5_accounts","landingCompany","hasDxtradeAccountAvailable","hasCTraderAccountAvailable","sortedMt5Accounts","sort_order","accounts","mt5Accounts","is_default_jurisdiction","useCancelCryptoTransaction","cashier_withdrawal_cancel","useCashierFiatAddress","iframe_url","cashier","provider","useCashierFiatDepositAddress","authorizeData","isAuthorizeSuccess","mutateAsyncAuthorize","isAuthorizing","setIsAuthorizing","i18nLanguage","currentLang","useTranslations","useCountryConfig","residence_list_data","modified_residence_list","_residence_list_data$","residence_list","country_config","_country_config$ident","_country_config$ident2","disabled","toUpperCase","text","is_idv_supported","services","idv","is_country_supported","is_onfido_supported","onfido","transformed_residence_list","useCreateNewRealAccount","modified_data","new_account_real","useCreateNewVirtualAccount","new_account_virtual","useCreateWallet","new_account_wallet","currencyConfig","params","_data$crypto_config","_data$crypto_config3","isAuthorizeLoading","isCryptConfigLoading","crypto_config","_data$crypto_config2","useCryptoEstimations","_cryptoEstimationsFee2","_cryptoEstimationsFee3","_cryptoEstimationsFee4","subscription_error","cryptoEstimationsFeeDetails","setCryptoEstimationsFeeDetails","cryptoEstimationsFeeDetailsLatest","setCryptoEstimationsFeeDetailsLatest","currencyCode","setCurrencyCode","countDown","setCountDown","serverTime","setServerTime","timer","_data$crypto_estimati","_data$crypto_estimati2","_data$crypto_estimati3","crypto_estimations","withdrawal_fee","expiry_time","_cryptoEstimationsFee","currentTime","toMoment","utc","format","expiryTime","epochToMoment","diff","prevTime","cryptoEstimationsFee","cryptoEstimationsFeeUniqueId","unique_id","cryptoEstimationsFeeExpiryTime","getCryptoEstimations","unsubscribeCryptoEstimations","useCryptoTransactions","_data$cashier_payment2","transactions","setTransactions","resetData","old_transactions","_data$cashier_payment","new_transactions","cashier_payments","updated_transactions","new_transaction","index","findIndex","old_transaction","modified_transactions","transaction","is_deposit","transaction_type","is_withdrawal","submit_date","last_transaction","useCryptoWithdrawal","useCtraderServiceToken","_ctrader_token$servic","ctrader_token","service_token","useDepositCryptoAddress","_response$deposit","deposit","address","DocumentUploadStatus","useDocumentUpload","setStatus","IDLE","getFileInfo","fileType","fileBlob","modifiedFile","fr","fileMetadata","fileSize","size","onerror","readAsArrayBuffer","readFile","fileBuffer","sendFile","_response$document_up","_response$document_up2","chunks","generateChunks","binary","chunkSize","i","item","concat","document_upload","upload_id","call_type","chunk","upload","LOADING","fileInfo","handshakeResponse","checksum","md5","updatedPayload","document_format","split","toLocaleUpperCase","expected_checksum","file_size","passthrough","handshake","ERROR","uploadResponse","_response$document_up3","uploadId","_wsClient$ws5","_wsClient$ws","handleUploadStatus","_data$document_upload","_data$document_upload2","_data$document_upload3","_wsClient$ws2","_wsClient$ws3","_wsClient$ws4","SUCCESS","fileUploader","resetStatus","useDxtradeServiceToken","_dxtrade_token$servic","service","server","dxtrade_token","trading_platform_leverage","useExchangeRateSubscription","useGetExchangeRate","useGrowthbookGetFeatureValue","featureFlag","defaultValue","resolvedDefaultValue","featureFlagValue","setFeatureFlagValue","isGBLoaded","setIsGBLoaded","useIsMounted","window","Analytics","is_enabled","getFeatureFlag","fetchFeatureFlag","useIsGrowthbookIsLoaded","useRemoteConfig","analytics_interval","marketing_growthbook","checksCounter","_Analytics$getInstanc","getInstances","ab","useGrowthbookIsOn","featureIsOn","setFeatureIsOn","isFeatureOn","_Analytics$getInstanc2","setFeatureValue","GrowthBook","setRenderer","useIdentityDocumentVerificationAdd","submitIDVDocuments","useIsEuRegion","_mt_gaming_company$fi","_mt_all_company$swap_","eu_shortcode_regex","gaming_company","financial_company","residence","financial_shortcode","gaming_shortcode","mt_gaming_shortcode","swap_free","is_financial_maltainvest","shortcodes","is_financial_eu_and_not_gaming_svg","is_gaming_eu","is_residence_eu","isEUCountry","useClientCountry","_data$website_status","clients_country","useIsHubRedirectionEnabled","_data$hub_enabled_cou","hub_enabled_country_list","clientCountry","accountSettings","countryCode","isHubRedirectionEnabled","isChangingToHubAppId","isHubRedirectionLoaded","useResidenceList","residence_list_rest","acknowledged_statuses","failed_statuses","usePOI","_authentication_data$2","_authentication_data$4","_useAuthentication","authentication_data","isAuthenticationSuccess","isResidenceListSuccess","get_settings_data","isGetSettingsSuccess","previous_service","_authentication_data$","attempts","latest","is_poi_required","_services$idv","_services$onfido","_services$manual","statuses","manual","hasAcknowledgedStatus","isPreviousStatusFailed","current_poi","_matching_residence_d","_matching_residence_d2","_authentication_data$3","_services$idv$submiss","_services$idv2","_services$onfido$subm","_services$onfido2","_services$manual3","user_country_code","matching_residence_data","r","idv_submission_left","submissions_left","onfido_submission_left","is_ng_client","_services$idv3","_matching_residence_d3","_services$onfido3","_matching_residence_d4","_services$manual2","onfido_supported","submission_left","document_supported","documents_supported","modified_verification_data","_authentication_data$5","_authentication_data$6","_authentication_data$7","_authentication_data$8","_authentication_data$9","_authentication_data$10","has_attempted_poi","is_pending","is_rejected","is_expired","is_suspected","is_verified","poi_needs_verification","useJurisdictionStatus","authenticationStatus","isSuccessAuthenticationStatus","poiStatus","_poiStatus$current","getVerificationStatus","jurisdiction","mt5_account_status","isPOIServiceStatus","_poiStatus$current2","_poiStatus$services","current_service","isStatusPending","is_failed","is_not_applicable","useMT5Deposit","country","_ref","_onfido_token_data$se","settings","retry","onfido_token_data","useOnfidoNotificationEvent","documentIds","category","event","args","documents","randomUUID","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","buf","rnds","random","useOnfido","selectedDocument","isOnfidoLoading","setIsOnfidoLoading","isOnfidoInitialized","setIsOnfidoInitialized","onfidoInitializationError","setOnfidoInitializationError","hasSubmitted","setHasSubmitted","onfidoRef","onfidoContainerId","uuidv4","residenceList","serviceTokenError","isServiceTokenLoading","useOnfidoServiceToken","submitDocuments","supportedDocuments","_residenceList$find","onfidoResidence","_onfidoResidence$docu","_onfidoResidence$docu2","display_name","_onfidoResidence$docu3","onComplete","document_ids","_data$id","_data","initOnfido","i18NLanguage","LocalStorageUtils","getValue","onfidoCountryCode","Onfido","init","containerId","toLowerCase","phrases","useModal","useMemoryHistory","steps","documentTypes","passport","doc","driving_licence","national_identity_card","hideCountrySelection","loadOnfidoSdkScript","getElementById","scriptNode","linkNode","href","rel","appendChild","useOtherCFDPlatformsDeposit","usePaymentAgentList","_settings$country_cod","_data$paymentagent_li","paymentagent_list","list","usePaymentAgentWithdrawal","usePOA","modified_authentication_data","has_attempted_poa","is_need_submission","poa_needs_verification","useSendbirdServiceToken","_sendbird_token_data$","sendbird_token_data","sendbird","useServerTime","React","server_time_moment","time","server_time_utc","valueOf","useSortedMT5Accounts","isEUClient","_useMT5AccountsList","isEU","filtered_available_accounts","filtered_mt5_accounts","available","added","areAllAccountsCreated","useMobileCarouselWalletsList","walletAccountsList","isCurrencyConfigLoading","staleWalletAccountsList","setStaleWalletAccountslist","staleIsLoading","setStaleIsLoading","useStatesList","states_list","_data$states_list","useTradingPlatformInvestorPasswordChange","useCreateMT5Account","mt5_new_account","useCreateOtherCFDAccount","trading_platform_new_account","useTradingPlatformInvestorPasswordReset","useTradingPlatformPasswordChange","useTransactions","_account$currency_con","_account$currency_con2","_data$statement3","setFilter","lastPage","_lastPage$statement","statement","count","action_type","description","_data$statement","_data$statement2","display_amount","display_balance_after","balance_after","useInfiniteTransactions","fetchNextPage","flatten_data","_data$pages","_data$pages2","flatMap","page","_page$statement","useTransferBetweenAccounts","refetchQuery","mutateError","mutateIsLoading","useVerifyEmail","useWalletMigration","_data$wallet_migratio","wallet_migration","refetchInterval","_response$wallet_migr","state","startMigration","resetMigration","is_ineligible","is_eligible","is_in_progress","is_migrated","useTradingPlatformPasswordReset","useResetVirtualBalance","useIsDIELEnabled","kyc_auth_status_rest","kyc_auth_status","useTradingPlatformStatus","tradingPlatformStatusData","trading_platform_status","getPlatformStatus","_tradingPlatformStatu","CFD_PLATFORMS","MT5","DXTRADE","CTRADER","t","self","n","o","u","l","f","d","p","y","default","arguments","loader","ComponentModule","render","getOwnPropertySymbols","prototype","hasOwnProperty","propertyIsEnumerable","exports","assign","String","getOwnPropertyNames","fromCharCode","TypeError","resetWarningCache","Symbol","iterator","array","m","bigint","bool","func","number","string","symbol","any","arrayOf","h","element","elementType","isValidElementType","instanceOf","node","objectOf","oneOf","g","oneOfType","w","expectedType","shape","v","exact","stack","isRequired","every","entries","next","done","RegExp","checkPropTypes","PropTypes","isElement","Function","for","$$typeof","x","j","O","S","T","E","_","q","P","k","C","I","R","M","$","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","warn","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","typeOf","ReferenceError","create","enumerable","writable","configurable","setPrototypeOf","__proto__","loaded","__esModule","delay","webpack","modules","setState","timedOut","_loadModule","pastDelay","preload","componentWillMount","_mounted","loadable","report","_delay","_timeout","_clearTimeouts","componentWillUnmount","Component","contextTypes","apply","getChildContext","Children","only","pop","propTypes","childContextTypes","Capture","preloadAll","preloadReady","defineProperty","globalThis","getElementsByTagName","getAttribute","charset","nc","setAttribute","parentNode","removeChild","head","toStringTag","nmd","paths","webpackChunk_deriv_wallets","module"],"sourceRoot":""}