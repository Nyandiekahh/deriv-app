{"version":3,"file":"js/core.chunk.one-time-deposit-modal.78973846415b1162ad96.js","mappings":"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","sources":["webpack:///../../api/src/useMutation.ts","webpack:///./App/Containers/Modals/deposit-now-or-later-modal/deposit-now-or-later-modal.tsx","webpack:///./App/Containers/Modals/deposit-now-or-later-modal/index.ts","webpack:///../../cashier/src/components/error-state/error-state.tsx","webpack:///../../cashier/src/modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe.tsx","webpack:///../../../node_modules/qrcode.react/lib/esm/index.js","webpack:///../../cashier/src/modules/deposit-crypto/components/deposit-crypto-disclaimers/deposit-crypto-disclaimers.tsx","webpack:///../../cashier/src/modules/deposit-crypto/components/deposit-crypto-wallet-address/deposit-crypto-wallet-address.tsx","webpack:///./App/Containers/OneTimeDepositModal/one-time-deposit-modal-content.tsx","webpack:///./App/Containers/OneTimeDepositModal/one-time-deposit-modal.tsx","webpack:///./App/Containers/OneTimeDepositModal/index.ts","webpack:///../../hooks/src/useCryptoConfig.ts","webpack:///../../hooks/src/useCryptoTransactions.ts","webpack:///../../hooks/src/useCurrencyConfig.ts","webpack:///../../hooks/src/useCurrentCurrencyConfig.ts","webpack:///../../hooks/src/useDepositCryptoAddress.ts","webpack:///../../hooks/src/useDepositFiatAddress.ts","webpack:///../../../node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs","webpack:///../../../node_modules/@tanstack/react-query/build/lib/useMutation.mjs"],"sourcesContent":["import { useCallback } from 'react';\nimport { useMutation as _useMutation } from '@tanstack/react-query';\nimport useAPI from './useAPI';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestMutationOptions,\n    TSocketRequestPayload,\n    TSocketResponseData,\n} from '../types';\n\nconst useMutation = <T extends TSocketEndpointNames>(name: T, options?: TSocketRequestMutationOptions<T>) => {\n    const { send } = useAPI();\n    const {\n        mutate: _mutate,\n        mutateAsync: _mutateAsync,\n        ...rest\n    } = _useMutation<TSocketResponseData<T>, TSocketError<T>, TSocketAcceptableProps<T>>(props => {\n        const prop = props?.[0];\n        const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n        return send(name, payload);\n    }, options);\n\n    const mutate = useCallback((...payload: TSocketAcceptableProps<T>) => _mutate(payload), [_mutate]);\n    const mutateAsync = useCallback((...payload: TSocketAcceptableProps<T>) => _mutateAsync(payload), [_mutateAsync]);\n\n    return {\n        mutate,\n        mutateAsync,\n        ...rest,\n    };\n};\n\nexport default useMutation;\n","import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { Dialog, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './deposit-now-or-later-modal.scss';\n\nconst DepositNowOrLaterModal = observer(() => {\n    const { isMobile } = useDevice();\n    const { ui } = useStore();\n    const {\n        should_show_deposit_now_or_later_modal,\n        setShouldShowDepositNowOrLaterModal,\n        setShouldShowOneTimeDepositModal,\n    } = ui;\n\n    const onConfirmModal = () => {\n        Analytics.trackEvent('ce_tradershub_popup', {\n            // @ts-expect-error 'click_download' property is changed to 'click_cta'\n            action: 'click_cta',\n            form_name: 'traders_hub_default',\n            account_mode: 'real',\n            popup_name: 'deposit_now_or_later',\n            popup_type: 'with_cta',\n            // 'cta_name' property type will be added later\n            cta_name: 'deposit_now',\n        });\n\n        setShouldShowDepositNowOrLaterModal(false);\n    };\n\n    const onClose = (is_click_on_cancel_button = false) => {\n        if (is_click_on_cancel_button)\n            Analytics.trackEvent('ce_tradershub_popup', {\n                // @ts-expect-error 'click_download' property is changed to 'click_cta'\n                action: 'click_cta',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'deposit_now_or_later',\n                popup_type: 'with_cta',\n                // 'cta_name' property type will be added later\n                cta_name: 'deposit_later',\n            });\n        else\n            Analytics.trackEvent('ce_tradershub_popup', {\n                action: 'close',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'deposit_now_or_later',\n                popup_type: 'with_cta',\n            });\n\n        setShouldShowDepositNowOrLaterModal(false);\n\n        if (is_click_on_cancel_button) {\n            setShouldShowOneTimeDepositModal(false);\n        }\n    };\n\n    React.useEffect(() => {\n        if (should_show_deposit_now_or_later_modal) {\n            Analytics.trackEvent('ce_tradershub_popup', {\n                action: 'open',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'deposit_now_or_later',\n                popup_type: 'with_cta',\n            });\n        }\n    }, [should_show_deposit_now_or_later_modal]);\n\n    return (\n        <Dialog\n            className='deposit-now-or-later-modal'\n            title={<Localize i18n_default_text='Add funds and start trading' />}\n            confirm_button_text={localize('Deposit now')}\n            onConfirm={onConfirmModal}\n            cancel_button_text={localize('Deposit later')}\n            onCancel={() => onClose(true)}\n            onClose={onClose}\n            is_visible={should_show_deposit_now_or_later_modal}\n            has_close_icon\n            is_closed_on_cancel={false}\n        >\n            <Text align='center' size={isMobile ? 'xxs' : 'xs'}>\n                <Localize i18n_default_text=\"Make a deposit to trade the world's markets!\" />\n            </Text>\n        </Dialog>\n    );\n});\n\nexport default DepositNowOrLaterModal;\n","import DepositNowOrLaterModal from './deposit-now-or-later-modal';\n\nexport default DepositNowOrLaterModal;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { EmptyState } from '@deriv/components';\n\ntype TProps = {\n    error: unknown;\n};\n\nconst ErrorState: React.FC<TProps> = ({ error }) => {\n    let message = localize('Please refresh the page and try again.');\n\n    if (error && typeof error === 'object' && 'message' in error && typeof error.message === 'string') {\n        message = error.message;\n    }\n\n    return (\n        <EmptyState\n            icon='IcTriangleExclamationXl'\n            title={localize('Something went wrong')}\n            description={message}\n            action={{\n                label: localize('Refresh page'),\n                onClick: () => window.location.reload(),\n                tertiary: true,\n            }}\n        />\n    );\n};\n\nexport default ErrorState;\n","import React, { useEffect, useState } from 'react';\nimport { Loading } from '@deriv/components';\nimport { useDepositFiatAddress } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { setPerformanceValue } from '@deriv/shared';\nimport { ErrorState } from '../../../../components/error-state';\nimport './deposit-fiat-iframe.scss';\n\nconst DepositFiatIframe: React.FC = observer(() => {\n    const { data: iframe_url, error } = useDepositFiatAddress();\n    const [is_loading, setIsLoading] = useState(true);\n\n    // To show loading state when switching theme\n    useEffect(() => {\n        setIsLoading(true);\n    }, [iframe_url]);\n\n    if (!is_loading) setPerformanceValue('load_fiat_deposit_cashier_time');\n\n    if (error) return <ErrorState error={error} />;\n\n    return (\n        <React.Fragment>\n            {is_loading && <Loading is_fullscreen={false} />}\n            {iframe_url && (\n                <iframe\n                    key={iframe_url}\n                    className='deposit-fiat-iframe__iframe'\n                    onLoad={() => setIsLoading(false)}\n                    src={iframe_url}\n                    style={{ display: is_loading ? 'none' : 'block' }}\n                    data-testid='dt_deposit_fiat_iframe_iframe'\n                />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default DepositFiatIframe;\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = React.useRef(null);\n  const _image = React.useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  React.useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import React from 'react';\nimport { InlineMessage, Text } from '@deriv/components';\nimport { useCryptoConfig, useCurrentCurrencyConfig } from '@deriv/hooks';\nimport { formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport './deposit-crypto-disclaimers.scss';\n\n// Check with BE to see if we can get the network name from the API.\nconst crypto_currency_to_network_mapper: Record<string, string> = {\n    BTC: 'Bitcoin (BTC)',\n    ETH: 'Ethereum (ETH)',\n    LTC: 'Litecoin (LTC)',\n    UST: 'Omnicore',\n    USDC: 'Ethereum (ERC20)',\n    eUSDT: 'Ethereum (ERC20) ',\n    tUSDT: 'Tron (TRC20) ',\n};\n\nconst DepositCryptoDisclaimers: React.FC = observer(() => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { isMobile } = useDevice();\n    const { data: crypto_config } = useCryptoConfig(currency);\n\n    const currency_config = useCurrentCurrencyConfig();\n\n    const minimum_deposit_disclaimer = currency_config?.is_tUSDT ? (\n        <Localize\n            i18n_default_text='A minimum deposit value of <0>{{minimum_deposit}}</0> {{currency}} is required. Otherwise, a fee is applied.'\n            values={{\n                minimum_deposit: formatMoney(currency_config.code, crypto_config?.minimum_deposit ?? 0, true),\n                currency: currency_config.display_code,\n            }}\n            components={[<strong key={0} />]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text='A minimum deposit value of <0>{{minimum_deposit}}</0> {{currency}} is required. Otherwise, the funds will be lost and cannot be recovered.'\n            values={{\n                minimum_deposit: formatMoney(currency_config?.code, crypto_config?.minimum_deposit ?? 0, true),\n                currency: currency_config?.display_code,\n            }}\n            components={[<strong key={0} />]}\n        />\n    );\n\n    return (\n        <div className='deposit-crypto-disclaimers'>\n            <InlineMessage title={localize('To avoid loss of funds:')}>\n                <br />\n                <ul className='deposit-crypto-disclaimers__list'>\n                    {crypto_config?.minimum_deposit && <li>{minimum_deposit_disclaimer}</li>}\n                    <li>\n                        <Localize\n                            i18n_default_text='Only send {{currency_name}} ({{currency_code}}) to this address.'\n                            values={{\n                                currency_name: currency_config?.name || '',\n                                currency_code: currency_config?.display_code || '',\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <Localize\n                            i18n_default_text='Make sure to copy the Deriv {{currency}} account address above and paste it into your crypto wallet.'\n                            values={{ currency }}\n                        />\n                    </li>\n                    <li>\n                        <Localize\n                            i18n_default_text='In your crypto wallet, select the <0>{{network_name}} network</0> when transferring to Deriv. Incorrect transfers may result in the loss of funds.'\n                            values={{ network_name: crypto_currency_to_network_mapper[currency_config?.code] }}\n                            components={[<strong key={0} />]}\n                        />\n                    </li>\n                </ul>\n            </InlineMessage>\n            <Text align='center' size={isMobile ? 'xxxs' : 'xxs'}>\n                <Localize\n                    i18n_default_text='<0>Note:</0> You’ll receive an email when your deposit starts being processed.'\n                    components={[<Text key={0} size={isMobile ? 'xxxs' : 'xxs'} weight='bold' />]}\n                />\n            </Text>\n        </div>\n    );\n});\n\nexport default DepositCryptoDisclaimers;\n","import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport { Button, Clipboard, InlineMessage, Loading, Text } from '@deriv/components';\nimport { useDepositCryptoAddress } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { setPerformanceValue } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport QRCode from 'qrcode.react';\nimport { DepositCryptoDisclaimers } from '../deposit-crypto-disclaimers';\nimport './deposit-crypto-wallet-address.scss';\n\nconst DepositCryptoWalletAddress: React.FC = observer(() => {\n    const { client } = useStore();\n    const { currency, loginid } = client;\n    const { isMobile } = useDevice();\n    const { data: deposit_crypto_address, isLoading, error, resend } = useDepositCryptoAddress();\n\n    if (isLoading) return <Loading is_fullscreen={false} />;\n\n    setPerformanceValue('load_crypto_deposit_cashier_time');\n\n    const onClickHandler = () => {\n        Analytics.trackEvent('ce_cashier_deposit_onboarding_form', {\n            action: 'click_copy_crypto_address',\n            form_name: 'ce_cashier_deposit_onboarding_form',\n            currency,\n            login_id: loginid,\n        });\n    };\n\n    if (error) {\n        return (\n            <div className='deposit-crypto-wallet-address__error'>\n                <InlineMessage\n                    type='warning'\n                    message={localize(\n                        \"Unfortunately, we couldn't get the address since our server was down. Please click Refresh to reload the address or try again later.\"\n                    )}\n                />\n                <Button text={localize('Refresh')} onClick={() => resend()} secondary small />\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <QRCode\n                value={deposit_crypto_address || ''}\n                size={isMobile ? 128 : 160}\n                className='deposit-crypto-wallet-address__qrcode-container'\n            />\n            <div className='deposit-crypto-wallet-address__address-container'>\n                <div className='deposit-crypto-wallet-address__hash-container'>\n                    <Text size={isMobile ? 'xxs' : 'xs'} weight='bold'>\n                        {deposit_crypto_address}\n                    </Text>\n                </div>\n                <div className='deposit-crypto-wallet-address__action-container'>\n                    <Clipboard\n                        text_copy={deposit_crypto_address || ''}\n                        info_message={isMobile ? undefined : localize('copy')}\n                        success_message={localize('copied!')}\n                        onClickHandler={onClickHandler}\n                        popoverAlignment={isMobile ? 'left' : 'bottom'}\n                    />\n                </div>\n            </div>\n            <DepositCryptoDisclaimers />\n        </>\n    );\n});\n\nexport default DepositCryptoWalletAddress;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport DepositFiatIframe from '@deriv/cashier/src/modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe';\nimport DepositCrypto from '@deriv/cashier/src/modules/deposit-crypto/components/deposit-crypto-wallet-address/deposit-crypto-wallet-address';\nimport { Chat } from '@deriv/utils';\n\nexport const OneTimeDepositModalContent = ({ is_crypto_provider = false }: { is_crypto_provider?: boolean }) => {\n    const { isDesktop } = useDevice();\n\n    const onLiveChatClick = () => Chat.open();\n\n    return (\n        <div\n            className={classNames('one-time-deposit-modal__content', {\n                'one-time-deposit-modal__content-crypto': is_crypto_provider,\n            })}\n        >\n            <div className='one-time-deposit-modal__title'>\n                <Text as='h1' size={!isDesktop ? 'm' : 'l'} weight='bold'>\n                    <Localize i18n_default_text='Deposit' />\n                </Text>\n                <Text size={!isDesktop ? 'xs' : 's'} align='center'>\n                    {is_crypto_provider ? (\n                        <Localize\n                            i18n_default_text='Need help? Contact us via <0>live chat</0>'\n                            components={[\n                                <Text\n                                    key={0}\n                                    className='one-time-deposit-modal__livechat'\n                                    size={!isDesktop ? 'xs' : 's'}\n                                    color='loss-danger'\n                                    onClick={onLiveChatClick}\n                                    data-testid='dt_live_chat'\n                                />,\n                            ]}\n                        />\n                    ) : (\n                        <Localize\n                            i18n_default_text='Select a payment method to make a deposit into your account.<0 />Need help? Contact us via <1>live chat</1>'\n                            components={[\n                                <br key={0} />,\n                                <Text\n                                    key={1}\n                                    className='one-time-deposit-modal__livechat'\n                                    size={!isDesktop ? 'xs' : 's'}\n                                    color='loss-danger'\n                                    onClick={onLiveChatClick}\n                                    data-testid='dt_live_chat'\n                                />,\n                            ]}\n                        />\n                    )}\n                </Text>\n            </div>\n            {is_crypto_provider ? <DepositCrypto /> : <DepositFiatIframe />}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { MobileFullPageModal, Modal } from '@deriv/components';\nimport { useCryptoTransactions, useCurrentCurrencyConfig } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport DepositNowOrLaterModal from '../Modals/deposit-now-or-later-modal';\nimport { OneTimeDepositModalContent } from './one-time-deposit-modal-content';\nimport CryptoTransactionProcessingModal from '../Modals/crypto-transaction-processing-modal';\nimport './one-time-deposit-modal.scss';\n\nconst OneTimeDepositModal = observer(() => {\n    const { isDesktop } = useDevice();\n    const { client, ui } = useStore();\n    const { is_cr_account, is_logged_in, balance, currency, updateAccountStatus } = client;\n    const {\n        should_show_one_time_deposit_modal,\n        setShouldShowOneTimeDepositModal,\n        setShouldShowDepositNowOrLaterModal,\n        setShouldShowCryptoTransactionProcessingModal,\n    } = ui;\n\n    const currency_config = useCurrentCurrencyConfig();\n    const is_crypto_provider = currency_config?.platform.cashier.includes('crypto');\n    const { data: crypto_transactions, has_transactions } = useCryptoTransactions(is_logged_in && is_crypto_provider);\n    const [is_account_deposited, setIsAccountDeposited] = React.useState(false);\n\n    const onCloseModal = () => {\n        if (is_account_deposited) setShouldShowOneTimeDepositModal(false);\n        else setShouldShowDepositNowOrLaterModal(true);\n    };\n\n    // check the user already made a deposit\n    React.useEffect(() => {\n        if (balance && Number(balance) > 0) {\n            setIsAccountDeposited(true);\n        }\n\n        // check crypto transactions\n        if (is_crypto_provider && crypto_transactions && has_transactions) {\n            if (crypto_transactions?.some(tx => tx.is_deposit)) {\n                setIsAccountDeposited(true);\n            }\n\n            if (crypto_transactions?.some(tx => tx.is_deposit && tx.status_code === 'PENDING')) {\n                setShouldShowOneTimeDepositModal(false);\n                setShouldShowCryptoTransactionProcessingModal(true);\n            }\n        }\n    }, [\n        balance,\n        crypto_transactions,\n        currency_config,\n        is_crypto_provider,\n        has_transactions,\n        setIsAccountDeposited,\n        setShouldShowOneTimeDepositModal,\n        setShouldShowCryptoTransactionProcessingModal,\n    ]);\n\n    React.useEffect(() => {\n        if (should_show_one_time_deposit_modal) {\n            Analytics.trackEvent('ce_tradershub_popup', {\n                action: 'open',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'direct_deposit',\n                // @ts-expect-error currency propery will be added later\n                currency,\n            });\n\n            return () => {\n                updateAccountStatus();\n            };\n        }\n    }, [should_show_one_time_deposit_modal]);\n\n    return (\n        <React.Fragment>\n            {isDesktop ? (\n                <Modal\n                    className='one-time-deposit-modal'\n                    is_open={should_show_one_time_deposit_modal}\n                    title=' '\n                    toggleModal={onCloseModal}\n                    height='auto'\n                    has_close_icon\n                    should_header_stick_body={false}\n                >\n                    <Modal.Body className='one-time-deposit-modal__body'>\n                        <OneTimeDepositModalContent is_crypto_provider={is_crypto_provider} />\n                    </Modal.Body>\n                </Modal>\n            ) : (\n                <MobileFullPageModal\n                    className='one-time-deposit-modal'\n                    body_className='one-time-deposit-modal__body'\n                    header=' '\n                    height_offset='80px'\n                    is_modal_open={should_show_one_time_deposit_modal}\n                    onClickClose={onCloseModal}\n                >\n                    <OneTimeDepositModalContent is_crypto_provider={is_crypto_provider} />\n                </MobileFullPageModal>\n            )}\n            <DepositNowOrLaterModal />\n            <CryptoTransactionProcessingModal />\n        </React.Fragment>\n    );\n});\n\nexport default OneTimeDepositModal;\n","import OneTimeDepositModal from './one-time-deposit-modal';\n\nexport default OneTimeDepositModal;\n","import { useQuery } from '@deriv/api';\n\nconst useCryptoConfig = (currency: string) => {\n    const { data, ...rest } = useQuery('crypto_config', { payload: { currency_code: currency } });\n\n    const cryptoConfig = data?.crypto_config?.currencies_config[currency];\n\n    return {\n        /** Available cryptocurrencies config for authorized account*/\n        data: cryptoConfig,\n        ...rest,\n    };\n};\n\nexport default useCryptoConfig;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSubscription } from '@deriv/api';\n\ntype TTransaction = NonNullable<\n    NonNullable<ReturnType<typeof useSubscription<'cashier_payments'>>['data']>['cashier_payments']\n>['crypto'][number];\n\ntype TStatus = TTransaction['status_code'];\n\ntype TDepositStatus = 'PENDING' | 'CONFIRMED' | 'ERROR';\n\ntype TWithdrawalStatus = Exclude<TStatus, TDepositStatus>;\n\n// Since BE sends the `status_code` for both `deposit` and `withdrawal` in the same field,\n// Here we modify the BE type to make `status_code` type more specific to the `transaction_type` field.\nexport type TModifiedTransaction = Omit<TTransaction, 'status_code' | 'transaction_type'> &\n    (\n        | { transaction_type: 'deposit'; status_code: TDepositStatus }\n        | { transaction_type: 'withdrawal'; status_code: TWithdrawalStatus }\n    );\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nconst useCryptoTransactions = (allowToMakeSubscription = true) => {\n    const { subscribe, data, ...rest } = useSubscription('cashier_payments');\n    const [transactions, setTransactions] = useState<TModifiedTransaction[]>();\n\n    useEffect(() => {\n        allowToMakeSubscription && subscribe();\n    }, [subscribe, allowToMakeSubscription]);\n\n    useEffect(() => {\n        setTransactions(old_transactions => {\n            // Get the list of the crypto transactions.\n            const new_transactions = data?.cashier_payments?.crypto as TModifiedTransaction[] | undefined;\n\n            // If there are no new transactions, return the old transactions.\n            if (!new_transactions) return old_transactions;\n\n            // If there are no old transactions, return the new transactions.\n            if (!old_transactions) return new_transactions;\n\n            // Make a copy of the old transactions.\n            const updated_transactions = [...old_transactions];\n\n            // For each new transaction, check if it exists in the old transactions.\n            new_transactions.forEach(new_transaction => {\n                // Find the index of the new transaction in the old transactions if exists.\n                const index = updated_transactions.findIndex(\n                    old_transaction => old_transaction.id === new_transaction.id\n                );\n\n                // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n                if (index === -1) {\n                    updated_transactions.push(new_transaction);\n                } else {\n                    updated_transactions[index] = new_transaction;\n                }\n            });\n\n            // Return the updated transactions.\n            return updated_transactions;\n        });\n    }, [data?.cashier_payments?.crypto]);\n\n    // Add additional information to each transaction.\n    const modified_transactions = useMemo(\n        () =>\n            transactions?.map(transaction => ({\n                ...transaction,\n                /** Determine if the transaction is a deposit or not. */\n                is_deposit: transaction.transaction_type === 'deposit',\n                /** Determine if the transaction is a withdrawal or not. */\n                is_withdrawal: transaction.transaction_type === 'withdrawal',\n            })),\n        [transactions]\n    );\n\n    // Sort transactions by submit time.\n    const sorted_transactions = useMemo(\n        () => modified_transactions?.sort((a, b) => b.submit_date - a.submit_date),\n        [modified_transactions]\n    );\n\n    // Determine if the user has any transactions or not.\n    const has_transactions = modified_transactions && modified_transactions.length > 0;\n\n    // Get the last transaction if exists.\n    const last_transaction = modified_transactions?.[0];\n\n    return {\n        /** List of user transactions sorted by submit time. */\n        data: sorted_transactions,\n        /** Returns the last transaction if exists. */\n        last_transaction,\n        /** Determine is the user has any transactions or not. */\n        has_transactions,\n        subscribe,\n        ...rest,\n    };\n};\n\nexport default useCryptoTransactions;\n","import { useCallback, useMemo } from 'react';\nimport { useFetch } from '@deriv/api';\n\ntype TPlatform = {\n    cashier: ('doughflow' | 'crypto')[];\n    ramp: string[] | [];\n};\n\n/** @deprecated Use `useCurrencyConfig` from `@deriv/api` package instead. */\nconst useCurrencyConfig = () => {\n    const { data: website_status_data, ...rest } = useFetch('website_status');\n\n    const currencies_config = useMemo(() => {\n        if (!website_status_data?.website_status?.currencies_config) return undefined;\n\n        const website_status_currencies_config = website_status_data.website_status.currencies_config;\n\n        const modified_currencies_config = Object.keys(website_status_currencies_config).map(currency => {\n            const currency_config = website_status_currencies_config[currency];\n\n            return {\n                ...currency_config,\n                /** determine if the currency is a `crypto` currency */\n                is_crypto: currency_config?.type === 'crypto',\n                /** determine if the currency is a `fiat` currency */\n                is_fiat: currency_config?.type === 'fiat',\n                /** determine if the currency is `Australian Dollar` */\n                is_AUD: currency === 'AUD',\n                /** determine if the currency is `US Dollar` */\n                is_USD: currency === 'USD',\n                /** determine if the currency is `Euro` */\n                is_EUR: currency === 'EUR',\n                /** determine if the currency is `Pound Sterling` */\n                is_GBP: currency === 'GBP',\n                /** determine if the currency is `Bitcoin` */\n                is_BTC: currency === 'BTC',\n                /** determine if the currency is `Ethereum` */\n                is_ETH: currency === 'ETH',\n                /** determine if the currency is `Litecoin` */\n                is_LTC: currency === 'LTC',\n                /** determine if the currency is `Multi-Collateral DAI` */\n                is_DAI: currency === 'DAI',\n                /** determine if the currency is `IDK` */\n                is_IDK: currency === 'IDK',\n                /** determine if the currency is `Paxos Standard` */\n                is_PAX: currency === 'PAX',\n                /** determine if the currency is `Binary Coin` */\n                is_USB: currency === 'USB',\n                /** determine if the currency is `Tether Omni` */\n                is_USDT: currency === 'UST',\n                /** determine if the currency is `True USD` */\n                is_TUSD: currency === 'TUSD',\n                /** determine if the currency is `Binance USD` */\n                is_BUSD: currency === 'BUSD',\n                /** determine if the currency is `STATIS Euro` */\n                is_EURS: currency === 'EURS',\n                /** determine if the currency is `Tether ERC20` */\n                is_eUSDT: currency === 'eUSDT',\n                /** determine if the currency is `Tether TRC20` */\n                is_tUSDT: currency === 'tUSDT',\n                /** determine if the currency is `USD Coin` */\n                is_USDC: currency === 'USDC',\n                /** determine if the currency is `USDK` */\n                is_USDK: currency === 'USDK',\n                /** Currency code */\n                code: currency,\n                /** Currency display code */\n                display_code: currency === 'UST' ? 'USDT' : currency,\n                /** Local asset name for the currency icon. ex: `IcCurrencyUsd` for `USD` */\n                icon: `IcCurrency${currency[0].toUpperCase() + currency.slice(1).toLowerCase()}`,\n                /** Platforms with providers */\n                //TODO: Remove `as TPlatform` after updating `@deriv/api-types` library\n                //@ts-expect-error need to update `@deriv/api-types` library to the latest version\n                platform: currency_config?.platform as TPlatform,\n            };\n        });\n\n        return modified_currencies_config.reduce<Record<string, typeof modified_currencies_config[number]>>(\n            (previous, current) => ({ ...previous, [current.code]: current }),\n            {}\n        );\n    }, [website_status_data?.website_status?.currencies_config]);\n\n    const getConfig = useCallback((currency: string) => currencies_config?.[currency], [currencies_config]);\n\n    return {\n        /** Returns the currency config object for the given currency */\n        getConfig,\n        /** Available currencies and their information */\n        currencies_config,\n        ...rest,\n    };\n};\n\nexport default useCurrencyConfig;\n","import { useStore } from '@deriv/stores';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook to get the currency config information for the user's current currency. */\nconst useCurrentCurrencyConfig = () => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { getConfig } = useCurrencyConfig();\n    const currency_config = getConfig(currency);\n\n    // Safe to do null assertion here because the user's currency is always\n    // available in the currency config object so it can't be null.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return currency_config!;\n};\n\nexport default useCurrentCurrencyConfig;\n","import { useCallback, useEffect } from 'react';\nimport { useRequest } from '@deriv/api';\n\nconst useDepositCryptoAddress = () => {\n    const { data, mutate, ...rest } = useRequest('cashier');\n    const deposit_address = typeof data?.cashier !== 'string' ? data?.cashier?.deposit?.address : undefined;\n\n    const send = useCallback(\n        () => mutate({ payload: { cashier: 'deposit', provider: 'crypto', type: 'api' } }),\n        [mutate]\n    );\n\n    useEffect(() => {\n        send();\n    }, [send]);\n\n    return {\n        ...rest,\n        resend: send,\n        data: deposit_address,\n    };\n};\n\nexport default useDepositCryptoAddress;\n","import { useCallback, useEffect } from 'react';\n\nimport { useRequest } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst useDepositFiatAddress = () => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { is_dark_mode_on } = ui;\n    const { data, mutate, ...rest } = useRequest('cashier');\n    const dark_mode = is_dark_mode_on ? 'on' : 'off';\n\n    let deposit_iframe_url;\n    if (typeof data?.cashier === 'string') {\n        const cashierUrl = new URL(data.cashier);\n        cashierUrl.searchParams.set('DarkMode', dark_mode);\n        deposit_iframe_url = cashierUrl.toString();\n    }\n\n    const send = useCallback(() => mutate({ payload: { cashier: 'deposit', provider: 'doughflow' } }), [mutate]);\n\n    useEffect(() => {\n        send();\n    }, [send, current_language]);\n\n    return {\n        ...rest,\n        resend: send,\n        data: deposit_iframe_url,\n    };\n};\n\nexport default useDepositFiatAddress;\n","import { getDefaultState } from './mutation.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { shallowEqualObjects } from './utils.mjs';\n\n// CLASS\nclass MutationObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    var _this$currentMutation;\n\n    const prevOptions = this.options;\n    this.options = this.client.defaultMutationOptions(options);\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this\n      });\n    }\n\n    (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.setOptions(this.options);\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$currentMutation2;\n\n      (_this$currentMutation2 = this.currentMutation) == null ? void 0 : _this$currentMutation2.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    const result = { ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}\n\nexport { MutationObserver };\n//# sourceMappingURL=mutationObserver.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { parseMutationArgs, MutationObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { shouldThrowError } from './utils.mjs';\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const [observer] = React.useState(() => new MutationObserver(queryClient, options));\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = useSyncExternalStore(React.useCallback(onStoreChange => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = React.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && shouldThrowError(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\nexport { useMutation };\n//# sourceMappingURL=useMutation.mjs.map\n"],"names":["useMutation","name","options","send","useAPI","_useMutation2","_useMutation","props","prop","payload","undefined","mutate","_mutate","mutateAsync","_mutateAsync","rest","_objectWithoutProperties","_excluded","_objectSpread","useCallback","observer","isMobile","useDevice","ui","useStore","should_show_deposit_now_or_later_modal","setShouldShowDepositNowOrLaterModal","setShouldShowOneTimeDepositModal","onClose","is_click_on_cancel_button","Analytics","trackEvent","action","form_name","account_mode","popup_name","popup_type","cta_name","React","_jsx","Dialog","className","title","Localize","i18n_default_text","confirm_button_text","localize","onConfirm","onConfirmModal","cancel_button_text","onCancel","is_visible","has_close_icon","is_closed_on_cancel","children","Text","align","size","ErrorState","error","message","EmptyState","icon","description","label","onClick","window","location","reload","tertiary","data","iframe_url","useDepositFiatAddress","is_loading","setIsLoading","useState","useEffect","setPerformanceValue","_jsxs","Loading","is_fullscreen","onLoad","src","style","display","qrcodegen","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","call","__objRest","source","exclude","target","indexOf","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","encodeText","text","ecl","segs","QrSegment","makeSegments","encodeSegments","encodeBinary","seg","makeBytes","minVersion","maxVersion","boostEcl","dataUsedBits","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","length","dataCapacityBits","Math","min","padByte","forEach","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","map","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","makeNumeric","digits","isNumeric","parseInt","substr","NUMERIC","makeAlphanumeric","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","toUtf8ByteArray","makeEci","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","_a","level","bgColor","fgColor","otherProps","imgSrc","_canvas","_image","isImgLoaded","setIsImageLoaded","current","canvas","ctx","getContext","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","ref","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs","crypto_currency_to_network_mapper","BTC","ETH","LTC","UST","USDC","eUSDT","tUSDT","_crypto_config$minimu","_crypto_config$minimu2","client","currency","crypto_config","useCryptoConfig","currency_config","useCurrentCurrencyConfig","minimum_deposit_disclaimer","is_tUSDT","values","minimum_deposit","formatMoney","code","display_code","components","InlineMessage","currency_name","currency_code","network_name","weight","loginid","deposit_crypto_address","isLoading","resend","useDepositCryptoAddress","type","Button","secondary","small","_Fragment","Clipboard","text_copy","info_message","success_message","onClickHandler","login_id","popoverAlignment","DepositCryptoDisclaimers","OneTimeDepositModalContent","is_crypto_provider","isDesktop","onLiveChatClick","Chat","open","classNames","as","DepositCrypto","DepositFiatIframe","is_cr_account","is_logged_in","balance","updateAccountStatus","should_show_one_time_deposit_modal","setShouldShowCryptoTransactionProcessingModal","platform","cashier","includes","crypto_transactions","has_transactions","useCryptoTransactions","is_account_deposited","setIsAccountDeposited","onCloseModal","Number","some","tx","is_deposit","status_code","Modal","is_open","toggleModal","should_header_stick_body","Body","MobileFullPageModal","body_className","header","height_offset","is_modal_open","onClickClose","DepositNowOrLaterModal","CryptoTransactionProcessingModal","_data$crypto_config","_useQuery","useQuery","currencies_config","allowToMakeSubscription","_data$cashier_payment2","_useSubscription","useSubscription","subscribe","transactions","setTransactions","old_transactions","_data$cashier_payment","new_transactions","cashier_payments","crypto","updated_transactions","new_transaction","index","findIndex","old_transaction","id","modified_transactions","useMemo","transaction","transaction_type","is_withdrawal","sorted_transactions","sort","submit_date","last_transaction","useCurrencyConfig","_website_status_data$2","_useFetch","useFetch","website_status_data","_website_status_data$","website_status","website_status_currencies_config","keys","is_crypto","is_fiat","is_AUD","is_USD","is_EUR","is_GBP","is_BTC","is_ETH","is_LTC","is_DAI","is_IDK","is_PAX","is_USB","is_USDT","is_TUSD","is_BUSD","is_EURS","is_eUSDT","is_USDC","is_USDK","toUpperCase","toLowerCase","previous","getConfig","_data$cashier","_useRequest","useRequest","deposit_address","deposit","address","provider","common","current_language","is_dark_mode_on","dark_mode","deposit_iframe_url","cashierUrl","URL","searchParams","set","toString","MutationObserver","super","setOptions","bindMethods","updateResult","bind","reset","_this$currentMutation","prevOptions","defaultMutationOptions","getMutationCache","notify","mutation","currentMutation","onUnsubscribe","_this$currentMutation2","hasListeners","removeObserver","onMutationUpdate","notifyOptions","listeners","onSuccess","onError","getCurrentResult","currentResult","variables","mutateOptions","build","addObserver","execute","state","status","isSuccess","isError","isIdle","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","arg1","arg2","arg3","queryClient","useSyncExternalStore","onStoreChange","batchCalls","catch","noop","useErrorBoundary"],"sourceRoot":""}