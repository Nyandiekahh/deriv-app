{"version":3,"file":"js/core.chunk.3195.78973846415b1162ad96.js","mappings":"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","sources":["webpack:///../../account/dist/account/js/currency-radio-button-group.js","webpack:///../../account/dist/account/js/currency-radio-button.js","webpack:///../../account/dist/account/js/currency-selector-config.js","webpack:///../../account/dist/account/js/risk-tolerance-warning-modal.js","webpack:///../../account/src/Components/currency-selector/ust-popover.tsx","webpack:///../../account/src/Components/currency-selector/radio-button.tsx","webpack:///../../account/src/Components/currency-selector/radio-button-group.tsx","webpack:///../../account/src/Components/currency-selector/currency-selector.tsx","webpack:///../../account/src/Components/currency-selector/index.ts","webpack:///../../account/src/Components/real-account-signup/helpers/utils.ts","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-info.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-item.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/account-info-wrapper.tsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/account-actions.tsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/menu-link.tsx","webpack:///./App/Components/Layout/Header/platform-dropdown.jsx","webpack:///./App/Components/Layout/Header/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/menu-title.tsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/mobile-language-menu.tsx","webpack:///./App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./App/Components/Elements/Notifications/empty-notification.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-clear-all-footer.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-list.tsx","webpack:///./App/Containers/NotificationsDialog/notification-list-wrapper.tsx","webpack:///./App/Containers/NotificationsDialog/index.ts","webpack:///./App/Containers/NotificationsDialog/notifications-dialog.tsx","webpack:///./App/Components/Layout/Header/toggle-notifications.jsx","webpack:///./App/Containers/Layout/header/traders-hub-onboarding.tsx","webpack:///./App/Components/Layout/Header/wallets/wallet-badge.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-item.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-list.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-mobile.tsx","webpack:///./App/Components/Layout/Header/wallets/account-info-wallets.tsx","webpack:///./App/Components/Layout/Header/wallets/account-actions-wallets.tsx","webpack:///./App/Constants/platform-config.ts","webpack:///./Assets/SvgComponents/header/deriv-logo-short.svg","webpack:///./App/Containers/Layout/header/deriv-short-logo.tsx","webpack:///./App/Containers/Layout/header/traders-hub-home-button.tsx","webpack:///./App/Containers/RealAccountSignup/helpers/constants.js","webpack:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-currency-note.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.js","webpack:///./App/Containers/RealAccountSignup/add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/change-account-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/signup-error-content.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx","webpack:///./App/Containers/RealAccountSignup/status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/new-status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup.jsx","webpack:///./App/Containers/RealAccountSignup/index.js","webpack:///./App/Containers/RealAccountSignup/real-account-signup-loader.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/index.js","webpack:///./App/Containers/new-version-notification.jsx","webpack:///../../hooks/src/useAccountTransferVisible.ts","webpack:///../../hooks/src/useAuthorize.ts","webpack:///../../hooks/src/useHasMaltaInvestAccount.ts","webpack:///../../hooks/src/useHasSvgAccount.ts","webpack:///../../hooks/src/useIsRealAccountNeededForCashier.ts","webpack:///../../hooks/src/useP2PSettings.ts","webpack:///../../hooks/src/usePaymentAgentList.ts","webpack:///../../hooks/src/usePaymentAgentTransferVisible.ts","webpack:///../../hooks/src/useStoreLinkedWalletsAccounts.ts","webpack:///../../hooks/src/useStoreWalletAccountsList.ts"],"sourcesContent":["/*! For license information please see currency-radio-button-group.js.LICENSE.txt */\n!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"react\")):e[\"@deriv/account\"]=r(e.react)}(self,(e=>(()=>{\"use strict\";var r={\"../../../node_modules/object-assign/index.js\":e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r[\"_\"+String.fromCharCode(t)]=t;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var c,s,i=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),a=1;a<arguments.length;a++){for(var l in c=Object(arguments[a]))t.call(c,l)&&(i[l]=c[l]);if(r){s=r(c);for(var u=0;u<s.length;u++)n.call(c,s[u])&&(i[s[u]]=c[s[u]])}}return i}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,r,t)=>{t(\"../../../node_modules/object-assign/index.js\");var n=t(\"react\"),o=60103;if(\"function\"==typeof Symbol&&Symbol.for){var c=Symbol.for;o=c(\"react.element\"),c(\"react.fragment\")}var s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i=Object.prototype.hasOwnProperty,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var n,c={},l=null,u=null;for(n in void 0!==t&&(l=\"\"+t),void 0!==r.key&&(l=\"\"+r.key),void 0!==r.ref&&(u=r.ref),r)i.call(r,n)&&!a.hasOwnProperty(n)&&(c[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===c[n]&&(c[n]=r[n]);return{$$typeof:o,type:e,key:l,ref:u,props:c,_owner:s.current}}r.jsx=l,r.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,r,t)=>{e.exports=t(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},react:r=>{r.exports=e}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var c=t[e]={exports:{}};return r[e](c,c.exports,n),c.exports}n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var o={};n.d(o,{default:()=>a});n(\"react\");function c(e){var r,t,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(r=0;r<o;r++)e[r]&&(t=c(e[r]))&&(n&&(n+=\" \"),n+=t)}else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}const s=function(){for(var e,r,t=0,n=\"\",o=arguments.length;t<o;t++)(e=arguments[t])&&(r=c(e))&&(n&&(n+=\" \"),n+=r);return n};var i=n(\"../../../node_modules/react/jsx-runtime.js\");const a=({children:e,label:r,className:t,is_title_enabled:n=!0,is_fiat:o,item_count:c,description:a})=>(0,i.jsxs)(\"div\",{className:t,children:[n&&(0,i.jsx)(\"h2\",{className:s(`${t}--is-header`,{\"currency-selector__is-crypto\":!o}),children:r}),o&&(0,i.jsx)(\"div\",{className:\"currency-selector__description\",children:a}),(0,i.jsx)(\"div\",{className:s(\"currency-list__items\",{\"currency-list__items__center\":c<4,\"currency-list__items__is-fiat\":o,\"currency-list__items__is-crypto\":!o}),children:e})]});return o=o.default})()));\n//# sourceMappingURL=currency-radio-button-group.js.map","/*! For license information please see currency-radio-button.js.LICENSE.txt */\n!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv/components\",\"@deriv/shared\",\"@deriv/translations\",\"react\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):e[\"@deriv/account\"]=r(e[\"@deriv/components\"],e[\"@deriv/shared\"],e[\"@deriv/translations\"],e.react)}(self,((e,r,t,n)=>(()=>{\"use strict\";var o={\"../../../node_modules/object-assign/index.js\":e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r[\"_\"+String.fromCharCode(t)]=t;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var s,i,a=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))t.call(s,l)&&(a[l]=s[l]);if(r){i=r(s);for(var d=0;d<i.length;d++)n.call(s,i[d])&&(a[i[d]]=s[i[d]])}}return a}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,r,t)=>{t(\"../../../node_modules/object-assign/index.js\");var n=t(\"react\"),o=60103;if(\"function\"==typeof Symbol&&Symbol.for){var s=Symbol.for;o=s(\"react.element\"),s(\"react.fragment\")}var i=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var n,s={},l=null,d=null;for(n in void 0!==t&&(l=\"\"+t),void 0!==r.key&&(l=\"\"+r.key),void 0!==r.ref&&(d=r.ref),r)a.call(r,n)&&!c.hasOwnProperty(n)&&(s[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===s[n]&&(s[n]=r[n]);return{$$typeof:o,type:e,key:l,ref:d,props:s,_owner:i.current}}r.jsx=l,r.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,r,t)=>{e.exports=t(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},\"@deriv/components\":r=>{r.exports=e},\"@deriv/shared\":e=>{e.exports=r},\"@deriv/translations\":e=>{e.exports=t},react:e=>{e.exports=n}},s={};function i(e){var r=s[e];if(void 0!==r)return r.exports;var t=s[e]={exports:{}};return o[e](t,t.exports,i),t.exports}i.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return i.d(r,{a:r}),r},i.d=(e,r)=>{for(var t in r)i.o(r,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},i.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var a={};i.d(a,{default:()=>j});var c=i(\"react\"),l=i.n(c);function d(e){var r,t,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(r=0;r<o;r++)e[r]&&(t=d(e[r]))&&(n&&(n+=\" \"),n+=t)}else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}const u=function(){for(var e,r,t=0,n=\"\",o=arguments.length;t<o;t++)(e=arguments[t])&&(r=d(e))&&(n&&(n+=\" \"),n+=r);return n};var f=i(\"@deriv/components\"),m=i(\"@deriv/shared\"),p=i(\"@deriv/translations\"),_=i(\"../../../node_modules/react/jsx-runtime.js\");const v=({id:e})=>{let r;return r=/^UST$/i.test(e)?(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.\",components:[(0,_.jsx)(\"br\",{},0)]}):/^tUSDT$/i.test(e)?(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.\"}):(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.\"}),(0,_.jsx)(f.Popover,{alignment:\"top\",className:\"currency-list__popover\",disable_message_icon:!0,icon:\"info\",is_bubble_hover_enabled:!0,message:r,zIndex:\"9999\"})},j=({field:{name:e,value:r,onChange:t,onBlur:n},icon:o,id:s,label:i,second_line_label:a,onClick:c,className:d,...p})=>(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(\"input\",{name:e,id:s,type:\"radio\",value:s,checked:s===r,onChange:t,onBlur:n,disabled:p.selected,className:u(d,\"currency-list__radio-button\"),...p}),(0,_.jsx)(\"label\",{htmlFor:s,className:u(\"currency-list__item\",{\"currency-list__item--selected\":s===r,\"currency-list__item--current\":p.selected}),onClick:c,children:o?(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(f.Icon,{className:\"currency-list__icon\",icon:o}),(0,_.jsxs)(\"div\",{className:\"label currency-list__item-text\",children:[(0,_.jsx)(\"div\",{className:\"currency-list__item-label\",children:i}),(0,_.jsx)(\"div\",{className:\"currency-list__item-code\",children:a})]})]}):(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(f.Icon,{className:\"currency-list__icon\",icon:`IcCurrency-${s?.toLowerCase()}`}),s&&/^(UST|eUSDT|tUSDT)$/i.test(s)&&(0,_.jsx)(v,{id:s}),(0,_.jsxs)(\"div\",{className:\"label currency-list__item-text\",children:[(0,_.jsx)(\"div\",{className:\"currency-list__item-label\",children:i}),(0,_.jsxs)(\"div\",{className:\"currency-list__item-code\",children:[\"(\",(0,m.getCurrencyDisplayCode)(s),\")\"]})]})]})})]});return a=a.default})()));\n//# sourceMappingURL=currency-radio-button.js.map","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"@deriv/shared\"),require(\"@deriv/translations\")):\"function\"==typeof define&&define.amd?define([\"@deriv/shared\",\"@deriv/translations\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"@deriv/shared\"),require(\"@deriv/translations\")):e[\"@deriv/account\"]=r(e[\"@deriv/shared\"],e[\"@deriv/translations\"])}(self,((e,r)=>(()=>{\"use strict\";var t={\"@deriv/shared\":r=>{r.exports=e},\"@deriv/translations\":e=>{e.exports=r}},a={};function o(e){var r=a[e];if(void 0!==r)return r.exports;var i=a[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return o.d(r,{a:r}),r},o.d=(e,r)=>{for(var t in r)o.o(r,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var i={};o.d(i,{default:()=>l});var n=o(\"@deriv/shared\"),d=o(\"@deriv/translations\");const s={currency:{supported_in:[\"maltainvest\",\"svg\"],default_value:\"\",rules:[[\"req\",(0,d.localize)(\"Select an item\")]]}},l=({real_account_signup_target:e},r)=>({header:{active_title:(0,d.localize)(\"Select your preferred currency\"),title:(0,d.localize)(\"Account currency\")},body:r,form_value:(0,n.getDefaultFields)(e,s),props:{validate:(0,n.generateValidationFunction)(e,s)},passthrough:[\"legal_allowed_currencies\"],icon:\"IcDashboardCurrency\"});return i=i.default})()));\n//# sourceMappingURL=currency-selector-config.js.map","/*! For license information please see risk-tolerance-warning-modal.js.LICENSE.txt */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"@deriv-com/translations\"),require(\"@deriv/components\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv-com/translations\",\"@deriv/components\",\"react\"],t):\"object\"==typeof exports?exports[\"@deriv/account\"]=t(require(\"@deriv-com/translations\"),require(\"@deriv/components\"),require(\"react\")):e[\"@deriv/account\"]=t(e[\"@deriv-com/translations\"],e[\"@deriv/components\"],e.react)}(self,((e,t,r)=>(()=>{\"use strict\";var o={\"../../../node_modules/object-assign/index.js\":e=>{var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t[\"_\"+String.fromCharCode(r)]=r;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(\"\"))return!1;var o={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){o[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},o)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,n){for(var s,i,a=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))r.call(s,l)&&(a[l]=s[l]);if(t){i=t(s);for(var d=0;d<i.length;d++)o.call(s,i[d])&&(a[i[d]]=s[i[d]])}}return a}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,t,r)=>{r(\"../../../node_modules/object-assign/index.js\");var o=r(\"react\"),n=60103;if(\"function\"==typeof Symbol&&Symbol.for){var s=Symbol.for;n=s(\"react.element\"),s(\"react.fragment\")}var i=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,r){var o,s={},l=null,d=null;for(o in void 0!==r&&(l=\"\"+r),void 0!==t.key&&(l=\"\"+t.key),void 0!==t.ref&&(d=t.ref),t)a.call(t,o)&&!c.hasOwnProperty(o)&&(s[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===s[o]&&(s[o]=t[o]);return{$$typeof:n,type:e,key:l,ref:d,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,t,r)=>{e.exports=r(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},\"@deriv-com/translations\":t=>{t.exports=e},\"@deriv/components\":e=>{e.exports=t},react:e=>{e.exports=r},\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\":(e,t,r)=>{r.d(t,{Y:()=>d});var o=r(\"react\"),n=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{};var s=\"object\"==typeof n&&n&&n.Object===Object&&n,i=\"object\"==typeof self&&self&&self.Object===Object&&self;s||i||Function(\"return this\")();var a=typeof window<\"u\"?o.useLayoutEffect:o.useEffect;var c=typeof window>\"u\";function l(e,{defaultValue:t=!1,initializeWithValue:r=!0}={}){const n=e=>c?t:window.matchMedia(e).matches,[s,i]=(0,o.useState)((()=>r?n(e):t));function l(){i(n(e))}return a((()=>{const t=window.matchMedia(e);return l(),t.addListener?t.addListener(l):t.addEventListener(\"change\",l),()=>{t.removeListener?t.removeListener(l):t.removeEventListener(\"change\",l)}}),[e]),s}const d=()=>({isDesktop:l(\"(min-width: 1280px)\"),isMobile:l(\"(max-width: 600px)\"),isTablet:l(\"(min-width: 601px) and (max-width: 1279px)\"),isTabletPortrait:l(\"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"),isMobileOrTabletLandscape:l(\"(max-width: 1279px) and (orientation: landscape)\")})}},n={};function s(e){var t=n[e];if(void 0!==t)return t.exports;var r=n[e]={exports:{}};return o[e](r,r.exports,s),r.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};s.d(i,{default:()=>m});var a=s(\"react\"),c=s.n(a),l=s(\"@deriv/components\"),d=s(\"@deriv-com/translations\"),u=s(\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\"),p=s(\"../../../node_modules/react/jsx-runtime.js\");const m=({show_risk_modal:e,handleAcceptRisk:t,title:r,button_text:o,body_content:n,has_sub_header:s=!1})=>{const{isDesktop:i}=(0,u.Y)(),{localize:a}=(0,d.useTranslations)();return(0,p.jsx)(c().Fragment,{children:i?(0,p.jsxs)(l.Modal,{width:\"44rem\",title:r,height:\"41rem\",is_open:e,className:\"center-risk-modal\",toggleModal:t,has_close_icon:!1,children:[(0,p.jsxs)(l.Modal.Body,{children:[(0,p.jsx)(l.Icon,{icon:\"IcRedWarning\",size:\"63\"}),(0,p.jsx)(l.Text,{as:\"p\",size:\"xs\",align:\"center\",line_height:\"s\",className:\"risk-acceptance__text\",children:n})]}),(0,p.jsx)(l.Modal.Footer,{children:(0,p.jsx)(l.Button,{type:\"button\",large:!0,text:o??a(\"OK\"),primary:!0,onClick:t})})]}):(0,p.jsxs)(l.MobileDialog,{visible:e,title:s?a(\"Trading Experience Assessment\"):r,portal_element_id:\"modal_root\",has_close_icon:!1,children:[(0,p.jsxs)(l.Modal.Body,{className:\"risk-tolerance-modal\",children:[s?(0,p.jsxs)(l.Text,{size:\"xs\",line_height:\"s\",weight:\"bold\",as:\"p\",className:\"risk-tolerance-modal__title\",children:[r,(0,p.jsx)(\"div\",{className:\"risk-tolerance-modal__title--separator\"})]}):null,(0,p.jsxs)(\"div\",{className:\"risk-tolerance-modal__wrapper\",children:[(0,p.jsx)(l.Icon,{icon:\"IcRedWarning\",size:\"65\"}),(0,p.jsx)(l.Text,{as:\"p\",size:\"xs\",align:\"center\",line_height:\"l\",className:\"risk-acceptance__text\",children:n})]})]}),(0,p.jsx)(l.Modal.Footer,{className:\"risk-tolerance-modal__footer\",children:(0,p.jsx)(l.Button,{type:\"button\",large:!0,text:o??a(\"OK\"),primary:!0,onClick:t})})]})})};return i=i.default})()));\n//# sourceMappingURL=risk-tolerance-warning-modal.js.map","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nexport type TUSTPopover = {\n    id: string;\n};\n\nconst USTPopover = ({ id }: TUSTPopover) => {\n    let popover_message: React.ReactElement;\n    if (/^UST$/i.test(id)) {\n        popover_message = (\n            <Localize\n                i18n_default_text={\n                    'Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.'\n                }\n                components={[<br key={0} />]}\n            />\n        );\n    } else if (/^tUSDT$/i.test(id)) {\n        popover_message = (\n            <Localize\n                i18n_default_text={'Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.'}\n            />\n        );\n    } else {\n        popover_message = (\n            <Localize\n                i18n_default_text={\n                    'Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.'\n                }\n            />\n        );\n    }\n\n    return (\n        <Popover\n            alignment='top'\n            className='currency-list__popover'\n            disable_message_icon\n            icon='info'\n            is_bubble_hover_enabled\n            message={popover_message}\n            zIndex='9999'\n        />\n    );\n};\n\nexport default USTPopover;\n","import React, { AllHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { Icon } from '@deriv/components';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport USTPopover from './ust-popover';\n\ntype TRadioButtonExtend = {\n    field: React.InputHTMLAttributes<HTMLInputElement>;\n    icon?: string;\n    second_line_label?: string;\n    id: string;\n    label: string;\n    onClick?: (e: React.MouseEvent<HTMLLabelElement, MouseEvent>) => void;\n};\n\nexport type TRadioButton = AllHTMLAttributes<HTMLInputElement | HTMLLabelElement> & TRadioButtonExtend;\n\n/**\n *  RadioButton component to select currency\n * @name RadioButton\n * @param {React.InputHTMLAttributes<HTMLInputElement>} field - field props given by Formik\n * @param {string} icon - icon name\n * @param {string} id - currency id\n * @param {string} label - currency name\n * @param {string} second_line_label - currency code\n * @param {Function} onClick - function to be called on click\n * @param {AllHTMLAttributes<HTMLInputElement | HTMLLabelElement>} props - other props to be passed\n * @returns {React.ReactNode} - returns a React node\n */\n\nconst RadioButton = ({\n    field: { name, value, onChange, onBlur },\n    icon,\n    id,\n    label,\n    second_line_label,\n    onClick,\n    className,\n    ...props\n}: TRadioButton) => {\n    return (\n        <React.Fragment>\n            <input\n                name={name}\n                id={id}\n                type='radio'\n                value={id} // could be something else for output?\n                checked={id === value}\n                onChange={onChange}\n                onBlur={onBlur}\n                disabled={props.selected}\n                className={clsx(className, 'currency-list__radio-button')}\n                {...props}\n            />\n            <label\n                htmlFor={id}\n                className={clsx('currency-list__item', {\n                    'currency-list__item--selected': id === value,\n                    'currency-list__item--current': props.selected,\n                })}\n                onClick={onClick}\n            >\n                {icon ? (\n                    <React.Fragment>\n                        <Icon className='currency-list__icon' icon={icon} />\n                        <div className='label currency-list__item-text'>\n                            <div className='currency-list__item-label'>{label}</div>\n                            <div className='currency-list__item-code'>{second_line_label}</div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Icon className='currency-list__icon' icon={`IcCurrency-${id?.toLowerCase()}`} />\n                        {id && /^(UST|eUSDT|tUSDT)$/i.test(id) && <USTPopover id={id} />}\n                        <div className='label currency-list__item-text'>\n                            <div className='currency-list__item-label'>{label}</div>\n                            <div className='currency-list__item-code'>({getCurrencyDisplayCode(id)})</div>\n                        </div>\n                    </React.Fragment>\n                )}\n            </label>\n        </React.Fragment>\n    );\n};\n\nexport default RadioButton;\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type TRadioButtonGroup = {\n    className: string;\n    is_fiat?: boolean;\n    is_title_enabled?: boolean;\n    item_count: number;\n    label?: string;\n    description?: React.ReactNode;\n};\n\n/**\n * Wrapper component for RadioButton\n * @name RadioButtonGroup\n * @param {string} className - class name for styling\n * @param {boolean} is_fiat - is fiat currency\n * @param {boolean} is_title_enabled - is title enabled\n * @param {number} item_count - number of items\n * @param {string} label - label for the radio button\n * @param {React.ReactNode} description - description for the radio button\n * @returns {React.ReactNode} - returns a React node\n */\nconst RadioButtonGroup = ({\n    children,\n    label,\n    className,\n    is_title_enabled = true,\n    is_fiat,\n    item_count,\n    description,\n}: React.PropsWithChildren<TRadioButtonGroup>) => {\n    return (\n        <div className={className}>\n            {is_title_enabled && (\n                <h2\n                    className={clsx(`${className}--is-header`, {\n                        'currency-selector__is-crypto': !is_fiat,\n                    })}\n                >\n                    {label}\n                </h2>\n            )}\n            {is_fiat && <div className='currency-selector__description'>{description}</div>}\n            <div\n                className={clsx('currency-list__items', {\n                    'currency-list__items__center': item_count < 4,\n                    'currency-list__items__is-fiat': is_fiat,\n                    'currency-list__items__is-crypto': !is_fiat,\n                })}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default RadioButtonGroup;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Field, Formik, FormikHandlers, FormikState } from 'formik';\nimport { AutoHeightWrapper, FormSubmitButton, Div100vhContainer, Modal, ThemedScrollbars } from '@deriv/components';\nimport { reorderCurrencies, getAddressDetailsFields, CURRENCY_TYPE } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport RadioButton from './radio-button';\nimport RadioButtonGroup from './radio-button-group';\nimport { splitValidationResultTypes } from '../real-account-signup/helpers/utils';\nimport { useDevice } from '@deriv-com/ui';\n\nexport const Hr = () => <div className='currency-hr' />;\n\nexport type TCurrencySelectorFormProps = {\n    currency: string;\n};\n\ntype TCurrencySelectorExtend = {\n    getCurrentStep: () => number;\n    goToNextStep: () => void;\n    goToStep: (step: number) => void;\n    goToPreviousStep: () => void;\n    has_cancel: boolean;\n    has_wallet_account: boolean;\n    is_virtual: boolean;\n    onCancel: (current_step: number, goToPreviousStep: () => void) => void;\n    onSave?: (current_step: number, values: TCurrencySelectorFormProps) => void;\n    onSubmit: (\n        current_step: number | null,\n        values: TCurrencySelectorFormProps,\n        action: (isSubmitting: boolean) => void,\n        next_step: () => void\n    ) => void;\n    set_currency: boolean;\n    validate: (values: TCurrencySelectorFormProps) => TCurrencySelectorFormProps;\n    value: TCurrencySelectorFormProps;\n};\n\ntype TCurrencySelector = React.HTMLAttributes<HTMLInputElement | HTMLLabelElement> & TCurrencySelectorExtend;\n\n/**\n * Currency selector component to select the Account currency\n * @name CurrencySelector\n * @param getCurrentStep - Get the current step\n * @param goToNextStep - Go to the next step\n * @param goToStep - Go to a specific step\n * @param goToPreviousStep - Go to the previous step\n * @param has_cancel - Has cancel button\n * @param has_wallet_account - Has wallet account\n * @param is_virtual - Is virtual account\n * @param onCancel - To handle click on cancel button\n * @param onSave - To handle click on save button\n * @param onSubmit - To handle click on submit button\n * @param set_currency - Is current set\n * @param alidate - To validate the form\n * @param alue - Value of the form\n * @returns React node\n */\nconst CurrencySelector = observer(\n    ({\n        getCurrentStep,\n        goToNextStep,\n        goToStep,\n        onSubmit,\n        onSave,\n        onCancel,\n        goToPreviousStep,\n        set_currency,\n        validate,\n        has_cancel = false,\n        has_wallet_account,\n        value,\n    }: TCurrencySelector) => {\n        const { client, ui } = useStore();\n\n        const {\n            currency,\n            has_active_real_account: has_real_account,\n            upgradeable_currencies: legal_allowed_currencies,\n            available_crypto_currencies,\n            has_fiat,\n            accounts,\n        } = client;\n\n        const has_currency = Boolean(currency);\n\n        const { real_account_signup, real_account_signup_target, resetRealAccountSignupParams } = ui;\n        const { isMobile, isDesktop } = useDevice();\n\n        // Wrapped with String() to avoid type mismatch\n        const crypto = legal_allowed_currencies.filter(\n            selected_currency => String(selected_currency.type) === CURRENCY_TYPE.CRYPTO\n        );\n\n        // Wrapped with String() to avoid type mismatch\n        const fiat = legal_allowed_currencies.filter(\n            selected_currency => String(selected_currency.type) === CURRENCY_TYPE.FIAT\n        );\n        const [is_bypass_step, setIsBypassStep] = React.useState<boolean>(false);\n\n        const should_disable_fiat = !!Object.values(accounts).filter(\n            item => item.landing_company_shortcode === real_account_signup_target\n        ).length;\n\n        const handleCancel = (values: TCurrencySelectorFormProps) => {\n            const current_step = getCurrentStep() - 1;\n            onSave?.(current_step, values);\n            onCancel(current_step, goToPreviousStep);\n        };\n\n        const handleValidate = (values: TCurrencySelectorFormProps) => {\n            const current_step = (getCurrentStep?.() || 1) - 1;\n            onSave?.(current_step, values);\n\n            const { errors } = splitValidationResultTypes(validate(values));\n            return errors;\n        };\n\n        // In case of form error bypass to update personal data\n        React.useEffect(() => {\n            if (real_account_signup?.error_code) {\n                setIsBypassStep(true);\n            }\n        }, [real_account_signup?.error_code]);\n\n        React.useEffect(() => {\n            if (is_bypass_step && real_account_signup?.error_details) {\n                const keys = Object.keys(real_account_signup?.error_details);\n                const route_to_address_details = Object.keys(getAddressDetailsFields()).filter(item =>\n                    keys.includes(item)\n                );\n                if (route_to_address_details?.length > 0) {\n                    goToStep(3);\n                } else {\n                    goToNextStep();\n                }\n                resetRealAccountSignupParams();\n                setIsBypassStep(false);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [is_bypass_step]);\n\n        const getHeightOffset = () => {\n            if (!has_currency && has_real_account) {\n                return '89px';\n            }\n            return '159px';\n        };\n\n        const getSubmitLabel = () => {\n            if (set_currency) {\n                return localize('Set currency');\n            } else if (has_wallet_account) {\n                return localize('Finish');\n            }\n            return localize('Next');\n        };\n\n        return (\n            <Formik\n                initialValues={value}\n                onSubmit={(values, actions) => {\n                    onSubmit(getCurrentStep ? getCurrentStep() - 1 : null, values, actions.setSubmitting, goToNextStep);\n                }}\n                validate={handleValidate}\n            >\n                {({ handleSubmit, values }: FormikState<TCurrencySelectorFormProps> & FormikHandlers) => (\n                    <AutoHeightWrapper default_height={450}>\n                        {({\n                            setRef,\n                            height,\n                        }: {\n                            setRef: (instance: HTMLFormElement | null) => void;\n                            height: number;\n                        }) => (\n                            <form\n                                ref={setRef}\n                                onSubmit={handleSubmit}\n                                className='currency-selector'\n                                data-testid='currency_selector_form'\n                            >\n                                <Div100vhContainer\n                                    className={clsx('currency-selector__container', {\n                                        'currency-selector__container--no-top-margin':\n                                            !has_currency && has_real_account && isMobile,\n                                    })}\n                                    height_offset={getHeightOffset()}\n                                    is_disabled={isDesktop}\n                                >\n                                    <ThemedScrollbars height={height}>\n                                        {!!fiat?.length && (\n                                            <React.Fragment>\n                                                <RadioButtonGroup\n                                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                                    is_fiat\n                                                    item_count={fiat.length}\n                                                >\n                                                    {reorderCurrencies(fiat as keyof typeof reorderCurrencies).map(\n                                                        avbl_currency => (\n                                                            <Field\n                                                                key={avbl_currency.value}\n                                                                component={RadioButton}\n                                                                name='currency'\n                                                                id={avbl_currency.value}\n                                                                label={avbl_currency.name}\n                                                                selected={should_disable_fiat && has_fiat}\n                                                            />\n                                                        )\n                                                    )}\n                                                </RadioButtonGroup>\n                                                {!!reorderCurrencies(crypto as keyof typeof reorderCurrencies, 'crypto')\n                                                    ?.length && <Hr />}\n                                            </React.Fragment>\n                                        )}\n                                        {!!reorderCurrencies(crypto as keyof typeof reorderCurrencies, 'crypto')\n                                            ?.length && (\n                                            <React.Fragment>\n                                                <RadioButtonGroup\n                                                    is_title_enabled={false}\n                                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                                    item_count={\n                                                        reorderCurrencies(\n                                                            crypto as keyof typeof reorderCurrencies,\n                                                            'crypto'\n                                                        ).length\n                                                    }\n                                                >\n                                                    {reorderCurrencies(\n                                                        crypto as keyof typeof reorderCurrencies,\n                                                        'crypto'\n                                                    ).map(avbl_currency => (\n                                                        <Field\n                                                            key={avbl_currency.value}\n                                                            component={RadioButton}\n                                                            selected={\n                                                                available_crypto_currencies?.filter(\n                                                                    crypto_data =>\n                                                                        crypto_data.value === avbl_currency.value\n                                                                )?.length === 0\n                                                            }\n                                                            name='currency'\n                                                            id={avbl_currency.value}\n                                                            label={avbl_currency.name}\n                                                        />\n                                                    ))}\n                                                </RadioButtonGroup>\n                                            </React.Fragment>\n                                        )}\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer has_separator is_bypassed={isMobile}>\n                                    <FormSubmitButton\n                                        className={\n                                            set_currency\n                                                ? 'currency-selector--set-currency'\n                                                : 'currency-selector--deriv-account'\n                                        }\n                                        is_disabled={!values.currency}\n                                        is_center={false}\n                                        is_absolute={set_currency}\n                                        label={getSubmitLabel()}\n                                        {...(has_cancel\n                                            ? {\n                                                  cancel_label: localize('Previous'),\n                                                  has_cancel: true,\n                                                  onCancel: () => handleCancel(values),\n                                              }\n                                            : {})}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n);\n\nexport default CurrencySelector;\n","import CurrencySelector from './currency-selector';\n\nexport default CurrencySelector;\n","import { FormikErrors, FormikValues } from 'formik';\n\n/**\n * Takes validation result of a form, sets warnings on component's state and pass errors down to the form\n *\n * @param {object} values - object containing form field values and validations\n * @return {object} object containing errors and warnings\n */\nfunction splitValidationResultTypes(values: FormikValues) {\n    const warnings: FormikErrors<FormikValues> = {};\n    const errors: FormikErrors<FormikValues> = {};\n    Object.keys(values).forEach((field: string) => {\n        const item = values[field];\n        if (Array.isArray(item)) {\n            if (item[0] === 'warn') {\n                warnings[field] = item[1];\n            } else if (item[0] === 'error') {\n                errors[field] = item[1];\n            }\n        }\n    });\n    return { warnings, errors };\n}\n\nexport { splitValidationResultTypes };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsInfoLoader = ({ is_desktop, is_logged_in, is_traders_hub_routes, speed }) => (\n    <ContentLoader\n        height={is_desktop ? 47 : 39}\n        width={is_desktop ? 350 : 161}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? (\n            <LoggedInPreloader is_desktop={is_desktop} is_traders_hub_routes={is_traders_hub_routes} />\n        ) : (\n            <LoggedOutPreloader is_desktop={is_desktop} />\n        )}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_desktop }) => (\n    <React.Fragment>\n        <rect x={is_desktop ? 172 : 0} y='8' rx='4' ry='4' width='66' height='30' />\n        <rect x={is_desktop ? 254 : 74} y='8' rx='4' ry='4' width='80' height='30' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({ is_desktop, is_traders_hub_routes }) => (\n    <>\n        {is_desktop ? (\n            <React.Fragment>\n                {!is_traders_hub_routes && (\n                    <React.Fragment>\n                        <rect x='0' y='6' rx='4' ry='4' width='82' height='32' />\n                        <rect x='98' y='6' rx='4' ry='4' width='1' height='30' />\n                        <circle cx='128' cy='22' r='13' />\n                        <rect x='157' y='18' rx='4' ry='4' width='76' height='7' />\n                        <rect x='249' y='6' rx='4' ry='4' width='1' height='30' />\n                    </React.Fragment>\n                )}\n                <circle cx='279' cy='20' r='13' />\n                <circle cx='321' cy='20' r='13' />\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                {!is_traders_hub_routes && (\n                    <React.Fragment>\n                        <circle cx='13' cy='20' r='13' />\n                        <rect x='34' y='17' rx='4' ry='4' width='76' height='7' />\n                        <rect x='118' y='6' rx='4' ry='4' width='1' height='30' />\n                    </React.Fragment>\n                )}\n                <circle cx='140' cy='20' r='13' />\n            </React.Fragment>\n        )}\n    </>\n);\n\nAccountsInfoLoader.propTypes = {\n    speed: PropTypes.number,\n    is_desktop: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\nexport { AccountsInfoLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsItemLoader = ({ speed }) => (\n    <ContentLoader\n        height={24}\n        width={246}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <circle cx='18' cy='13' r='10' />\n        <rect x='36' y='3' rx='4' ry='4' width='108' height='20' />\n        <rect x='175' y='3' rx='4' ry='4' width='70' height='20' />\n    </ContentLoader>\n);\n\nAccountsItemLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { AccountsItemLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nconst PlatformSwitcherLoader = ({ is_mobile, speed }) => {\n    const container_margin = 16;\n    const element_spacing = is_mobile ? 16 : 8;\n    const logo_size = is_mobile ? 40 : 32;\n    const name_height = 16;\n    const name_width = 90;\n    const name_x = container_margin + logo_size + element_spacing;\n    const name_y = is_mobile ? 12 : 8;\n    const container_width = container_margin * 2 + logo_size + element_spacing + name_width;\n    return (\n        <ContentLoader\n            height={logo_size}\n            width={container_width}\n            speed={speed}\n            backgroundColor={'var(--general-section-1)'}\n            foregroundColor={'var(--general-hover)'}\n        >\n            <rect x={container_margin} y='0' rx='4' ry='4' width={logo_size} height={logo_size} />\n            <rect x={name_x} y={name_y} rx='4' ry='4' width={name_width} height={name_height} />\n        </ContentLoader>\n    );\n};\n\nexport { PlatformSwitcherLoader };\n","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { isBot } from '@deriv/shared';\n\ntype TAccountInfoWrapper = {\n    is_disabled?: boolean;\n    is_mobile?: boolean;\n    is_dtrader_v2?: boolean;\n    disabled_message?: string;\n};\n\nconst AccountInfoWrapper = ({\n    is_disabled,\n    is_mobile,\n    is_dtrader_v2,\n    disabled_message,\n    children,\n}: React.PropsWithChildren<TAccountInfoWrapper>) =>\n    is_disabled && disabled_message ? (\n        <Popover\n            alignment={(isBot() || is_dtrader_v2) && is_mobile ? 'bottom' : 'left'}\n            message={disabled_message}\n            zIndex='99999'\n        >\n            {children}\n        </Popover>\n    ) : (\n        <React.Fragment>{children}</React.Fragment>\n    );\n\nexport default AccountInfoWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { Text, Icon } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { BinaryLink } from '../../Routes';\nimport { observer, useStore } from '@deriv/stores';\nimport { routes, startPerformanceEventTimer } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { useHistory } from 'react-router';\nimport './menu-links.scss';\n\nconst MenuItems = ({ id, text, icon, link_to, handleClickCashier }) => {\n    return (\n        <BinaryLink\n            id={id}\n            key={icon}\n            to={link_to}\n            className='header__menu-link'\n            active_class='header__menu-link--active'\n            onClick={handleClickCashier}\n        >\n            <Text size='m' line_height='xs' title={text} className='header__menu-link-text'>\n                {icon}\n                {text}\n            </Text>\n        </BinaryLink>\n    );\n};\n\nconst ReportTab = () => (\n    <MenuItems\n        id={'dt_reports_tab'}\n        icon={<Icon icon='IcReports' className='header__icon' />}\n        text={localize('Reports')}\n        link_to={routes.reports}\n    />\n);\n\nconst CashierTab = observer(() => {\n    const { client, ui } = useStore();\n    const { has_any_real_account, is_virtual } = client;\n    const { toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n    const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n\n    const history = useHistory();\n\n    const toggle_modal_routes =\n        window.location.pathname === routes.traders_hub || window.location.pathname === routes.bot;\n\n    const toggleModal = () => {\n        if (toggle_modal_routes && !has_any_real_account) {\n            toggleReadyToDepositModal();\n        } else if (window.location.pathname === routes.traders_hub) {\n            toggleNeedRealAccountForCashierModal();\n        }\n    };\n\n    const handleClickCashier = () => {\n        if ((!has_any_real_account && is_virtual) || real_account_needed_for_cashier) {\n            toggleModal();\n        } else {\n            startPerformanceEventTimer('load_cashier_time');\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    const cashier_redirect =\n        (toggle_modal_routes && !has_any_real_account && is_virtual) || real_account_needed_for_cashier;\n\n    return (\n        <MenuItems\n            id={'dt_cashier_tab'}\n            icon={\n                <>\n                    <Icon icon='IcCashier' className='header__icon' />\n                </>\n            }\n            text={localize('Cashier')}\n            link_to={!cashier_redirect ? routes.cashier : null}\n            handleClickCashier={handleClickCashier}\n        />\n    );\n});\n\nconst MenuLinks = observer(({ is_traders_hub_routes = false }) => {\n    const { isDesktop } = useDevice();\n    const { i18n } = useTranslation();\n    const location = useLocation();\n    const { client } = useStore();\n    const { has_wallet, is_logged_in } = client;\n\n    if (!is_logged_in) return <></>;\n\n    return (\n        <div key={`menu-links__${i18n.language}`} className='header__menu-links'>\n            {isDesktop && !has_wallet && <CashierTab />}\n            {!is_traders_hub_routes && !location.pathname.includes(routes.cashier) && <ReportTab />}\n        </div>\n    );\n});\n\nexport default MenuLinks;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { useAccountSettingsRedirect } from '@deriv/hooks';\nimport { routes, formatMoney, isTabletOs } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { LoginButton } from './login-button.jsx';\nimport { SignupButton } from './signup-button.jsx';\nimport ToggleNotifications from './toggle-notifications.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TUiStore = ReturnType<typeof useStore>['ui'];\n\ntype TAccountActionsProps = {\n    acc_switcher_disabled_message: string;\n    account_type: string;\n    balance: string | number;\n    currency: string;\n    disableApp: () => void;\n    enableApp: () => void;\n    is_acc_switcher_on: boolean;\n    is_acc_switcher_disabled: boolean;\n    is_eu: boolean;\n    is_notifications_visible: boolean;\n    is_logged_in: boolean;\n    is_traders_hub_routes: boolean;\n    is_virtual: boolean;\n    notifications_count: number;\n    onClickDeposit: () => void;\n    toggleAccountsDialog: () => void;\n    toggleNotifications: () => void;\n    openRealAccountSignup: TUiStore['openRealAccountSignup'];\n};\n\nconst AccountInfo = React.lazy(\n    () =>\n        import(\n            /* webpackChunkName: \"account-info\", webpackPreload: true */ 'App/Components/Layout/Header/account-info.jsx'\n        )\n);\n\nconst AccountSettingsToggle = () => {\n    const { redirect_url } = useAccountSettingsRedirect();\n\n    const accountSettings = (\n        <a className='account-settings-toggle' href={redirect_url}>\n            <Icon icon='IcUserOutline' />\n        </a>\n    );\n\n    if (isTabletOs) return accountSettings;\n\n    return (\n        <Popover\n            classNameBubble='account-settings-toggle__tooltip'\n            alignment='bottom'\n            message={<Localize i18n_default_text='Manage account settings' />}\n            should_disable_pointer_events\n            zIndex={'9999'}\n        >\n            {accountSettings}\n        </Popover>\n    );\n};\n\nconst NotificationsToggle = ({\n    count,\n    is_visible,\n    toggleDialog,\n}: {\n    count?: number;\n    is_visible?: boolean;\n    toggleDialog?: () => void;\n}) => (\n    <ToggleNotifications\n        count={count}\n        is_visible={is_visible}\n        toggleDialog={toggleDialog}\n        tooltip_message={<Localize i18n_default_text='View notifications' />}\n        should_disable_pointer_events\n        showPopover={!isTabletOs}\n    />\n);\n\nconst CurrencyButton = ({ openRealAccountSignup }: { openRealAccountSignup: TUiStore['openRealAccountSignup'] }) => (\n    <div className='set-currency'>\n        <Button\n            onClick={() => openRealAccountSignup('set_currency')}\n            has_effect\n            type='button'\n            text={localize('Set currency')}\n            primary\n        />\n    </div>\n);\n\nconst DepositButton = ({ onClickDeposit }: { onClickDeposit: () => void }) => (\n    <Button className='acc-info__button' has_effect text={localize('Deposit')} onClick={onClickDeposit} primary />\n);\n\nconst LoggedOutView = () => (\n    <>\n        <LoginButton className='acc-info__button' />\n        <SignupButton className='acc-info__button' />\n    </>\n);\n\nconst AccountActionsComponent = ({\n    acc_switcher_disabled_message,\n    account_type,\n    balance,\n    currency,\n    disableApp,\n    enableApp,\n    is_acc_switcher_on,\n    is_acc_switcher_disabled,\n    is_eu,\n    is_logged_in,\n    is_notifications_visible,\n    is_traders_hub_routes,\n    is_virtual,\n    notifications_count,\n    onClickDeposit,\n    openRealAccountSignup,\n    toggleAccountsDialog,\n    toggleNotifications,\n}: TAccountActionsProps) => {\n    const { isDesktop } = useDevice();\n    const location = useLocation();\n\n    const isDepositButtonVisible =\n        isDesktop && !is_traders_hub_routes && currency && !location.pathname.includes(routes.cashier);\n    const isCurrencyButtonVisible = isDesktop && !is_traders_hub_routes && !is_virtual && !currency;\n\n    const formattedBalance = balance != null ? formatMoney(currency, balance, true) : undefined;\n\n    const renderAccountInfo = () => (\n        <React.Suspense fallback={<div />}>\n            <AccountInfo\n                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                account_type={account_type}\n                balance={formattedBalance}\n                is_disabled={is_acc_switcher_disabled}\n                is_eu={is_eu}\n                is_virtual={is_virtual}\n                currency={currency}\n                is_dialog_on={is_acc_switcher_on}\n                toggleDialog={toggleAccountsDialog}\n                {...(!isDesktop && {\n                    disableApp,\n                    enableApp,\n                    is_mobile: true,\n                })}\n            />\n        </React.Suspense>\n    );\n\n    if (!is_logged_in) {\n        return <LoggedOutView />;\n    }\n\n    return (\n        <React.Fragment>\n            {isCurrencyButtonVisible && <CurrencyButton openRealAccountSignup={openRealAccountSignup} />}\n            {isDepositButtonVisible && <DepositButton onClickDeposit={onClickDeposit} />}\n            {!is_traders_hub_routes && renderAccountInfo()}\n            <NotificationsToggle\n                count={notifications_count}\n                is_visible={is_notifications_visible}\n                toggleDialog={toggleNotifications}\n            />\n            {isDesktop && <AccountSettingsToggle />}\n        </React.Fragment>\n    );\n};\n\nAccountActionsComponent.displayName = 'AccountActions';\n\nconst AccountActions = React.memo(AccountActionsComponent);\n\nexport { AccountActions };\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@deriv/components';\nimport { useTMB } from '@deriv/hooks';\nimport { getDomainUrl, isStaging, redirectToLogin } from '@deriv/shared';\nimport { getLanguage, localize } from '@deriv/translations';\nimport { requestOidcAuthentication } from '@deriv-com/auth-client';\n\nconst LoginButton = ({ className }) => {\n    const is_deriv_com = /deriv\\.(com)/.test(window.location.hostname) || /localhost:8443/.test(window.location.host);\n    const has_wallet_cookie = Cookies.get('wallet_account');\n    const { isTmbEnabled } = useTMB();\n    return (\n        <Button\n            id='dt_login_button'\n            className={className}\n            has_effect\n            text={localize('Log in')}\n            onClick={async () => {\n                if (has_wallet_cookie) {\n                    if (isStaging()) {\n                        location.href = `https://staging-hub.${getDomainUrl()}/tradershub/login`;\n                    } else {\n                        location.href = `https://hub.${getDomainUrl()}/tradershub/login`;\n                    }\n                }\n                const is_tmb_enabled = await isTmbEnabled();\n                if (is_deriv_com && !is_tmb_enabled) {\n                    try {\n                        await requestOidcAuthentication({\n                            redirectCallbackUri: `${window.location.origin}/callback`,\n                            postLoginRedirectUri: window.location.href,\n                        }).catch(err => {\n                            // eslint-disable-next-line no-console\n                            console.error(err);\n                        });\n                    } catch (err) {\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                    }\n                }\n                window.LiveChatWidget?.call('hide');\n                redirectToLogin(false, getLanguage());\n            }}\n            tertiary\n        />\n    );\n};\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { routes, getStaticUrl } from '@deriv/shared';\nimport { isExternalLink } from '@deriv/utils';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TMenuLink = {\n    data_testid: string;\n    icon: string;\n    is_active: boolean;\n    is_disabled: boolean;\n    is_hidden: boolean;\n    link_to: string;\n    onClickLink: () => void;\n    suffix_icon: string;\n    text: React.ReactNode;\n};\n\nconst MenuLink = observer(\n    ({\n        data_testid,\n        icon = '',\n        is_active,\n        is_disabled,\n        is_hidden,\n        link_to = '',\n        onClickLink,\n        suffix_icon = '',\n        text,\n    }: Partial<TMenuLink>) => {\n        const { ui, client } = useStore();\n        const { isDesktop } = useDevice();\n        const { has_any_real_account, is_virtual } = client;\n        const { setMobileLanguageMenuOpen, toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n        const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n        const is_trade_text = text === localize('Trade');\n        const deriv_static_url = getStaticUrl(link_to);\n        const traders_hub_path = window.location.pathname === routes.traders_hub;\n        const is_languages_link_on_responsive = !isDesktop && link_to === routes.languages;\n        const is_external_link = deriv_static_url && isExternalLink(link_to);\n        const is_cashier_link = [\n            routes.cashier_deposit,\n            routes.cashier_withdrawal,\n            routes.cashier_acc_transfer,\n        ].includes(link_to);\n\n        if (is_hidden) return null;\n\n        if (is_languages_link_on_responsive) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={() => setMobileLanguageMenuOpen(true)}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n        if (real_account_needed_for_cashier && is_cashier_link && traders_hub_path) {\n            const handleClickCashier = () => {\n                onClickLink?.();\n                toggleNeedRealAccountForCashierModal();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (is_cashier_link && is_virtual && !has_any_real_account) {\n            const handleClickCashier = () => {\n                if (traders_hub_path) {\n                    toggleReadyToDepositModal();\n                }\n                onClickLink?.();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (!link_to) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        } else if (is_external_link) {\n            return (\n                <a\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                        'header__menu-mobile-link--active': is_active,\n                    })}\n                    href={link_to}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <Text\n                        className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                        as='h3'\n                        size='xs'\n                        weight={window.location.pathname === routes.trade && is_trade_text ? 'bold' : undefined}\n                    >\n                        {text}\n                    </Text>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </a>\n            );\n        }\n\n        return (\n            <BinaryLink\n                to={link_to}\n                className={classNames('header__menu-mobile-link', {\n                    'header__menu-mobile-link--disabled': is_disabled,\n                    'header__menu-mobile-link--active': is_active,\n                })}\n                onClick={onClickLink}\n                data-testid={data_testid}\n            >\n                <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                <Text\n                    className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                    as='h3'\n                    size='xs'\n                    weight={window.location.pathname === routes.trade && is_trade_text ? 'bold' : undefined}\n                >\n                    {text}\n                </Text>\n                {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n            </BinaryLink>\n        );\n    }\n);\n\nexport default MenuLink;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Icon, useOnClickOutside, Text } from '@deriv/components';\nimport { routes, getActivePlatform, platforms } from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport 'Sass/app/_common/components/platform-dropdown.scss';\nimport { Localize } from '@deriv/translations';\nimport { useHistory } from 'react-router';\nimport { useDevice } from '@deriv-com/ui';\nimport { useIsHubRedirectionEnabled } from '@deriv/hooks';\nimport { useStore } from '@deriv/stores';\n\nconst PlatformBox = ({ platform: { icon, description } }) => (\n    <React.Fragment>\n        <div className='platform-dropdown__list-platform-background' />\n\n        <div className='platform-switcher__dropdown' data-testid='dt_platform_box_icon'>\n            <Icon icon={icon} height={42} width={150} description={icon} />\n            <p className='platform-dropdown__list-platform-description'>{description()}</p>\n        </div>\n    </React.Fragment>\n);\nconst appendAccountParamToUrl = (link_to, client) => {\n    const { is_virtual, currency } = client;\n    let url = link_to;\n\n    if (is_virtual) {\n        url = `${url}${url.includes('?') ? '&' : '?'}account=demo`;\n    } else if (currency) {\n        url = `${url}${url.includes('?') ? '&' : '?'}account=${currency}`;\n    }\n\n    // Add symbol parameter if available in session storage\n    try {\n        const trade_store = JSON.parse(sessionStorage.getItem('trade_store') || '{}');\n        if (trade_store?.symbol) {\n            url = `${url}${url.includes('?') ? '&' : '?'}symbol=${trade_store.symbol}`;\n        }\n    } catch (e) {\n        // If parsing fails, continue without symbol\n    }\n\n    return url;\n};\n\nconst PlatformDropdownContent = ({ platform, app_routing_history, client }) => {\n    return (\n        (platform.link_to && (\n            <BinaryLink\n                data-testid='dt_platform_dropdown'\n                to={appendAccountParamToUrl(platform.link_to, client)}\n                // This is here because in routes-config it needs to have children, but not in menu\n                exact={platform.link_to === routes.trade}\n                className='platform-dropdown__list-platform'\n                isActive={() => getActivePlatform(app_routing_history) === platform.name}\n                onClick={e => window.location.pathname.startsWith(platform.link_to) && e.preventDefault()}\n            >\n                <PlatformBox platform={platform} />\n            </BinaryLink>\n        )) || (\n            <a\n                data-testid='dt_platform_dropdown_link'\n                href={appendAccountParamToUrl(platform.href, client)}\n                className={`platform-dropdown__list-platform ${\n                    getActivePlatform(app_routing_history) === platform.name ? 'active' : ''\n                }`}\n            >\n                <PlatformBox platform={platform} />\n            </a>\n        )\n    );\n};\n\nconst PlatformDropdown = ({ app_routing_history, closeDrawer, platform_config, setTogglePlatformType }) => {\n    const history = useHistory();\n    const { isDesktop } = useDevice();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const { client } = useStore();\n    const { has_wallet } = client;\n\n    const TradersHubRedirect = () => {\n        return (\n            <div className='platform-dropdown__cta'>\n                <BinaryLink\n                    onClick={() => {\n                        if (isHubRedirectionEnabled && has_wallet) {\n                            localStorage.setItem('redirect_to_th_os', 'home');\n                            window.location.assign(platforms.tradershub_os.url);\n                            return;\n                        }\n                        if (!isDesktop) {\n                            history.push(routes.traders_hub);\n                            setTogglePlatformType('cfd');\n                        }\n                        history.push(routes.traders_hub);\n                    }}\n                >\n                    <Text size='xs' weight='bold' align='center' className='platform-dropdown__cta--link'>\n                        <Localize i18n_default_text=\"Looking for CFDs? Go to Trader's Hub\" />\n                    </Text>\n                </BinaryLink>\n            </div>\n        );\n    };\n\n    React.useEffect(() => {\n        window.addEventListener('popstate', closeDrawer);\n        return () => {\n            window.removeEventListener('popstate', closeDrawer);\n        };\n    }, [closeDrawer]);\n\n    const ref = React.useRef();\n\n    const handleClickOutside = event => {\n        if (!event.target.closest('.platform-dropdown__list') && !event.target.closest('.platform-switcher')) {\n            closeDrawer();\n        }\n    };\n\n    useOnClickOutside(ref, handleClickOutside, () => isDesktop);\n\n    const platform_dropdown = (\n        <div className='platform-dropdown'>\n            <Div100vhContainer className='platform-dropdown__list' height_offset='15rem' is_disabled={isDesktop}>\n                {platform_config.map(platform => {\n                    return (\n                        <div key={platform.name} onClick={closeDrawer} ref={ref}>\n                            <PlatformDropdownContent\n                                platform={platform}\n                                app_routing_history={app_routing_history}\n                                client={client}\n                            />\n                        </div>\n                    );\n                })}\n                <TradersHubRedirect />\n            </Div100vhContainer>\n        </div>\n    );\n\n    if (isDesktop) {\n        return ReactDOM.createPortal(platform_dropdown, document.getElementById('deriv_app'));\n    }\n\n    return ReactDOM.createPortal(platform_dropdown, document.getElementById('mobile_platform_switcher'));\n};\n\nexport { PlatformDropdown, PlatformBox };\n","import 'Sass/app/_common/components/platform-switcher.scss';\n\nimport { useDevice } from '@deriv-com/ui';\nimport { Icon } from '@deriv/components';\nimport { getPlatformInformation } from '@deriv/shared';\nimport { CSSTransition } from 'react-transition-group';\nimport { PlatformDropdown } from './platform-dropdown.jsx';\nimport { PlatformSwitcherLoader } from './Components/Preloader/platform-switcher.jsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nconst PlatformSwitcher = ({\n    toggleDrawer,\n    app_routing_history,\n    platform_config = [],\n    current_language,\n    is_landing_company_loaded,\n    is_logged_in,\n    is_logging_in,\n    setTogglePlatformType,\n}) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const is_close_drawer_fired_ref = React.useRef(false);\n\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        if (is_close_drawer_fired_ref.current) {\n            if (typeof toggleDrawer === 'function') {\n                toggleDrawer();\n            }\n        }\n        is_close_drawer_fired_ref.current = false;\n    });\n\n    const closeDrawer = () => {\n        setIsOpen(false);\n        is_close_drawer_fired_ref.current = true;\n    };\n\n    return (is_logged_in || is_logging_in ? !is_landing_company_loaded : app_routing_history.length === 0) ? (\n        <div\n            data-testid='dt_platform_switcher_preloader'\n            className={classNames('platform-switcher__preloader', {\n                'platform-switcher__preloader--is-mobile': !isDesktop,\n            })}\n        >\n            <PlatformSwitcherLoader is_mobile={!isDesktop} speed={3} />\n        </div>\n    ) : (\n        <React.Fragment>\n            <div\n                data-testid='dt_platform_switcher'\n                className={classNames(\n                    'platform-switcher',\n                    { 'platform-switcher--active': is_open },\n                    { 'platform-switcher--is-mobile': !isDesktop }\n                )}\n                onClick={() => setIsOpen(!is_open)}\n            >\n                <Icon\n                    className='platform-switcher__icon'\n                    icon={getPlatformInformation(app_routing_history).icon}\n                    description={getPlatformInformation(app_routing_history).header}\n                    width={120}\n                    height={25}\n                />\n\n                <Icon className='platform-switcher__arrow' icon='IcChevronDownBold' />\n            </div>\n            <CSSTransition\n                mountOnEnter\n                appear\n                in={is_open}\n                classNames={{\n                    enterDone: 'platform-dropdown--enter-done',\n                }}\n                timeout={isDesktop && is_open ? 0 : 250}\n                unmountOnExit\n            >\n                <PlatformDropdown\n                    platform_config={platform_config}\n                    closeDrawer={closeDrawer}\n                    current_language={current_language}\n                    app_routing_history={app_routing_history}\n                    setTogglePlatformType={setTogglePlatformType}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nPlatformSwitcher.propTypes = {\n    platform_config: PropTypes.array,\n    toggleDrawer: PropTypes.func,\n    current_language: PropTypes.string,\n    app_routing_history: PropTypes.array,\n    is_landing_company_loaded: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    setTogglePlatformType: PropTypes.func,\n};\n\nexport default withRouter(PlatformSwitcher);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@deriv/components';\nimport { redirectToSignUp } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        id='dt_signup_button'\n        className={className}\n        has_effect\n        text={localize('Sign up')}\n        onClick={redirectToSignUp}\n        primary\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { TranslationFlag } from '@deriv/shared';\n\nconst MenuTitle = observer(() => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n\n    return (\n        <React.Fragment>\n            <div>{localize('Menu')}</div>\n            <div\n                className='settings-language__language-button_wrapper'\n                onClick={() => {\n                    if (!is_mobile_language_menu_open) {\n                        setMobileLanguageMenuOpen(true);\n                    }\n                }}\n            >\n                {!is_mobile_language_menu_open && (\n                    <React.Fragment>\n                        {TranslationFlag[current_language] ? (\n                            TranslationFlag[current_language](22, 16)\n                        ) : (\n                            //TODOs: remove this when Korean flag is added to quill-icons\n                            <Icon icon={`IcFlag${current_language}`} data_testid='dt_icon' size={18} />\n                        )}\n                        <Text weight='bold' size='xxs' className='ic-settings-language__text'>\n                            <Localize i18n_default_text={current_language} />\n                        </Text>\n                    </React.Fragment>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default MenuTitle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { MobileDrawer } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages } from '@deriv-com/translations';\nimport { localize } from '@deriv/translations'; // [TODO:] Remove this once deriv-app is configured to use the new translation lib\nimport { LanguageLink } from 'App/Components/Routes';\nimport { UNSUPPORTED_LANGUAGES } from '@deriv/shared';\n\ntype TMobileLanguageMenu = {\n    expandSubMenu: (prop: boolean) => void;\n    toggleDrawer: () => void;\n};\n\nconst MobileLanguageMenu = observer(({ expandSubMenu, toggleDrawer }: TMobileLanguageMenu) => {\n    const { common, ui } = useStore();\n    const { is_language_changing } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n\n    const allowed_languages = Object.keys(getAllowedLanguages(UNSUPPORTED_LANGUAGES));\n\n    return (\n        <MobileDrawer.SubMenu\n            is_expanded={is_mobile_language_menu_open}\n            has_subheader\n            submenu_title={localize('Select language')}\n            onToggle={is_expanded => {\n                expandSubMenu(is_expanded);\n                setMobileLanguageMenuOpen(false);\n            }}\n            submenu_toggle_class='dc-mobile-drawer__submenu-toggle--hidden'\n        >\n            <div\n                className={classNames('settings-language__language-container', {\n                    'settings-language__language-container--disabled': is_language_changing,\n                })}\n            >\n                {allowed_languages.map(lang => (\n                    <LanguageLink\n                        key={lang}\n                        is_clickable\n                        lang={lang}\n                        toggleModal={() => {\n                            toggleDrawer();\n                            setMobileLanguageMenuOpen(false);\n                        }}\n                    />\n                ))}\n            </div>\n        </MobileDrawer.SubMenu>\n    );\n});\n\nexport default MobileLanguageMenu;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useRemoteConfig } from '@deriv/api';\nimport { Div100vhContainer, Icon, MobileDrawer, ToggleSwitch } from '@deriv/components';\nimport {\n    useAccountSettingsRedirect,\n    useAccountTransferVisible,\n    useAuthorize,\n    useIsHubRedirectionEnabled,\n    useP2PSettings,\n    usePaymentAgentTransferVisible,\n} from '@deriv/hooks';\nimport { getDomainUrl, getOSNameWithUAParser, getStaticUrl, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\n\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport WhatsApp from 'App/Components/Elements/WhatsApp';\nimport NetworkStatus from 'App/Components/Layout/Footer';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport ServerTime from 'App/Containers/server-time.jsx';\n\nimport { MenuTitle, MobileLanguageMenu } from './Components/ToggleMenu';\nimport MenuLink from './menu-link';\nimport PlatformSwitcher from './platform-switcher';\n\nconst ToggleMenuDrawer = observer(({ platform_config }) => {\n    const { common, ui, client, traders_hub, modules } = useStore();\n    const { app_routing_history, current_language } = common;\n    const {\n        disableApp,\n        enableApp,\n        is_mobile,\n        is_mobile_language_menu_open,\n        is_dark_mode_on: is_dark_mode,\n        setDarkMode: toggleTheme,\n        setMobileLanguageMenuOpen,\n        setIsForcedToExitPnv,\n    } = ui;\n    const {\n        account_status,\n        has_wallet,\n        is_authorize,\n        is_logged_in,\n        is_logging_in,\n        is_virtual,\n        logout: logoutClient,\n        setIsLoggingOut,\n        should_allow_authentication,\n        should_allow_poinc_authentication,\n        landing_company_shortcode: active_account_landing_company,\n        is_landing_company_loaded,\n        is_proof_of_ownership_enabled,\n        is_eu,\n        is_passkey_supported,\n        // We should use this computed property instead of the hook, to prevent the hook's data from becoming stale after a WebSocket reconnection during the first login.\n        is_p2p_available,\n    } = client;\n    const { cashier } = modules;\n    const { payment_agent } = cashier;\n    const { is_payment_agent_visible } = payment_agent;\n    const { show_eu_related_content, setTogglePlatformType } = traders_hub;\n    const is_account_transfer_visible = useAccountTransferVisible();\n    const { mobile_redirect_url } = useAccountSettingsRedirect();\n    const { isSuccess } = useAuthorize();\n    const { data: is_payment_agent_transfer_visible } = usePaymentAgentTransferVisible();\n\n    const { pathname: route } = useLocation();\n\n    const is_trading_hub_category =\n        route === routes.traders_hub || route.startsWith(routes.cashier) || route.startsWith(routes.account);\n\n    const should_show_regulatory_information = is_eu && show_eu_related_content && !is_virtual;\n    const is_traders_hub_route = route === routes.traders_hub;\n\n    const is_wallet_route = route.startsWith(routes.wallets) || route.startsWith(routes.wallets_compare_accounts);\n\n    const { data } = useRemoteConfig(true);\n    const { cs_chat_livechat, cs_chat_whatsapp } = data;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [transitionExit, setTransitionExit] = React.useState(false);\n    const [primary_routes_config, setPrimaryRoutesConfig] = React.useState([]);\n    const [is_submenu_expanded, expandSubMenu] = React.useState(false);\n\n    const timeout = React.useRef();\n    const history = useHistory();\n    const {\n        subscribe,\n        rest: { isSubscribed },\n        p2p_settings,\n    } = useP2PSettings();\n\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    React.useEffect(() => {\n        if (isSuccess && !isSubscribed && is_authorize) {\n            subscribe();\n        }\n    }, [isSuccess, p2p_settings, subscribe, isSubscribed, is_authorize]);\n\n    // Cleanup timeout on unmount or route change\n    React.useEffect(() => {\n        return () => {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n                setTransitionExit(false);\n                setIsOpen(false);\n            }\n        };\n    }, [route]);\n\n    React.useEffect(() => {\n        const processRoutes = () => {\n            const routes_config = getRoutesConfig();\n            let primary_routes = [];\n\n            if (is_trading_hub_category) {\n                primary_routes = has_wallet ? [routes.reports, routes.account] : [routes.account, routes.cashier];\n            } else {\n                primary_routes = has_wallet\n                    ? [routes.reports, routes.account]\n                    : [routes.reports, routes.account, routes.cashier];\n            }\n            setPrimaryRoutesConfig(getFilteredRoutesConfig(routes_config, primary_routes));\n        };\n\n        if (account_status || should_allow_authentication) {\n            processRoutes();\n        }\n\n        return () => clearTimeout(timeout.current);\n    }, [\n        account_status,\n        should_allow_authentication,\n        has_wallet,\n        is_trading_hub_category,\n        is_mobile,\n        is_passkey_supported,\n        is_p2p_available,\n    ]);\n\n    const toggleDrawer = React.useCallback(() => {\n        if (is_mobile_language_menu_open) setMobileLanguageMenuOpen(false);\n        if (!is_open) setIsOpen(!is_open);\n        else {\n            setTransitionExit(true);\n            timeout.current = setTimeout(() => {\n                setIsOpen(false);\n                setTransitionExit(false);\n            }, 400);\n        }\n        expandSubMenu(false);\n    }, [expandSubMenu, is_open, is_mobile_language_menu_open, setMobileLanguageMenuOpen]);\n\n    const handleLogout = React.useCallback(async () => {\n        setIsLoggingOut(true);\n        toggleDrawer();\n        if (window.location.pathname.startsWith(routes.phone_verification)) {\n            setIsForcedToExitPnv(true);\n            // Add a small delay to ensure state is updated before navigation because adding await doesn't work here\n            await new Promise(resolve => setTimeout(resolve, 0));\n        }\n        history.push(routes.traders_hub);\n        await logoutClient();\n    }, [history, logoutClient, toggleDrawer]);\n\n    const passkeysMenuOpenActionEventTrack = React.useCallback(() => {\n        Analytics.trackEvent('ce_passkey_account_settings_form', {\n            action: 'open',\n            form_name: 'ce_passkey_account_settings_form',\n            operating_system: getOSNameWithUAParser(),\n        });\n    }, []);\n\n    const getFilteredRoutesConfig = (all_routes_config, routes_to_filter) => {\n        const subroutes_config = all_routes_config.flatMap(i => i.routes || []);\n\n        return routes_to_filter\n            .map(path => all_routes_config.find(r => r.path === path) || subroutes_config.find(r => r.path === path))\n            .filter(route => route);\n    };\n\n    const getRoutesWithSubMenu = (route_config, idx) => {\n        const has_access = route_config.is_authenticated ? is_logged_in : true;\n        if (!has_access) return null;\n\n        if (route_config.path === routes.account && mobile_redirect_url !== routes.account) {\n            return (\n                <MobileDrawer.Item key={idx}>\n                    <MenuLink\n                        link_to={mobile_redirect_url}\n                        icon={route_config.icon_component}\n                        text={route_config.getTitle()}\n                        onClickLink={toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        if (!route_config.routes) {\n            return (\n                <MobileDrawer.Item key={idx}>\n                    <MenuLink\n                        link_to={route_config.path}\n                        icon={route_config.icon_component}\n                        text={route_config.getTitle()}\n                        onClickLink={toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        const has_subroutes = route_config.routes.some(route => route.subroutes);\n        const should_hide_passkeys_route = !is_mobile || !is_passkey_supported;\n\n        const disableRoute = route_path => {\n            if (/financial-assessment/.test(route_path)) {\n                return is_virtual;\n            } else if (/trading-assessment/.test(route_path)) {\n                return is_virtual || active_account_landing_company !== 'maltainvest';\n            } else if (/proof-of-address/.test(route_path) || /proof-of-identity/.test(route_path)) {\n                return !should_allow_authentication;\n            } else if (/proof-of-income/.test(route_path)) {\n                return !should_allow_poinc_authentication;\n            } else if (/proof-of-ownership/.test(route_path)) {\n                return is_virtual || !is_proof_of_ownership_enabled;\n            }\n            return false;\n        };\n\n        const hideRoute = route_path => {\n            if (/passkeys/.test(route_path)) {\n                return should_hide_passkeys_route;\n            } else if (/languages/.test(route_path)) {\n                return has_wallet;\n            }\n            return false;\n        };\n\n        return (\n            <MobileDrawer.SubMenu\n                key={idx}\n                has_subheader\n                submenu_icon={route_config.icon_component}\n                submenu_title={route_config.getTitle()}\n                submenu_suffix_icon='IcChevronRight'\n                onToggle={expandSubMenu}\n                route_config_path={route_config.path}\n            >\n                {!has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        if (\n                            !route.is_invisible &&\n                            (route.path !== routes.cashier_pa || is_payment_agent_visible) &&\n                            (route.path !== routes.cashier_pa_transfer || is_payment_agent_transfer_visible) &&\n                            (route.path !== routes.cashier_p2p || is_p2p_available) &&\n                            (route.path !== routes.cashier_acc_transfer || is_account_transfer_visible)\n                        ) {\n                            return (\n                                <MobileDrawer.Item key={index}>\n                                    <MenuLink\n                                        link_to={route.path}\n                                        icon={route.icon_component}\n                                        text={route.getTitle()}\n                                        onClickLink={toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                            );\n                        }\n                        return undefined;\n                    })}\n                {has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        return route.subroutes ? (\n                            <MobileDrawer.SubMenuSection\n                                key={index}\n                                section_icon={route.icon}\n                                section_title={route.getTitle()}\n                            >\n                                {route.subroutes.map((subroute, subindex) => (\n                                    <MenuLink\n                                        key={subindex}\n                                        is_disabled={disableRoute(subroute.path) || subroute.is_disabled}\n                                        link_to={subroute.path}\n                                        text={subroute.getTitle()}\n                                        onClickLink={() => {\n                                            toggleDrawer();\n                                            if (subroute.path === routes.passkeys) {\n                                                passkeysMenuOpenActionEventTrack();\n                                            }\n                                        }}\n                                        is_hidden={hideRoute(subroute.path)}\n                                    />\n                                ))}\n                            </MobileDrawer.SubMenuSection>\n                        ) : (\n                            <MobileDrawer.Item key={index}>\n                                <MenuLink\n                                    link_to={route.path}\n                                    icon={route.icon_component}\n                                    text={route.getTitle()}\n                                    onClickLink={toggleDrawer}\n                                />\n                            </MobileDrawer.Item>\n                        );\n                    })}\n            </MobileDrawer.SubMenu>\n        );\n    };\n\n    const HelpCentreRoute = has_border_bottom => {\n        return (\n            <MobileDrawer.Item className={classNames({ 'header__menu-mobile-theme': has_border_bottom })}>\n                <MenuLink\n                    link_to={getStaticUrl('/help-centre')}\n                    icon='IcHelpCentre'\n                    text={localize('Help centre')}\n                    onClickLink={toggleDrawer}\n                />\n            </MobileDrawer.Item>\n        );\n    };\n\n    const handleTradershubRedirect = () => {\n        if (isHubRedirectionEnabled && has_wallet) {\n            const PRODUCTION_REDIRECT_URL = `https://hub.${getDomainUrl()}/tradershub`;\n            const STAGING_REDIRECT_URL = `https://staging-hub.${getDomainUrl()}/tradershub`;\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n\n            return `${redirectUrl}/redirect?action=redirect_to&redirect_to=home${account_currency ? `&account=${account_currency}` : ''}`;\n        }\n        return routes.traders_hub;\n    };\n\n    return (\n        <React.Fragment>\n            <a id='dt_mobile_drawer_toggle' onClick={toggleDrawer} className='header__mobile-drawer-toggle'>\n                <Icon icon='IcHamburger' width='16px' height='16px' className='header__mobile-drawer-icon' />\n            </a>\n            <MobileDrawer\n                alignment='left'\n                icon_class='header__menu-toggle'\n                is_open={is_open}\n                transitionExit={transitionExit}\n                toggle={toggleDrawer}\n                id='dt_mobile_drawer'\n                enableApp={enableApp}\n                disableApp={disableApp}\n                title={<MenuTitle />}\n                height='100vh'\n                width='295px'\n                className='pre-appstore'\n            >\n                <Div100vhContainer height_offset='40px'>\n                    <div className='header__menu-mobile-body-wrapper'>\n                        <React.Fragment>\n                            {!(is_traders_hub_route || is_wallet_route) && (\n                                <MobileDrawer.SubHeader\n                                    className={classNames({\n                                        'dc-mobile-drawer__subheader--hidden': is_submenu_expanded,\n                                    })}\n                                >\n                                    <PlatformSwitcher\n                                        app_routing_history={app_routing_history}\n                                        is_mobile\n                                        is_landing_company_loaded={is_landing_company_loaded}\n                                        is_logged_in={is_logged_in}\n                                        is_logging_in={is_logging_in}\n                                        platform_config={platform_config}\n                                        toggleDrawer={toggleDrawer}\n                                        current_language={current_language}\n                                        setTogglePlatformType={setTogglePlatformType}\n                                    />\n                                </MobileDrawer.SubHeader>\n                            )}\n\n                            <MobileDrawer.Body className={is_traders_hub_route || is_wallet_route ? 'no-padding' : ''}>\n                                <div className='header__menu-mobile-platform-switcher' id='mobile_platform_switcher' />\n                                <MobileDrawer.Item>\n                                    <MenuLink\n                                        link_to={getStaticUrl('/')}\n                                        icon='IcDerivShortLogo'\n                                        text='Deriv.com'\n                                        onClickLink={toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                                <MobileDrawer.Item>\n                                    <MenuLink\n                                        link_to={handleTradershubRedirect()}\n                                        icon={'IcAppstoreTradersHubHome'}\n                                        text={localize(\"Trader's Hub\")}\n                                        onClickLink={toggleDrawer}\n                                        is_active={route === routes.traders_hub}\n                                    />\n                                </MobileDrawer.Item>\n                                {route !== routes.traders_hub && (\n                                    <MobileDrawer.Item>\n                                        <MenuLink\n                                            link_to={routes.trade}\n                                            icon='IcTrade'\n                                            text={localize('Trade')}\n                                            onClickLink={toggleDrawer}\n                                            is_active={route === routes.trade}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {primary_routes_config.map((route_config, idx) =>\n                                    getRoutesWithSubMenu(route_config, idx)\n                                )}\n                                {!has_wallet && (\n                                    <MobileDrawer.Item\n                                        className='header__menu-mobile-theme'\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            toggleTheme(!is_dark_mode);\n                                        }}\n                                    >\n                                        <div className={classNames('header__menu-mobile-link')}>\n                                            <Icon className='header__menu-mobile-link-icon' icon={'IcTheme'} />\n                                            <span className='header__menu-mobile-link-text'>\n                                                {localize('Dark theme')}\n                                            </span>\n                                            <ToggleSwitch\n                                                id='dt_mobile_drawer_theme_toggler'\n                                                handleToggle={() => toggleTheme(!is_dark_mode)}\n                                                is_enabled={is_dark_mode}\n                                            />\n                                        </div>\n                                    </MobileDrawer.Item>\n                                )}\n                                {HelpCentreRoute()}\n                                {is_logged_in ? (\n                                    <React.Fragment>\n                                        <MobileDrawer.Item\n                                            className={\n                                                should_show_regulatory_information\n                                                    ? ''\n                                                    : 'header__menu-mobile-theme--trader-hub'\n                                            }\n                                        >\n                                            <MenuLink\n                                                link_to={getStaticUrl('/responsible')}\n                                                icon='IcVerification'\n                                                text={localize('Responsible trading')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                        {should_show_regulatory_information && (\n                                            <MobileDrawer.Item className='header__menu-mobile-theme--trader-hub'>\n                                                <MenuLink\n                                                    link_to={getStaticUrl('/regulatory')}\n                                                    icon='IcRegulatoryInformation'\n                                                    text={localize('Regulatory information')}\n                                                    onClickLink={toggleDrawer}\n                                                />\n                                            </MobileDrawer.Item>\n                                        )}\n                                    </React.Fragment>\n                                ) : (\n                                    <MobileDrawer.Item className='header__menu-mobile-theme--trader-hub'>\n                                        <MenuLink\n                                            link_to={getStaticUrl('/responsible')}\n                                            icon='IcVerification'\n                                            text={localize('Responsible trading')}\n                                            onClickLink={toggleDrawer}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {cs_chat_whatsapp && (\n                                    <MobileDrawer.Item className='header__menu-mobile-whatsapp'>\n                                        <WhatsApp onClick={toggleDrawer} />\n                                    </MobileDrawer.Item>\n                                )}\n                                {cs_chat_livechat && (\n                                    <MobileDrawer.Item className='header__menu-mobile-livechat'>\n                                        <LiveChat />\n                                    </MobileDrawer.Item>\n                                )}\n                                {is_logged_in && (\n                                    <MobileDrawer.Item onClick={handleLogout} className='dc-mobile-drawer__item'>\n                                        <MenuLink icon='IcLogout' text={localize('Log out')} />\n                                    </MobileDrawer.Item>\n                                )}\n                            </MobileDrawer.Body>\n                            <MobileDrawer.Footer className={is_logged_in ? 'dc-mobile-drawer__footer--servertime' : ''}>\n                                <ServerTime is_mobile />\n                                <NetworkStatus is_mobile />\n                            </MobileDrawer.Footer>\n                            {is_mobile_language_menu_open && (\n                                <MobileLanguageMenu expandSubMenu={expandSubMenu} toggleDrawer={toggleDrawer} />\n                            )}\n                        </React.Fragment>\n                    </div>\n                </Div100vhContainer>\n            </MobileDrawer>\n        </React.Fragment>\n    );\n});\n\nToggleMenuDrawer.displayName = 'ToggleMenuDrawer';\n\nexport default ToggleMenuDrawer;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst EmptyNotification = () => (\n    <div className='notifications-empty__container'>\n        <div className='notifications-empty'>\n            <Icon\n                data_testid='dt_ic_box_icon'\n                icon='IcBox'\n                className='notifications-empty__icon'\n                size={64}\n                color='secondary'\n            />\n            <div className='notifications-empty__content'>\n                <Text\n                    as='h4'\n                    size='xs'\n                    weight='bold'\n                    align='center'\n                    color='less-prominent'\n                    className='notifications-empty__header'\n                >\n                    <Localize i18n_default_text='No notifications' />\n                </Text>\n                <Text size='xxs' color='less-prominent' align='center'>\n                    <Localize i18n_default_text='You have yet to receive any notifications' />\n                </Text>\n            </div>\n        </div>\n    </div>\n);\n\nexport default EmptyNotification;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TNotificationsClearAllFooter = {\n    clearNotifications: () => void;\n};\n\nconst NotificationsClearAllFooter = observer(({ clearNotifications }: TNotificationsClearAllFooter) => {\n    const { notifications, ui } = useStore();\n    const { is_notifications_empty } = notifications;\n    const { is_mobile } = ui;\n\n    return (\n        <React.Fragment>\n            <div className='notifications-dialog__separator' />\n            <div\n                data-testid='dt_clear_all_footer_button'\n                className={classNames('notifications-dialog__footer', {\n                    'notifications-dialog__content--empty': is_notifications_empty,\n                    'notifications-dialog__content--sticky': is_mobile,\n                })}\n            >\n                <Button\n                    className={classNames('dc-btn--secondary', 'notifications-dialog__clear')}\n                    disabled={is_notifications_empty}\n                    onClick={clearNotifications}\n                >\n                    <Text size='xxs' color='prominent' weight='bold'>\n                        <Localize i18n_default_text='Clear All' />\n                    </Text>\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsClearAllFooter;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { isEmptyObject, toTitleCase, TRoute } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Analytics } from '@deriv-com/analytics';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { useHistory } from 'react-router-dom';\nimport EmptyNotification from 'App/Components/Elements/Notifications/empty-notification';\n\ntype TActionProps = ReturnType<typeof useStore>['notifications']['notifications'][0]['action'];\ntype TNotificationMessage = ReturnType<typeof useStore>['notifications']['notifications'][0];\n\nconst NotificationsList = observer(() => {\n    const { notifications } = useStore();\n    const { notifications: notifications_array, toggleNotificationsModal } = notifications;\n    const history = useHistory();\n\n    const getNotificationItemIcon = (item: TNotificationMessage) => {\n        const { type } = item;\n        if (['contract_sold', 'info', 'news', 'promotions'].includes(type)) {\n            return 'IcAlertInfo';\n        }\n        return `IcAlert${toTitleCase(type)}`;\n    };\n\n    const getButtonSettings = (item: TNotificationMessage): TActionProps | undefined => {\n        const object_key = ['action', 'secondary_btn', 'cta_btn', 'primary_btn'].find(\n            obj_key => !isEmptyObject(item[obj_key as keyof TNotificationMessage])\n        );\n        switch (object_key) {\n            case 'primary_btn':\n                return item.primary_btn;\n            case 'cta_btn':\n                return item.cta_btn;\n            case 'secondary_btn':\n                return item.secondary_btn;\n            case 'action':\n                return item.action;\n            default:\n                return undefined;\n        }\n    };\n\n    const onActionTrackEvent = (key: string) => {\n        Analytics.trackEvent('ce_notification_form', {\n            action: 'click_cta',\n            form_name: 'ce_notification_form',\n            notification_key: key,\n        });\n    };\n    const filtered_notifications = notifications_array.filter(item => !item.only_toast_message);\n    return (\n        <React.Fragment>\n            {filtered_notifications.length > 0 ? (\n                filtered_notifications.map(item => (\n                    <div className='notifications-item' key={item.key}>\n                        <Text as='h2' className='notifications-item__title' weight='bold' size='xs' color='prominent'>\n                            {item.type && (\n                                <Icon\n                                    icon={getNotificationItemIcon(item)}\n                                    className={classNames('notifications-item__title-icon', {\n                                        [`notifications-item__title-icon--${item.type}`]: item.type,\n                                    })}\n                                />\n                            )}\n                            {item.header}\n                        </Text>\n                        <div className='notifications-item__message'>{item.message}</div>\n                        <div className='notifications-item__action'>\n                            {!!getButtonSettings(item) && (\n                                <React.Fragment>\n                                    {getButtonSettings(item)?.route && !getButtonSettings(item)?.onClick ? (\n                                        <BinaryLink\n                                            onClick={() => {\n                                                const buttonSettings = getButtonSettings(item);\n                                                if (buttonSettings?.onClick) {\n                                                    buttonSettings.onClick();\n                                                }\n                                                toggleNotificationsModal();\n                                                onActionTrackEvent(item.key);\n                                            }}\n                                            active_class='notifications-item'\n                                            className={classNames(\n                                                'dc-btn',\n                                                'dc-btn--secondary',\n                                                'notifications-item__cta-button'\n                                            )}\n                                            to={getButtonSettings(item)?.route}\n                                        >\n                                            <Text weight='bold' size='xxs'>\n                                                {getButtonSettings(item)?.text}\n                                            </Text>\n                                        </BinaryLink>\n                                    ) : (\n                                        <Button\n                                            className={classNames(\n                                                'dc-btn--secondary',\n                                                'notifications-item__cta-button'\n                                            )}\n                                            onClick={() => {\n                                                getButtonSettings(item)?.onClick();\n                                                onActionTrackEvent(item.key);\n                                                if (getButtonSettings(item)?.route) {\n                                                    history.push(getButtonSettings(item)?.route as string);\n                                                }\n                                            }}\n                                        >\n                                            <Text weight='bold' size='xxs'>\n                                                {getButtonSettings(item)?.text}\n                                            </Text>\n                                        </Button>\n                                    )}\n                                </React.Fragment>\n                            )}\n                        </div>\n                    </div>\n                ))\n            ) : (\n                <EmptyNotification />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsList;\n","import classNames from 'classnames';\nimport React, { LegacyRef } from 'react';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport EmptyNotification from 'App/Components/Elements/Notifications/empty-notification';\nimport NotificationsClearAllFooter from './notifications-clear-all-footer';\nimport NotificationsList from './notifications-list';\n\ntype TNotificationListWrapper = { clearNotifications: () => void };\n\nconst NotificationListWrapperForwardRef = React.forwardRef(\n    ({ clearNotifications }: TNotificationListWrapper, ref: LegacyRef<HTMLDivElement> | undefined) => {\n        const { notifications, ui } = useStore();\n        const { is_notifications_empty } = notifications;\n        const { is_mobile } = ui;\n\n        return (\n            <div data-testid='dt_notifications_list_wrapper' className='notifications-dialog' ref={ref}>\n                <div className='notifications-dialog__header'>\n                    <Text\n                        as='h2'\n                        className='notifications-dialog__header-text'\n                        weight='bold'\n                        color='prominent'\n                        styles={{\n                            lineHeight: '1.6rem',\n                        }}\n                    >\n                        <Localize i18n_default_text='Notifications' />\n                    </Text>\n                </div>\n                <div\n                    className={classNames('notifications-dialog__content', {\n                        'notifications-dialog__content--empty': is_notifications_empty,\n                    })}\n                >\n                    <ThemedScrollbars is_bypassed={is_mobile || is_notifications_empty}>\n                        {is_notifications_empty ? <EmptyNotification /> : <NotificationsList />}\n                    </ThemedScrollbars>\n                </div>\n                <NotificationsClearAllFooter clearNotifications={clearNotifications} />\n            </div>\n        );\n    }\n);\nNotificationListWrapperForwardRef.displayName = 'NotificationListWrapper';\n\nconst NotificationListWrapper = observer(NotificationListWrapperForwardRef);\n\nexport default NotificationListWrapper;\n","import NotificationsDialog from './notifications-dialog';\n\nexport default NotificationsDialog;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { MobileDialog, useOnClickOutside } from '@deriv/components';\nimport { Analytics } from '@deriv-com/analytics';\nimport { LocalStore } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport NotificationListWrapper from './notification-list-wrapper';\n\nconst NotificationsDialog = observer(() => {\n    const { client, notifications } = useStore();\n    const { loginid } = client;\n    const {\n        is_notifications_visible,\n        notifications: notifications_array,\n        removeNotifications,\n        removeNotificationMessage,\n        removeNotificationMessageByKey,\n        toggleNotificationsModal,\n    } = notifications;\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n    const { isMobile } = useDevice();\n\n    const handleClickOutside = (event: MouseEvent) => {\n        const notifications_toggle_btn = !(event?.target as Element)?.classList.contains(\n            'notifications-toggle__icon-wrapper'\n        );\n        if (\n            !wrapper_ref?.current?.contains(event.target as Node) &&\n            is_notifications_visible &&\n            notifications_toggle_btn\n        ) {\n            toggleNotificationsModal();\n        }\n    };\n\n    const clearNotifications = () => {\n        Analytics.trackEvent('ce_notification_form', {\n            action: 'clear_all',\n            form_name: 'ce_notification_form',\n            notification_num: notifications_array.length,\n        });\n\n        notifications_array.forEach(({ key, should_show_again }) => {\n            removeNotificationMessageByKey({ key });\n            removeNotificationMessage({\n                key,\n                should_show_again,\n            });\n            removeNotifications(true);\n        });\n    };\n\n    useOnClickOutside(wrapper_ref, handleClickOutside);\n\n    if (isMobile) {\n        return (\n            <MobileDialog\n                portal_element_id='modal_root'\n                title={<Localize i18n_default_text='Notifications' />}\n                wrapper_classname='notifications-mobile-dialog'\n                visible={is_notifications_visible}\n                onClose={toggleNotificationsModal}\n            >\n                <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n            </MobileDialog>\n        );\n    }\n\n    return (\n        <CSSTransition\n            in={is_notifications_visible}\n            classNames={{\n                enter: 'notifications-dialog--enter',\n                enterDone: 'notifications-dialog--enter-done',\n                exit: 'notifications-dialog--exit',\n            }}\n            timeout={150}\n            unmountOnExit\n        >\n            <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n        </CSSTransition>\n    );\n});\n\nexport default NotificationsDialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Counter, Icon, Popover } from '@deriv/components';\nimport NotificationsDialog from 'App/Containers/NotificationsDialog';\nimport 'Sass/app/modules/notifications-dialog.scss';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ToggleNotificationsDrawer = ({\n    count,\n    is_visible,\n    toggleDialog,\n    tooltip_message,\n    should_disable_pointer_events = false,\n    showPopover = true,\n}) => {\n    const { isMobile } = useDevice();\n    const notifications_toggler_el = (\n        <div\n            className={classNames('notifications-toggle__icon-wrapper', {\n                'notifications-toggle__icon-wrapper--active': is_visible,\n            })}\n            onClick={toggleDialog}\n        >\n            <Icon className='notifications-toggle__icon' icon='IcBell' />\n            {!!count && <Counter count={count} className='notifications-toggle__step' />}\n        </div>\n    );\n\n    if (isMobile) {\n        return (\n            <div\n                className={classNames('notifications-toggle', {\n                    'notifications-toggle--active': is_visible,\n                })}\n            >\n                {notifications_toggler_el}\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </div>\n        );\n    }\n\n    return (\n        <div\n            className={classNames('notifications-toggle', {\n                'notifications-toggle--active': is_visible,\n            })}\n        >\n            {showPopover ? (\n                <Popover\n                    classNameBubble='notifications-toggle__tooltip'\n                    alignment='bottom'\n                    message={tooltip_message}\n                    should_disable_pointer_events={should_disable_pointer_events}\n                    zIndex='9999'\n                >\n                    {notifications_toggler_el}\n                </Popover>\n            ) : (\n                notifications_toggler_el\n            )}\n            <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n        </div>\n    );\n};\n\nexport default ToggleNotificationsDrawer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes, isTabletOs } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\n\nconst TradersHubOnboarding = observer(() => {\n    const history = useHistory();\n    const { ui } = useStore();\n    const { is_dark_mode_on, is_mobile, setIsWalletsOnboardingTourGuideVisible } = ui;\n\n    const onClickHandler = () => {\n        setIsWalletsOnboardingTourGuideVisible(true);\n        if (history.location.pathname !== routes.traders_hub) {\n            history.push(routes.traders_hub);\n        }\n    };\n\n    const onboardingIcon = (\n        <Icon\n            data_testid='dt_traders_hub_onboarding_icon'\n            icon={is_dark_mode_on ? 'IcAppstoreTradingHubOnboardingDark' : 'IcAppstoreTradingHubOnboarding'}\n            size={20}\n            onClick={onClickHandler}\n        />\n    );\n\n    return (\n        <div data-testid='dt_traders_hub_onboarding' className='traders-hub-onboarding__toggle'>\n            {isTabletOs ? (\n                onboardingIcon\n            ) : (\n                <Popover\n                    classNameBubble='account-settings-toggle__tooltip'\n                    alignment='bottom'\n                    message={!is_mobile && <Localize i18n_default_text='View tutorial' />}\n                    should_disable_pointer_events\n                    zIndex='9999'\n                >\n                    {onboardingIcon}\n                </Popover>\n            )}\n        </div>\n    );\n});\n\nexport default TradersHubOnboarding;\n","import React from 'react';\nimport { Badge } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TWalletBadge = {\n    is_demo: boolean;\n    label?: string;\n};\n\nconst WalletBadge = ({ is_demo, label }: TWalletBadge) => {\n    return is_demo ? (\n        <Badge type='contained' background_color='blue' label={localize('Demo')} custom_color='colored-background' />\n    ) : (\n        <Badge type='bordered' label={label?.toUpperCase() ?? ''} />\n    );\n};\n\nexport default WalletBadge;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { AppLinkedWithWalletIcon, Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useStoreWalletAccountsList } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport WalletBadge from 'App/Components/Layout/Header/wallets/wallet-badge';\nimport './account-switcher-wallet-item.scss';\n\ntype TAccountSwitcherWalletItemProps = {\n    account: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number];\n    closeAccountsDialog: () => void;\n    show_badge?: boolean;\n};\n\nexport const AccountSwitcherWalletItem = observer(\n    ({ closeAccountsDialog, account, show_badge = false }: TAccountSwitcherWalletItemProps) => {\n        const {\n            currency,\n            dtrade_loginid,\n            dtrade_balance,\n            gradients,\n            icons,\n            is_virtual,\n            loginid,\n            landing_company_name,\n            icon_type,\n        } = account;\n\n        const {\n            ui: { is_dark_mode_on },\n            client: { switchAccount, loginid: active_loginid, is_eu },\n        } = useStore();\n\n        const theme = is_dark_mode_on ? 'dark' : 'light';\n        const app_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n        const is_dtrade_active = dtrade_loginid === active_loginid;\n\n        const onAccountSwitch = async () => {\n            closeAccountsDialog();\n            if (is_dtrade_active) return;\n            await switchAccount(dtrade_loginid);\n            localStorage.setItem('active_wallet_loginid', loginid);\n            sessionStorage.setItem('active_wallet_loginid', loginid);\n        };\n\n        return (\n            <div\n                className={classNames('acc-switcher-wallet-item__container', {\n                    'acc-switcher-wallet-item__container--active': is_dtrade_active,\n                })}\n                data-testid='account-switcher-wallet-item'\n                onClick={onAccountSwitch}\n                // SonarLint offers to add handler for onKeyDown event if we have onClick event handler\n                role='button'\n                onKeyDown={event => {\n                    if (event.key === 'Enter') {\n                        onAccountSwitch();\n                    }\n                }}\n            >\n                <div>\n                    <AppLinkedWithWalletIcon\n                        app_icon={app_icon}\n                        gradient_class={gradients?.card[theme] ?? ''}\n                        type={icon_type}\n                        wallet_icon={icons?.[theme] ?? ''}\n                        hide_watermark\n                    />\n                </div>\n                <div className='acc-switcher-wallet-item__content'>\n                    <Text size='xxxs'>\n                        {is_eu ? (\n                            <Localize i18n_default_text='Multipliers' />\n                        ) : (\n                            <Localize i18n_default_text='Options' />\n                        )}\n                    </Text>\n                    <Text size='xxxs'>\n                        {is_virtual ? (\n                            <Localize i18n_default_text='Demo Wallet' />\n                        ) : (\n                            <Localize\n                                i18n_default_text='{{currency}} Wallet'\n                                values={{ currency: getCurrencyDisplayCode(currency) }}\n                            />\n                        )}\n                    </Text>\n                    <Text size='xs' weight='bold'>\n                        {`${formatMoney(currency || '', dtrade_balance || 0, true)} ${getCurrencyDisplayCode(\n                            currency\n                        )}`}\n                    </Text>\n                </div>\n                {show_badge && <WalletBadge is_demo={Boolean(is_virtual)} label={landing_company_name} />}\n            </div>\n        );\n    }\n);\n","import React from 'react';\nimport { AccountSwitcherWalletItem } from './account-switcher-wallet-item';\nimport { TStores } from '@deriv/stores/types';\nimport './account-switcher-wallet-list.scss';\n\ntype TAccountSwitcherWalletListProps = {\n    wallets: TStores['client']['wallet_list'];\n    closeAccountsDialog: () => void;\n};\n\nexport const AccountSwitcherWalletList = ({ wallets, closeAccountsDialog }: TAccountSwitcherWalletListProps) => {\n    // Sort wallets: real accounts by balance (highest first), then demo accounts by balance\n    const sortedWallets = [...(wallets || [])].sort((a, b) => {\n        // First, ensure demo accounts are always at the bottom\n        if (a.is_virtual || b.is_virtual) {\n            return a.is_virtual ? 1 : -1;\n        }\n\n        // For accounts of the same type (both real), sort by balance (highest first)\n        const balance_a = a.dtrade_balance || 0;\n        const balance_b = b.dtrade_balance || 0;\n        return balance_b - balance_a;\n    });\n\n    return (\n        <div className='account-switcher-wallet-list'>\n            {sortedWallets?.map(account => {\n                if (account.is_dtrader_account_disabled) return null;\n                return (\n                    <AccountSwitcherWalletItem\n                        key={account.dtrade_loginid}\n                        account={account}\n                        closeAccountsDialog={closeAccountsDialog}\n                        show_badge={account?.is_virtual}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Icon, Text, ThemedScrollbars, useOnClickOutside } from '@deriv/components';\nimport { platforms, routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useIsHubRedirectionEnabled, useStoreWalletAccountsList } from '@deriv/hooks';\nimport { AccountSwitcherWalletList } from './account-switcher-wallet-list';\nimport './account-switcher-wallet.scss';\n\ntype TAccountSwitcherWalletProps = {\n    is_visible: boolean;\n    toggle: (value?: boolean) => void;\n};\n\nexport const AccountSwitcherWallet = observer(({ is_visible, toggle }: TAccountSwitcherWalletProps) => {\n    const { data: wallet_list } = useStoreWalletAccountsList();\n    const dtrade_account_wallets = wallet_list?.filter(wallet => wallet.dtrade_loginid);\n\n    const history = useHistory();\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    const validateClickOutside = (event: MouseEvent) => {\n        const checkAllParentNodes = (node: HTMLElement): boolean => {\n            if (node?.classList?.contains('acc-info__wallets')) return true;\n            const parent = node?.parentNode as HTMLElement;\n            if (parent) return checkAllParentNodes(parent);\n            return false;\n        };\n\n        return is_visible && !checkAllParentNodes(event.target as HTMLElement);\n    };\n\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n\n    const closeAccountsDialog = React.useCallback(() => {\n        toggle(false);\n    }, [toggle]);\n\n    useOnClickOutside(wrapper_ref, closeAccountsDialog, validateClickOutside);\n\n    const handleTradersHubRedirect = async () => {\n        if (isHubRedirectionEnabled) {\n            window.location.assign(\n                `${platforms.tradershub_os.url}/redirect?action=redirect_to&redirect_to=cfds${account_currency ? `&account=${account_currency}` : ''}`\n            );\n            return;\n        }\n        closeAccountsDialog();\n        history.push(routes.traders_hub);\n    };\n\n    return (\n        <div className='account-switcher-wallet' ref={wrapper_ref}>\n            <div className='account-switcher-wallet__header'>\n                <Text as='h4' weight='bold' size='xs'>\n                    <Localize i18n_default_text='Options accounts' />\n                </Text>\n            </div>\n            <ThemedScrollbars height={450}>\n                <AccountSwitcherWalletList wallets={dtrade_account_wallets} closeAccountsDialog={closeAccountsDialog} />\n            </ThemedScrollbars>\n            <button\n                className='account-switcher-wallet__looking-for-cfds'\n                onClick={handleTradersHubRedirect}\n                type='button'\n            >\n                <Text size='xs' line_height='xl'>\n                    <Localize i18n_default_text='Looking for CFDs? Go to Trader’s Hub' />\n                </Text>\n                <Icon\n                    data_testid='dt_go_to_arrow'\n                    icon='IcChevronDownBold'\n                    className='account-switcher-wallet__arrow'\n                />\n            </button>\n        </div>\n    );\n});\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, Icon, MobileDialog, Text } from '@deriv/components';\nimport { getDomainUrl, platforms, routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { AccountSwitcherWalletList } from './account-switcher-wallet-list';\nimport { useIsHubRedirectionEnabled, useIsRtl, useStoreWalletAccountsList } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport './account-switcher-wallet-mobile.scss';\n\ntype TAccountSwitcherWalletMobile = {\n    loginid: string;\n    is_visible: boolean;\n    toggle: (value: boolean) => void;\n};\n\nexport const AccountSwitcherWalletMobile = observer(({ is_visible, toggle, loginid }: TAccountSwitcherWalletMobile) => {\n    const history = useHistory();\n    const isRtl = useIsRtl();\n    const { data: wallet_list } = useStoreWalletAccountsList();\n\n    const dtrade_account_wallets = wallet_list?.filter(wallet => wallet.dtrade_loginid);\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    const closeAccountsDialog = React.useCallback(() => {\n        toggle(false);\n    }, [toggle]);\n\n    const handleTradersHubRedirect = () => {\n        const url_query_string = window.location.search;\n        const url_params = new URLSearchParams(url_query_string);\n        const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n        if (isHubRedirectionEnabled) {\n            window.location.assign(\n                `${platforms.tradershub_os.url}/redirect?action=redirect_to&redirect_to=cfds${account_currency ? `&account=${account_currency}` : ''}`\n            );\n            return;\n        }\n        closeAccountsDialog();\n        history.push(routes.traders_hub);\n    };\n\n    const handleManageFundsRedirect = () => {\n        closeAccountsDialog();\n        if (isHubRedirectionEnabled) {\n            const PRODUCTION_REDIRECT_URL = `https://hub.${getDomainUrl()}/tradershub`;\n            const STAGING_REDIRECT_URL = `https://staging-hub.${getDomainUrl()}/tradershub`;\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = window.sessionStorage.getItem('account') || url_params.get('account');\n\n            window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=wallet${account_currency ? `&account=${account_currency}` : ''}`;\n        } else {\n            history.push(routes.wallets_transfer, {\n                toAccountLoginId: loginid,\n                is_from_dtrader: window.location.pathname?.includes('dtrader'),\n            });\n        }\n    };\n\n    const footer = (\n        <React.Fragment>\n            <hr className='account-switcher-wallet-mobile__divider' />\n            <button className='account-switcher-wallet-mobile__footer' onClick={handleTradersHubRedirect} type='button'>\n                <Text weight='normal' size='xs'>\n                    <Localize i18n_default_text='Looking for CFDs? Go to Trader’s Hub' />\n                </Text>\n                <Icon icon={isRtl ? 'IcChevronLeftBold' : 'IcChevronRightBold'} />\n            </button>\n        </React.Fragment>\n    );\n\n    return (\n        <MobileDialog\n            portal_element_id='deriv_app'\n            footer={footer}\n            visible={is_visible}\n            onClose={closeAccountsDialog}\n            has_close_icon\n            has_full_height\n            title={<Localize i18n_default_text='Options accounts' />}\n        >\n            <div className='account-switcher-wallet-mobile'>\n                <AccountSwitcherWalletList wallets={dtrade_account_wallets} closeAccountsDialog={closeAccountsDialog} />\n                <Button\n                    className='account-switcher-wallet-mobile__button'\n                    has_effect\n                    primary\n                    large\n                    onClick={handleManageFundsRedirect}\n                >\n                    <Localize i18n_default_text='Manage funds' />\n                </Button>\n            </div>\n        </MobileDialog>\n    );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, WalletIcon, Text, AppLinkedWithWalletIcon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { useStoreWalletAccountsList, useStoreLinkedWalletsAccounts } from '@deriv/hooks';\nimport { TStores } from '@deriv/stores/types';\nimport { AccountSwitcherWallet, AccountSwitcherWalletMobile } from 'App/Containers/AccountSwitcherWallet';\nimport { AccountsInfoLoader } from '../Components/Preloader';\nimport AccountInfoWrapper from '../account-info-wrapper';\nimport WalletBadge from './wallet-badge';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TAccountInfoWallets = {\n    toggleDialog: () => void;\n    is_dialog_on: boolean;\n};\n\ntype TDropdownArrow = {\n    is_disabled?: boolean;\n};\n\ntype TBalanceLabel = {\n    balance: TStores['client']['accounts'][string]['balance'];\n    currency: TStores['client']['accounts'][string]['currency'];\n    is_virtual: boolean;\n    display_code: string;\n};\n\ntype TInfoIcons = {\n    gradients: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number]['gradients'];\n    icons: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number]['icons'];\n    icon_type: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number]['icon_type'];\n};\n\nconst DropdownArrow = ({ is_disabled = false }: TDropdownArrow) =>\n    is_disabled ? (\n        <Icon data_testid='dt_lock_icon' icon='IcLock' />\n    ) : (\n        <Icon data_testid='dt_select_arrow' icon='IcChevronDownBold' className='acc-info__select-arrow' />\n    );\n\nconst BalanceLabel = ({ balance, currency, is_virtual, display_code }: Partial<TBalanceLabel>) =>\n    typeof balance !== 'undefined' || !currency ? (\n        <div className='acc-info__wallets-account-type-and-balance'>\n            <Text\n                as='p'\n                data-testid='dt_balance'\n                className={classNames('acc-info__balance acc-info__wallets-balance', {\n                    'acc-info__balance--no-currency': !currency && !is_virtual,\n                })}\n            >\n                {!currency ? (\n                    <Localize i18n_default_text='No currency assigned' />\n                ) : (\n                    `${formatMoney(currency, balance ?? 0, true)} ${display_code}`\n                )}\n            </Text>\n        </div>\n    ) : null;\n\nconst MobileInfoIcon = observer(({ gradients, icons, icon_type }: TInfoIcons) => {\n    const {\n        ui: { is_dark_mode_on },\n    } = useStore();\n\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    const app_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n\n    return (\n        <div className='acc-info__wallets-container'>\n            <AppLinkedWithWalletIcon\n                app_icon={app_icon}\n                gradient_class={gradients?.card[theme] ?? ''}\n                size='small'\n                type={icon_type}\n                wallet_icon={icons?.[theme] ?? ''}\n                hide_watermark\n            />\n        </div>\n    );\n});\n\nconst DesktopInfoIcons = observer(({ gradients, icons, icon_type }: TInfoIcons) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n\n    return (\n        <div className='acc-info__wallets-container'>\n            <Icon\n                icon={is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight'}\n                size={24}\n                data_testid='dt_ic_wallet_options'\n            />\n            <WalletIcon\n                icon={icons?.[theme] ?? ''}\n                type={icon_type}\n                gradient_class={gradients?.card[theme]}\n                size={'small'}\n                has_bg\n                hide_watermark\n            />\n        </div>\n    );\n});\n\nconst AccountInfoWallets = observer(({ is_dialog_on, toggleDialog }: TAccountInfoWallets) => {\n    const { client, ui } = useStore();\n    const { switchAccount, is_logged_in, loginid, accounts } = client;\n    const { account_switcher_disabled_message } = ui;\n    const { data: wallet_list } = useStoreWalletAccountsList();\n    const linked_wallets_accounts = useStoreLinkedWalletsAccounts();\n    const { isDesktop } = useDevice();\n\n    const active_account = accounts?.[loginid ?? ''];\n    const wallet_loginid =\n        sessionStorage.getItem('active_wallet_loginid') || localStorage.getItem('active_wallet_loginid');\n    const active_wallet =\n        wallet_list?.find(wallet => wallet.loginid === wallet_loginid) ??\n        wallet_list?.find(wallet => wallet.loginid === loginid);\n\n    let linked_dtrade_trading_account_loginid = loginid;\n\n    if (active_wallet) {\n        // get 'dtrade' loginid account linked to the current wallet\n        linked_dtrade_trading_account_loginid =\n            sessionStorage.getItem('active_loginid') ||\n            active_wallet.dtrade_loginid ||\n            linked_wallets_accounts.dtrade?.[0]?.loginid;\n\n        // switch to dtrade account\n        if (linked_dtrade_trading_account_loginid && linked_dtrade_trading_account_loginid !== loginid) {\n            switchAccount(linked_dtrade_trading_account_loginid);\n        }\n    }\n\n    const linked_wallet = wallet_list?.find(wallet => wallet.dtrade_loginid === linked_dtrade_trading_account_loginid);\n\n    if (!linked_wallet) return <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={!isDesktop} speed={3} />;\n\n    const show_badge = linked_wallet.is_virtual;\n\n    return (\n        <div className='acc-info__wrapper'>\n            {isDesktop && <div className='acc-info__separator' />}\n            <AccountInfoWrapper\n                is_mobile={!isDesktop}\n                is_disabled={Boolean(active_account?.is_disabled)}\n                disabled_message={account_switcher_disabled_message}\n            >\n                <div\n                    data-testid='dt_acc_info'\n                    id='dt_core_account-info_acc-info'\n                    className={classNames('acc-info acc-info__wallets', {\n                        'acc-info--show': is_dialog_on,\n                        'acc-info--is-disabled': active_account?.is_disabled,\n                    })}\n                    onClick={active_account?.is_disabled ? undefined : () => toggleDialog()}\n                    // SonarLint offers to add handler for onKeyDown event if we have onClick event handler\n                    onKeyDown={active_account?.is_disabled ? undefined : () => toggleDialog()}\n                >\n                    {isDesktop ? (\n                        <DesktopInfoIcons\n                            gradients={linked_wallet.gradients}\n                            icons={linked_wallet.icons}\n                            icon_type={linked_wallet.icon_type}\n                        />\n                    ) : (\n                        <MobileInfoIcon\n                            gradients={linked_wallet.gradients}\n                            icons={linked_wallet.icons}\n                            icon_type={linked_wallet.icon_type}\n                        />\n                    )}\n                    <BalanceLabel\n                        balance={active_account?.balance}\n                        currency={active_account?.currency}\n                        is_virtual={Boolean(active_account?.is_virtual)}\n                        display_code={getCurrencyDisplayCode(active_account?.currency)}\n                    />\n                    {show_badge && (\n                        <WalletBadge\n                            is_demo={Boolean(linked_wallet?.is_virtual)}\n                            label={linked_wallet?.landing_company_name}\n                        />\n                    )}\n                    <DropdownArrow is_disabled={Boolean(active_account?.is_disabled)} />\n                </div>\n            </AccountInfoWrapper>\n            <div className='acc-info__separator' />\n            {isDesktop ? (\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={200}\n                    classNames={{\n                        enter: 'acc-switcher__wrapper--enter',\n                        enterDone: 'acc-switcher__wrapper--enter-done',\n                        exit: 'acc-switcher__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='acc-switcher__wrapper acc-switcher__wrapper--wallets'>\n                        <AccountSwitcherWallet is_visible={is_dialog_on} toggle={toggleDialog} />\n                    </div>\n                </CSSTransition>\n            ) : (\n                <AccountSwitcherWalletMobile is_visible={is_dialog_on} toggle={toggleDialog} loginid={loginid} />\n            )}\n        </div>\n    );\n});\n\nexport default AccountInfoWallets;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { routes, isTabletOs, getDomainUrl } from '@deriv/shared';\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { useIsHubRedirectionEnabled, useAccountSettingsRedirect } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { LoginButton } from '../login-button.jsx';\nimport { SignupButton } from '../signup-button.jsx';\nimport ToggleNotifications from '../toggle-notifications.jsx';\nimport TradersHubOnboarding from '../../../../Containers/Layout/header/traders-hub-onboarding';\nimport AccountInfoWallets from './account-info-wallets';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\ntype TUiStore = ReturnType<typeof useStore>['ui'];\n\ntype TAccountActionsWallets = {\n    is_traders_hub_routes: boolean;\n};\n\n// Helper components\nconst AccountSettingsToggle = () => {\n    const { redirect_url } = useAccountSettingsRedirect();\n\n    const accountSettings = (\n        <a className='account-settings-toggle' href={redirect_url}>\n            <Icon icon='IcUserOutline' />\n        </a>\n    );\n\n    if (isTabletOs) return accountSettings;\n\n    return (\n        <Popover\n            classNameBubble='account-settings-toggle__tooltip'\n            alignment='bottom'\n            message={<Localize i18n_default_text='Manage account settings' />}\n            should_disable_pointer_events\n            zIndex='9999'\n        >\n            {accountSettings}\n        </Popover>\n    );\n};\n\nconst NotificationsToggle = ({\n    count,\n    is_visible,\n    toggleDialog,\n    is_mobile = false,\n}: {\n    count?: number;\n    is_visible?: boolean;\n    toggleDialog?: () => void;\n    is_mobile?: boolean;\n}) => (\n    <ToggleNotifications\n        count={count}\n        is_visible={is_visible}\n        toggleDialog={toggleDialog}\n        tooltip_message={is_mobile ? undefined : <Localize i18n_default_text='View notifications' />}\n        should_disable_pointer_events={!is_mobile}\n        showPopover={!is_mobile && !isTabletOs}\n    />\n);\n\nconst CurrencyButton = ({ openRealAccountSignup }: { openRealAccountSignup: TUiStore['openRealAccountSignup'] }) => (\n    <div className='set-currency'>\n        <Button\n            onClick={() => openRealAccountSignup('set_currency')}\n            has_effect\n            type='button'\n            text={localize('Set currency')}\n            primary\n        />\n    </div>\n);\n\nconst ManageFundsButton = ({ onClick }: { onClick: () => void }) => (\n    <Button className='acc-info__button' has_effect text={localize('Manage funds')} onClick={onClick} primary />\n);\n\nconst LoggedOutView = () => (\n    <>\n        <LoginButton className='acc-info__button' />\n        <SignupButton className='acc-info__button' />\n    </>\n);\n\nconst AccountActionsWallets = observer(({ is_traders_hub_routes }: TAccountActionsWallets) => {\n    const { client, ui, notifications } = useStore();\n    const { is_logged_in, accounts, loginid, has_wallet } = client;\n    const { openRealAccountSignup, toggleAccountsDialog, is_accounts_switcher_on } = ui;\n    const { isDesktop } = useDevice();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const { is_notifications_visible, notifications: notificationsArray, toggleNotificationsModal } = notifications;\n\n    const notifications_count = notificationsArray?.length;\n\n    const active_account = accounts?.[loginid ?? ''];\n    const is_virtual = active_account?.is_virtual;\n    const currency = active_account?.currency;\n\n    const isCurrencyButtonVisible = isDesktop && !is_traders_hub_routes && !is_virtual && !currency;\n    const isManageFundsButtonVisible = isDesktop && !is_traders_hub_routes && currency;\n\n    const history = useHistory();\n\n    const handleManageFundsRedirect = () => {\n        if (isHubRedirectionEnabled) {\n            const PRODUCTION_REDIRECT_URL = `https://hub.${getDomainUrl()}/tradershub`;\n            const STAGING_REDIRECT_URL = `https://staging-hub.${getDomainUrl()}/tradershub`;\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = window.sessionStorage.getItem('account') || url_params.get('account');\n\n            window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=wallet${account_currency ? `&account=${account_currency}` : ''}`;\n        } else {\n            history.push(routes.wallets_transfer as unknown as Parameters<typeof history.push>[0], {\n                toAccountLoginId: loginid,\n                is_from_dtrader: window.location.pathname?.includes('dtrader'),\n            });\n        }\n    };\n\n    if (!is_logged_in) {\n        return <LoggedOutView />;\n    }\n\n    return (\n        <>\n            {isCurrencyButtonVisible && <CurrencyButton openRealAccountSignup={openRealAccountSignup} />}\n            {isManageFundsButtonVisible && <ManageFundsButton onClick={handleManageFundsRedirect} />}\n            {!is_traders_hub_routes && (\n                <AccountInfoWallets is_dialog_on={is_accounts_switcher_on} toggleDialog={toggleAccountsDialog} />\n            )}\n            {is_traders_hub_routes && <TradersHubOnboarding />}\n            <NotificationsToggle\n                count={notifications_count}\n                is_visible={is_notifications_visible}\n                toggleDialog={toggleNotificationsModal}\n                is_mobile={!isDesktop}\n            />\n            {isDesktop && <AccountSettingsToggle />}\n        </>\n    );\n});\n\nexport { AccountActionsWallets };\n","import { getPlatformSettings, routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TPlatformConfig = {\n    description: () => string;\n    href?: string;\n    icon: string;\n    link_to?: string;\n    name: string;\n    title: () => string;\n};\n\nconst platform_config: TPlatformConfig[] = [\n    {\n        icon: getPlatformSettings('trader').icon,\n        title: () => getPlatformSettings('trader').name,\n        name: getPlatformSettings('trader').name,\n        description: () => localize('A whole new trading experience on a powerful yet easy to use platform.'),\n        link_to: routes.trade,\n    },\n    {\n        icon: getPlatformSettings('dbot').icon,\n        title: () => getPlatformSettings('dbot').name,\n        name: getPlatformSettings('dbot').name,\n        description: () => localize('Automated trading at your fingertips. No coding needed.'),\n        href: routes.bot,\n    },\n    {\n        icon: getPlatformSettings('smarttrader').icon,\n        title: () => getPlatformSettings('smarttrader').name,\n        name: getPlatformSettings('smarttrader').name,\n        description: () => localize('Trade the world’s markets with our popular user-friendly platform.'),\n        href: routes.smarttrader,\n    },\n];\n\nexport default platform_config;\n","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" {...props}><path d=\"M0 9.33A9.33 9.33 0 019.33 0h5.34A9.33 9.33 0 0124 9.33v5.34A9.33 9.33 0 0114.67 24H9.33A9.33 9.33 0 010 14.67V9.33z\" fill=\"#FF444F\" /><path d=\"M15.06 4.97l-.78 4.4H11.6c-2.51 0-4.9 2.02-5.34 4.53l-.19 1.06c-.44 2.51 1.23 4.54 3.74 4.54h2.24a4.11 4.11 0 003.89-3.3L18 4.5l-2.94.47zm-1.91 10.81c-.1.57-.6 1.03-1.17 1.03h-1.36c-1.13 0-1.88-.92-1.69-2.05l.12-.66a2.55 2.55 0 012.4-2.04h2.36l-.66 3.72z\" fill=\"#fff\" /></svg>;","import React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport DerivBrandShortLogo from 'Assets/SvgComponents/header/deriv-logo-short.svg';\n\nconst DerivShortLogo = () => {\n    return (\n        <div className='header__menu-left-logo'>\n            <StaticUrl href='/'>\n                <DerivBrandShortLogo />\n            </StaticUrl>\n        </div>\n    );\n};\n\nexport default DerivShortLogo;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { getDomainUrl, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useIsHubRedirectionEnabled } from '@deriv/hooks';\n\nconst TradersHubHomeButton = observer(() => {\n    const { client } = useStore();\n    const history = useHistory();\n    const location = useLocation();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const { has_wallet } = client;\n    const { pathname } = location;\n\n    const handleTradershubRedirect = () => {\n        if (isHubRedirectionEnabled && has_wallet) {\n            const PRODUCTION_REDIRECT_URL = `https://hub.${getDomainUrl()}/tradershub`;\n            const STAGING_REDIRECT_URL = `https://staging-hub.${getDomainUrl()}/tradershub`;\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n\n            window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=home${account_currency ? `&account=${account_currency}` : ''}`;\n        } else {\n            history.push(routes.traders_hub);\n        }\n    };\n\n    return (\n        <div\n            data-testid='dt_traders_hub_home_button'\n            className={classNames('traders-hub-header__tradershub', {\n                'traders-hub-header__tradershub--active':\n                    pathname === routes.traders_hub || pathname === routes.traders_hub_v2,\n            })}\n            onClick={handleTradershubRedirect}\n        >\n            <div className='traders-hub-header__tradershub--home-logo'>\n                <Icon icon={'IcAppstoreTradersHubHome'} size={16} />\n            </div>\n            <Text className='traders-hub-header__tradershub--text'>\n                <Localize i18n_default_text=\"Trader's Hub\" />\n            </Text>\n        </div>\n    );\n});\n\nexport default TradersHubHomeButton;\n","import { localize } from '@deriv/translations';\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nexport const EXPERIAN = {\n    SUCCESS: 1,\n    WARN: 0,\n    DANGER: -1,\n    PENDING: -2,\n};\n\n/**\n * Return account title for the given landing company\n *\n * @param {string} landing_company_shortcode\n * @return {string} localized title\n */\nexport const getAccountTitle = landing_company_shortcode => {\n    switch (landing_company_shortcode) {\n        case 'svg':\n            return localize('Options & Multipliers');\n        case 'maltainvest':\n            return localize('Multipliers');\n        default:\n            return localize('Deriv');\n    }\n};\n\n/**\n * @param {string} landing_company_shortcode\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nexport const getExperianResult = status => {\n    const { landing_company_shortcode = '' } = status;\n\n    if (landing_company_shortcode === 'svg') return EXPERIAN.SUCCESS;\n\n    return EXPERIAN.SUCCESS;\n};\n\nexport const screen_height_sm_threshold = 930;\n","import React from 'react';\nimport { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { CurrencyRadioButton, CurrencyRadioButtonGroup } from '@deriv/account';\nimport { FormSubmitButton, Icon, Text, ThemedScrollbars } from '@deriv/components';\nimport { isMobile, reorderCurrencies, website_name } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\n\nimport './currency-selector.scss';\n\nconst messages = () => [\n    <Localize key={0} i18n_default_text='Choose your preferred cryptocurrency' />,\n    <Localize key={1} i18n_default_text='You can open an account for each cryptocurrency.' />,\n    <Localize key={2} i18n_default_text='Add a real account' />,\n    <Localize key={3} i18n_default_text='Choose a currency you would like to trade with.' />,\n    <Localize key={4} i18n_default_text='Choose a currency' />,\n];\n\nconst Headers = ({ heading, subheading }) => (\n    <React.Fragment>\n        <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n            {heading}\n        </Text>\n        <Text as='h3' size='xxs' color='prominent' align='center' className='add-crypto-currency__sub-title'>\n            {subheading}\n        </Text>\n    </React.Fragment>\n);\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst AddCryptoCurrency = observer(\n    ({\n        form_error,\n        is_add_fiat,\n        onClickBack,\n        onSubmit,\n        should_show_crypto_only,\n        should_show_fiat_only,\n        value,\n        hasNoAvailableCrypto,\n    }) => {\n        const { isDesktop } = useDevice();\n        const { client, ui } = useStore();\n        const { available_crypto_currencies, upgradeable_currencies: legal_allowed_currencies, has_fiat } = client;\n        const { should_show_cancel } = ui;\n\n        const getReorderedFiatCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n        const getReorderedCryptoCurrencies = () => {\n            const currencies = legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE);\n\n            return reorderCurrencies(currencies, CRYPTO_CURRENCY_TYPE);\n        };\n        const canAddFiat = () => !has_fiat && !should_show_crypto_only;\n        const canAddCrypto = currency => {\n            // check if the cryptocurrency has not been created\n            return available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n        };\n\n        return (\n            <Formik\n                initialValues={{\n                    currency: value.currency,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form onSubmit={handleSubmit}>\n                        {!canAddFiat() && <Headers heading={messages()[0]} subheading={messages()[1]} />}\n                        {canAddFiat() && (\n                            <Headers heading={is_add_fiat ? messages()[4] : messages()[2]} subheading={messages()[3]} />\n                        )}\n                        {canAddFiat() && (\n                            <ThemedScrollbars>\n                                <CurrencyRadioButtonGroup\n                                    id='fiat_currency'\n                                    is_fiat\n                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                    value={values.currency}\n                                    error={errors.currency}\n                                    touched={touched.currency}\n                                    is_title_enabled={canAddFiat()}\n                                    item_count={getReorderedFiatCurrencies().length}\n                                >\n                                    {getReorderedFiatCurrencies().map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={CurrencyRadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                        />\n                                    ))}\n                                </CurrencyRadioButtonGroup>\n                            </ThemedScrollbars>\n                        )}\n                        {canAddFiat() && (\n                            <Text\n                                as='p'\n                                color='prominent'\n                                size='xxs'\n                                align='center'\n                                className='currency-selector__deposit-warn'\n                            >\n                                <Localize i18n_default_text='You’ll not be able to change currency once you have made a deposit.' />\n                            </Text>\n                        )}\n                        {hasNoAvailableCrypto() && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {localize(\n                                        'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                                        {\n                                            deriv: website_name,\n                                        }\n                                    )}\n                                </Text>\n                            </div>\n                        )}\n                        {!should_show_fiat_only &&\n                            (available_crypto_currencies.length !== 0 ? (\n                                <>\n                                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 240 : '460px'}>\n                                        <CurrencyRadioButtonGroup\n                                            id='crypto_currency'\n                                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                            label={localize('Cryptocurrencies')}\n                                            value={values.currency}\n                                            error={errors.currency}\n                                            touched={touched.currency}\n                                            is_title_enabled={canAddFiat()}\n                                            item_count={getReorderedCryptoCurrencies().length}\n                                        >\n                                            {getReorderedCryptoCurrencies().map(currency => (\n                                                <Field\n                                                    key={currency.value}\n                                                    component={CurrencyRadioButton}\n                                                    name='currency'\n                                                    id={currency.value}\n                                                    label={currency.name}\n                                                    selected={canAddCrypto(currency)}\n                                                />\n                                            ))}\n                                        </CurrencyRadioButtonGroup>\n                                    </ThemedScrollbars>\n                                </>\n                            ) : (\n                                <ThemedScrollbars>\n                                    <CurrencyRadioButtonGroup\n                                        id='crypto_currency'\n                                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                        label={localize('Cryptocurrencies')}\n                                        is_title_enabled={canAddFiat()}\n                                        item_count={getReorderedCryptoCurrencies().length}\n                                    >\n                                        {getReorderedCryptoCurrencies().map(currency => (\n                                            <Field\n                                                key={currency.value}\n                                                component={CurrencyRadioButton}\n                                                name='currency'\n                                                id={currency.value}\n                                                label={currency.name}\n                                                selected\n                                            />\n                                        ))}\n                                    </CurrencyRadioButtonGroup>\n                                </ThemedScrollbars>\n                            ))}\n                        <FormSubmitButton\n                            className='currency-selector__button'\n                            is_disabled={isSubmitting || !values.currency}\n                            label={localize('Add account')}\n                            is_absolute={isDesktop}\n                            form_error={form_error}\n                            has_cancel={should_show_cancel}\n                            cancel_label={localize('Back')}\n                            cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                            onCancel={() => onClickBack()}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nAddCryptoCurrency.propTypes = {\n    hasNoAvailableCrypto: PropTypes.func,\n    form_error: PropTypes.string,\n    onSubmit: PropTypes.func,\n    should_show_crypto_only: PropTypes.bool,\n    should_show_fiat_only: PropTypes.bool,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n        currency: PropTypes.string,\n    }),\n    onClickBack: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n};\n\nexport default AddCryptoCurrency;\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\nconst AddCurrencyNote = ({ message }) => {\n    return (\n        <div className='add-currency__note-wrapper'>\n            <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__note'>\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default AddCurrencyNote;\n","const currenciesPaymentAgentAvailability = (legal_allowed_currencies, all_payment_agent_list, account_list) => {\n    const result = [];\n    legal_allowed_currencies.forEach(currency => {\n        result.push({\n            ...currency,\n            has_payment_agent: !!all_payment_agent_list?.filter(agent => agent.currencies === currency.value).length,\n            is_disabled: account_list?.some(account => account.title === currency.value && account.is_disabled),\n        });\n    });\n    return result;\n};\n\nconst currenciesOnRampAvailability = legal_allowed_currencies => {\n    return legal_allowed_currencies.filter(({ platform }) => platform.ramp.length > 0);\n};\n\nexport default {\n    currenciesOnRampAvailability,\n    currenciesPaymentAgentAvailability,\n};\n","import { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { FormSubmitButton, Icon, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile, reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrencyNote from './add-currency-note.jsx';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst AddCurrency = observer(({ onSubmit, hasNoAvailableCrypto, is_add_crypto, is_add_fiat }) => {\n    const { client, modules, ui } = useStore();\n    const { available_crypto_currencies, has_fiat, upgradeable_currencies: legal_allowed_currencies } = client;\n    const { cashier } = modules;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const deposit_target = cashier.general_store.deposit_target;\n    const { openRealAccountSignup } = ui;\n\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    const getReorderedCurrencies = React.useMemo(() => {\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list\n        );\n\n        const crypto = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === CRYPTO_CURRENCY_TYPE &&\n                    available_crypto_currencies.some(x => x.value === currency.value)\n            ),\n            CRYPTO_CURRENCY_TYPE\n        );\n\n        const fiat = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === FIAT_CURRENCY_TYPE &&\n                    !available_crypto_currencies.some(x => x.value === currency.value)\n            )\n        );\n\n        return {\n            crypto,\n            fiat,\n        };\n    }, [all_payment_agent_list, available_crypto_currencies, legal_allowed_currencies]);\n\n    const onClickBack = () => {\n        openRealAccountSignup('choose');\n        if (deposit_target === routes.cashier_pa) {\n            setShouldShowAllAvailableCurrencies(true);\n        }\n    };\n\n    const AddFiat = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Fiat currencies')}\n                </Text>\n                {!!has_fiat && (\n                    <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                        {localize('You are limited to one fiat account only.')}\n                    </Text>\n                )}\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.fiat.length}\n                    >\n                        {getReorderedCurrencies.fiat.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={has_fiat}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    const AddCrypto = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Cryptocurrencies')}\n                </Text>\n                <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                    {localize('You can open an account for each cryptocurrency.')}\n                </Text>\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.crypto.length}\n                    >\n                        {getReorderedCurrencies.crypto.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={deposit_target === routes.cashier_pa ? !currency.has_payment_agent : false}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    if (is_add_crypto)\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div\n                    className={classNames('add-crypto-currency cashier-deposit', {\n                        'account-wizard--disabled': hasNoAvailableCrypto(),\n                    })}\n                >\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        onClickBack={onClickBack}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_crypto_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n\n    if (is_add_fiat) {\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div className='change-currency'>\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_fiat_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                        is_add_fiat\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={onSubmit}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 190 : '460px'}>\n                        <div>\n                            <Text\n                                as='p'\n                                color='prominent'\n                                weight='bold'\n                                align='center'\n                                className='add-currency__wizard-header'\n                            >\n                                {localize('Choose your currency')}\n                            </Text>\n\n                            <AddFiat />\n                            <div className='add-currency__underline' />\n                            <AddCrypto />\n                        </div>\n                    </ThemedScrollbars>\n                    <AddCurrencyNote\n                        message={localize('Some currencies may not be supported by payment agents in your country.')}\n                    />\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Add account')}\n                        is_absolute\n                        form_error={form_error}\n                        has_cancel\n                        cancel_label={localize('Back')}\n                        cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                        onCancel={() => onClickBack()}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nAddCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    is_add_crypto: PropTypes.bool,\n    is_add_fiat: PropTypes.bool,\n    hasNoAvailableCrypto: PropTypes.func,\n};\n\nexport default AddCurrency;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Text } from '@deriv/components';\nimport { isMobile, reorderCurrencies } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\nimport { Chat } from '@deriv/utils';\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst ChangeAccountCurrency = observer(\n    ({ value, onSubmit, form_error, can_change_fiat_currency, current_currency_type }) => {\n        const { client, ui } = useStore();\n        const {\n            upgradeable_currencies: legal_allowed_currencies,\n            currency: client_currency,\n            current_fiat_currency,\n        } = client;\n        const { closeRealAccountSignup } = ui;\n        const getReorderedCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n\n        const is_fiat = current_currency_type === 'fiat';\n        const fiat_message = (\n            <Localize\n                i18n_default_text='If you want to change your account currency, please contact us via <0>live chat</0>.'\n                components={[\n                    <span\n                        key={0}\n                        className='link link--orange'\n                        onClick={() => {\n                            closeRealAccountSignup();\n                            Chat.open();\n                        }}\n                    />,\n                ]}\n            />\n        );\n\n        const non_fiat_mesage = (\n            <Localize\n                i18n_default_text='Please switch to your {{fiat_currency}} account to change currencies.'\n                values={{\n                    fiat_currency: current_fiat_currency?.toUpperCase?.(),\n                }}\n            />\n        );\n\n        const disabled_message = is_fiat ? fiat_message : non_fiat_mesage;\n\n        return (\n            <Formik\n                initialValues={{\n                    fiat: value.fiat,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n                            handleSubmit();\n                        }}\n                    >\n                        <Text as='h1' color='prominent' weight='bold' align='center' className='change-currency__title'>\n                            <Localize i18n_default_text='Change your currency' />\n                        </Text>\n                        <Text as='h3' size='xxs' align='center' className='change-currency__sub-title'>\n                            <Localize i18n_default_text='Choose the currency you would like to trade with.' />\n                        </Text>\n                        {!can_change_fiat_currency && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {disabled_message}\n                                </Text>\n                            </div>\n                        )}\n                        <CurrencyRadioButtonGroup\n                            id='fiat'\n                            label={localize('Cryptocurrencies')}\n                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                            value={values.fiat}\n                            error={errors.fiat}\n                            touched={touched.fiat}\n                            is_title_enabled={false}\n                            item_count={getReorderedCurrencies().length}\n                        >\n                            {getReorderedCurrencies().map(currency => (\n                                <Field\n                                    key={currency.value}\n                                    component={CurrencyRadioButton}\n                                    name='fiat'\n                                    id={currency.value}\n                                    label={currency.name}\n                                    selected={currency.value === client_currency}\n                                />\n                            ))}\n                        </CurrencyRadioButtonGroup>\n                        <FormSubmitButton\n                            className='change-currency__button'\n                            is_disabled={isSubmitting || !values.fiat}\n                            label={localize('Change currency')}\n                            is_absolute={!isMobile()}\n                            form_error={form_error}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nChangeAccountCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    closeModal: PropTypes.func,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n    }),\n    form_error: PropTypes.string,\n    can_change_fiat_currency: PropTypes.bool,\n    current_currency_type: PropTypes.string,\n    current_fiat_currency: PropTypes.string,\n};\n\nexport default ChangeAccountCurrency;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Tabs, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { CURRENCY_TYPE, isDesktop, isMobile } from '@deriv/shared';\nimport { WS } from 'Services';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport ChangeAccountCurrency from './change-account-currency.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/add-or-manage.scss';\nimport 'Sass/change-account.scss';\n\nconst AddOrManageAccounts = observer(props => {\n    const {\n        deposit_target,\n        is_add_crypto,\n        is_add_currency,\n        is_add_fiat,\n        is_loading,\n        onError,\n        onSuccessSetAccountCurrency,\n        setLoading,\n        onClose,\n    } = props;\n\n    const { client, modules, ui, traders_hub } = useStore();\n    const {\n        available_crypto_currencies,\n        can_change_fiat_currency,\n        current_currency_type,\n        has_fiat,\n        setAccountCurrency: setCurrency,\n        createCryptoAccount,\n        is_low_risk,\n        loginid,\n    } = client;\n    const { cashier } = modules;\n    const { show_eu_related_content } = traders_hub;\n    const { manage_real_account_tab_index, setShouldShowCancel, resetRealAccountSignupTarget } = ui;\n    const setIsDeposit = cashier.general_store.setIsDeposit;\n    const initial_active_index =\n        manage_real_account_tab_index ?? (has_fiat && available_crypto_currencies?.length === 0) ? 1 : 0;\n\n    const [active_index, setActiveIndex] = React.useState(initial_active_index);\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n\n    React.useEffect(() => {\n        const fetchMt5LoginList = async () => {\n            setLoading(true);\n            await WS.mt5LoginList();\n            setLoading(false);\n        };\n        fetchMt5LoginList();\n        return () => setShouldShowCancel(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setActiveTabIndex = index => {\n        setActiveIndex(index);\n    };\n\n    const setCurrencyOrAddCryptoAccount = currency_object => {\n        setLoading(true);\n        Object.entries(currency_object).map(([key, value]) => {\n            if (key === CURRENCY_TYPE.FIAT) {\n                setCurrency(value)\n                    .then(response => {\n                        onSuccessSetAccountCurrency(\n                            response.passthrough.previous_currency,\n                            response.echo_req.set_account_currency,\n                            deposit_target\n                        );\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            } else {\n                // Add Crypto Account\n                createCryptoAccount(value)\n                    .then(() => {\n                        onSuccessSetAccountCurrency('', value, deposit_target);\n                        resetRealAccountSignupTarget();\n                        setIsDeposit(true);\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            }\n        });\n    };\n\n    const hasNoAvailableCrypto = () => {\n        return available_crypto_currencies.length === 0 && has_fiat;\n    };\n\n    if (is_loading) return <LoadingModal />;\n\n    const fiat_section = has_fiat && (\n        <div\n            className={classNames('change-currency', {\n                'account-wizard--disabled': !can_change_fiat_currency,\n            })}\n        >\n            <ChangeAccountCurrency\n                className='account-wizard__body'\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                can_change_fiat_currency={can_change_fiat_currency}\n                current_currency_type={current_currency_type}\n                closeModal={onClose}\n            />\n        </div>\n    );\n\n    if (is_add_currency || is_add_crypto || is_add_fiat) {\n        return (\n            <AddCurrency\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                should_show_crypto_only\n                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                is_add_crypto={is_add_crypto}\n                is_add_fiat={is_add_fiat}\n                is_add_currency={is_add_currency}\n            />\n        );\n    }\n\n    const is_mf_active = loginid?.startsWith('MF');\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} autohide={false}>\n            {(show_eu_related_content && !is_low_risk && has_fiat) || is_mf_active ? (\n                fiat_section\n            ) : (\n                <Tabs\n                    active_index={active_index}\n                    className='account-wizard add-or-manage tabs--desktop'\n                    onTabItemClick={setActiveTabIndex}\n                    top\n                    header_fit_content={isDesktop()}\n                >\n                    <div label={localize('Cryptocurrencies')}>\n                        <div\n                            className={classNames('add-crypto-currency', {\n                                'account-wizard--disabled': hasNoAvailableCrypto(),\n                            })}\n                        >\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_crypto_only\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        </div>\n                    </div>\n                    <div label={localize('Fiat currencies')}>\n                        {has_fiat ? (\n                            fiat_section\n                        ) : (\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_fiat_only={true}\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        )}\n                    </div>\n                </Tabs>\n            )}\n        </ThemedScrollbars>\n    );\n});\n\nAddOrManageAccounts.propTypes = {\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onSuccessSetAccountCurrency: PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_add_crypto: PropTypes.bool,\n    setLoading: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n    is_add_currency: PropTypes.bool,\n    deposit_target: PropTypes.string,\n};\n\nexport default AddOrManageAccounts;\n","import React from 'react';\nimport { Field, Formik } from 'formik';\n\nimport { CurrencyRadioButton, CurrencyRadioButtonGroup } from '@deriv/account';\nimport { FormSubmitButton, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { reorderCurrencies, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\n\nimport CurrencyProvider from './choose-currency';\n\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst ChooseCurrency = observer(() => {\n    const { client, modules, ui } = useStore();\n    const {\n        account_list,\n        available_crypto_currencies,\n        currency: currency_title,\n        has_fiat,\n        upgradeable_currencies: legal_allowed_currencies,\n        switchAccount,\n    } = client;\n    const { cashier } = modules;\n    const { closeRealAccountSignup, continueRouteAfterChooseCrypto, openRealAccountSignup, setShouldShowCancel } = ui;\n    const deposit_target = cashier.general_store.deposit_target;\n    const should_show_all_available_currencies = cashier.general_store.should_show_all_available_currencies;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '' });\n\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    React.useEffect(() => {\n        return () => setShouldShowAllAvailableCurrencies(false);\n    }, [setShouldShowAllAvailableCurrencies]);\n\n    const memoized_reordered_crypto_currencies = React.useMemo(() => {\n        const hasAllCryptos = () => {\n            return (\n                legal_allowed_currencies?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE && !account_list.some(x => x.title === currency.value)\n                ).length === 0\n            );\n        };\n\n        const addNewCryptoAccount = () => {\n            openRealAccountSignup(deposit_target === routes.cashier_pa ? 'add_currency' : 'add_crypto');\n            setShouldShowCancel(true);\n        };\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list,\n            account_list\n        );\n\n        const getReorderCryptoCurrencies = () => {\n            let currencies_to_filter;\n\n            if (should_show_all_available_currencies) {\n                currencies_to_filter = allowed_currencies_payment_agent_availability;\n            } else {\n                currencies_to_filter = allowed_currencies_payment_agent_availability?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE &&\n                        !available_crypto_currencies.some(x => x.value === currency.value)\n                );\n            }\n\n            const filtered_currencies = currencies_to_filter?.filter(currency =>\n                account_list.some(x => x.title === currency.value)\n            );\n\n            return reorderCurrencies(filtered_currencies, CRYPTO_CURRENCY_TYPE);\n        };\n\n        const shouldShowAddButton = () => {\n            switch (deposit_target) {\n                case routes.cashier_pa:\n                    return !has_fiat || !hasAllCryptos();\n                default:\n                    return !hasAllCryptos();\n            }\n        };\n\n        const reordered_crypto_currencies = getReorderCryptoCurrencies();\n\n        if (shouldShowAddButton()) {\n            reordered_crypto_currencies.push({\n                value: 'plus',\n                name: deposit_target === routes.cashier_pa ? localize('Add a new') : localize('Add new'),\n                second_line_label:\n                    deposit_target === routes.cashier_pa ? localize('account') : localize('crypto account'),\n                icon: 'IcAddAccount',\n                onClick: () => addNewCryptoAccount(),\n                has_payment_agent: true,\n            });\n        }\n\n        return reordered_crypto_currencies;\n    }, [\n        account_list,\n        all_payment_agent_list,\n        available_crypto_currencies,\n        deposit_target,\n        has_fiat,\n        legal_allowed_currencies,\n        should_show_all_available_currencies,\n        openRealAccountSignup,\n        setShouldShowCancel,\n    ]);\n\n    const doSwitch = async value => {\n        const target_account = account_list.filter(account => account.title === value);\n        const loginid = target_account.map(x => x.loginid)[0];\n        if (loginid) await switchAccount(loginid);\n    };\n\n    const onSubmit = async obj => {\n        Object.entries(obj).map(([title, value]) => {\n            if (title) {\n                closeRealAccountSignup();\n                if (value !== currency_title) {\n                    doSwitch(value);\n                }\n                continueRouteAfterChooseCrypto();\n            }\n        });\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={values => {\n                onSubmit(values);\n            }}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n                        {deposit_target === routes.cashier_pa\n                            ? localize('Choose an account or add a new one')\n                            : localize('Choose one of your accounts or add a new cryptocurrency account')}\n                    </Text>\n                    <ThemedScrollbars>\n                        {is_loading ? (\n                            <Loading is_fullscreen={false} className='currency-list__loading-wrapper' />\n                        ) : (\n                            <CurrencyRadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                item_count={memoized_reordered_crypto_currencies.length}\n                            >\n                                {memoized_reordered_crypto_currencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={CurrencyRadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        icon={currency.icon}\n                                        second_line_label={currency.second_line_label}\n                                        onClick={currency.onClick}\n                                        selected={\n                                            currency.is_disabled || deposit_target === routes.cashier_pa\n                                                ? !currency.has_payment_agent\n                                                : false\n                                        }\n                                    />\n                                ))}\n                            </CurrencyRadioButtonGroup>\n                        )}\n                    </ThemedScrollbars>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Continue')}\n                        is_absolute\n                        form_error={form_error}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nexport default ChooseCurrency;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst FinishedAddCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    redirectToLegacyPlatform,\n    deposit_real_account_signup_target,\n    history,\n    onSubmit,\n    setIsDeposit,\n}) => {\n    const { isDesktop } = useDevice();\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n        redirectToLegacyPlatform();\n    };\n\n    const onCancel = () => {\n        closeRealAccountSignup();\n        setIsDeposit(false);\n        redirectToLegacyPlatform();\n    };\n\n    return (\n        <React.Fragment>\n            {isDesktop && (\n                <div onClick={onCancel} className='finished-add-currency__close'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n            <Div100vhContainer className='finished-add-currency__dialog' is_disabled={isDesktop} height_offset='40px'>\n                <div\n                    className={classNames('status-dialog__header', {\n                        'status-dialog__header--center': !isDesktop,\n                    })}\n                >\n                    <IconNextCurrency />\n                    <IconWon className='bottom-right-overlay' />\n                </div>\n                <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': !isDesktop })}>\n                    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                        <Localize i18n_default_text='Your account is ready' />\n                    </Text>\n                    <Text as='p' align='center'>\n                        <Localize i18n_default_text='Fund your account to start trading.' />\n                    </Text>\n                </div>\n                <div className='finished-add-currency__footer'>\n                    <Button onClick={onCancel} text={localize('Maybe later')} secondary />\n                    <Button\n                        onClick={\n                            ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                                ? closeModalThenOpenCashier\n                                : onSubmit\n                        }\n                        text={localize('Deposit now')}\n                        primary\n                    />\n                </div>\n            </Div100vhContainer>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(FinishedAddCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst SuccessMessage = ({ prev, current }) =>\n    prev ? (\n        <Localize\n            i18n_default_text={\n                '<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text={\n                '<0>You have added a {{currency}} account.</0><0> Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    );\n\nconst FinishedSetCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    deposit_real_account_signup_target,\n    history,\n    onCancel,\n    onSubmit,\n    prev,\n    setIsDeposit,\n}) => {\n    const IconPrevCurrency = () =>\n        prev ? <Icon icon={`IcCurrency-${prev.toLowerCase()}`} height={120} width={90} /> : null;\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconArrow = () => (prev ? <Icon icon='IcArrowPointerRight' color='red' width={50} height={20} /> : null);\n\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n    };\n\n    const closeModal = () => {\n        onCancel();\n        setIsDeposit(false);\n    };\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--center': isMobile(),\n                    'status-dialog__header--set-currency': prev,\n                })}\n            >\n                <IconPrevCurrency />\n                <IconArrow />\n                <IconNextCurrency />\n                <IconWon className='bottom-right-overlay' />\n            </div>\n            <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Success!' />\n                </Text>\n                <SuccessMessage prev={prev} current={current} />\n            </div>\n            <div className='status-dialog__footer'>\n                <Button onClick={closeModal} text={localize('Maybe later')} secondary />\n                <Button\n                    onClick={\n                        ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                            ? closeModalThenOpenCashier\n                            : onSubmit\n                    }\n                    text={localize('Deposit now')}\n                    primary\n                />\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default React.memo(FinishedSetCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { currencySelectorConfig } from '@deriv/account';\nimport { website_name, generateValidationFunction } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport CurrencySelector from '@deriv/account/src/Components/currency-selector';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport 'Sass/set-currency.scss';\nimport 'Sass/change-account.scss';\nimport { observer, useStore } from '@deriv/stores';\n\nconst SetCurrency = observer(({ setLoading, onSuccessSetAccountCurrency, onError, is_loading, ...props }) => {\n    const { client } = useStore();\n    const { available_crypto_currencies, has_fiat, landing_company_shortcode, setAccountCurrency } = client;\n    const form_error = React.useState('');\n    const form_value = React.useState({ currency: '' });\n\n    const setCurrency = (obj, setSubmitting) => {\n        setLoading(true);\n        const { currency } = obj;\n        if (currency) {\n            setAccountCurrency(currency)\n                .then(response => {\n                    setSubmitting(false);\n                    onSuccessSetAccountCurrency('', response.echo_req.set_account_currency);\n                })\n                .catch(error_message => {\n                    onError(error_message);\n                })\n                .finally(() => setLoading(false));\n        }\n    };\n\n    const updateValue = (index, value, setSubmitting) => {\n        setCurrency(value, setSubmitting);\n    };\n\n    const noCryptoAvailable = () => {\n        return available_crypto_currencies.length === 0 && has_fiat && props.currency;\n    };\n\n    if (is_loading) return <LoadingModal />;\n    return (\n        <div\n            className={classNames('set-currency-modal', {\n                'set-currency-modal--disabled': noCryptoAvailable(),\n            })}\n        >\n            {noCryptoAvailable() && (\n                <div className='set-currency-modal--disabled-message'>\n                    <p>\n                        {localize(\n                            'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                            {\n                                deriv: website_name,\n                            }\n                        )}\n                    </p>\n                </div>\n            )}\n            <div className='set-currency-modal__heading-container'>\n                <Text\n                    as='p'\n                    size='xs'\n                    line_height='s'\n                    align='center'\n                    className='set-currency-modal__heading-container__main-heading'\n                >\n                    {localize(\n                        'You have an account that do not have currency assigned. Please choose a currency to trade with this account.'\n                    )}\n                </Text>\n                <Text\n                    as='p'\n                    weight='bold'\n                    align='center'\n                    className='set-currency-modal__heading-container__sub-heading'\n                >\n                    {localize('Select your preferred currency')}\n                </Text>\n            </div>\n            <CurrencySelector\n                className='account-wizard__body'\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                set_currency\n                validate={generateValidationFunction(landing_company_shortcode, currencySelectorConfig)}\n                {...props}\n            />\n        </div>\n    );\n});\n\nexport default SetCurrency;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile, getSignupFormFields } from '@deriv/shared';\nimport { Button, Icon, StaticUrl, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { Chat } from '@deriv/utils';\n\nconst Heading = ({ code }) => {\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Account already exists' />\n                </Text>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text as='h2' size={isMobile() ? 'xs' : 's'} align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='You can’t add another real account' />\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <Text as='h1' align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='Invalid inputs' />\n                </Text>\n            );\n\n        default:\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Something’s not right' />\n                </Text>\n            );\n    }\n};\n\nconst Message = ({ code, message, details }) => {\n    if (code === 'PoBoxInAddress') {\n        details.error_details = { address_line_1: message };\n    } else if (code === 'InvalidPhone') {\n        details.error_details = { phone: message };\n    }\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <p>\n                    <Localize\n                        i18n_default_text='Your details match an existing account. If you need help, contact us via <0>live chat</0>.'\n                        components={[<span className='chat-inline' key={0} onClick={Chat.open} />]}\n                    />\n                </p>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text size={isMobile() ? 'xxs' : 'xs'} align='center'>\n                    {message}\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <div className='input_validation_failed'>\n                    <Text align='center' weight='normal' line_height='xxl'>\n                        <Localize i18n_default_text='We don’t accept the following inputs for:' />\n                    </Text>\n                    {Object.keys(details?.error_details).map(item => (\n                        <div key={item} className='invalid_fields_input'>\n                            <Text size='xs' weight='bold'>\n                                {getSignupFormFields()[item]}\n                            </Text>\n                            <Text size='xs' weight='bold'>\n                                {' : '}\n                            </Text>\n                            <Text size='xs'>{details[item]}</Text>\n                        </div>\n                    ))}\n                </div>\n            );\n\n        default:\n            return <p>{message}</p>;\n    }\n};\n\nconst TryAgain = ({ text, onConfirm, ...rest }) => (\n    <Button primary onClick={onConfirm} large {...rest}>\n        {text}\n    </Button>\n);\n\nconst ErrorCTA = ({ code, onConfirm }) => {\n    switch (code) {\n        case 'DuplicateCurrency':\n        case 'CurrencyTypeNotAllowed':\n            return <TryAgain text={localize('Try a different currency')} onConfirm={onConfirm} />;\n        case 'DuplicateAccount':\n            return <TryAgain text={localize('Go to live chat')} onConfirm={() => Chat.open()} />;\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return <TryAgain text={localize('Let’s try again')} onConfirm={onConfirm} />;\n        case 'InvalidAccount':\n            return <TryAgain text={localize('OK')} onConfirm={onConfirm} />;\n\n        default:\n            return (\n                <StaticUrl\n                    href={`help-centre/${code === 'InvalidAccount' ? 'account#who-can-open-an-account' : ''}`}\n                    type='button'\n                    className='dc-btn dc-btn--primary'\n                >\n                    <Text weight='bold' color='white' size='xxs'>\n                        <Localize i18n_default_text='OK' />\n                    </Text>\n                </StaticUrl>\n            );\n    }\n};\n\nconst SignupErrorContent = ({ message, code, onConfirm, className, error_field = {} }) => {\n    const is_invalid_field_error = ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(code);\n    const getIconSize = () => {\n        if (is_invalid_field_error) return '64';\n        else if (code === 'InvalidAccount') return '96';\n        return '115';\n    };\n    return (\n        <div\n            className={classNames('account-wizard--error', {\n                [`account-wizard--error__${className}`]: className,\n            })}\n        >\n            <Icon icon={is_invalid_field_error ? 'IcInvalidError' : 'IcAccountError'} size={getIconSize()} />\n            <Heading code={code} />\n            <Message code={code} message={message} details={error_field} />\n            <div className='account-wizard--error__cta'>\n                <ErrorCTA code={code} onConfirm={onConfirm} />\n            </div>\n        </div>\n    );\n};\n\nSignupErrorContent.propTypes = {\n    code: PropTypes.string,\n    error_field: PropTypes.object,\n    message: PropTypes.string,\n    onConfirm: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport default SignupErrorContent;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nexport const DialogHeading = () => (\n    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n        <Localize i18n_default_text='Your account is ready' />\n    </Text>\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\nexport const DialogMessage = ({ is_fully_authenticated, landing_company_shortcode, status = EXPERIAN.SUCCESS }) => {\n    let message = '';\n    if (landing_company_shortcode === 'maltainvest') {\n        if (is_fully_authenticated) {\n            message = [\n                <Localize key={0} i18n_default_text='You have added a Deriv Financial account.' />,\n                <Localize key={1} i18n_default_text='Make a deposit now to start trading.' />,\n            ];\n        } else {\n            message = (\n                <Localize i18n_default_text='We need proof of your identity and address before you can start trading.' />\n            );\n        }\n    } else {\n        switch (status) {\n            case EXPERIAN.WARN:\n                message = <Localize i18n_default_text='To get trading, please confirm where you live.' />;\n                break;\n            case EXPERIAN.DANGER:\n                message = (\n                    <Localize i18n_default_text='To get trading, please confirm who you are, and where you live.' />\n                );\n                break;\n            case EXPERIAN.PENDING:\n                message = (\n                    <Localize i18n_default_text=\"You'll be able to get trading as soon as verification is complete.\" />\n                );\n                break;\n            default:\n                message = <Localize i18n_default_text='Fund your account to start trading.' />;\n        }\n    }\n\n    return Array.isArray(message) ? (\n        <>\n            {message.map((text, index) => (\n                <Text\n                    key={index}\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                >\n                    {text}\n                </Text>\n            ))}\n        </>\n    ) : (\n        <Text as='p' align='center' className='status-dialog__message-text' color='general' size='xs'>\n            {message}\n        </Text>\n    );\n};\n\nDialogMessage.propTypes = {\n    is_fully_authenticated: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    status: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\nconst getActionButton = ({\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n}) => {\n    switch (landing_company_shortcode) {\n        case 'maltainvest':\n            if (is_fully_authenticated) {\n                return {\n                    label: localize('Deposit'),\n                    action: closeModalAndOpenCashier,\n                };\n            }\n            return {\n                label: localize('Submit proof'),\n                action: closeModalAndOpenPOI,\n            };\n        case 'svg':\n        default:\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n    }\n};\nconst DialogPrimaryButton = ({\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n    is_fully_authenticated,\n}) => {\n    // Check if the button is necessary\n    // Fetch proper action from store based on status + landing_company_shortcode\n    const { label, action } = getActionButton({\n        status,\n        landing_company_shortcode,\n        is_fully_authenticated,\n        closeModal,\n        closeModalAndOpenCashier,\n        closeModalAndOpenPOI,\n        closeModalAndOpenPOA,\n    });\n\n    return <Button primary text={label} onClick={action} />;\n};\nconst DialogDismissButton = ({ closeModal, is_bypassed }) => {\n    if (is_bypassed) return null;\n\n    return <Button secondary text={localize('Maybe later')} onClick={closeModal} />;\n};\n\nexport const DialogButtons = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI,\n}) => {\n    return (\n        <div className='status-dialog__footer'>\n            <DialogDismissButton closeModal={closeModal} is_bypassed={status === EXPERIAN.PENDING} />\n            <DialogPrimaryButton\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                closeModal={closeModal}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                is_fully_authenticated={is_fully_authenticated}\n            />\n        </div>\n    );\n};\n\nDialogButtons.propTypes = {\n    status: PropTypes.number,\n    landing_company_shortcode: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    closeModal: PropTypes.func,\n    closeModalAndOpenCashier: PropTypes.func,\n    closeModalAndOpenPOA: PropTypes.func,\n    closeModalAndOpenPOI: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport { DialogHeading } from './helpers/dialog-heading.jsx';\nimport { DialogMessage } from './helpers/dialog-message.jsx';\nimport { DialogButtons } from './helpers/dialog-buttons.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MainIcon = ({ currency }) => <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={120} />;\nconst Checkmark = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' size={24} />;\nconst Warning = ({ className }) => <Icon className={className} icon='IcAlertDanger' size={24} />;\nconst Danger = ({ className }) => <Icon className={className} icon='IcCrossCircle' size={24} color='red' />;\nconst CloseIcon = ({ closeModal }) => (\n    <div onClick={closeModal} className='status-dialog__close'>\n        <Icon icon='IcCross' />\n    </div>\n);\n\nconst StatusDialogContainer = observer(({ closeModal, currency, history, icon_size }) => {\n    const { isDesktop } = useDevice();\n    const { client } = useStore();\n    const { landing_company_shortcode, is_fully_authenticated } = client;\n    const closeModalAndOpenCashier = () => {\n        closeModal();\n        history.push(routes.cashier_deposit);\n    };\n\n    const closeModalAndOpenPOI = () => {\n        closeModal();\n        history.push(routes.proof_of_identity);\n    };\n\n    const closeModalAndOpenPOA = () => {\n        closeModal();\n        history.push(routes.proof_of_address);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n        });\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop} height_offset='40px'>\n            {isDesktop && <CloseIcon closeModal={closeModal} />}\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--large': icon_size === 'large',\n                    'status-dialog__header--xlarge': icon_size === 'xlarge',\n                })}\n            >\n                <MainIcon currency={currency} />\n                {getStatus() === EXPERIAN.SUCCESS && <Checkmark className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.WARN && <Warning className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.DANGER && <Danger className='bottom-right-overlay' />}\n            </div>\n            <div\n                className={classNames('status-dialog__body', {\n                    'status-dialog__body--no-grow': !isDesktop,\n                })}\n            >\n                <DialogHeading />\n                <DialogMessage\n                    is_fully_authenticated={is_fully_authenticated}\n                    landing_company_shortcode={landing_company_shortcode}\n                    status={getStatus()}\n                />\n            </div>\n            <DialogButtons\n                closeModal={closeModal}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                is_fully_authenticated={is_fully_authenticated}\n                landing_company_shortcode={landing_company_shortcode}\n                status={getStatus()}\n            />\n        </Div100vhContainer>\n    );\n});\n\nStatusDialogContainer.defaultProps = {\n    icon_size: 'large',\n};\n\nStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    history: PropTypes.object,\n    icon: PropTypes.object,\n    icon_size: PropTypes.string,\n};\n\nexport default withRouter(StatusDialogContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { Div100vhContainer, Icon, Button, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport './new-status-dialog-container.scss';\n\nconst StatusIcon = ({ icon, color }) => (\n    <Icon className='status-container__body-status-icon' icon={icon} color={color} size={32} />\n);\n\nconst NewStatusDialogContainer = observer(({ closeModal, currency }) => {\n    const { isDesktop } = useDevice();\n    const { client, ui } = useStore();\n    const { landing_company_shortcode } = client;\n    const { setShouldShowOneTimeDepositModal } = ui;\n\n    const onOpenDepositModal = () => {\n        closeModal();\n        setShouldShowOneTimeDepositModal(true);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n        });\n\n    return (\n        <Div100vhContainer className='status-container' is_disabled={isDesktop} height_offset='40px'>\n            {isDesktop && (\n                <div onClick={closeModal} className='status-container__header'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n\n            <div className='status-container__body'>\n                <div className='status-container__body-icon'>\n                    <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={96} />\n                    {getStatus() === EXPERIAN.SUCCESS && <StatusIcon icon='IcCheckmarkCircle' color='green' />}\n                    {getStatus() === EXPERIAN.WARN && <StatusIcon icon='IcAlertDanger' />}\n                    {getStatus() === EXPERIAN.DANGER && <StatusIcon icon='IcCrossCircle' color='red' />}\n                </div>\n\n                <Text\n                    className='status-container__body-text'\n                    as='h2'\n                    align='center'\n                    weight='bold'\n                    size='s'\n                    line_height='m'\n                >\n                    <Localize i18n_default_text='Deposit now to start trading' />\n                </Text>\n\n                <Text as='p' align='center' size='xs' line_height='sm'>\n                    <Localize i18n_default_text='Your {{ currency }} account is ready.' values={{ currency }} />\n                </Text>\n            </div>\n\n            <div className='status-container__footer'>\n                {getStatus() !== EXPERIAN.PENDING && (\n                    <Button secondary text={localize('Maybe later')} wide={!isDesktop} onClick={closeModal} />\n                )}\n                <Button\n                    className='status-container__button'\n                    primary\n                    text={localize('Deposit')}\n                    onClick={onOpenDepositModal}\n                    wide={!isDesktop}\n                />\n            </div>\n        </Div100vhContainer>\n    );\n});\n\nNewStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    closeModalAndOpenDeposit: PropTypes.func,\n};\n\nexport default withRouter(NewStatusDialogContainer);\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useDevice } from '@deriv-com/ui';\nimport { RiskToleranceWarningModal, TestWarningModal } from '@deriv/account';\nimport { Button, MobileDialog, Modal, Text, UILoader } from '@deriv/components';\nimport { WS, moduleLoader, routes } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport AddCurrency from './add-currency.jsx';\nimport AddOrManageAccounts from './add-or-manage-accounts.jsx';\nimport ChooseCurrency from './choose-currency.jsx';\nimport FinishedAddCurrency from './finished-add-currency.jsx';\nimport FinishedSetCurrency from './finished-set-currency.jsx';\nimport SetCurrency from './set-currency.jsx';\nimport SignupErrorContent from './signup-error-content.jsx';\nimport StatusDialogContainer from './status-dialog-container.jsx';\nimport NewStatusDialogContainer from './new-status-dialog-container.jsx';\nimport { Analytics } from '@deriv-com/analytics';\nimport 'Sass/account-wizard.scss';\n\nconst AccountWizard = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"account-wizard-modal\" */ './account-wizard.jsx'))\n);\n\nconst modal_pages_indices = {\n    account_wizard: 0,\n    add_or_manage_account: 1,\n    finished_set_currency: 2,\n    status_dialog: 3,\n    new_status_dialog: 11,\n    set_currency: 4,\n    signup_error: 5,\n    choose_crypto_currency: 6,\n    add_currency: 7,\n    finished_add_currency: 8,\n    restricted_country_signup_error: 9,\n    invalid_input_error: 10,\n};\nlet active_modal_index_no = 0;\n\nconst WizardHeading = ({ currency, real_account_signup_target }) => {\n    const maltainvest_signup = real_account_signup_target === 'maltainvest';\n    const deposit_cash_signup = real_account_signup_target === 'deposit_cash';\n\n    if ((!maltainvest_signup && !currency) || active_modal_index_no === modal_pages_indices.set_currency) {\n        return <Localize i18n_default_text='Set a currency for your real account' />;\n    }\n\n    if (deposit_cash_signup) {\n        return <Localize i18n_default_text='Add a Deriv Gaming account' />;\n    }\n\n    switch (real_account_signup_target) {\n        case 'maltainvest':\n            return <Localize i18n_default_text='Setup your account' />;\n        default:\n            return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n};\n\nconst RealAccountSignup = observer(({ history, state_index, is_trading_experience_incomplete }) => {\n    const { isDesktop } = useDevice();\n    const { ui, client, traders_hub, modules } = useStore();\n    const {\n        available_crypto_currencies,\n        currency,\n        fetchAccountSettings,\n        has_fiat,\n        has_active_real_account: has_real_account,\n        is_from_restricted_country,\n        realAccountSignup,\n        redirectToLegacyPlatform,\n    } = client;\n    const {\n        closeRealAccountSignup,\n        deposit_real_account_signup_target,\n        is_real_acc_signup_on,\n        real_account_signup_target,\n        setIsTradingAssessmentForNewUserEnabled,\n        setIsClosingCreateRealAccountModal,\n        setRealAccountSignupParams: setParams,\n        setShouldShowAppropriatenessWarningModal,\n        setShouldShowRiskWarningModal,\n        should_show_appropriateness_warning_modal,\n        should_show_risk_warning_modal,\n        setShouldShowOneTimeDepositModal,\n        toggleAccountSuccessModal,\n        real_account_signup: state_value,\n        is_trading_assessment_for_new_user_enabled,\n    } = ui;\n    const { show_eu_related_content } = traders_hub;\n    const { deposit_target, setDepositTarget } = modules.cashier.general_store;\n    const setIsDeposit = modules.cashier.general_store.setIsDeposit;\n    const should_show_all_available_currencies = modules.cashier.general_store.should_show_all_available_currencies;\n    const [current_action, setCurrentAction] = React.useState(null);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [is_risk_warning_visible, setIsRiskWarningVisible] = React.useState(false);\n    const [real_account_form_data, setRealAccountFormData] = React.useState({});\n    const [risk_warning_title, setRiskWarningTitle] = React.useState('');\n    const [modal_content] = React.useState([\n        {\n            action: 'signup',\n            body: local_props => (\n                <React.Suspense fallback={<UILoader />}>\n                    <AccountWizard\n                        setIsRiskWarningVisible={setIsRiskWarningVisible}\n                        onFinishSuccess={showStatusDialog}\n                        onNewFinishSuccess={showNewStatusDialog}\n                        onOpenDepositModal={closeModalthenOpenDepositModal}\n                        onOpenWelcomeModal={closeModalthenOpenWelcomeModal}\n                        is_loading={local_props.is_loading}\n                        setLoading={setLoading}\n                        onError={showErrorModal}\n                        onClose={closeModal}\n                        realAccountSignup={realAccountSignup}\n                        setRealAccountFormData={setRealAccountFormData}\n                    />\n                </React.Suspense>\n            ),\n            title: WizardHeading,\n        },\n        {\n            action: 'multi',\n            body: local_props => (\n                <AddOrManageAccounts\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    is_add_crypto={local_props.real_account_signup_target === 'add_crypto'}\n                    is_add_fiat={local_props.real_account_signup_target === 'add_fiat'}\n                    is_add_currency={local_props.real_account_signup_target === 'add_currency'}\n                    deposit_target={local_props.deposit_target}\n                    onClose={closeModal}\n                />\n            ),\n            title: local_props => {\n                if (local_props.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props.has_fiat && local_props.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: local_props => (\n                <FinishedSetCurrency\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onCancel={closeSetCurrencySuccessModal}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n            title: local_props =>\n                local_props.has_fiat && local_props.available_crypto_currencies?.length === 0\n                    ? localize('Manage account')\n                    : localize('Add or manage account'),\n        },\n        {\n            body: local_props => (\n                <StatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SetCurrency\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={() => onErrorConfirm(local_props.state_value.error_code)}\n                />\n            ),\n            title: local_props => {\n                if (local_props?.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props?.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props?.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props?.has_fiat && local_props?.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                } else if (signup_error) {\n                    return null;\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: () => <ChooseCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: local_props =>\n                local_props.should_show_all_available_currencies\n                    ? localize('Choose an account')\n                    : localize('Choose a cryptocurrency account'),\n        },\n        {\n            body: () => <AddCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: () => localize('Create a new account'),\n        },\n        {\n            body: local_props => (\n                <FinishedAddCurrency\n                    redirectToLegacyPlatform={redirectToLegacyPlatform}\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={closeRealAccountSignup}\n                    className='restricted-country-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={onErrorConfirm}\n                    error_field={local_props.state_value}\n                    className='invalid-input-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <NewStatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n    ]);\n\n    const [assessment_decline, setAssessmentDecline] = React.useState(false);\n\n    const trackEvent = React.useCallback(\n        payload => {\n            if (real_account_signup_target === 'maltainvest') return;\n\n            Analytics.trackEvent('ce_real_account_signup_form', {\n                form_source: document.referrer,\n                form_name: 'real_account_signup_form',\n                landing_company: real_account_signup_target,\n                ...payload,\n            });\n        },\n        [real_account_signup_target]\n    );\n\n    React.useEffect(() => {\n        if (is_real_acc_signup_on && real_account_signup_target === 'svg') {\n            trackEvent({ action: 'open' });\n        }\n    }, [is_real_acc_signup_on, real_account_signup_target, trackEvent]);\n\n    const getModalHeight = () => {\n        if (is_from_restricted_country) return '304px';\n        else if ([invalid_input_error, status_dialog, new_status_dialog, signup_error].includes(getActiveModalIndex()))\n            return 'auto';\n        if (!currency || getActiveModalIndex() === modal_pages_indices.set_currency) return '688px'; // Set currency modal\n        if (has_real_account && currency) {\n            if (show_eu_related_content && getActiveModalIndex() === modal_pages_indices.add_or_manage_account) {\n                // Manage account\n                return '420px'; // Since crypto is disabled for EU clients, lower the height of modal\n            }\n            if (\n                [modal_pages_indices.finished_set_currency, modal_pages_indices.finished_add_currency].includes(\n                    getActiveModalIndex()\n                )\n            ) {\n                return 'auto';\n            }\n        }\n        return '740px'; // Account wizard modal\n    };\n    const getModalWidth = () => {\n        if (\n            is_from_restricted_country ||\n            [modal_pages_indices.invalid_input_error, modal_pages_indices.signup_error].includes(getActiveModalIndex())\n        )\n            return '440px';\n        return !has_close_icon ? 'auto' : '955px';\n    };\n\n    const closeModalthenOpenDepositModal = () => {\n        closeRealAccountSignup();\n        if (!client.is_mf_account) {\n            setShouldShowOneTimeDepositModal(true);\n        } else {\n            toggleAccountSuccessModal();\n        }\n    };\n\n    const showStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.status_dialog,\n            currency: curr,\n        });\n    };\n\n    const showNewStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.new_status_dialog,\n            currency: curr,\n        });\n    };\n\n    const closeModalthenOpenWelcomeModal = curr => {\n        closeRealAccountSignup();\n        setParams({\n            currency: curr,\n        });\n    };\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(routes.cashier_deposit);\n    };\n\n    const showSetCurrencySuccess = (previous_currency, current_currency, target) => {\n        setParams({\n            previous_currency,\n            current_currency,\n            active_modal_index: target\n                ? modal_pages_indices.finished_add_currency\n                : modal_pages_indices.finished_set_currency,\n        });\n    };\n\n    const setLoading = is_loading_val => {\n        setIsLoading(is_loading_val);\n    };\n\n    const cacheFormValues = payload => {\n        localStorage.setItem(\n            'real_account_signup_wizard',\n            JSON.stringify(\n                payload.map(item => {\n                    if (typeof item.form_value === 'object') {\n                        return item.form_value;\n                    }\n                    return false;\n                })\n            )\n        );\n    };\n\n    const showErrorModal = (err, payload) => {\n        if (payload) {\n            cacheFormValues(payload);\n        }\n\n        setCurrentAction(modal_content[getActiveModalIndex()]?.action);\n        setError(err);\n\n        trackEvent({\n            action: 'other_error',\n            real_signup_error_message: err,\n        });\n    };\n\n    React.useEffect(() => {\n        setRiskWarningTitle(localize('Risk Tolerance Warning'));\n        return () => setIsTradingAssessmentForNewUserEnabled(is_trading_experience_incomplete);\n    }, []);\n\n    // setCurrentAction callback useEffect to set error details\n    React.useEffect(() => {\n        if (!error) return;\n        setParams({\n            active_modal_index: ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(error.code)\n                ? modal_pages_indices.invalid_input_error\n                : modal_pages_indices.signup_error,\n            error_message: error.message,\n            error_code: error.code,\n            ...(error.code === 'InputValidationFailed' && { error_details: error.details }),\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [error]);\n\n    React.useEffect(() => {\n        if (!is_from_restricted_country) return;\n        setParams({\n            active_modal_index: modal_pages_indices.restricted_country_signup_error,\n            error_message: localize('Adding more real accounts has been restricted for your country.'),\n            error_code: 'InvalidAccount',\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_from_restricted_country, is_real_acc_signup_on]);\n\n    const closeSetCurrencySuccessModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (\n            getActiveModalIndex() !== modal_pages_indices.status_dialog ||\n            getActiveModalIndex() !== modal_pages_indices.new_status_dialog\n        ) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n        closeRealAccountSignup();\n    };\n\n    const closeModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            !e ||\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (\n            getActiveModalIndex() !== modal_pages_indices.status_dialog ||\n            getActiveModalIndex() !== modal_pages_indices.new_status_dialog\n        ) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n\n        if (deposit_target === routes.cashier_onramp) setDepositTarget('');\n\n        if (modal_content[getActiveModalIndex()].action === 'signup') {\n            setIsClosingCreateRealAccountModal(true);\n\n            return;\n        }\n        closeRealAccountSignup();\n        redirectToLegacyPlatform();\n    };\n\n    const onErrorConfirm = err_code => {\n        const addOrManageAccountErrorType = ['CurrencyTypeNotAllowed', 'DuplicateCurrency'];\n        setLoading(true);\n        setParams({\n            active_modal_index:\n                current_action === 'multi' || addOrManageAccountErrorType.includes(err_code)\n                    ? modal_pages_indices.add_or_manage_account\n                    : modal_pages_indices.account_wizard,\n        });\n    };\n\n    const getIsManageTarget = () => {\n        return real_account_signup_target === 'manage';\n    };\n\n    const getActiveModalIndex = () => {\n        if (real_account_signup_target === 'choose') {\n            active_modal_index_no = modal_pages_indices.choose_crypto_currency;\n            return active_modal_index_no;\n        }\n        if (['add_crypto', 'add_fiat', 'add_currency'].includes(real_account_signup_target)) {\n            active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            return active_modal_index_no;\n        }\n        if (state_value.active_modal_index === -1) {\n            if (has_real_account && currency && getIsManageTarget()) {\n                active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            } else {\n                active_modal_index_no =\n                    real_account_signup_target === 'set_currency'\n                        ? modal_pages_indices.set_currency\n                        : modal_pages_indices.account_wizard;\n            }\n        } else {\n            active_modal_index_no = state_value.active_modal_index;\n        }\n        return active_modal_index_no;\n    };\n\n    // set title and body of the modal\n    const { title: Title, body: ModalContent } = modal_content[getActiveModalIndex()];\n    const {\n        account_wizard,\n        add_or_manage_account,\n        finished_set_currency,\n        status_dialog,\n        new_status_dialog,\n        set_currency,\n        signup_error,\n        restricted_country_signup_error,\n        invalid_input_error,\n    } = modal_pages_indices;\n\n    const has_close_icon = [account_wizard, add_or_manage_account, set_currency, signup_error].includes(\n        getActiveModalIndex()\n    );\n\n    const handleOnAccept = async () => {\n        setLoading(true);\n        try {\n            const response = await realAccountSignup({ ...real_account_form_data, accept_risk: 1 });\n            WS.authorized.getAccountStatus().then(status => {\n                const { get_account_status } = status;\n                setShouldShowAppropriatenessWarningModal(false);\n\n                if (\n                    real_account_signup_target === 'maltainvest' &&\n                    !get_account_status?.status?.includes('cashier_locked')\n                ) {\n                    closeModalthenOpenDepositModal();\n                } else {\n                    showStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                    showNewStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                }\n            });\n        } catch (sign_up_error) {\n            // TODO: Handle Error\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleOnDecline = async () => {\n        setLoading(true);\n        setAssessmentDecline(true);\n        try {\n            await realAccountSignup({ ...real_account_form_data, accept_risk: 0 });\n        } catch (sign_up_error) {\n            setRiskWarningTitle(localize('24-hour Cool Down Warning'));\n            if (sign_up_error.code === 'AppropriatenessTestFailed') {\n                setShouldShowAppropriatenessWarningModal(false);\n                setShouldShowRiskWarningModal(true);\n            }\n            // TODO: Handle Error case\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleRiskAcceptance = () => {\n        closeRealAccountSignup();\n        setShouldShowRiskWarningModal(false);\n        setAssessmentDecline(false);\n    };\n\n    if (assessment_decline) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={assessment_decline}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the risk of losing your money. <0/><0/>\n                        As you have declined our previous warning, you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (is_trading_assessment_for_new_user_enabled && should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, kindly note that you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (should_show_appropriateness_warning_modal) {\n        return (\n            <TestWarningModal\n                show_risk_modal={should_show_appropriateness_warning_modal}\n                body_content={\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize\n                            i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize i18n_default_text='By clicking ‘Accept’ and proceeding with the account opening, you should note that you may be exposing yourself to risks. These risks, which may be significant, include the risk of losing the entire sum invested, and you may not have the knowledge and experience to properly assess or mitigate them.' />\n                    </Text>\n                }\n                footer_content={\n                    <React.Fragment>\n                        <Button type='button' large text={localize('Decline')} secondary onClick={handleOnDecline} />\n                        <Button\n                            type='button'\n                            large\n                            text={localize('Accept')}\n                            primary\n                            onClick={handleOnAccept}\n                            is_loading={is_loading}\n                        />\n                    </React.Fragment>\n                }\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {is_real_acc_signup_on && (\n                <React.Fragment>\n                    {isDesktop ? (\n                        <Modal\n                            id='real_account_signup_modal'\n                            className={classNames('real-account-signup-modal', {\n                                'dc-modal__container_real-account-signup-modal--error': [\n                                    signup_error,\n                                    restricted_country_signup_error,\n                                    invalid_input_error,\n                                ].includes(getActiveModalIndex()),\n                                'dc-modal__container_real-account-signup-modal--success': [\n                                    finished_set_currency,\n                                    status_dialog,\n                                ].includes(getActiveModalIndex()),\n                            })}\n                            is_open={is_real_acc_signup_on}\n                            is_risk_warning_visible={is_risk_warning_visible}\n                            has_close_icon={real_account_signup_target !== 'samoa'}\n                            is_title_centered={real_account_signup_target === 'samoa'}\n                            renderTitle={() => {\n                                if (Title && ![finished_set_currency, status_dialog].includes(getActiveModalIndex())) {\n                                    return (\n                                        <Title\n                                            available_crypto_currencies={available_crypto_currencies}\n                                            currency={currency}\n                                            has_fiat={has_fiat}\n                                            is_eu={show_eu_related_content}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                            toggleModal={closeModal}\n                            height={getModalHeight()}\n                            width={getModalWidth()}\n                            elements_to_ignore={[document.querySelector('.modal-root')]}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </Modal>\n                    ) : (\n                        <MobileDialog\n                            portal_element_id='modal_root'\n                            wrapper_classname='account-signup-mobile-dialog'\n                            visible={is_real_acc_signup_on}\n                            onClose={closeModal}\n                            has_full_height={getActiveModalIndex() === modal_pages_indices.signup_error}\n                            renderTitle={() => {\n                                if (Title) {\n                                    return (\n                                        <Title\n                                            currency={currency}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </MobileDialog>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(RealAccountSignup);\n","import RealAccountSignup from './real-account-signup.jsx';\n\nexport default RealAccountSignup;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\n\nconst LoadingModal = props => (\n    <div className='account-signup-loader'>\n        <Loading {...props} is_fullscreen={false} />\n    </div>\n);\n\nexport default LoadingModal;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/set-currency-modal.scss';\n\nconst SetAccountCurrencyModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_virtual } = client;\n    const {\n        is_set_currency_modal_visible: is_visible,\n        openRealAccountSignup: setCurrency,\n        toggleSetCurrencyModal: toggleModal,\n    } = ui;\n    const has_set_currency = useHasSetCurrency();\n\n    return (\n        <Modal\n            id='dt_set_account_currency_modal'\n            has_close_icon={false}\n            is_open={is_visible}\n            small\n            toggleModal={toggleModal}\n            title={\n                !has_set_currency\n                    ? localize('No currency assigned to your account')\n                    : localize('You have an account that needs action')\n            }\n        >\n            <Modal.Body>\n                {localize('Please set a currency for your existing real account before creating another account.')}\n            </Modal.Body>\n            <Modal.Footer>\n                {!is_virtual ? (\n                    <>\n                        <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                        <Button\n                            has_effect\n                            text={localize('Set currency')}\n                            onClick={() => {\n                                toggleModal();\n                                // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                                setTimeout(() => {\n                                    setCurrency('set_currency');\n                                }, 250);\n                            }}\n                            primary\n                        />\n                    </>\n                ) : (\n                    <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default SetAccountCurrencyModal;\n","import SetAccountCurrencyModal from './set-currency-modal.jsx';\n\nexport default SetAccountCurrencyModal;\n","import React from 'react';\n\n/**\n * Listens on emitted events to show notification on available updates.\n *  - IgnorePWAUpdate event will prevent notification\n *  - ListenPWAUpdate event is usefull to re-assign notify on update behavior\n * @param onUpdate\n * @return {null}\n * @constructor\n */\nconst NewVersionNotification = ({ onUpdate }) => {\n    React.useEffect(() => {\n        const removeUpdateListener = () => {\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n\n        const addUpdateListener = () => {\n            document.addEventListener('UpdateAvailable', onUpdate);\n        };\n\n        document.addEventListener('UpdateAvailable', onUpdate);\n        document.addEventListener('IgnorePWAUpdate', removeUpdateListener);\n        document.addEventListener('ListenPWAUpdate', addUpdateListener);\n\n        return () => {\n            document.removeEventListener('IgnorePWAUpdate', removeUpdateListener);\n            document.removeEventListener('ListenPWAUpdate', addUpdateListener);\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n};\n\nexport default NewVersionNotification;\n","import { useStore } from '@deriv/stores';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\n\nconst useAccountTransferVisible = () => {\n    const { client } = useStore();\n    const { landing_company_shortcode, residence } = client;\n    const has_malta_invest_account = useHasMaltaInvestAccount();\n    const is_account_transfer_visible =\n        residence !== 'im' && (landing_company_shortcode !== 'malta' || has_malta_invest_account);\n\n    return is_account_transfer_visible;\n};\n\nexport default useAccountTransferVisible;\n","import { useMemo } from 'react';\n\nimport { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\n/** A custom hook that authorize the user with the given token. If no token is given, it will use the current token. */\nconst useAuthorize = (token?: string) => {\n    const { client } = useStore();\n    const { accounts, loginid = '' } = client;\n    const current_token = accounts[loginid || '']?.token;\n\n    const { data, ...rest } = useFetch('authorize', {\n        payload: { authorize: token ?? current_token },\n        options: { enabled: Boolean(token ?? current_token), refetchOnWindowFocus: false },\n    });\n\n    // Add additional information to the authorize response.\n    const modified_authorize = useMemo(() => ({ ...data?.authorize }), [data?.authorize]);\n\n    return {\n        /** The authorize response. */\n        data: modified_authorize,\n        ...rest,\n    };\n};\n\nexport default useAuthorize;\n","import { useStore } from '@deriv/stores';\n\nconst useHasMaltaInvestAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_malta_invest_account = active_accounts.some(\n        account => account.landing_company_shortcode === 'maltainvest'\n    );\n\n    return has_malta_invest_account;\n};\n\nexport default useHasMaltaInvestAccount;\n","import { useStore } from '@deriv/stores';\n\nconst useHasSvgAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_svg_account = active_accounts.some(account => account.landing_company_shortcode === 'svg');\n\n    return has_svg_account;\n};\n\nexport default useHasSvgAccount;\n","import { useStore } from '@deriv/stores';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\nimport useHasSvgAccount from './useHasSvgAccount';\n\nconst useIsRealAccountNeededForCashier = () => {\n    const { traders_hub } = useStore();\n    const { is_eu_user, is_real } = traders_hub;\n\n    const has_svg_account = useHasSvgAccount();\n    const has_maltainvest_account = useHasMaltaInvestAccount();\n\n    const no_real_mf_account = has_svg_account && !has_maltainvest_account && is_eu_user;\n\n    const no_real_cr_account = !has_svg_account && has_maltainvest_account && !is_eu_user;\n\n    const is_real_account_needed = no_real_mf_account || no_real_cr_account;\n\n    const is_real_account_needed_for_cashier = is_real_account_needed && is_real;\n\n    return is_real_account_needed_for_cashier;\n};\n\nexport default useIsRealAccountNeededForCashier;\n","import { useContext } from 'react';\nimport { P2PSettingsContext } from '@deriv/stores';\n\n/**\n * A custom hook to get the p2p_settings information from `p2p_settings` endpoint\n */\nconst useP2PSettings = () => {\n    const context = useContext(P2PSettingsContext);\n\n    if (!context) {\n        throw new Error('useP2PSettingsContext must be used within a P2PSettingsProvider');\n    }\n\n    return context;\n};\n\nexport default useP2PSettings;\n","import { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst usePaymentAgentList = (currency?: string) => {\n    const { client } = useStore();\n    const { residence } = client;\n\n    const { data, ...rest } = useFetch('paymentagent_list', {\n        payload: { paymentagent_list: residence, currency },\n        options: { enabled: Boolean(residence) },\n    });\n\n    return {\n        data: data?.paymentagent_list?.list,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentList;\n","import { useFetch } from '@deriv/api';\nimport { WS } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { useEffect, useState } from 'react';\n\nconst usePaymentAgentTransferVisible = () => {\n    const { client } = useStore();\n    const { is_authorize, is_logged_in } = client;\n    const [is_websocket_authorized, setIsWebSocketAuthorized] = useState(false);\n\n    useEffect(() => {\n        const checkAuthorize = async () => {\n            try {\n                const check_websocket_authorized = await WS.wait('authorize');\n                if (check_websocket_authorized) setIsWebSocketAuthorized(is_authorize && is_logged_in);\n            } catch (error) {\n                console.error('Error while authorizing:', error); // eslint-disable-line\n            }\n        };\n\n        checkAuthorize();\n    }, [is_authorize, is_logged_in]);\n\n    const { data, ...rest } = useFetch('get_settings', {\n        options: { enabled: Boolean(is_websocket_authorized), refetchOnWindowFocus: false },\n    });\n    const is_payment_agent_transfer_visible = Boolean(data?.get_settings?.is_authenticated_payment_agent);\n\n    return {\n        data: is_payment_agent_transfer_visible,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentTransferVisible;\n","import { useMemo } from 'react';\nimport useStoreWalletAccountsList from './useStoreWalletAccountsList';\n\ntype TLinkedAccount = {\n    loginid?: string;\n    platform?: Exclude<'ctrader' | 'derivez' | 'dtrade' | 'dxtrade' | 'mt5', 'dwallet'>;\n};\n\ntype TReturnObjectType = {\n    [key in Exclude<TLinkedAccount['platform'], undefined>]: TLinkedAccount[];\n};\n\n/** A custom hook to get the list of linked accounts of all wallets */\nconst useStoreLinkedWalletsAccounts = () => {\n    const { data: wallets_list } = useStoreWalletAccountsList();\n\n    // define object with accounts\n    const linked_trading_accounts = useMemo(() => {\n        const linked_accounts: TReturnObjectType = {\n            ctrader: [],\n            derivez: [],\n            dtrade: [],\n            dxtrade: [],\n            mt5: [],\n        };\n\n        wallets_list?.forEach(account => {\n            const linked = account.linked_to as TLinkedAccount[];\n\n            linked?.forEach(linked_to_account => {\n                if (linked_to_account?.platform && linked_to_account?.loginid)\n                    linked_accounts[linked_to_account.platform].push(linked_to_account);\n            });\n        });\n\n        return linked_accounts;\n    }, [wallets_list]);\n\n    /** List of wallets for current user. */\n    return linked_trading_accounts;\n};\n\nexport default useStoreLinkedWalletsAccounts;\n","import { useMemo } from 'react';\nimport { useStore } from '@deriv/stores';\n\nconst currency_to_icon_mapper: Record<string, Record<'light' | 'dark', string>> = {\n    Demo: {\n        dark: 'IcWalletDerivDemoDark',\n        light: 'IcWalletDerivDemoLight',\n    },\n    USD: {\n        dark: 'IcWalletCurrencyUsd',\n        light: 'IcWalletCurrencyUsd',\n    },\n    EUR: {\n        dark: 'IcWalletCurrencyEur',\n        light: 'IcWalletCurrencyEur',\n    },\n    AUD: {\n        dark: 'IcWalletCurrencyAud',\n        light: 'IcWalletCurrencyAud',\n    },\n    GBP: {\n        dark: 'IcWalletCurrencyGbp',\n        light: 'IcWalletCurrencyGbp',\n    },\n    BTC: {\n        dark: 'IcWalletBitcoinDark',\n        light: 'IcWalletBitcoinLight',\n    },\n    ETH: {\n        dark: 'IcWalletEthereumDark',\n        light: 'IcWalletEthereumLight',\n    },\n    USDT: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    eUSDT: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    tUSDT: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    UST: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    LTC: {\n        dark: 'IcWalletLiteCoinDark',\n        light: 'IcWalletLiteCoinLight',\n    },\n    USDC: {\n        dark: 'IcWalletUsdCoinDark',\n        light: 'IcWalletUsdCoinLight',\n    },\n    XRP: {\n        dark: 'IcWalletXrpDark',\n        light: 'IcWalletXrpLight',\n    },\n};\n\n/** A custom hook to get the list of wallets for the current user. */\nconst useStoreWalletAccountsList = () => {\n    const { client } = useStore();\n    const { accounts, is_crypto } = client;\n\n    // Add additional information to each wallet.\n    const wallets = useMemo(() => {\n        return Object.keys(accounts)\n            ?.filter(id => accounts?.[id].account_category === 'wallet')\n            ?.map(id => {\n                const wallet = accounts?.[id];\n\n                const loginid = id;\n                const currency = wallet.currency;\n                const is_disabled = Boolean(wallet.is_disabled);\n                const is_virtual = Boolean(wallet.is_virtual);\n\n                const fiat_or_crypto = is_crypto(currency) ? 'crypto' : 'fiat';\n                const icon_type = is_virtual ? 'demo' : fiat_or_crypto;\n                const landing_company_name = wallet.landing_company_name?.replace('maltainvest', 'malta');\n                const is_malta_wallet = landing_company_name === 'malta';\n                const dtrade_loginid = wallet?.linked_to?.find(account => account?.platform === 'dtrade')?.loginid;\n                const dtrade_balance = accounts?.[dtrade_loginid ?? '']?.balance;\n                const is_dtrader_account_disabled = Boolean(accounts?.[dtrade_loginid ?? '']?.is_disabled);\n\n                const wallet_currency_type = is_virtual ? 'Demo' : currency || '';\n                const icons = currency_to_icon_mapper[wallet_currency_type];\n\n                const gradients = {\n                    /** The gradient class name for the wallet header background. */\n                    header: {\n                        dark: `wallet-header__${wallet_currency_type.toLowerCase()}-bg--dark`,\n                        light: `wallet-header__${wallet_currency_type.toLowerCase()}-bg`,\n                    },\n                    /** The gradient class name for the wallet card background. */\n                    card: {\n                        dark: `wallet-card__${wallet_currency_type.toLowerCase()}-bg--dark`,\n                        light: `wallet-card__${wallet_currency_type.toLowerCase()}-bg`,\n                    },\n                };\n\n                return {\n                    ...wallet,\n                    dtrade_loginid,\n                    dtrade_balance,\n                    icons,\n                    icon_type,\n                    is_disabled,\n                    is_virtual,\n                    is_malta_wallet,\n                    landing_company_name,\n                    loginid,\n                    gradients,\n                    is_dtrader_account_disabled,\n                } as const;\n            });\n    }, [accounts, is_crypto]);\n\n    // Sort wallet accounts alphabetically by fiat, crypto, then virtual.\n    const sorted_wallets = useMemo(() => {\n        if (!wallets) return;\n\n        return [...wallets].sort((a, b) => {\n            if (a.is_virtual !== b.is_virtual) {\n                return a.is_virtual ? 1 : -1;\n            } else if (is_crypto(a.currency) !== is_crypto(b.currency)) {\n                return is_crypto(a.currency) ? 1 : -1;\n            }\n\n            return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n        });\n    }, [is_crypto, wallets]);\n\n    return {\n        /** List of wallets for current user. */\n        data: sorted_wallets,\n        /** Indicating whether the user has a wallet */\n        has_wallet: sorted_wallets && sorted_wallets.length > 0,\n    };\n};\n\nexport default useStoreWalletAccountsList;\n"],"names":["e","self","module","exports","r","Object","getOwnPropertySymbols","t","prototype","hasOwnProperty","n","propertyIsEnumerable","assign","String","getOwnPropertyNames","fromCharCode","map","join","split","forEach","keys","o","c","s","i","TypeError","a","arguments","length","l","call","u","Symbol","for","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","ref","__self","__source","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","react","d","defineProperty","enumerable","get","Array","isArray","default","children","label","className","is_title_enabled","is_fiat","item_count","description","__esModule","j","f","m","p","_","v","id","test","Localize","i18n_default_text","components","Popover","alignment","disable_message_icon","icon","is_bubble_hover_enabled","message","zIndex","field","name","value","onChange","onBlur","second_line_label","onClick","Fragment","checked","disabled","selected","htmlFor","Icon","toLowerCase","getCurrencyDisplayCode","currency","supported_in","default_value","rules","localize","real_account_signup_target","header","active_title","title","body","form_value","getDefaultFields","validate","generateValidationFunction","passthrough","Y","globalThis","window","g","Function","useLayoutEffect","useEffect","defaultValue","initializeWithValue","matchMedia","matches","useState","addListener","addEventListener","removeListener","removeEventListener","isDesktop","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape","show_risk_modal","handleAcceptRisk","button_text","body_content","has_sub_header","useTranslations","Modal","width","height","is_open","toggleModal","has_close_icon","Body","size","Text","as","align","line_height","Footer","Button","large","text","primary","MobileDialog","visible","portal_element_id","weight","USTPopover","popover_message","_jsx","_ref","_objectWithoutProperties","_excluded","_jsxs","React","_objectSpread","clsx","RadioButtonGroup","Hr","observer","getCurrentStep","goToNextStep","goToStep","onSubmit","onSave","onCancel","goToPreviousStep","set_currency","has_cancel","has_wallet_account","client","ui","useStore","has_active_real_account","has_real_account","upgradeable_currencies","legal_allowed_currencies","available_crypto_currencies","has_fiat","accounts","has_currency","Boolean","real_account_signup","resetRealAccountSignupParams","useDevice","crypto","filter","selected_currency","CURRENCY_TYPE","CRYPTO","fiat","FIAT","is_bypass_step","setIsBypassStep","should_disable_fiat","values","item","landing_company_shortcode","error_code","error_details","route_to_address_details","getAddressDetailsFields","includes","Formik","initialValues","actions","setSubmitting","current_step","errors","splitValidationResultTypes","handleSubmit","AutoHeightWrapper","default_height","setRef","_reorderCurrencies","_reorderCurrencies2","Div100vhContainer","height_offset","is_disabled","ThemedScrollbars","reorderCurrencies","avbl_currency","Field","component","RadioButton","_available_crypto_cur","crypto_data","has_separator","is_bypassed","FormSubmitButton","is_center","is_absolute","cancel_label","handleCancel","warnings","AccountsInfoLoader","is_desktop","is_logged_in","is_traders_hub_routes","speed","ContentLoader","backgroundColor","foregroundColor","LoggedInPreloader","LoggedOutPreloader","x","y","rx","ry","_Fragment","cx","cy","propTypes","PropTypes","PlatformSwitcherLoader","is_mobile","element_spacing","logo_size","name_x","name_y","container_width","container_margin","AccountInfoWrapper","is_dtrader_v2","disabled_message","isBot","MenuItems","link_to","handleClickCashier","BinaryLink","to","active_class","ReportTab","routes","reports","CashierTab","has_any_real_account","is_virtual","toggleReadyToDepositModal","toggleNeedRealAccountForCashierModal","real_account_needed_for_cashier","useIsRealAccountNeededForCashier","history","useHistory","toggle_modal_routes","location","pathname","traders_hub","bot","cashier_redirect","cashier","startPerformanceEventTimer","push","cashier_deposit","i18n","useTranslation","useLocation","has_wallet","language","AccountInfo","AccountSettingsToggle","redirect_url","useAccountSettingsRedirect","accountSettings","href","isTabletOs","classNameBubble","should_disable_pointer_events","NotificationsToggle","count","is_visible","toggleDialog","ToggleNotifications","tooltip_message","showPopover","CurrencyButton","openRealAccountSignup","has_effect","DepositButton","onClickDeposit","LoggedOutView","LoginButton","SignupButton","AccountActionsComponent","acc_switcher_disabled_message","account_type","balance","disableApp","enableApp","is_acc_switcher_on","is_acc_switcher_disabled","is_eu","is_notifications_visible","notifications_count","toggleAccountsDialog","toggleNotifications","isDepositButtonVisible","isCurrencyButtonVisible","formattedBalance","formatMoney","undefined","fallback","is_dialog_on","displayName","AccountActions","is_deriv_com","hostname","host","has_wallet_cookie","Cookies","isTmbEnabled","useTMB","async","_window$LiveChatWidge","isStaging","getDomainUrl","is_tmb_enabled","requestOidcAuthentication","redirectCallbackUri","origin","postLoginRedirectUri","catch","err","console","error","LiveChatWidget","redirectToLogin","getLanguage","tertiary","data_testid","is_active","is_hidden","onClickLink","suffix_icon","setMobileLanguageMenuOpen","is_trade_text","deriv_static_url","getStaticUrl","traders_hub_path","is_languages_link_on_responsive","languages","is_external_link","isExternalLink","is_cashier_link","cashier_withdrawal","cashier_acc_transfer","classNames","trade","PlatformBox","platform","appendAccountParamToUrl","url","trade_store","JSON","parse","sessionStorage","getItem","symbol","PlatformDropdownContent","app_routing_history","exact","isActive","getActivePlatform","startsWith","preventDefault","PlatformDropdown","closeDrawer","platform_config","setTogglePlatformType","isHubRedirectionEnabled","useIsHubRedirectionEnabled","TradersHubRedirect","localStorage","setItem","platforms","tradershub_os","useOnClickOutside","event","target","closest","platform_dropdown","ReactDOM","document","getElementById","PlatformSwitcher","toggleDrawer","current_language","is_landing_company_loaded","is_logging_in","setIsOpen","is_close_drawer_fired_ref","getPlatformInformation","CSSTransition","mountOnEnter","appear","in","enterDone","timeout","unmountOnExit","withRouter","redirectToSignUp","common","is_mobile_language_menu_open","TranslationFlag","expandSubMenu","is_language_changing","allowed_languages","getAllowedLanguages","UNSUPPORTED_LANGUAGES","MobileDrawer","SubMenu","is_expanded","has_subheader","submenu_title","onToggle","submenu_toggle_class","lang","LanguageLink","is_clickable","ToggleMenuDrawer","modules","is_dark_mode_on","is_dark_mode","setDarkMode","toggleTheme","setIsForcedToExitPnv","account_status","is_authorize","logout","logoutClient","setIsLoggingOut","should_allow_authentication","should_allow_poinc_authentication","active_account_landing_company","is_proof_of_ownership_enabled","is_passkey_supported","is_p2p_available","payment_agent","is_payment_agent_visible","show_eu_related_content","is_account_transfer_visible","useAccountTransferVisible","mobile_redirect_url","isSuccess","useAuthorize","data","is_payment_agent_transfer_visible","usePaymentAgentTransferVisible","route","is_trading_hub_category","account","should_show_regulatory_information","is_traders_hub_route","is_wallet_route","wallets","wallets_compare_accounts","useRemoteConfig","cs_chat_livechat","cs_chat_whatsapp","transitionExit","setTransitionExit","primary_routes_config","setPrimaryRoutesConfig","is_submenu_expanded","subscribe","rest","isSubscribed","p2p_settings","useP2PSettings","clearTimeout","processRoutes","routes_config","getRoutesConfig","primary_routes","getFilteredRoutesConfig","setTimeout","handleLogout","phone_verification","Promise","resolve","passkeysMenuOpenActionEventTrack","Analytics","trackEvent","action","form_name","operating_system","getOSNameWithUAParser","all_routes_config","routes_to_filter","subroutes_config","flatMap","path","find","icon_class","toggle","MenuTitle","SubHeader","Item","MenuLink","handleTradershubRedirect","PRODUCTION_REDIRECT_URL","redirectUrl","url_query_string","search","account_currency","URLSearchParams","route_config","idx","getRoutesWithSubMenu","is_authenticated","icon_component","getTitle","has_subroutes","some","subroutes","should_hide_passkeys_route","hideRoute","route_path","submenu_icon","submenu_suffix_icon","route_config_path","index","is_invisible","cashier_pa","cashier_pa_transfer","cashier_p2p","SubMenuSection","section_icon","section_title","subroute","subindex","passkeys","ToggleSwitch","handleToggle","is_enabled","has_border_bottom","WhatsApp","LiveChat","ServerTime","NetworkStatus","MobileLanguageMenu","EmptyNotification","color","clearNotifications","notifications","is_notifications_empty","notifications_array","toggleNotificationsModal","getNotificationItemIcon","toTitleCase","getButtonSettings","obj_key","isEmptyObject","primary_btn","cta_btn","secondary_btn","onActionTrackEvent","notification_key","filtered_notifications","only_toast_message","_getButtonSettings","_getButtonSettings2","_getButtonSettings3","_getButtonSettings4","_getButtonSettings8","_getButtonSettings5","_getButtonSettings6","_getButtonSettings7","buttonSettings","NotificationListWrapperForwardRef","styles","lineHeight","NotificationsList","NotificationsClearAllFooter","loginid","removeNotifications","removeNotificationMessage","removeNotificationMessageByKey","wrapper_ref","notification_num","should_show_again","_event$target","_wrapper_ref$current","notifications_toggle_btn","classList","contains","wrapper_classname","onClose","NotificationListWrapper","enter","exit","ToggleNotificationsDrawer","notifications_toggler_el","Counter","NotificationsDialog","setIsWalletsOnboardingTourGuideVisible","onboardingIcon","onClickHandler","WalletBadge","is_demo","_label$toUpperCase","Badge","background_color","custom_color","toUpperCase","AccountSwitcherWalletItem","closeAccountsDialog","show_badge","_gradients$card$theme","_icons$theme","dtrade_loginid","dtrade_balance","gradients","icons","landing_company_name","icon_type","switchAccount","active_loginid","theme","app_icon","is_dtrade_active","onAccountSwitch","role","onKeyDown","AppLinkedWithWalletIcon","gradient_class","card","wallet_icon","hide_watermark","AccountSwitcherWalletList","sortedWallets","sort","b","balance_a","is_dtrader_account_disabled","AccountSwitcherWallet","wallet_list","useStoreWalletAccountsList","dtrade_account_wallets","wallet","checkAllParentNodes","node","_node$classList","parent","parentNode","AccountSwitcherWalletMobile","isRtl","useIsRtl","footer","handleTradersHubRedirect","has_full_height","handleManageFundsRedirect","url_params","_window$location$path","wallets_transfer","toAccountLoginId","is_from_dtrader","DropdownArrow","BalanceLabel","display_code","MobileInfoIcon","DesktopInfoIcons","_icons$theme2","WalletIcon","has_bg","_wallet_list$find","account_switcher_disabled_message","linked_wallets_accounts","useStoreLinkedWalletsAccounts","active_account","wallet_loginid","active_wallet","linked_dtrade_trading_account_loginid","_linked_wallets_accou","dtrade","linked_wallet","ManageFundsButton","AccountActionsWallets","is_accounts_switcher_on","notificationsArray","isManageFundsButtonVisible","AccountInfoWallets","TradersHubOnboarding","getPlatformSettings","smarttrader","xmlns","fill","DerivShortLogo","StaticUrl","DerivBrandShortLogo","traders_hub_v2","EXPERIAN","SUCCESS","WARN","DANGER","PENDING","getAccountTitle","getExperianResult","status","heading","subheading","FIAT_CURRENCY_TYPE","CRYPTO_CURRENCY_TYPE","AddCryptoCurrency","form_error","is_add_fiat","should_show_fiat_only","hasNoAvailableCrypto","should_show_cancel","getReorderedCryptoCurrencies","touched","messages","canAddFiat","CurrencyRadioButtonGroup","website_name","CurrencyRadioButton","canAddCrypto","isSubmitting","cancel_icon","string","onClickBack","func","bool","AddCurrencyNote","currenciesPaymentAgentAvailability","all_payment_agent_list","account_list","result","has_payment_agent","agent","currencies","setShouldShowAllAvailableCurrencies","isLoading","is_loading","usePaymentAgentList","getReorderedCurrencies","allowed_currencies_payment_agent_availability","deposit_target","Loading","is_fullscreen","AddCrypto","is_add_crypto","autohide","AddFiat","AddCurrency","_current_fiat_currenc","current_fiat_currency","closeRealAccountSignup","current_currency_type","Chat","non_fiat_mesage","fiat_currency","can_change_fiat_currency","ChangeAccountCurrency","closeModal","AddOrManageAccounts","is_add_currency","onError","onSuccessSetAccountCurrency","setLoading","setAccountCurrency","setCurrency","createCryptoAccount","is_low_risk","manage_real_account_tab_index","setShouldShowCancel","resetRealAccountSignupTarget","setIsDeposit","general_store","initial_active_index","active_index","setActiveIndex","WS","mt5LoginList","fetchMt5LoginList","setCurrencyOrAddCryptoAccount","currency_object","entries","then","response","previous_currency","echo_req","set_account_currency","finally","LoadingModal","fiat_section","should_show_crypto_only","is_mf_active","Tabs","onTabItemClick","top","header_fit_content","continueRouteAfterChooseCrypto","should_show_all_available_currencies","hasAllCryptos","addNewCryptoAccount","getReorderCryptoCurrencies","currencies_to_filter","reordered_crypto_currencies","shouldShowAddButton","doSwitch","target_account","obj","currency_title","memoized_reordered_crypto_currencies","ChooseCurrency","FinishedAddCurrency","redirectToLegacyPlatform","deposit_real_account_signup_target","IconNextCurrency","IconWon","secondary","closeModalThenOpenCashier","SuccessMessage","prev","FinishedSetCurrency","IconPrevCurrency","IconArrow","noCryptoAvailable","error_message","updateValue","Heading","code","Message","details","address_line_1","phone","open","getSignupFormFields","TryAgain","onConfirm","ErrorCTA","SignupErrorContent","error_field","is_invalid_field_error","DialogHeading","DialogMessage","is_fully_authenticated","DialogPrimaryButton","closeModalAndOpenCashier","closeModalAndOpenPOI","closeModalAndOpenPOA","getActionButton","DialogDismissButton","DialogButtons","MainIcon","Checkmark","Warning","Danger","CloseIcon","StatusDialogContainer","icon_size","getStatus","proof_of_identity","proof_of_address","StatusIcon","NewStatusDialogContainer","setShouldShowOneTimeDepositModal","wide","onOpenDepositModal","closeModalAndOpenDeposit","signup_error","choose_crypto_currency","add_currency","finished_add_currency","restricted_country_signup_error","invalid_input_error","active_modal_index_no","maltainvest_signup","is_trading_experience_incomplete","fetchAccountSettings","is_from_restricted_country","realAccountSignup","is_real_acc_signup_on","setIsTradingAssessmentForNewUserEnabled","setIsClosingCreateRealAccountModal","setRealAccountSignupParams","setShouldShowAppropriatenessWarningModal","setShouldShowRiskWarningModal","should_show_appropriateness_warning_modal","should_show_risk_warning_modal","toggleAccountSuccessModal","state_value","is_trading_assessment_for_new_user_enabled","setDepositTarget","setError","real_account_form_data","risk_warning_title","setRiskWarningTitle","Suspense","AccountWizard","setIsRiskWarningVisible","onFinishSuccess","showStatusDialog","onNewFinishSuccess","showNewStatusDialog","onOpenWelcomeModal","closeModalthenOpenWelcomeModal","local_props","setRealAccountFormData","WizardHeading","_local_props$availabl","showErrorModal","_local_props$state_va","_local_props$availabl3","_local_props$state_va2","_local_props$state_va3","closeSetCurrencySuccessModal","form_source","payload","getModalHeight","setParams","active_modal_index","modal_pages_indices","curr","showSetCurrencySuccess","current_currency","is_loading_val","setIsLoading","real_signup_error_message","_modal_content$getAct","setCurrentAction","removeItem","cashier_onramp","onErrorConfirm","getIsManageTarget","getActiveModalIndex","modal_content","status_dialog","new_status_dialog","handleOnAccept","getAccountStatus","_get_account_status$s","closeModalthenOpenDepositModal","_response$new_account","handleOnDecline","setAssessmentDecline","assessment_decline","handleRiskAcceptance","is_risk_warning_visible","is_title_centered","renderTitle","finished_set_currency","is_set_currency_modal_visible","toggleSetCurrencyModal","has_set_currency","useHasSetCurrency","small","NewVersionNotification","onUpdate","removeUpdateListener","addUpdateListener","residence","has_malta_invest_account","useHasMaltaInvestAccount","token","_accounts","current_token","_useFetch","useFetch","authorize","options","enabled","refetchOnWindowFocus","modified_authorize","useMemo","active_accounts","useHasSvgAccount","is_eu_user","is_real","has_svg_account","has_maltainvest_account","context","useContext","P2PSettingsContext","Error","_data$paymentagent_li","paymentagent_list","list","_data$get_settings","is_websocket_authorized","setIsWebSocketAuthorized","wait","checkAuthorize","get_settings","is_authenticated_payment_agent","wallets_list","linked_accounts","ctrader","derivez","dxtrade","mt5","linked","linked_to","linked_to_account","currency_to_icon_mapper","Demo","dark","light","USD","EUR","AUD","GBP","BTC","ETH","USDT","eUSDT","tUSDT","UST","LTC","USDC","XRP","is_crypto","_Object$keys","account_category","_wallet$landing_compa","_wallet$linked_to","_accounts2","fiat_or_crypto","replace","is_malta_wallet","wallet_currency_type","sorted_wallets","localeCompare"],"sourceRoot":""}