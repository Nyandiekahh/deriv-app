{"version":3,"file":"wallets/js/wallets.380.91f56b2303af6cfa4a13.js","mappings":"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","sources":["webpack://@deriv/wallets/../api-v2/src/utils/display-money.ts","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsListEmptyState.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/TradingAppCardLoader/TradingAppCardLoader.tsx","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCardButton.tsx","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCardContent.tsx","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCardIcon.tsx","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCardSection.tsx","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCard.tsx","webpack://@deriv/wallets/./src/features/cfd/components/ModalTradeWrapper/ModalTradeWrapper.tsx","webpack://@deriv/wallets/./src/public/images/ic-installation-google.svg","webpack://@deriv/wallets/./src/public/images/ic-installation-huawei.svg","webpack://@deriv/wallets/./src/public/images/ic-installation-apple.svg","webpack://@deriv/wallets/./src/components/InformationBanner/InformationBanner.tsx","webpack://@deriv/wallets/./src/components/WalletBadge/WalletBadge.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5TradeLink.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5DesktopRedirectOption.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5MobileRedirectOption.tsx","webpack://@deriv/wallets/./src/utils/cfd.ts","webpack://@deriv/wallets/./src/hooks/useSendPasswordResetEmail.ts","webpack://@deriv/wallets/./src/components/SentEmailContent/SentEmailContent.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/InvestorPassword/MT5ChangeInvestorPasswordInputsScreen.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/InvestorPassword/MT5ChangeInvestorPasswordScreens.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/TradingPlatformChangePasswordScreens.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/MT5ChangePasswordScreens.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/ChangePassword.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeDetailsItem/MT5TradeDetailsItem.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeScreen.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/MT5TradeModal/MT5TradeModal.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AddedCTraderAccountsList/AddedCTraderAccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AddedDxtradeAccountsList/AddedDxtradeAccountsList.tsx","webpack://@deriv/wallets/./src/public/images/ic-deriv-light-user-verification.svg","webpack://@deriv/wallets/./src/components/ClientVerificationBadge/ClientVerificationStatusBadge.tsx","webpack://@deriv/wallets/./src/components/ClientVerificationModal/components/DocumentsList/components/DocumentTile/DocumentTile.tsx","webpack://@deriv/wallets/./src/components/ClientVerificationModal/components/DocumentsList/DocumentsList.tsx","webpack://@deriv/wallets/./src/components/ClientVerificationModal/ClientVerificationModal.tsx","webpack://@deriv/wallets/./src/components/WalletDisabledAccountModal/WalletDisabledAccountModal.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/TradingPlatformStatus/TradingPlatformStatus.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/TradingPlatformStatusModal/TradingPlatformStatusModal.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/hooks/useAddedMT5Account.ts","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/AddedMT5AccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/CFDSuccess/CFDSuccess.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/CTraderSuccessModal/components/CTraderSuccessModalButtons.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/CTraderSuccessModal/CTraderSuccessModal.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AvailableCTraderAccountsList/AvailableCTraderAccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePassword/CreatePassword.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/CreatePasswordModal/CreatePasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/components/MT5LicenceMessage/MT5LicenceMessage.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/components/MT5PasswordModalTnc/MT5PasswordModalTnc.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/EnterPassword/EnterPassword.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/EnterPasswordModal/EnterPasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/PasswordLimitExceededModal/PasswordLimitExceededModal.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/SuccessModal/SuccessModal.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/DxtradeEnterPasswordModal/DxtradeEnterPasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AvailableDxtradeAccountsList/AvailableDxtradeAccountsList.tsx","webpack://@deriv/wallets/./src/components/WalletsChangeMT5Password/WalletSuccessChangeMT5Password.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePasswordMT5/CreatePasswordMT5.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5ResetPasswordModal/MT5ResetPasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/MT5AccountAdded/MT5AccountAdded.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/MT5ErrorModal/MT5ErrorModal.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/MT5PasswordModal/MT5PasswordModalFooters.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/MT5PasswordModal/MT5PasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AvailableMT5AccountsList/AvailableMT5AccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/components/CFDPlatformsListAccounts/CFDPlatformsListAccounts.tsx","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsList.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSuccessFooter.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsGetAccount.tsx","webpack://@deriv/wallets/./src/hooks/useWalletsMFAccountStatus.ts","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsTradingAccount.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSection.tsx","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/LinkTitle.tsx","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/OptionsAndMultipliersListing.tsx","webpack://@deriv/wallets/./src/components/AccountsList/AccountsList.tsx","webpack://@deriv/wallets/./src/components/WalletCurrencyCard/WalletCurrencyCard.tsx","webpack://@deriv/wallets/./src/components/WalletListCardActions/WalletListCardActions.tsx","webpack://@deriv/wallets/./src/components/WalletListCardBadge/WalletListCardBadge.tsx","webpack://@deriv/wallets/./src/components/WalletMarketCurrencyIcon/WalletMarketCurrencyIcon.tsx","webpack://@deriv/wallets/./src/components/WalletMarketIcon/WalletMarketIcon.tsx","webpack://@deriv/wallets/./src/components/WalletMoney/WalletMoney.tsx","webpack://@deriv/wallets/./src/components/WalletStatusBadge/WalletStatusBadge.tsx","webpack://@deriv/wallets/./src/components/WalletsDisabledAccountsBanner/WalletsDisabledAccountsBanner.tsx","webpack://@deriv/wallets/./src/features/cfd/components/PlatformStatusBadge/PlatformStatusBadge.tsx","webpack://@deriv/wallets/./src/components/AccountsList/AccountsList.scss","webpack://@deriv/wallets/./src/components/ClientVerificationBadge/ClientVerificationStatusBadge.scss","webpack://@deriv/wallets/./src/components/ClientVerificationModal/ClientVerificationModal.scss","webpack://@deriv/wallets/./src/components/ClientVerificationModal/components/DocumentsList/DocumentsList.scss","webpack://@deriv/wallets/./src/components/ClientVerificationModal/components/DocumentsList/components/DocumentTile/DocumentTile.scss","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSection.scss","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSuccessFooter.scss","webpack://@deriv/wallets/./src/components/InformationBanner/InformationBanner.scss","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/OptionsAndMultipliersListing.scss","webpack://@deriv/wallets/./src/components/SentEmailContent/SentEmailContent.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/TradingAppCardLoader/TradingAppCardLoader.scss","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCard.scss","webpack://@deriv/wallets/./src/components/WalletBadge/WalletBadge.scss","webpack://@deriv/wallets/./src/components/WalletCurrencyCard/WalletCurrencyCard.scss","webpack://@deriv/wallets/./src/components/WalletDisabledAccountModal/WalletDisabledAccountModal.scss","webpack://@deriv/wallets/./src/components/WalletListCardActions/WalletListCardActions.scss","webpack://@deriv/wallets/./src/components/WalletListCardBadge/WalletListCardBadge.scss","webpack://@deriv/wallets/./src/components/WalletMarketCurrencyIcon/WalletMarketCurrencyIcon.scss","webpack://@deriv/wallets/./src/components/WalletsChangeMT5Password/WalletSuccessChangeMT5Password.scss","webpack://@deriv/wallets/./src/components/WalletsDisabledAccountsBanner/WalletsDisabledAccountsBanner.scss","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsList.scss","webpack://@deriv/wallets/./src/features/cfd/components/CFDPlatformsListAccounts/CFDPlatformsListAccounts.scss","webpack://@deriv/wallets/./src/features/cfd/components/ModalTradeWrapper/ModalTradeWrapper.scss","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/AddedMT5AccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AvailableMT5AccountsList/AvailableMT5AccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/modals/DxtradeEnterPasswordModal/DxtradeEnterPasswordModal.scss","webpack://@deriv/wallets/./src/features/cfd/modals/EnterPasswordModal/EnterPasswordModal.scss","webpack://@deriv/wallets/./src/features/cfd/modals/MT5PasswordModal/MT5PasswordModal.scss","webpack://@deriv/wallets/./src/features/cfd/modals/PasswordLimitExceededModal/PasswordLimitExceededModal.scss","webpack://@deriv/wallets/./src/features/cfd/screens/CFDSuccess/CFDSuccess.scss","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/ChangePassword.scss","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/InvestorPassword/MT5ChangeInvestorPasswordScreens.scss","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePassword/CreatePassword.scss","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePasswordMT5/CreatePasswordMT5.scss","webpack://@deriv/wallets/./src/features/cfd/screens/EnterPassword/EnterPassword.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5ResetPasswordModal/MT5ResetPasswordModal.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeDetailsItem/MT5TradeDetailsItem.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5MobileRedirectOption.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5TradeLink.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeScreen.scss","webpack://@deriv/wallets/./src/features/cfd/screens/TradingPlatformStatus/TradingPlatformStatus.scss","webpack://@deriv/wallets/./src/features/cfd/screens/components/MT5LicenceMessage/MT5LicenceMessage.scss","webpack://@deriv/wallets/./src/features/cfd/screens/components/MT5PasswordModalTnc/MT5PasswordModalTnc.scss","webpack://@deriv/wallets/./src/components/AccountsList/AccountsList.scss?bc2a","webpack://@deriv/wallets/./src/components/ClientVerificationBadge/ClientVerificationStatusBadge.scss?7a84","webpack://@deriv/wallets/./src/components/ClientVerificationModal/ClientVerificationModal.scss?3652","webpack://@deriv/wallets/./src/components/ClientVerificationModal/components/DocumentsList/DocumentsList.scss?f18c","webpack://@deriv/wallets/./src/components/ClientVerificationModal/components/DocumentsList/components/DocumentTile/DocumentTile.scss?10f7","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSection.scss?1be7","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSuccessFooter.scss?188d","webpack://@deriv/wallets/./src/components/InformationBanner/InformationBanner.scss?1b2f","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/OptionsAndMultipliersListing.scss?d22a","webpack://@deriv/wallets/./src/components/SentEmailContent/SentEmailContent.scss?4ebc","webpack://@deriv/wallets/./src/components/SkeletonLoader/TradingAppCardLoader/TradingAppCardLoader.scss?8dea","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCard.scss?3571","webpack://@deriv/wallets/./src/components/WalletBadge/WalletBadge.scss?f942","webpack://@deriv/wallets/./src/components/WalletCurrencyCard/WalletCurrencyCard.scss?d0c6","webpack://@deriv/wallets/./src/components/WalletDisabledAccountModal/WalletDisabledAccountModal.scss?e34c","webpack://@deriv/wallets/./src/components/WalletListCardActions/WalletListCardActions.scss?e14e","webpack://@deriv/wallets/./src/components/WalletListCardBadge/WalletListCardBadge.scss?f214","webpack://@deriv/wallets/./src/components/WalletMarketCurrencyIcon/WalletMarketCurrencyIcon.scss?10e2","webpack://@deriv/wallets/./src/components/WalletsChangeMT5Password/WalletSuccessChangeMT5Password.scss?c130","webpack://@deriv/wallets/./src/components/WalletsDisabledAccountsBanner/WalletsDisabledAccountsBanner.scss?1411","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsList.scss?a4df","webpack://@deriv/wallets/./src/features/cfd/components/CFDPlatformsListAccounts/CFDPlatformsListAccounts.scss?b0c5","webpack://@deriv/wallets/./src/features/cfd/components/ModalTradeWrapper/ModalTradeWrapper.scss?4af6","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/AddedMT5AccountsList.scss?760d","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AvailableMT5AccountsList/AvailableMT5AccountsList.scss?eba4","webpack://@deriv/wallets/./src/features/cfd/modals/DxtradeEnterPasswordModal/DxtradeEnterPasswordModal.scss?737c","webpack://@deriv/wallets/./src/features/cfd/modals/EnterPasswordModal/EnterPasswordModal.scss?4731","webpack://@deriv/wallets/./src/features/cfd/modals/MT5PasswordModal/MT5PasswordModal.scss?bac3","webpack://@deriv/wallets/./src/features/cfd/modals/PasswordLimitExceededModal/PasswordLimitExceededModal.scss?2f06","webpack://@deriv/wallets/./src/features/cfd/screens/CFDSuccess/CFDSuccess.scss?f0d4","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/ChangePassword.scss?b5da","webpack://@deriv/wallets/./src/features/cfd/screens/ChangePassword/InvestorPassword/MT5ChangeInvestorPasswordScreens.scss?f7f5","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePassword/CreatePassword.scss?c0d1","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePasswordMT5/CreatePasswordMT5.scss?8318","webpack://@deriv/wallets/./src/features/cfd/screens/EnterPassword/EnterPassword.scss?91a4","webpack://@deriv/wallets/./src/features/cfd/screens/MT5ResetPasswordModal/MT5ResetPasswordModal.scss?49dc","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeDetailsItem/MT5TradeDetailsItem.scss?0333","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5MobileRedirectOption.scss?1100","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5TradeLink.scss?e3cc","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeScreen.scss?edf2","webpack://@deriv/wallets/./src/features/cfd/screens/TradingPlatformStatus/TradingPlatformStatus.scss?df92","webpack://@deriv/wallets/./src/features/cfd/screens/components/MT5LicenceMessage/MT5LicenceMessage.scss?6c93","webpack://@deriv/wallets/./src/features/cfd/screens/components/MT5PasswordModalTnc/MT5PasswordModalTnc.scss?0e07"],"sourcesContent":["import { FormatUtils } from '@deriv-com/utils';\nimport { useAuthorize } from '../hooks';\n\ntype TCurrency = NonNullable<ReturnType<typeof useAuthorize>['data']['currency']>;\n\nexport const displayMoney = (\n    amount = 0,\n    currency: TCurrency = '',\n    options?: {\n        fractional_digits?: number;\n    }\n) => {\n    const formattedAmount = FormatUtils.formatMoney(amount, {\n        decimalPlaces: options?.fractional_digits ?? 2,\n        locale: 'en-US',\n    });\n\n    return formattedAmount + (currency ? ` ${currency}` : '');\n};\n","import React, { useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useWalletAccountsList } from '@deriv/api-v2';\nimport { LabelPairedArrowUpArrowDownSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport './CFDPlatformsList.scss';\n\nconst CFDPlatformsListEmptyState = () => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { data: walletAccountsList } = useWalletAccountsList();\n    const history = useHistory();\n    const { isDesktop } = useDevice();\n\n    const fiatAccount = useMemo(\n        () => walletAccountsList?.find(account => account.account_type === 'doughflow'),\n        [walletAccountsList]\n    );\n\n    return (\n        <div className='wallets-cfd-list__cfd-empty-state'>\n            <button\n                className='wallets-cfd-list__cfd-empty-state-button'\n                data-testid='dt_cfd_empty_state_transfer_button'\n                onClick={() => {\n                    history.push('/wallet/account-transfer', {\n                        shouldSelectDefaultWallet: true,\n                    });\n                }}\n            >\n                <LabelPairedArrowUpArrowDownSmBoldIcon />\n            </button>\n            <div className='wallets-cfd-list__cfd-empty-state-text'>\n                <Text align='start' size={isDesktop ? 'md' : 'sm'} weight='bold'>\n                    <Localize i18n_default_text='Transfer funds' />\n                </Text>\n                <Text align='start' size={isDesktop ? 'sm' : 'xs'}>\n                    <Localize\n                        i18n_default_text=\"To trade CFDs, you'll need to use your {{walletCurrencyType}} Wallet. Click Transfer to move your {{currency}} to your {{walletCurrencyType}} Wallet.\"\n                        values={{\n                            currency: activeWallet?.currency,\n                            walletCurrencyType: fiatAccount?.wallet_currency_type,\n                        }}\n                    />\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default CFDPlatformsListEmptyState;\n","import React from 'react';\nimport './TradingAppCardLoader.scss';\n\nconst TradingAppCardLoader: React.FC = () => (\n    <div className='wallets-trading-app-card-loader'>\n        <div className='wallets-trading-app-card-loader__content'>\n            <div className='wallets-skeleton wallets-trading-app-card-loader__content__icon' />\n            <div className='wallets-trading-app-card-loader__content__details'>\n                <div className='wallets-skeleton wallets-trading-app-card-loader__content__details--title' />\n                <div className='wallets-skeleton wallets-trading-app-card-loader__content__details--description' />\n            </div>\n        </div>\n    </div>\n);\n\nexport default TradingAppCardLoader;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TCommonProps } from './TradingAccountCard';\n\nconst TradingAccountCardButton = ({ children, className, 'data-testid': dataTestId }: TCommonProps) => (\n    <div className={classNames('wallets-trading-account-card__button', className)} data-testid={dataTestId}>\n        {children}\n    </div>\n);\n\nexport default TradingAccountCardButton;\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst TradingAccountCardContent = ({ children, className }: { children: React.ReactNode; className?: string }) => (\n    <div className={classNames('wallets-trading-account-card__content', className)}>{children}</div>\n);\n\nexport default TradingAccountCardContent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TCommonProps } from './TradingAccountCard';\n\nconst TradingAccountCardIcon = ({ children, className, 'data-testid': dataTestId }: TCommonProps) => (\n    <div className={classNames('wallets-trading-account-card__icon', className)} data-testid={dataTestId}>\n        {children}\n    </div>\n);\n\nexport default TradingAccountCardIcon;\n","import React, { PropsWithChildren } from 'react';\n\nconst TradingAccountCardSection: React.FC<PropsWithChildren> = ({ children }) => (\n    <div className='wallets-trading-account-card__section'>{children}</div>\n);\n\nexport default TradingAccountCardSection;\n","import React, { PropsWithChildren } from 'react';\nimport classNames from 'classnames';\nimport TradingAccountCardButton from './TradingAccountCardButton';\nimport TradingAccountCardContent from './TradingAccountCardContent';\nimport TradingAccountCardIcon from './TradingAccountCardIcon';\nimport TradingAccountCardSection from './TradingAccountCardSection';\nimport './TradingAccountCard.scss';\n\nexport type TCommonProps = {\n    children: React.ReactNode;\n    className?: string;\n    'data-testid'?: string;\n};\n\ntype TProps = {\n    className?: string;\n    disabled?: boolean;\n    onClick?: () => void;\n};\n\nconst TradingAccountCard = ({ children, className, disabled, onClick }: PropsWithChildren<TProps>) => {\n    const handleClick = () => {\n        if (!disabled && onClick) {\n            onClick();\n        }\n    };\n\n    return (\n        <div\n            aria-disabled={disabled}\n            className={classNames(\n                'wallets-trading-account-card',\n                {\n                    'wallets-trading-account-card--disabled': disabled,\n                },\n                className\n            )}\n            data-testid='dt_wallets_trading_account_card'\n            onClick={handleClick}\n            onKeyDown={handleClick}\n            tabIndex={disabled ? -1 : 0} // Remove focusability if disabled\n        >\n            {children}\n        </div>\n    );\n};\n\nTradingAccountCard.Icon = TradingAccountCardIcon;\nTradingAccountCard.Content = TradingAccountCardContent;\nTradingAccountCard.Button = TradingAccountCardButton;\nTradingAccountCard.Section = TradingAccountCardSection;\n\nexport default TradingAccountCard;\n","import React, { FC, PropsWithChildren } from 'react';\nimport QRCode from 'qrcode.react';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper } from '../../../../components/Base/ModalStepWrapper';\nimport InstallationAppleIcon from '../../../../public/images/ic-installation-apple.svg';\nimport InstallationGoogleIcon from '../../../../public/images/ic-installation-google.svg';\nimport InstallationHuaweiIcon from '../../../../public/images/ic-installation-huawei.svg';\nimport { TAddedMT5Account, TPlatforms } from '../../../../types';\nimport { PlatformDetails } from '../../constants';\nimport {\n    ctraderLinks,\n    dxtradeLinks,\n    whiteLabelLinks as internalWhiteLabelLinks,\n} from '../../screens/MT5TradeScreen/MT5TradeLink/urlConfig';\nimport './ModalTradeWrapper.scss';\n\ntype TAppLinks = {\n    android?: string;\n    huawei?: string;\n    ios?: string;\n};\n\nconst LinksMapper = (whiteLabelLinks?: TAddedMT5Account['white_label_links']): Record<TPlatforms.All, TAppLinks> => ({\n    ctrader: {\n        android: ctraderLinks.android,\n        ios: ctraderLinks.ios,\n    },\n    dxtrade: {\n        android: dxtradeLinks.android,\n        huawei: dxtradeLinks.huawei,\n        ios: dxtradeLinks.ios,\n    },\n    mt5: {\n        android: whiteLabelLinks?.android,\n        huawei: internalWhiteLabelLinks.huawei,\n        ios: whiteLabelLinks?.ios,\n    },\n});\n\n// TODO: Implement App Icon once icons are available.\nconst AppToIconMapper = {\n    android: InstallationGoogleIcon,\n    huawei: InstallationHuaweiIcon,\n    ios: InstallationAppleIcon,\n} as const;\n\ntype TModalTradeWrapper = {\n    mt5Account?: TAddedMT5Account;\n    platform: TPlatforms.All;\n};\n\nconst ModalTradeWrapper: FC<PropsWithChildren<TModalTradeWrapper>> = ({ children, mt5Account, platform }) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const appOrder = ['ios', 'android', 'huawei'];\n    const { link, title } = PlatformDetails[platform];\n\n    return (\n        <ModalStepWrapper\n            renderFooter={() => {\n                return (\n                    <div className='wallets-modal-trade-wrapper__footer'>\n                        <Text align='center' size='sm' weight='bold'>\n                            <Localize\n                                i18n_default_text='Download {{title}} on your phone to trade with the {{title}} account'\n                                values={{ title }}\n                            />\n                        </Text>\n                        <div className='wallets-modal-trade-wrapper__footer-installations'>\n                            <div className='wallets-modal-trade-wrapper__footer-installations-icons'>\n                                {appOrder.map(app => {\n                                    const AppsLinkMapper = LinksMapper(mt5Account?.white_label_links)[platform][\n                                        app as keyof TAppLinks\n                                    ];\n                                    if (AppsLinkMapper) {\n                                        const AppIcon = AppToIconMapper[app as keyof typeof AppToIconMapper];\n                                        const appLink = AppsLinkMapper;\n                                        return (\n                                            <AppIcon\n                                                data-testid={`dt_modal_trade_wrapper_${app}_icon`}\n                                                key={app}\n                                                onClick={() => window.open(appLink)}\n                                            />\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </div>\n\n                            <div className='wallets-modal-trade-wrapper__footer-installations-qr'>\n                                <QRCode size={80} value={link} />\n                                <Text align='center' size='xs'>\n                                    <Localize\n                                        i18n_default_text='Scan the QR code to download {{title}}'\n                                        values={{ title }}\n                                    />\n                                </Text>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }}\n            shouldFixedFooter={isDesktop}\n            shouldHideFooter={!isDesktop}\n            title={localize('Trade')}\n        >\n            {children}\n        </ModalStepWrapper>\n    );\n};\n\nexport default ModalTradeWrapper;\n","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 137 41\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect y=\".406\" width=\"137\" height=\"40\" rx=\"4\" fill=\"#0E0E0E\" /><g clipPath=\"url(#prefix__clip0_12405_122255)\"><path d=\"M21.225 20.96l-10.86 11.03c.47.273.988.417 1.508.417a3 3 0 001.47-.389l12.318-6.903-4.436-4.155z\" fill=\"#F93647\" /><path d=\"M29.597 17.902l-3.451-1.934-3.878 3.937 4.753 4.452 2.578-1.445c.928-.522 1.483-1.459 1.483-2.506a2.848 2.848 0 00-1.485-2.504z\" fill=\"#FFC801\" /><path d=\"M13.338 8.79a2.962 2.962 0 00-2.93.008l10.771 10.09 3.619-3.674-11.46-6.424z\" fill=\"#00EF77\" /><path d=\"M9.33 9.824a2.83 2.83 0 00-.414 1.466v18.224c0 .514.137 1.003.385 1.43l10.832-11L9.329 9.825z\" fill=\"#00D3FF\" /></g><path d=\"M44.905 13.488h-.027c-.078.294-.27.54-.576.738-.3.192-.69.288-1.17.288-.384 0-.738-.069-1.062-.207a2.304 2.304 0 01-.819-.62 3.093 3.093 0 01-.54-1.018 4.761 4.761 0 01-.189-1.404c0-.522.063-.984.189-1.386.126-.408.306-.747.54-1.017.234-.276.516-.486.846-.63.33-.144.696-.216 1.098-.216.564 0 1.035.126 1.413.378.378.252.669.585.873 1l-.621.377a1.76 1.76 0 00-.648-.792c-.282-.192-.621-.288-1.017-.288a1.83 1.83 0 00-.756.153 1.712 1.712 0 00-.594.414c-.162.18-.288.396-.378.648-.09.252-.135.534-.135.846v1.017c0 .312.045.597.135.855.09.252.216.468.378.648.168.18.372.321.612.423.24.096.51.144.81.144.216 0 .42-.027.612-.08.198-.06.369-.148.513-.262.15-.114.267-.255.351-.423.084-.174.126-.378.126-.612v-.62h-1.386v-.667h2.124v3.231h-.702v-.918zm2.19.918V8.124h3.834v.666H47.85v2.106h2.898v.666H47.85v2.178h3.078v.666h-3.834zm7.362-5.616v5.616H53.7V8.79h-1.998v-.666h4.752v.666h-1.998zm4.865 5.616v-.63h.882V8.754h-.882v-.63h2.52v.63h-.882v5.022h.882v.63h-2.52zm5.954-5.616v5.616h-.756V8.79h-1.998v-.666h4.752v.666h-1.998zm7.512 5.724c-.408 0-.777-.069-1.107-.207a2.368 2.368 0 01-.837-.62 2.973 2.973 0 01-.531-1.018 4.761 4.761 0 01-.19-1.404c0-.528.064-.993.19-1.395s.303-.74.53-1.017a2.23 2.23 0 01.838-.62 2.74 2.74 0 011.107-.217c.402 0 .768.072 1.098.216.33.138.609.345.837.621.234.276.414.615.54 1.017.126.402.189.867.189 1.395s-.063.996-.19 1.404a2.886 2.886 0 01-.54 1.017c-.227.27-.506.477-.836.621a2.82 2.82 0 01-1.098.207zm0-.675c.27 0 .519-.048.747-.144.228-.096.423-.234.585-.414.168-.18.297-.396.387-.648.09-.252.135-.534.135-.846v-1.044c0-.312-.045-.594-.135-.846a1.847 1.847 0 00-.387-.648 1.625 1.625 0 00-.585-.414 1.906 1.906 0 00-.747-.144c-.27 0-.52.048-.747.144a1.712 1.712 0 00-.594.414c-.162.18-.288.396-.378.648-.09.252-.135.534-.135.846v1.044c0 .312.045.594.135.846.09.252.216.468.378.648.168.18.366.318.594.414.228.096.477.144.747.144zm5.544-3.267l-.756-1.395h-.027v5.23h-.738V8.123h.873l2.295 3.834.756 1.395h.027V8.124h.738v6.282h-.873l-2.295-3.834z\" fill=\"#fff\" /><mask id=\"a\" maskUnits=\"userSpaceOnUse\" x=\"39\" y=\"17.406\" width=\"90\" height=\"18\" fill=\"#000\"><path fill=\"#fff\" d=\"M39 17.406h90v18H39z\" /><path d=\"M52.308 25.257c0 1.7-.504 3.055-1.513 4.063-1.133 1.202-2.624 1.802-4.471 1.802-1.768 0-3.264-.612-4.488-1.836C40.612 28.062 40 26.555 40 24.764c0-1.79.612-3.298 1.836-4.522 1.224-1.224 2.72-1.836 4.488-1.836.895 0 1.74.159 2.533.476.793.318 1.445.765 1.955 1.343l-1.122 1.122c-.374-.453-.861-.804-1.462-1.054a4.653 4.653 0 00-1.904-.39c-1.326 0-2.448.458-3.366 1.376-.907.93-1.36 2.091-1.36 3.485 0 1.394.453 2.556 1.36 3.485.918.918 2.04 1.377 3.366 1.377 1.213 0 2.221-.34 3.026-1.02.805-.68 1.27-1.615 1.394-2.805h-4.42V24.34h5.899c.057.318.085.624.085.918zm1.069 1.428c0-1.28.403-2.34 1.207-3.179.816-.838 1.842-1.258 3.077-1.258 1.236 0 2.256.42 3.06 1.258.816.839 1.224 1.899 1.224 3.18 0 1.291-.408 2.35-1.224 3.178-.804.839-1.824 1.258-3.06 1.258-1.235 0-2.26-.42-3.077-1.258-.804-.838-1.207-1.898-1.207-3.179zm1.564 0c0 .896.26 1.62.782 2.176a2.551 2.551 0 001.938.833c.77 0 1.417-.277 1.938-.833.522-.555.782-1.28.782-2.176 0-.884-.26-1.603-.782-2.159-.532-.566-1.178-.85-1.938-.85s-1.405.284-1.938.85c-.521.556-.782 1.275-.782 2.16zm7.949 0c0-1.28.402-2.34 1.207-3.179.816-.838 1.842-1.258 3.077-1.258 1.235 0 2.255.42 3.06 1.258.816.839 1.224 1.899 1.224 3.18 0 1.291-.408 2.35-1.224 3.178-.805.839-1.825 1.258-3.06 1.258s-2.261-.42-3.077-1.258c-.805-.838-1.207-1.898-1.207-3.179zm1.564 0c0 .896.26 1.62.782 2.176a2.551 2.551 0 001.938.833c.77 0 1.417-.277 1.938-.833.521-.555.782-1.28.782-2.176 0-.884-.26-1.603-.782-2.159-.533-.566-1.179-.85-1.938-.85-.76 0-1.405.284-1.938.85-.521.556-.782 1.275-.782 2.16zm12.165 3.009c.77 0 1.4-.277 1.887-.833.51-.555.765-1.28.765-2.176 0-.872-.255-1.592-.765-2.159a2.406 2.406 0 00-1.887-.85c-.748 0-1.377.284-1.887.85-.51.567-.765 1.287-.765 2.16 0 .883.255 1.603.765 2.158.51.567 1.139.85 1.887.85zm-.051 5.1a4.46 4.46 0 01-1.31-.187 4.172 4.172 0 01-1.121-.493 3.669 3.669 0 01-.85-.765 3.225 3.225 0 01-.544-.986l1.479-.612c.17.488.464.879.884 1.173.419.295.906.442 1.462.442.85 0 1.513-.255 1.989-.765.476-.51.714-1.212.714-2.108v-.799h-.068a3.128 3.128 0 01-1.207 1.054 3.598 3.598 0 01-1.632.374c-1.088 0-2.023-.425-2.805-1.275-.771-.872-1.156-1.926-1.156-3.162 0-1.235.385-2.283 1.156-3.145.782-.861 1.717-1.292 2.805-1.292.589 0 1.133.13 1.632.391a3 3 0 011.207 1.037h.068V22.52h1.496v7.973c0 1.338-.38 2.386-1.14 3.145-.77.77-1.79 1.156-3.06 1.156zm7.67-16.116V30.85h-1.564V18.678h1.564zM89.8 31.122c-1.224 0-2.232-.42-3.026-1.258-.793-.838-1.19-1.898-1.19-3.179 0-1.27.386-2.323 1.156-3.162.771-.85 1.757-1.275 2.958-1.275 1.236 0 2.216.403 2.941 1.207.737.794 1.105 1.91 1.105 3.35l-.017.17h-6.545c.023.815.295 1.473.816 1.971a2.611 2.611 0 001.87.748c.998 0 1.78-.498 2.346-1.496l1.394.68a4.137 4.137 0 01-1.564 1.65c-.657.396-1.405.594-2.244.594zm-2.499-5.44h4.777a2.03 2.03 0 00-.714-1.428c-.419-.385-.986-.578-1.7-.578a2.3 2.3 0 00-1.53.544c-.419.363-.697.85-.833 1.462zm13.445.238v4.93h-1.564V18.678h4.148c1.054 0 1.949.352 2.686 1.054.748.703 1.122 1.559 1.122 2.567 0 1.032-.374 1.893-1.122 2.584-.725.692-1.621 1.037-2.686 1.037h-2.584zm0-5.746v4.25h2.618c.623 0 1.139-.21 1.547-.629.419-.42.629-.918.629-1.496 0-.566-.21-1.06-.629-1.479-.408-.43-.924-.646-1.547-.646h-2.618zm9.407-1.496V30.85h-1.564V18.678h1.564zm2.961 9.622c0 .408.17.748.51 1.02.352.272.76.408 1.224.408.658 0 1.241-.243 1.751-.73.522-.488.782-1.06.782-1.718-.487-.385-1.167-.578-2.04-.578-.634 0-1.167.153-1.598.46-.419.305-.629.685-.629 1.138zm2.023-6.052c1.156 0 2.069.312 2.737.935.669.612 1.003 1.457 1.003 2.533v5.134h-1.496v-1.156h-.068c-.646.952-1.507 1.428-2.584 1.428-.918 0-1.688-.272-2.312-.816a2.616 2.616 0 01-.918-2.04c0-.861.323-1.547.969-2.057.658-.51 1.53-.765 2.618-.765.93 0 1.695.17 2.295.51v-.357c0-.544-.215-1.003-.646-1.377a2.195 2.195 0 00-1.513-.578c-.872 0-1.564.369-2.074 1.105l-1.377-.867c.76-1.088 1.882-1.632 3.366-1.632zm12.784.272l-5.219 12.002h-1.615l1.938-4.199-3.434-7.803h1.7l2.482 5.984h.034l2.414-5.984h1.7z\" /></mask><path d=\"M52.308 25.257c0 1.7-.504 3.055-1.513 4.063-1.133 1.202-2.624 1.802-4.471 1.802-1.768 0-3.264-.612-4.488-1.836C40.612 28.062 40 26.555 40 24.764c0-1.79.612-3.298 1.836-4.522 1.224-1.224 2.72-1.836 4.488-1.836.895 0 1.74.159 2.533.476.793.318 1.445.765 1.955 1.343l-1.122 1.122c-.374-.453-.861-.804-1.462-1.054a4.653 4.653 0 00-1.904-.39c-1.326 0-2.448.458-3.366 1.376-.907.93-1.36 2.091-1.36 3.485 0 1.394.453 2.556 1.36 3.485.918.918 2.04 1.377 3.366 1.377 1.213 0 2.221-.34 3.026-1.02.805-.68 1.27-1.615 1.394-2.805h-4.42V24.34h5.899c.057.318.085.624.085.918zm1.069 1.428c0-1.28.403-2.34 1.207-3.179.816-.838 1.842-1.258 3.077-1.258 1.236 0 2.256.42 3.06 1.258.816.839 1.224 1.899 1.224 3.18 0 1.291-.408 2.35-1.224 3.178-.804.839-1.824 1.258-3.06 1.258-1.235 0-2.26-.42-3.077-1.258-.804-.838-1.207-1.898-1.207-3.179zm1.564 0c0 .896.26 1.62.782 2.176a2.551 2.551 0 001.938.833c.77 0 1.417-.277 1.938-.833.522-.555.782-1.28.782-2.176 0-.884-.26-1.603-.782-2.159-.532-.566-1.178-.85-1.938-.85s-1.405.284-1.938.85c-.521.556-.782 1.275-.782 2.16zm7.949 0c0-1.28.402-2.34 1.207-3.179.816-.838 1.842-1.258 3.077-1.258 1.235 0 2.255.42 3.06 1.258.816.839 1.224 1.899 1.224 3.18 0 1.291-.408 2.35-1.224 3.178-.805.839-1.825 1.258-3.06 1.258s-2.261-.42-3.077-1.258c-.805-.838-1.207-1.898-1.207-3.179zm1.564 0c0 .896.26 1.62.782 2.176a2.551 2.551 0 001.938.833c.77 0 1.417-.277 1.938-.833.521-.555.782-1.28.782-2.176 0-.884-.26-1.603-.782-2.159-.533-.566-1.179-.85-1.938-.85-.76 0-1.405.284-1.938.85-.521.556-.782 1.275-.782 2.16zm12.165 3.009c.77 0 1.4-.277 1.887-.833.51-.555.765-1.28.765-2.176 0-.872-.255-1.592-.765-2.159a2.406 2.406 0 00-1.887-.85c-.748 0-1.377.284-1.887.85-.51.567-.765 1.287-.765 2.16 0 .883.255 1.603.765 2.158.51.567 1.139.85 1.887.85zm-.051 5.1a4.46 4.46 0 01-1.31-.187 4.172 4.172 0 01-1.121-.493 3.669 3.669 0 01-.85-.765 3.225 3.225 0 01-.544-.986l1.479-.612c.17.488.464.879.884 1.173.419.295.906.442 1.462.442.85 0 1.513-.255 1.989-.765.476-.51.714-1.212.714-2.108v-.799h-.068a3.128 3.128 0 01-1.207 1.054 3.598 3.598 0 01-1.632.374c-1.088 0-2.023-.425-2.805-1.275-.771-.872-1.156-1.926-1.156-3.162 0-1.235.385-2.283 1.156-3.145.782-.861 1.717-1.292 2.805-1.292.589 0 1.133.13 1.632.391a3 3 0 011.207 1.037h.068V22.52h1.496v7.973c0 1.338-.38 2.386-1.14 3.145-.77.77-1.79 1.156-3.06 1.156zm7.67-16.116V30.85h-1.564V18.678h1.564zM89.8 31.122c-1.224 0-2.232-.42-3.026-1.258-.793-.838-1.19-1.898-1.19-3.179 0-1.27.386-2.323 1.156-3.162.771-.85 1.757-1.275 2.958-1.275 1.236 0 2.216.403 2.941 1.207.737.794 1.105 1.91 1.105 3.35l-.017.17h-6.545c.023.815.295 1.473.816 1.971a2.611 2.611 0 001.87.748c.998 0 1.78-.498 2.346-1.496l1.394.68a4.137 4.137 0 01-1.564 1.65c-.657.396-1.405.594-2.244.594zm-2.499-5.44h4.777a2.03 2.03 0 00-.714-1.428c-.419-.385-.986-.578-1.7-.578a2.3 2.3 0 00-1.53.544c-.419.363-.697.85-.833 1.462zm13.445.238v4.93h-1.564V18.678h4.148c1.054 0 1.949.352 2.686 1.054.748.703 1.122 1.559 1.122 2.567 0 1.032-.374 1.893-1.122 2.584-.725.692-1.621 1.037-2.686 1.037h-2.584zm0-5.746v4.25h2.618c.623 0 1.139-.21 1.547-.629.419-.42.629-.918.629-1.496 0-.566-.21-1.06-.629-1.479-.408-.43-.924-.646-1.547-.646h-2.618zm9.407-1.496V30.85h-1.564V18.678h1.564zm2.961 9.622c0 .408.17.748.51 1.02.352.272.76.408 1.224.408.658 0 1.241-.243 1.751-.73.522-.488.782-1.06.782-1.718-.487-.385-1.167-.578-2.04-.578-.634 0-1.167.153-1.598.46-.419.305-.629.685-.629 1.138zm2.023-6.052c1.156 0 2.069.312 2.737.935.669.612 1.003 1.457 1.003 2.533v5.134h-1.496v-1.156h-.068c-.646.952-1.507 1.428-2.584 1.428-.918 0-1.688-.272-2.312-.816a2.616 2.616 0 01-.918-2.04c0-.861.323-1.547.969-2.057.658-.51 1.53-.765 2.618-.765.93 0 1.695.17 2.295.51v-.357c0-.544-.215-1.003-.646-1.377a2.195 2.195 0 00-1.513-.578c-.872 0-1.564.369-2.074 1.105l-1.377-.867c.76-1.088 1.882-1.632 3.366-1.632zm12.784.272l-5.219 12.002h-1.615l1.938-4.199-3.434-7.803h1.7l2.482 5.984h.034l2.414-5.984h1.7z\" fill=\"#fff\" /><path d=\"M52.308 25.257c0 1.7-.504 3.055-1.513 4.063-1.133 1.202-2.624 1.802-4.471 1.802-1.768 0-3.264-.612-4.488-1.836C40.612 28.062 40 26.555 40 24.764c0-1.79.612-3.298 1.836-4.522 1.224-1.224 2.72-1.836 4.488-1.836.895 0 1.74.159 2.533.476.793.318 1.445.765 1.955 1.343l-1.122 1.122c-.374-.453-.861-.804-1.462-1.054a4.653 4.653 0 00-1.904-.39c-1.326 0-2.448.458-3.366 1.376-.907.93-1.36 2.091-1.36 3.485 0 1.394.453 2.556 1.36 3.485.918.918 2.04 1.377 3.366 1.377 1.213 0 2.221-.34 3.026-1.02.805-.68 1.27-1.615 1.394-2.805h-4.42V24.34h5.899c.057.318.085.624.085.918zm1.069 1.428c0-1.28.403-2.34 1.207-3.179.816-.838 1.842-1.258 3.077-1.258 1.236 0 2.256.42 3.06 1.258.816.839 1.224 1.899 1.224 3.18 0 1.291-.408 2.35-1.224 3.178-.804.839-1.824 1.258-3.06 1.258-1.235 0-2.26-.42-3.077-1.258-.804-.838-1.207-1.898-1.207-3.179zm1.564 0c0 .896.26 1.62.782 2.176a2.551 2.551 0 001.938.833c.77 0 1.417-.277 1.938-.833.522-.555.782-1.28.782-2.176 0-.884-.26-1.603-.782-2.159-.532-.566-1.178-.85-1.938-.85s-1.405.284-1.938.85c-.521.556-.782 1.275-.782 2.16zm7.949 0c0-1.28.402-2.34 1.207-3.179.816-.838 1.842-1.258 3.077-1.258 1.235 0 2.255.42 3.06 1.258.816.839 1.224 1.899 1.224 3.18 0 1.291-.408 2.35-1.224 3.178-.805.839-1.825 1.258-3.06 1.258s-2.261-.42-3.077-1.258c-.805-.838-1.207-1.898-1.207-3.179zm1.564 0c0 .896.26 1.62.782 2.176a2.551 2.551 0 001.938.833c.77 0 1.417-.277 1.938-.833.521-.555.782-1.28.782-2.176 0-.884-.26-1.603-.782-2.159-.533-.566-1.179-.85-1.938-.85-.76 0-1.405.284-1.938.85-.521.556-.782 1.275-.782 2.16zm12.165 3.009c.77 0 1.4-.277 1.887-.833.51-.555.765-1.28.765-2.176 0-.872-.255-1.592-.765-2.159a2.406 2.406 0 00-1.887-.85c-.748 0-1.377.284-1.887.85-.51.567-.765 1.287-.765 2.16 0 .883.255 1.603.765 2.158.51.567 1.139.85 1.887.85zm-.051 5.1a4.46 4.46 0 01-1.31-.187 4.172 4.172 0 01-1.121-.493 3.669 3.669 0 01-.85-.765 3.225 3.225 0 01-.544-.986l1.479-.612c.17.488.464.879.884 1.173.419.295.906.442 1.462.442.85 0 1.513-.255 1.989-.765.476-.51.714-1.212.714-2.108v-.799h-.068a3.128 3.128 0 01-1.207 1.054 3.598 3.598 0 01-1.632.374c-1.088 0-2.023-.425-2.805-1.275-.771-.872-1.156-1.926-1.156-3.162 0-1.235.385-2.283 1.156-3.145.782-.861 1.717-1.292 2.805-1.292.589 0 1.133.13 1.632.391a3 3 0 011.207 1.037h.068V22.52h1.496v7.973c0 1.338-.38 2.386-1.14 3.145-.77.77-1.79 1.156-3.06 1.156zm7.67-16.116V30.85h-1.564V18.678h1.564zM89.8 31.122c-1.224 0-2.232-.42-3.026-1.258-.793-.838-1.19-1.898-1.19-3.179 0-1.27.386-2.323 1.156-3.162.771-.85 1.757-1.275 2.958-1.275 1.236 0 2.216.403 2.941 1.207.737.794 1.105 1.91 1.105 3.35l-.017.17h-6.545c.023.815.295 1.473.816 1.971a2.611 2.611 0 001.87.748c.998 0 1.78-.498 2.346-1.496l1.394.68a4.137 4.137 0 01-1.564 1.65c-.657.396-1.405.594-2.244.594zm-2.499-5.44h4.777a2.03 2.03 0 00-.714-1.428c-.419-.385-.986-.578-1.7-.578a2.3 2.3 0 00-1.53.544c-.419.363-.697.85-.833 1.462zm13.445.238v4.93h-1.564V18.678h4.148c1.054 0 1.949.352 2.686 1.054.748.703 1.122 1.559 1.122 2.567 0 1.032-.374 1.893-1.122 2.584-.725.692-1.621 1.037-2.686 1.037h-2.584zm0-5.746v4.25h2.618c.623 0 1.139-.21 1.547-.629.419-.42.629-.918.629-1.496 0-.566-.21-1.06-.629-1.479-.408-.43-.924-.646-1.547-.646h-2.618zm9.407-1.496V30.85h-1.564V18.678h1.564zm2.961 9.622c0 .408.17.748.51 1.02.352.272.76.408 1.224.408.658 0 1.241-.243 1.751-.73.522-.488.782-1.06.782-1.718-.487-.385-1.167-.578-2.04-.578-.634 0-1.167.153-1.598.46-.419.305-.629.685-.629 1.138zm2.023-6.052c1.156 0 2.069.312 2.737.935.669.612 1.003 1.457 1.003 2.533v5.134h-1.496v-1.156h-.068c-.646.952-1.507 1.428-2.584 1.428-.918 0-1.688-.272-2.312-.816a2.616 2.616 0 01-.918-2.04c0-.861.323-1.547.969-2.057.658-.51 1.53-.765 2.618-.765.93 0 1.695.17 2.295.51v-.357c0-.544-.215-1.003-.646-1.377a2.195 2.195 0 00-1.513-.578c-.872 0-1.564.369-2.074 1.105l-1.377-.867c.76-1.088 1.882-1.632 3.366-1.632zm12.784.272l-5.219 12.002h-1.615l1.938-4.199-3.434-7.803h1.7l2.482 5.984h.034l2.414-5.984h1.7z\" stroke=\"#fff\" strokeWidth=\".3\" mask=\"url(#a)\" /><defs><clipPath id=\"prefix__clip0_12405_122255\"><path fill=\"#fff\" transform=\"translate(8 8.406)\" d=\"M0 0h24v24H0z\" /></clipPath></defs></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 137 40\" {...props}><rect width=\"137\" height=\"40\" fill=\"#0E0E0E\" rx=\"4\" /><g clipPath=\"url(#a)\"><path fill=\"#C8102E\" d=\"M28.882 8H16.116a5.617 5.617 0 00-5.617 5.617v12.766A5.617 5.617 0 0016.116 32h12.766a5.617 5.617 0 005.617-5.617V13.617A5.617 5.617 0 0028.882 8z\" /><path fill=\"#fff\" d=\"M24.835 20l-.712 2.247-.693-2.245h-.677l1.093 3.266h.527l.713-2.146.714 2.146h.531l1.09-3.266h-.66l-.694 2.245L25.355 20h-.52zm-3.783 0l-1.383 3.266h.65l.267-.632.019-.048h1.436l.282.68h.667l-1.37-3.246-.012-.02h-.556zm10.01.001v3.263h.628v-3.263h-.628zm-18.01 0v3.268h.636v-1.327h1.438v1.327h.637v-3.267h-.637v1.318h-1.438v-1.318h-.636zm5.657.002v1.87c0 .531-.253.815-.713.815-.462 0-.717-.292-.717-.838v-1.845h-.637v1.868c0 .92.491 1.446 1.346 1.446.863 0 1.358-.537 1.358-1.473v-1.843h-.637zm9.226 0v3.264h2.369v-.595h-1.741v-.81h1.157v-.594h-1.157v-.669h1.68v-.595h-2.308zm-6.614.825l.454 1.094.031.075h-.963l.03-.075.448-1.094z\" /><path fill=\"#fff\" fillRule=\"evenodd\" d=\"M22.38 15.959c-2.346 0-4.267-1.84-4.267-4.13h.6c0 1.94 1.632 3.53 3.667 3.53s3.666-1.59 3.666-3.53h.6c0 2.29-1.92 4.13-4.266 4.13z\" clipRule=\"evenodd\" /></g><path fill=\"#fff\" d=\"M45.84 11.92V10.9h-2.11V9.397h1.963V8.384h-1.964v-1.28h2.11V6.092H42.5v5.828h3.34zm1.796 0l1.348-2.204 1.349 2.204h1.404l-1.96-2.938 1.82-2.89h-1.324l-1.225 2.097-1.25-2.097h-1.356l1.8 2.822-1.923 3.006h1.317zm6.06 0V9.847h.527c.72 0 1.274-.166 1.664-.498.39-.332.585-.812.585-1.44 0-.603-.183-1.057-.55-1.36-.366-.305-.9-.457-1.604-.457h-1.852v5.828h1.23zm.404-3.085h-.404v-1.73h.559c.336 0 .582.068.74.207.157.138.235.352.235.641 0 .288-.093.506-.281.656-.188.15-.47.226-.849.226zm7.047 3.085V10.9h-2.351V6.092h-1.23v5.828h3.581zm3.51.08c.889 0 1.57-.26 2.047-.777.476-.519.714-1.26.714-2.225 0-.967-.236-1.709-.708-2.225C66.238 6.258 65.556 6 64.665 6c-.89 0-1.575.256-2.052.767-.477.512-.716 1.253-.716 2.223s.238 1.714.714 2.233c.476.518 1.158.777 2.046.777zm0-1.037c-.489 0-.856-.164-1.102-.494-.246-.33-.37-.82-.37-1.471 0-.651.125-1.142.374-1.473.248-.331.617-.496 1.106-.496.976 0 1.464.656 1.464 1.969 0 1.31-.49 1.966-1.472 1.966zm5.192.957V9.684h.654l1.384 2.236h1.364c-.264-.383-.833-1.229-1.705-2.54.344-.15.61-.36.797-.627a1.55 1.55 0 00.282-.915c0-.588-.19-1.025-.567-1.314-.379-.288-.962-.432-1.75-.432H68.62v5.828h1.23zm.396-3.24h-.396V7.103h.372c.397 0 .69.059.879.176.189.117.283.313.283.59 0 .279-.092.483-.277.614-.185.13-.472.195-.86.195zm7.075 3.24V10.9h-2.11V9.397h1.964V8.384H75.21v-1.28h2.11V6.092h-3.339v5.828h3.34zm4.55 0V6.092h-1.23v5.828h1.23zm3.695 0v-4.8h1.575V6.092h-4.38V7.12h1.575v4.8h1.23zm7.08.08c.888 0 1.57-.26 2.046-.777.476-.519.714-1.26.714-2.225 0-.967-.236-1.709-.708-2.225C94.225 6.258 93.543 6 92.652 6c-.89 0-1.575.256-2.052.767-.477.512-.716 1.253-.716 2.223s.238 1.714.714 2.233c.476.518 1.158.777 2.046.777zm0-1.037c-.49 0-.857-.164-1.103-.494-.246-.33-.369-.82-.369-1.471 0-.651.124-1.142.373-1.473.248-.331.617-.496 1.106-.496.976 0 1.464.656 1.464 1.969 0 1.31-.49 1.966-1.472 1.966zm5.06.957V9.177c0-.332-.025-.887-.076-1.666h.036l2.522 4.41h1.563V6.09h-1.106v2.806c.001.319.021.839.059 1.56h-.028l-2.518-4.365h-1.55v5.828h1.098zM44.81 30.401l1.032-2.929h4.367l1.048 2.929h2.452l-4.525-11.563H46.93L42.5 30.4h2.31zm4.76-4.716h-3.097l1.087-3.065c.174-.51.324-1 .45-1.468.152.564.307 1.056.465 1.476l1.095 3.057zM54.622 34l2.27-.168v-3.519a5.381 5.381 0 001.584.264c.804 0 1.519-.184 2.144-.551.626-.367 1.116-.913 1.47-1.636.355-.724.532-1.599.532-2.625 0-.953-.148-1.74-.445-2.363-.297-.622-.686-1.078-1.166-1.368a3.004 3.004 0 00-1.58-.435 2.93 2.93 0 00-1.42.347 4.035 4.035 0 00-1.143.938 6.76 6.76 0 00-.15-1.117h-2.16c.043.766.064 1.476.064 2.13V34zm3.563-5.107a3.33 3.33 0 01-.698-.076 2.62 2.62 0 01-.595-.196v-4.3a3.97 3.97 0 01.855-.675c.287-.162.598-.244.934-.244.494 0 .89.197 1.187.591.296.394.445 1.032.445 1.915 0 .98-.185 1.721-.556 2.227-.37.505-.894.758-1.572.758zM64.175 34l2.27-.168v-3.519a5.38 5.38 0 001.584.264c.804 0 1.518-.184 2.144-.551.625-.367 1.115-.913 1.47-1.636.354-.724.532-1.599.532-2.625 0-.953-.149-1.74-.446-2.363-.296-.622-.685-1.078-1.166-1.368a3.004 3.004 0 00-1.58-.435c-.52 0-.994.116-1.42.347a4.034 4.034 0 00-1.142.938 6.76 6.76 0 00-.15-1.117h-2.16c.042.766.063 1.476.063 2.13V34zm3.562-5.107c-.231 0-.464-.026-.698-.076a2.62 2.62 0 01-.595-.196v-4.3c.284-.288.57-.513.855-.675a1.87 1.87 0 01.935-.244c.494 0 .889.197 1.186.591.297.394.445 1.032.445 1.915 0 .98-.185 1.721-.555 2.227-.371.505-.895.758-1.573.758zm11.176 1.668c.725 0 1.452-.083 2.18-.248a10.317 10.317 0 002.084-.71v-5.02H78.48v1.724h2.507v2.13a5.896 5.896 0 01-1.97.328c-.789 0-1.438-.175-1.947-.527a3.058 3.058 0 01-1.124-1.44c-.239-.61-.358-1.307-.358-2.095 0-.899.155-1.664.465-2.294.31-.63.747-1.108 1.312-1.432.565-.325 1.228-.487 1.99-.487.941 0 1.918.245 2.933.734l.52-1.74a8.248 8.248 0 00-3.57-.798c-1.125 0-2.14.225-3.047.675a5.1 5.1 0 00-2.16 2.03c-.533.905-.8 2.014-.8 3.328 0 1.208.232 2.25.697 3.128a4.8 4.8 0 001.979 2.015c.854.466 1.856.699 3.007.699zm8.346 0c.589 0 1.114-.123 1.577-.367a3.76 3.76 0 001.135-.894c.016.388.063.755.142 1.101h2.144a30.734 30.734 0 01-.063-1.62v-3.455c0-1.362-.32-2.324-.962-2.885-.641-.561-1.55-.842-2.727-.842-.652 0-1.27.065-1.856.195-.587.13-1.06.279-1.423.443l.33 1.644c.369-.17.793-.316 1.274-.439.48-.122.928-.183 1.344-.183.567 0 1.003.14 1.308.423.305.282.457.76.457 1.436v.144a10.46 10.46 0 00-1.482-.104c-2.595 0-3.893.915-3.893 2.745 0 .58.122 1.07.366 1.469s.57.697.977.893c.408.197.858.296 1.352.296zm.718-1.676c-.347 0-.62-.092-.82-.276-.2-.183-.3-.464-.3-.841 0-.394.137-.708.41-.942.273-.234.767-.351 1.482-.351.31 0 .707.026 1.19.08v1.428a2.9 2.9 0 01-.906.646c-.363.17-.715.256-1.056.256zm8.346 1.676c.284 0 .582-.027.895-.08.312-.053.574-.125.784-.216l-.26-1.612a1.82 1.82 0 01-.56.104c-.247 0-.435-.07-.564-.211-.128-.141-.193-.385-.193-.73V18l-2.262.16v10.07c0 .804.183 1.393.548 1.768.365.375.903.563 1.612.563zm4.87 0c.284 0 .582-.027.895-.08.312-.053.574-.125.784-.216l-.26-1.612a1.82 1.82 0 01-.56.104c-.247 0-.435-.07-.563-.211-.129-.141-.193-.385-.193-.73V18l-2.263.16v10.07c0 .804.183 1.393.548 1.768.365.375.903.563 1.612.563zm6.502 0c1.224 0 2.336-.24 3.334-.719l-.489-1.548a7.398 7.398 0 01-1.225.391 5.583 5.583 0 01-1.234.144c-.709 0-1.268-.186-1.675-.559-.407-.372-.645-.973-.713-1.803h5.502v-.51c0-.804-.136-1.536-.406-2.195a3.495 3.495 0 00-1.246-1.576c-.559-.392-1.257-.587-2.092-.587-.799 0-1.505.182-2.117.547-.612.364-1.089.893-1.43 1.588-.342.694-.513 1.52-.513 2.477 0 1.384.364 2.454 1.092 3.212.728.759 1.798 1.138 3.212 1.138zm1.308-5.49h-3.271c.095-.623.289-1.089.584-1.397.294-.309.667-.463 1.119-.463.462 0 .831.156 1.107.467.276.311.43.775.461 1.392zm5.998 5.33v-5.41c.373-.506.726-.866 1.06-1.082a2.11 2.11 0 011.17-.323c.226 0 .437.027.631.08l.284-1.963a2.694 2.694 0 00-.773-.104c-.373 0-.702.081-.989.243a2.74 2.74 0 00-.753.63 7.324 7.324 0 00-.662.962 22.74 22.74 0 00-.059-.814c-.029-.335-.059-.62-.09-.853h-2.144a53.8 53.8 0 01.063 2.154v6.48h2.262zM119.398 34c.688 0 1.281-.124 1.778-.371.496-.247.926-.63 1.288-1.15.363-.518.691-1.203.986-2.054l3.05-8.658h-2.254l-1.482 4.668a24.61 24.61 0 00-.481 1.843c-.074-.484-.221-1.104-.441-1.859l-1.435-4.652h-2.444l3.114 8.762-.102.255c-.184.479-.433.845-.745 1.097a1.71 1.71 0 01-1.108.38c-.178 0-.374-.02-.587-.056a4.958 4.958 0 01-.485-.104l-.402 1.644c.184.064.432.122.745.175a6 6 0 001.005.08z\" /><defs><clipPath id=\"a\"><path fill=\"#fff\" d=\"M10.5 8h24v24h-24z\" /></clipPath></defs></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 135 40\" {...props}><rect width=\"135\" height=\"40\" fill=\"#0E0E0E\" rx=\"4\" /><path fill=\"#fff\" d=\"M24.156 14.916c.942 0 2.734-1.301 4.582-1.107a5.574 5.574 0 014.393 2.378 5.456 5.456 0 00-2.594 4.576 5.27 5.27 0 003.213 4.849 12.09 12.09 0 01-1.671 3.408l-.068.1-.135.2c-.925 1.364-1.925 2.617-3.452 2.642-1.592.037-2.127-.938-3.953-.938-1.842 0-2.413.911-3.94.974-1.56.058-2.752-1.573-3.772-3.034-2.039-2.983-3.627-8.407-1.498-12.097a5.85 5.85 0 014.923-3.007c1.562-.032 3.012 1.056 3.972 1.056zM28.757 8a5.375 5.375 0 01-1.227 3.847 4.51 4.51 0 01-3.562 1.687 5.114 5.114 0 011.259-3.705A5.454 5.454 0 0128.757 8zm16.8 5.28V8.294h1.44c.396 0 .729.057.999.171.27.108.489.27.657.486.174.21.297.468.369.774.078.3.117.642.117 1.026 0 .396-.042.735-.126 1.017a2.39 2.39 0 01-.306.693c-.126.186-.27.333-.432.441a2.151 2.151 0 01-.477.252c-.162.054-.315.09-.459.108a4.473 4.473 0 01-.36.018h-1.422zm-.855-5.706V14h2.205c.534 0 .996-.075 1.386-.225.39-.15.711-.366.963-.648.252-.288.438-.639.558-1.053.12-.42.18-.9.18-1.44 0-1.032-.267-1.8-.801-2.304-.534-.504-1.296-.756-2.286-.756h-2.205zm7.039 4.104c0-.282.036-.531.108-.747.078-.222.183-.408.315-.558a1.334 1.334 0 011.026-.459c.198 0 .384.039.558.117.18.078.336.192.468.342.132.15.234.336.306.558.078.216.117.465.117.747s-.04.534-.117.756a1.572 1.572 0 01-.306.549 1.363 1.363 0 01-.468.333 1.411 1.411 0 01-1.125 0 1.387 1.387 0 01-.46-.333 1.689 1.689 0 01-.314-.549 2.447 2.447 0 01-.108-.756zm-.81 0c0 .342.048.66.144.954.096.294.24.552.432.774.192.216.429.387.71.513.283.12.607.18.973.18.372 0 .696-.06.972-.18.282-.126.519-.297.71-.513a2.21 2.21 0 00.433-.774c.096-.294.144-.612.144-.954 0-.342-.048-.66-.144-.954-.096-.3-.24-.558-.432-.774a2.01 2.01 0 00-.711-.522 2.322 2.322 0 00-.972-.189c-.366 0-.69.063-.972.189a2.01 2.01 0 00-.711.522 2.121 2.121 0 00-.432.774 3.057 3.057 0 00-.144.954zM61.229 14l1.485-4.653h-.792l-1.044 3.807h-.018l-.972-3.807h-.837l-.936 3.807h-.018l-1.053-3.807h-.846L57.692 14h.828l.936-3.699h.018L60.419 14h.81zm2.482-4.653V14h.765v-2.628c0-.21.027-.402.081-.576.06-.18.147-.336.261-.468.114-.132.255-.234.423-.306.174-.072.378-.108.612-.108.294 0 .525.084.693.252.168.168.252.396.252.684V14h.765v-3.06c0-.252-.027-.48-.08-.684a1.262 1.262 0 00-.262-.54 1.258 1.258 0 00-.495-.351 2.02 2.02 0 00-.765-.126c-.69 0-1.194.282-1.512.846h-.018v-.738h-.72zm5.316-1.773V14h.765V7.574h-.765zm2.778 4.104c0-.282.036-.531.108-.747.078-.222.183-.408.315-.558a1.334 1.334 0 011.026-.459c.198 0 .384.039.558.117.18.078.336.192.468.342.132.15.234.336.306.558.078.216.117.465.117.747s-.039.534-.117.756a1.572 1.572 0 01-.306.549 1.363 1.363 0 01-.468.333 1.411 1.411 0 01-1.125 0 1.387 1.387 0 01-.459-.333 1.689 1.689 0 01-.315-.549 2.447 2.447 0 01-.108-.756zm-.81 0c0 .342.048.66.144.954.096.294.24.552.432.774.192.216.43.387.711.513.282.12.606.18.972.18.372 0 .696-.06.972-.18.282-.126.52-.297.711-.513.192-.222.336-.48.432-.774.096-.294.144-.612.144-.954 0-.342-.048-.66-.144-.954-.096-.3-.24-.558-.432-.774a2.01 2.01 0 00-.71-.522 2.322 2.322 0 00-.973-.189c-.366 0-.69.063-.972.189a2.01 2.01 0 00-.71.522 2.121 2.121 0 00-.433.774 3.057 3.057 0 00-.144.954zm9.812 2.304c-.132.078-.315.117-.549.117a.686.686 0 01-.477-.162c-.114-.114-.17-.297-.17-.549-.21.252-.457.435-.739.549a2.448 2.448 0 01-.9.162c-.21 0-.41-.024-.603-.072a1.394 1.394 0 01-.486-.225 1.13 1.13 0 01-.333-.396 1.422 1.422 0 01-.117-.603c0-.264.045-.48.135-.648.09-.168.207-.303.351-.405.15-.108.318-.189.504-.243.192-.054.387-.099.585-.135.21-.042.408-.072.594-.09a4.3 4.3 0 00.504-.09.913.913 0 00.342-.171c.084-.078.126-.189.126-.333a.736.736 0 00-.099-.405.607.607 0 00-.243-.234.946.946 0 00-.333-.108 2.424 2.424 0 00-.36-.027c-.324 0-.594.063-.81.189-.216.12-.333.351-.35.693h-.766c.012-.288.072-.531.18-.729.108-.198.252-.357.432-.477.18-.126.384-.216.612-.27.234-.054.483-.081.747-.081.21 0 .417.015.621.045.21.03.4.093.567.189.168.09.303.219.405.387.102.168.153.387.153.657v2.394c0 .18.01.312.027.396.024.084.096.126.216.126a.758.758 0 00.234-.045v.594zm-1.242-2.385a1 1 0 01-.378.162c-.156.03-.32.057-.495.081a8.096 8.096 0 00-.513.072 1.78 1.78 0 00-.468.126.87.87 0 00-.342.261c-.084.108-.126.258-.126.45a.68.68 0 00.072.324c.054.084.12.153.198.207.084.054.18.093.288.117.108.024.222.036.342.036.252 0 .468-.033.648-.099.18-.072.327-.159.441-.261.114-.108.198-.222.252-.342a.896.896 0 00.081-.351v-.783zm2.782.117c0-.228.024-.45.072-.666.048-.216.126-.408.234-.576.108-.168.252-.303.432-.405.18-.102.4-.153.657-.153.264 0 .49.051.675.153.186.096.336.225.45.387.12.162.207.351.261.567a2.628 2.628 0 010 1.296c-.048.21-.129.399-.243.567a1.336 1.336 0 01-.44.396c-.18.102-.4.153-.658.153-.246 0-.462-.048-.648-.144a1.334 1.334 0 01-.45-.387 1.856 1.856 0 01-.26-.549 2.556 2.556 0 01-.082-.639zm3.6 2.286V7.574h-.765v2.394h-.018a1.148 1.148 0 00-.315-.342 1.481 1.481 0 00-.387-.225 1.818 1.818 0 00-.414-.126 2.266 2.266 0 00-.387-.036c-.354 0-.666.066-.936.198-.264.126-.486.3-.666.522a2.258 2.258 0 00-.396.765 3.392 3.392 0 00-.126.936c0 .33.045.642.135.936.09.294.222.552.396.774.18.222.402.399.666.531.27.132.585.198.945.198.324 0 .621-.057.891-.171.27-.114.468-.3.594-.558h.018V14h.765zm4.78-2.322c0-.282.036-.531.108-.747.078-.222.183-.408.315-.558a1.334 1.334 0 011.026-.459c.198 0 .384.039.558.117.18.078.336.192.468.342.132.15.234.336.306.558.078.216.117.465.117.747s-.039.534-.117.756a1.572 1.572 0 01-.306.549 1.363 1.363 0 01-.468.333 1.411 1.411 0 01-1.125 0 1.387 1.387 0 01-.459-.333 1.689 1.689 0 01-.315-.549 2.447 2.447 0 01-.108-.756zm-.81 0c0 .342.048.66.144.954.096.294.24.552.432.774.192.216.43.387.711.513.282.12.606.18.972.18.372 0 .696-.06.972-.18.282-.126.52-.297.711-.513.192-.222.336-.48.432-.774.096-.294.144-.612.144-.954 0-.342-.048-.66-.144-.954-.096-.3-.24-.558-.432-.774a2.01 2.01 0 00-.71-.522 2.322 2.322 0 00-.973-.189c-.366 0-.69.063-.972.189a2.01 2.01 0 00-.71.522 2.121 2.121 0 00-.433.774 3.057 3.057 0 00-.144.954zm5.69-2.331V14h.765v-2.628c0-.21.027-.402.081-.576.06-.18.147-.336.261-.468.114-.132.255-.234.423-.306.174-.072.378-.108.612-.108.294 0 .525.084.693.252.168.168.252.396.252.684V14h.765v-3.06c0-.252-.027-.48-.08-.684a1.262 1.262 0 00-.262-.54 1.258 1.258 0 00-.495-.351 2.02 2.02 0 00-.765-.126c-.69 0-1.194.282-1.512.846h-.018v-.738h-.72zm9.108 0V7.952h-.765v1.395h-.792v.675h.792v2.961c0 .216.021.39.063.522a.651.651 0 00.189.306c.09.072.204.123.342.153.144.024.315.036.513.036h.585v-.675h-.351c-.12 0-.219-.003-.297-.009a.408.408 0 01-.171-.063.245.245 0 01-.09-.126 1.035 1.035 0 01-.018-.216v-2.889h.927v-.675h-.927zm2.047-1.773V14h.765v-2.628c0-.21.027-.402.081-.576.06-.18.147-.336.261-.468.114-.132.255-.234.423-.306.174-.072.378-.108.612-.108.294 0 .525.084.693.252.168.168.252.396.252.684V14h.765v-3.06c0-.252-.027-.48-.081-.684a1.262 1.262 0 00-.261-.54 1.258 1.258 0 00-.495-.351 2.02 2.02 0 00-.765-.126c-.138 0-.282.015-.432.045-.144.03-.285.078-.423.144-.132.06-.252.141-.36.243a.975.975 0 00-.252.36h-.018V7.574h-.765zm8.502 3.654h-2.673c.012-.18.051-.348.117-.504.066-.162.156-.303.27-.423.114-.12.249-.213.405-.279.162-.072.342-.108.54-.108.192 0 .366.036.522.108.162.066.3.159.414.279.12.114.213.252.279.414.072.162.114.333.126.513zm.738 1.296h-.756c-.066.306-.204.534-.414.684-.204.15-.468.225-.792.225-.252 0-.471-.042-.657-.126a1.314 1.314 0 01-.459-.333 1.363 1.363 0 01-.261-.486 1.887 1.887 0 01-.072-.585h3.483a3.57 3.57 0 00-.081-.891 2.46 2.46 0 00-.342-.864 1.94 1.94 0 00-.657-.648c-.27-.174-.612-.261-1.026-.261-.318 0-.612.06-.882.18-.264.12-.495.288-.693.504a2.365 2.365 0 00-.45.765 2.8 2.8 0 00-.162.972c.012.354.063.681.153.981.096.3.237.558.423.774.186.216.414.384.684.504.276.12.6.18.972.18.528 0 .966-.132 1.314-.396.348-.264.573-.657.675-1.179zm-67.463 6.338H50.8L55.475 31h-2.278l-1.139-3.213h-4.845L46.074 31h-2.193l4.658-12.138zm-.748 7.31h3.706l-1.819-5.219h-.051l-1.836 5.219zm8.619-3.961h1.836v1.19h.034c.272-.51.651-.873 1.139-1.088a3.702 3.702 0 011.58-.34c.692 0 1.293.125 1.803.374.521.238.952.572 1.292 1.003.34.42.595.912.765 1.479a6.3 6.3 0 01.255 1.819c0 .59-.08 1.162-.238 1.717a4.346 4.346 0 01-.697 1.479 3.51 3.51 0 01-1.173 1.02c-.476.25-1.037.374-1.683.374-.284 0-.567-.028-.85-.085a3.374 3.374 0 01-.816-.238 3.615 3.615 0 01-.731-.425 2.619 2.619 0 01-.544-.629h-.034v4.386H56.41V22.211zm6.766 4.403c0-.397-.051-.782-.153-1.156a3.038 3.038 0 00-.46-.986 2.25 2.25 0 00-.764-.697 2.028 2.028 0 00-1.054-.272c-.816 0-1.434.283-1.853.85-.408.567-.612 1.32-.612 2.261 0 .442.05.856.153 1.241.113.374.278.697.493.969.215.272.47.487.765.646.306.159.657.238 1.054.238.442 0 .816-.09 1.122-.272.306-.181.555-.414.748-.697.204-.295.346-.623.425-.986.09-.374.136-.754.136-1.139zm3.626-4.403h1.836v1.19h.034c.272-.51.652-.873 1.14-1.088a3.702 3.702 0 011.58-.34c.692 0 1.292.125 1.802.374.522.238.952.572 1.292 1.003.34.42.595.912.765 1.479a6.3 6.3 0 01.255 1.819c0 .59-.079 1.162-.238 1.717a4.342 4.342 0 01-.697 1.479 3.51 3.51 0 01-1.173 1.02c-.476.25-1.037.374-1.683.374-.283 0-.566-.028-.85-.085a3.377 3.377 0 01-.816-.238 3.62 3.62 0 01-.73-.425 2.623 2.623 0 01-.545-.629h-.034v4.386h-1.938V22.211zm6.766 4.403c0-.397-.05-.782-.153-1.156a3.038 3.038 0 00-.459-.986 2.25 2.25 0 00-.765-.697 2.028 2.028 0 00-1.054-.272c-.816 0-1.433.283-1.853.85-.408.567-.612 1.32-.612 2.261 0 .442.051.856.153 1.241.114.374.278.697.493.969.216.272.47.487.765.646.306.159.658.238 1.054.238.442 0 .816-.09 1.122-.272.306-.181.556-.414.748-.697.204-.295.346-.623.425-.986.091-.374.136-.754.136-1.139zm9.974.34c0 .465.079.861.237 1.19.16.329.38.6.663.816.284.204.607.357.97.459.373.09.776.136 1.206.136.465 0 .862-.051 1.19-.153.33-.113.595-.255.8-.425.203-.17.35-.363.441-.578a1.82 1.82 0 00.136-.68c0-.465-.107-.805-.323-1.02a1.695 1.695 0 00-.68-.476c-.43-.159-.934-.306-1.513-.442-.566-.147-1.269-.334-2.108-.561-.52-.136-.957-.312-1.309-.527a3.276 3.276 0 01-.816-.748 2.732 2.732 0 01-.442-.867 3.708 3.708 0 01-.118-.935c0-.612.124-1.139.373-1.581a3.476 3.476 0 011.02-1.122c.42-.295.896-.51 1.428-.646a6.033 6.033 0 011.615-.221c.635 0 1.23.085 1.785.255.567.159 1.06.402 1.48.731.43.329.77.737 1.02 1.224.249.476.374 1.031.374 1.666h-2.126c-.056-.782-.323-1.332-.799-1.649-.476-.329-1.082-.493-1.819-.493-.249 0-.504.028-.764.085-.261.045-.5.13-.714.255a1.561 1.561 0 00-.544.476c-.136.204-.204.459-.204.765 0 .43.13.77.39 1.02.272.238.624.42 1.054.544.046.011.222.062.528.153a79.386 79.386 0 012.175.578c.374.09.64.159.8.204.396.125.742.295 1.037.51.294.215.538.465.73.748a2.7 2.7 0 01.442.884c.103.317.154.635.154.952 0 .68-.142 1.264-.426 1.751a3.48 3.48 0 01-1.088 1.173 4.635 4.635 0 01-1.546.663 7.132 7.132 0 01-1.769.221 7.275 7.275 0 01-1.954-.255 4.576 4.576 0 01-1.599-.782 3.845 3.845 0 01-1.088-1.343c-.271-.555-.413-1.207-.424-1.955h2.124zm8.473-4.743h1.462v-2.635h1.938v2.635h1.75v1.445h-1.75v4.692c0 .204.006.38.017.527.023.147.062.272.119.374a.67.67 0 00.289.238c.125.045.295.068.51.068h.408c.136-.011.272-.034.408-.068v1.496l-.63.068a5.686 5.686 0 01-.628.034c-.51 0-.924-.045-1.241-.136a1.834 1.834 0 01-.731-.425 1.635 1.635 0 01-.357-.714 5.91 5.91 0 01-.102-.969v-5.185h-1.462v-1.445zm10.574 9.027c-.703 0-1.332-.113-1.887-.34a4.217 4.217 0 01-1.394-.969 4.28 4.28 0 01-.867-1.462 5.78 5.78 0 01-.289-1.87c0-.669.096-1.286.289-1.853a4.28 4.28 0 01.867-1.462c.385-.408.85-.725 1.394-.952.555-.238 1.184-.357 1.887-.357.703 0 1.326.119 1.87.357.555.227 1.02.544 1.394.952.385.408.674.895.867 1.462.204.567.306 1.184.306 1.853 0 .68-.102 1.303-.306 1.87a3.999 3.999 0 01-2.261 2.431c-.544.227-1.167.34-1.87.34zm0-1.53c.431 0 .805-.09 1.122-.272.317-.181.578-.42.782-.714.204-.295.351-.623.442-.986a4.248 4.248 0 000-2.261 2.8 2.8 0 00-.442-.986 2.367 2.367 0 00-.782-.714c-.317-.181-.691-.272-1.122-.272-.431 0-.805.09-1.122.272-.317.181-.578.42-.782.714a3.038 3.038 0 00-.459.986 4.73 4.73 0 000 2.261c.102.363.255.691.459.986.204.295.465.533.782.714.317.181.691.272 1.122.272zm6.048-7.497h1.819v1.7h.034a2.06 2.06 0 01.323-.697c.17-.227.369-.43.595-.612a3.02 3.02 0 01.782-.459c.284-.113.573-.17.867-.17a3.954 3.954 0 01.731.051v1.87a4.792 4.792 0 00-.425-.051 2.474 2.474 0 00-.408-.034c-.328 0-.64.068-.935.204a2.031 2.031 0 00-.748.578c-.215.25-.385.561-.51.935a4.103 4.103 0 00-.187 1.292V31h-1.938v-8.789zm11.713 3.621a2.974 2.974 0 00-.204-.884 2.067 2.067 0 00-.442-.731 1.918 1.918 0 00-.68-.51 1.882 1.882 0 00-.884-.204c-.34 0-.652.062-.935.187a2.07 2.07 0 00-.714.493 2.547 2.547 0 00-.476.731c-.113.283-.176.59-.187.918h4.522zm-4.522 1.275c0 .34.045.669.136.986.102.317.249.595.442.833s.436.43.731.578c.295.136.646.204 1.054.204.567 0 1.02-.119 1.36-.357.351-.25.612-.618.782-1.105h1.836a3.66 3.66 0 01-.527 1.275c-.249.374-.55.691-.901.952-.351.25-.748.436-1.19.561a4.491 4.491 0 01-1.36.204c-.691 0-1.303-.113-1.836-.34a3.877 3.877 0 01-1.36-.952 4.211 4.211 0 01-.833-1.462 6.12 6.12 0 01-.272-1.87c0-.623.096-1.213.289-1.768.204-.567.487-1.06.85-1.479.374-.43.822-.77 1.343-1.02s1.111-.374 1.768-.374c.691 0 1.309.147 1.853.442a3.98 3.98 0 011.377 1.139c.363.476.623 1.026.782 1.649.17.612.215 1.247.136 1.904h-6.46z\" /></svg>;","import React from 'react';\nimport { Text } from '@deriv-com/ui';\nimport './InformationBanner.scss';\n\ntype TInformationBanner = {\n    description: React.ReactNode;\n    informationIcon: React.ReactNode;\n    link: string;\n    redirectIcon: React.ReactNode;\n    title: React.ReactNode;\n};\n\nconst InformationBanner = ({ description, informationIcon, link, redirectIcon, title }: TInformationBanner) => {\n    const handleClick = () => {\n        window.open(link, '_blank');\n    };\n    return (\n        <div className='wallets-information-banner' onClick={handleClick}>\n            <div className='wallets-information-banner__content'>\n                {informationIcon}\n                <div className='wallets-information-banner__content-text'>\n                    <Text className='wallets-information-banner__title' size='sm'>\n                        {title}\n                    </Text>\n                    <Text className='wallets-information-banner__description' size='xs'>\n                        {description}\n                    </Text>\n                </div>\n            </div>\n            {redirectIcon}\n        </div>\n    );\n};\n\nexport default InformationBanner;\n","import React from 'react';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport './WalletBadge.scss';\n\ntype TWalletBadgeProps = {\n    children: React.ReactNode;\n};\n\nconst WalletBadge = ({ children }: TWalletBadgeProps) => {\n    const { isMobile } = useDevice();\n    return (\n        <div className='wallets-badge'>\n            <Text color='black' size={isMobile ? 'sm' : 'xs'}>\n                {children}\n            </Text>\n        </div>\n    );\n};\n\nexport default WalletBadge;\n","import React, { FC } from 'react';\nimport { useCtraderServiceToken } from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Divider, Text } from '@deriv-com/ui';\nimport { getPlatformFromUrl } from '../../../../../helpers/urls';\nimport { THooks, TPlatforms } from '../../../../../types';\nimport { CFD_PLATFORMS, getAppToContentMapper, PlatformDetails } from '../../../constants';\nimport { ctraderLinks, dxtradeLinks } from './urlConfig';\nimport './MT5TradeLink.scss';\n\ntype TMT5TradeLinkProps = {\n    app?: keyof ReturnType<typeof getAppToContentMapper>;\n    isDemo?: THooks.ActiveWalletAccount['is_virtual'];\n    mt5TradeAccount?: THooks.MT5AccountsList;\n    platform?: TPlatforms.All;\n};\n\nconst MT5TradeLink: FC<TMT5TradeLinkProps> = ({ app = 'linux', isDemo = false, mt5TradeAccount, platform }) => {\n    const { mutateAsync: requestToken } = useCtraderServiceToken();\n    const { localize } = useTranslations();\n    const { icon, link, text, title } = getAppToContentMapper(localize, mt5TradeAccount)[app];\n\n    const getCtraderToken = () => {\n        const cTraderTokenResponse = requestToken({\n            payload: { server: isDemo ? 'demo' : 'real', service: CFD_PLATFORMS.CTRADER },\n        });\n        return cTraderTokenResponse;\n    };\n\n    const onClickWebTerminal = async () => {\n        const { isStaging, isTestLink } = getPlatformFromUrl();\n        let url, ctraderToken, ctraderURL;\n        switch (platform) {\n            case CFD_PLATFORMS.DXTRADE:\n                url = isDemo ? dxtradeLinks.demo : dxtradeLinks.live;\n                break;\n            case CFD_PLATFORMS.CTRADER:\n                ctraderURL = isTestLink || isStaging ? ctraderLinks.staging : ctraderLinks.live;\n                try {\n                    const { service_token: serviceToken } = await getCtraderToken();\n                    ctraderToken = serviceToken?.ctrader?.token;\n                } catch (error) {\n                    /* eslint-disable no-console */\n                    console.error('Failed to fetch cTrader token:', error);\n                }\n                url = ctraderToken ? `${ctraderURL}/?token=${ctraderToken}` : ctraderURL;\n                break;\n            default:\n                url = '';\n        }\n\n        window.open(url);\n    };\n\n    return (\n        <React.Fragment>\n            <Divider color='var(--border-divider)' height={2} />\n            <div className='wallets-mt5-trade-link'>\n                <div className='wallets-mt5-trade-link--left'>\n                    {(platform === CFD_PLATFORMS.MT5 || app === CFD_PLATFORMS.CTRADER) && (\n                        <React.Fragment>\n                            {icon}\n                            <Text size='sm'>{title}</Text>\n                        </React.Fragment>\n                    )}\n                    {platform !== CFD_PLATFORMS.MT5 && app !== CFD_PLATFORMS.CTRADER && (\n                        <Text size='sm'>\n                            <Localize\n                                i18n_default_text='Run {{platformTitle}} on your browser'\n                                values={{\n                                    platformTitle:\n                                        PlatformDetails[\n                                            (platform as keyof typeof PlatformDetails) ?? CFD_PLATFORMS.DXTRADE\n                                        ].title,\n                                }}\n                            />\n                        </Text>\n                    )}\n                </div>\n                {(platform === CFD_PLATFORMS.MT5 || app === CFD_PLATFORMS.CTRADER) && (\n                    <Button\n                        borderWidth='sm'\n                        color='black'\n                        onClick={() => window.open(link, '_blank', 'noopener,noreferrer')}\n                        size='sm'\n                        variant='outlined'\n                    >\n                        {text}\n                    </Button>\n                )}\n                {platform !== CFD_PLATFORMS.MT5 && app !== CFD_PLATFORMS.CTRADER && (\n                    <Button borderWidth='sm' color='black' onClick={onClickWebTerminal} size='sm' variant='outlined'>\n                        <Text color='black' size='xs' weight='bold'>\n                            <Localize i18n_default_text='Web terminal' />\n                        </Text>\n                    </Button>\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default MT5TradeLink;\n","import React, { Fragment } from 'react';\nimport { THooks } from '../../../../../types';\nimport { CFD_PLATFORMS, getAppToContentMapper } from '../../../constants';\nimport MT5TradeLink from './MT5TradeLink';\nimport './MT5TradeLink.scss';\n\ntype TMT5DesktopRedirectOptionProps = {\n    mt5TradeAccount: THooks.MT5AccountsList;\n};\n\nconst MT5DesktopRedirectOption: React.FC<TMT5DesktopRedirectOptionProps> = ({ mt5TradeAccount }) => {\n    const apps: (keyof ReturnType<typeof getAppToContentMapper>)[] = ['web', 'windows', 'macos', 'linux'];\n    return (\n        <Fragment>\n            {apps.map(app => (\n                <MT5TradeLink app={app} key={app} mt5TradeAccount={mt5TradeAccount} platform={CFD_PLATFORMS.MT5} />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default MT5DesktopRedirectOption;\n","import React, { FC } from 'react';\nimport {\n    LabelPairedChevronLeftLgFillIcon,\n    LabelPairedChevronRightLgFillIcon,\n    LegacyMonitorIcon,\n    StandaloneMobileNotchRegularIcon,\n} from '@deriv/quill-icons';\nimport { Localize } from '@deriv-com/translations';\nimport { Text } from '@deriv-com/ui';\nimport useIsRtl from '../../../../../hooks/useIsRtl';\nimport { THooks } from '../../../../../types';\nimport { getDeeplinkUrl, getMobileAppInstallerUrl, getWebtraderUrl } from './constants';\nimport './MT5MobileRedirectOption.scss';\n\ntype TMT5MobileRedirectOptionProps = {\n    mt5TradeAccount: THooks.MT5AccountsList;\n};\n\nconst MT5MobileRedirectOption: FC<TMT5MobileRedirectOptionProps> = ({ mt5TradeAccount }) => {\n    const isRtl = useIsRtl();\n\n    const mobileURLSet = async () => {\n        window.location.replace(getDeeplinkUrl({ mt5TradeAccount }));\n        const mobileAppURL = await getMobileAppInstallerUrl({ mt5TradeAccount });\n\n        const timeout = setTimeout(() => {\n            mobileAppURL && window.location.replace(mobileAppURL);\n        }, 3000);\n\n        document.addEventListener('visibilitychange', function () {\n            if (document.hidden) {\n                clearTimeout(timeout);\n            }\n\n            // iOS (17+) and certain browsers (edge) may have popups before redirecting\n            if (window.onblur) {\n                clearTimeout(timeout); // installer wont open but will redirect to MetaTrader5\n                if (!document.hidden) {\n                    mobileAppURL && window.location.replace(mobileAppURL); // if it is not redirecting then open installer\n                }\n            }\n        });\n    };\n\n    return (\n        <div className='wallets-mobile-redirect-option'>\n            <a\n                className='wallets-mobile-redirect-option__button'\n                href={getWebtraderUrl({ mt5TradeAccount })}\n                rel='noopener noreferrer'\n                target='_blank'\n            >\n                <LegacyMonitorIcon iconSize='sm' />\n                <div className='wallets-mobile-redirect-option__button__content'>\n                    <Text align='start' size='xs' weight='bold'>\n                        <Localize i18n_default_text='MetaTrader5 web terminal' />\n                    </Text>\n                </div>\n                {isRtl ? <LabelPairedChevronLeftLgFillIcon /> : <LabelPairedChevronRightLgFillIcon />}\n            </a>\n            <button\n                className='wallets-mobile-redirect-option__button wallets-mobile-redirect-option__button--blue'\n                onClick={mobileURLSet}\n            >\n                <StandaloneMobileNotchRegularIcon fill='#FFF' />\n                <div className='wallets-mobile-redirect-option__button__content'>\n                    <Text align='start' color='white' size='xs' weight='bold'>\n                        <Localize i18n_default_text='Trade with MT5 mobile app' />\n                    </Text>\n                </div>\n                {isRtl ? (\n                    <LabelPairedChevronLeftLgFillIcon fill='#FFF' />\n                ) : (\n                    <LabelPairedChevronRightLgFillIcon fill='#FFF' />\n                )}\n            </button>\n            <Text align='start' as='p' size='xs'>\n                <Localize\n                    components={[<strong key={0} />]}\n                    i18n_default_text=\"Note: Don't have the MT5 app? Tap the <0>Trade with MT5 mobile app</0> button to download. Once you have installed the app, return to this screen and hit the same button to log in.\"\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default MT5MobileRedirectOption;\n","import { PlatformDetails } from '../features/cfd/constants';\nimport { TPlatforms } from '../types';\n\nexport const platformPasswordResetRedirectLink = (platform: TPlatforms.All, isVirtual?: boolean) => {\n    switch (platform) {\n        case PlatformDetails.mt5.platform:\n            return isVirtual ? 11 : 10;\n        case PlatformDetails.dxtrade.platform:\n        default:\n            return isVirtual ? 21 : 20;\n    }\n};\n","import { useCallback } from 'react';\nimport { useActiveWalletAccount, useSettings, useVerifyEmail } from '@deriv/api-v2';\nimport { PlatformDetails } from '../features/cfd/constants';\nimport { TPlatforms } from '../types';\nimport { platformPasswordResetRedirectLink } from '../utils/cfd';\n\ntype TSendEmailPayload = {\n    isInvestorPassword?: boolean;\n    platform?: TPlatforms.All;\n};\n\n/**\n * @description This hook is used to send a password reset email to the user. It handles MT5, DXTrade, and Investor password reset.\n * @returns {Object} sendEmail - A function that sends a password reset email to the user.\n */\nconst useSendPasswordResetEmail = () => {\n    const { data } = useSettings();\n    const { mutate: verifyEmail, ...rest } = useVerifyEmail();\n    const { data: activeWallet } = useActiveWalletAccount();\n\n    const sendEmail = useCallback(\n        ({ isInvestorPassword = false, platform }: TSendEmailPayload) => {\n            const mt5ResetType = isInvestorPassword\n                ? 'trading_platform_investor_password_reset'\n                : 'trading_platform_mt5_password_reset';\n            const mt5Platform = PlatformDetails.mt5.platform;\n\n            if (data?.email) {\n                verifyEmail({\n                    type: platform === mt5Platform ? mt5ResetType : 'trading_platform_dxtrade_password_reset',\n                    url_parameters: {\n                        redirect_to: platformPasswordResetRedirectLink(\n                            platform ?? mt5Platform,\n                            activeWallet?.is_virtual\n                        ),\n                    },\n                    verify_email: data?.email,\n                });\n            }\n        },\n        [activeWallet?.is_virtual, data?.email, verifyEmail]\n    );\n\n    return {\n        sendEmail,\n        ...rest,\n    };\n};\n\nexport default useSendPasswordResetEmail;\n","import React, { FC, Fragment, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useCountdown } from 'usehooks-ts';\nimport {\n    DerivLightIcEmailSentIcon,\n    DerivLightIcEmailSentPasskeyIcon,\n    DerivLightIcFirewallEmailPasskeyIcon,\n    DerivLightIcSpamEmailPasskeyIcon,\n    DerivLightIcTypoEmailPasskeyIcon,\n    DerivLightIcWrongEmailPasskeyIcon,\n} from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { ActionScreen, Button, Text, useDevice } from '@deriv-com/ui';\nimport { PlatformDetails } from '../../features/cfd/constants';\nimport useSendPasswordResetEmail from '../../hooks/useSendPasswordResetEmail';\nimport { TPlatforms } from '../../types';\nimport { WalletError } from '../WalletError';\nimport './SentEmailContent.scss';\n\ntype SentEmailContentProps = {\n    description?: string;\n    isChangePassword?: boolean; // NOTE: This prop is ONLY used for rendering different email icons between either Change Password/Forgot password email modal\n    isForgottenPassword?: boolean;\n    isInvestorPassword?: boolean;\n    onErrorButtonClick?: () => void;\n    platform?: TPlatforms.All;\n};\n\n// NOTE: key field is not from BE or requirements, its only used for key prop\nconst emailReasons = [\n    {\n        content: <Localize i18n_default_text='The email is in your spam folder (Sometimes things get lost there).' />,\n        icon: <DerivLightIcSpamEmailPasskeyIcon height='36px' width='36px' />,\n        key: 'EmailInSpamFolder',\n    },\n    {\n        content: (\n            <Localize i18n_default_text='You accidentally gave us another email address (Usually a work or a personal one instead of the one you meant).' />\n        ),\n        icon: <DerivLightIcWrongEmailPasskeyIcon height='36px' width='36px' />,\n        key: 'AnotherEmailAddress',\n    },\n    {\n        content: (\n            <Localize i18n_default_text='The email address you entered had a mistake or typo (happens to the best of us).' />\n        ),\n        icon: <DerivLightIcTypoEmailPasskeyIcon height='36px' width='36px' />,\n        key: 'TypoEmailAddress',\n    },\n    {\n        content: (\n            <Localize i18n_default_text=\"We can't deliver the email to this address (Usually because of firewalls or filtering).\" />\n        ),\n        icon: <DerivLightIcFirewallEmailPasskeyIcon height='36px' width='36px' />,\n        key: 'UnableToDeliverEmailAddress',\n    },\n];\n\nconst RATE_LIMIT_ERROR_CODE = 'RateLimit';\n\nconst SentEmailContent: FC<SentEmailContentProps> = ({\n    description,\n    isChangePassword = false,\n    isForgottenPassword = false,\n    isInvestorPassword = false,\n    onErrorButtonClick,\n    platform,\n}) => {\n    const [shouldShowResendEmailReasons, setShouldShowResendEmailReasons] = useState(false);\n    const [hasCountdownStarted, setHasCountdownStarted] = useState(false);\n    const { error: resetPasswordError, sendEmail } = useSendPasswordResetEmail();\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    const mt5Platform = PlatformDetails.mt5.platform;\n    const { title } = PlatformDetails[platform ?? mt5Platform];\n    const titleSize = 'md';\n    const descriptionSize = 'sm';\n    const emailButtonTextSize = isDesktop ? 'sm' : 'md';\n    const emailReasonsSize = isDesktop ? 'xs' : 'sm';\n    const [count, { resetCountdown, startCountdown }] = useCountdown({\n        countStart: 60,\n        intervalMs: 1000,\n    });\n    const isRateLimitError = resetPasswordError?.error?.code === RATE_LIMIT_ERROR_CODE;\n\n    const EmailSentIcon =\n        isChangePassword || isInvestorPassword ? DerivLightIcEmailSentIcon : DerivLightIcEmailSentPasskeyIcon;\n\n    const resendEmail = () => {\n        sendEmail({ isInvestorPassword, platform });\n        resetCountdown();\n        startCountdown();\n        setHasCountdownStarted(true);\n    };\n\n    useEffect(() => {\n        if (count === 0) setHasCountdownStarted(false);\n    }, [count]);\n\n    if (resetPasswordError && !isRateLimitError) {\n        return (\n            <WalletError\n                errorMessage={resetPasswordError?.error.message}\n                onClick={onErrorButtonClick}\n                title={resetPasswordError?.error?.code}\n            />\n        );\n    }\n\n    return (\n        <div\n            className={classNames('wallets-sent-email-content', {\n                'wallets-sent-email-content--scrollable': isForgottenPassword,\n            })}\n        >\n            <ActionScreen\n                actionButtons={\n                    <Button\n                        color='primary-transparent'\n                        disabled={shouldShowResendEmailReasons}\n                        onClick={() => {\n                            setShouldShowResendEmailReasons(true);\n                        }}\n                        size='lg'\n                        variant='ghost'\n                    >\n                        <Text color='error' size={emailButtonTextSize} weight='bold'>\n                            <Localize i18n_default_text=\"Didn't receive the email?\" />\n                        </Text>\n                    </Button>\n                }\n                description={\n                    description ??\n                    localize('Please click on the link in the email to change your {{title}} password.', { title })\n                }\n                descriptionSize={descriptionSize}\n                icon={<EmailSentIcon width={133} />}\n                title={<Localize i18n_default_text=\"We've sent you an email\" />}\n                titleSize={titleSize}\n            />\n            {shouldShowResendEmailReasons && (\n                <Fragment>\n                    <div className='wallets-sent-email-content__reasons-container'>\n                        {emailReasons.map(emailReason => {\n                            return (\n                                <div className='wallets-sent-email-content__reasons' key={emailReason.key}>\n                                    {emailReason.icon}\n                                    <Text align='start' lineHeight='sm' size={emailReasonsSize}>\n                                        {emailReason.content}\n                                    </Text>\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <Button\n                        color='primary'\n                        disabled={hasCountdownStarted}\n                        onClick={resendEmail}\n                        size='lg'\n                        textSize={emailButtonTextSize}\n                        variant='contained'\n                    >\n                        {hasCountdownStarted ? (\n                            <Localize i18n_default_text='Resend email in {{count}} seconds' values={{ count }} />\n                        ) : (\n                            <Localize i18n_default_text='Resend email' />\n                        )}\n                    </Button>\n                </Fragment>\n            )}\n        </div>\n    );\n};\n\nexport default SentEmailContent;\n","import React from 'react';\nimport { Localize } from '@deriv-com/translations';\nimport { ActionScreen, Button, Text, useDevice } from '@deriv-com/ui';\n\ntype TProps = {\n    sendEmail?: VoidFunction;\n};\n\nconst MT5ChangeInvestorPasswordInputsScreen: React.FC<TProps> = ({ sendEmail }) => {\n    const { isDesktop } = useDevice();\n    const textSize = isDesktop ? 'sm' : 'md';\n\n    return (\n        <ActionScreen\n            actionButtons={\n                <Button onClick={sendEmail} size='lg' textSize={textSize}>\n                    <Localize i18n_default_text='Create or reset investor password' />\n                </Button>\n            }\n            description={\n                <div className='wallets-change-investor-password-screens__description'>\n                    <Text align='start' size={textSize}>\n                        <Localize i18n_default_text='Use this password to grant viewing access to another user. While they may view your trading account, they will not be able to trade or take any other actions.' />\n                    </Text>\n                </div>\n            }\n            descriptionSize='sm'\n        />\n    );\n};\n\nexport default MT5ChangeInvestorPasswordInputsScreen;\n","import React, { FC } from 'react';\nimport { useActiveWalletAccount, useSettings, useVerifyEmail } from '@deriv/api-v2';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport { platformPasswordResetRedirectLink } from '../../../../../utils/cfd';\nimport MT5ChangeInvestorPasswordInputsScreen from './MT5ChangeInvestorPasswordInputsScreen';\nimport './MT5ChangeInvestorPasswordScreens.scss';\n\ntype TProps = {\n    setShowEmailSentScreen?: (value: boolean) => void;\n};\n\nconst MT5ChangeInvestorPasswordScreens: FC<TProps> = ({ setShowEmailSentScreen }) => {\n    const { getModalState } = useModal();\n    const { data } = useSettings();\n    const { mutate } = useVerifyEmail();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const mt5AccountId = getModalState('accountId') || '';\n\n    const handleSendEmail = async () => {\n        if (data.email) {\n            await mutate({\n                type: 'trading_platform_investor_password_reset',\n                url_parameters: {\n                    redirect_to: platformPasswordResetRedirectLink('mt5', activeWallet?.is_virtual),\n                },\n                verify_email: data.email,\n            });\n\n            localStorage.setItem('trading_platform_investor_password_reset_account_id', mt5AccountId);\n        }\n    };\n\n    return (\n        <div className='wallets-change-investor-password-screens__content'>\n            <MT5ChangeInvestorPasswordInputsScreen\n                sendEmail={() => {\n                    handleSendEmail();\n                    setShowEmailSentScreen?.(true);\n                }}\n            />\n        </div>\n    );\n};\n\nexport default MT5ChangeInvestorPasswordScreens;\n","import React, { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport { useActiveWalletAccount, useSettings, useVerifyEmail } from '@deriv/api-v2';\nimport { DerivLightDmt5PasswordIcon, DerivLightIcDxtradePasswordIcon } from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { ActionScreen, Button, Text, useDevice } from '@deriv-com/ui';\nimport { SentEmailContent } from '../../../../components';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { TPlatforms } from '../../../../types';\nimport { platformPasswordResetRedirectLink } from '../../../../utils/cfd';\nimport { PlatformDetails } from '../../constants';\n\ntype TradingPlatformChangePasswordScreensProps = {\n    isVirtual?: boolean;\n    platform: TPlatforms.All;\n};\n\nconst TradingPlatformChangePasswordScreens: FC<TradingPlatformChangePasswordScreensProps> = ({ platform }) => {\n    type TChangePasswordScreenIndex = 'confirmationScreen' | 'emailVerification' | 'introScreen';\n    const [activeScreen, setActiveScreen] = useState<TChangePasswordScreenIndex>('introScreen');\n    const handleClick = (nextScreen: TChangePasswordScreenIndex) => setActiveScreen(nextScreen);\n\n    const { hide } = useModal();\n    const { data } = useSettings();\n    const { mutate } = useVerifyEmail();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const buttonTextSize = isDesktop ? 'sm' : 'md';\n    const { title } = PlatformDetails[platform];\n\n    const isDerivX = platform === PlatformDetails.dxtrade.platform;\n\n    const handleSendEmail = async () => {\n        if (data.email) {\n            await mutate({\n                type: isDerivX ? 'trading_platform_dxtrade_password_reset' : 'trading_platform_mt5_password_reset',\n                url_parameters: {\n                    redirect_to: platformPasswordResetRedirectLink(platform, activeWallet?.is_virtual),\n                },\n                verify_email: data.email,\n            });\n        }\n    };\n\n    const ChangePasswordScreens = {\n        confirmationScreen: {\n            bodyText: (\n                <Text align='center' color='error' size='sm'>\n                    <Localize\n                        i18n_default_text='This will change the password to all of your {{title}} accounts.'\n                        values={{ title }}\n                    />\n                </Text>\n            ),\n            button: (\n                <div className='wallets-change-password__btn'>\n                    <Button color='black' onClick={() => hide()} size='lg' textSize={buttonTextSize} variant='outlined'>\n                        <Localize i18n_default_text='Cancel' />\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            handleSendEmail();\n                            handleClick('emailVerification');\n                        }}\n                        size='lg'\n                        textSize={buttonTextSize}\n                    >\n                        <Localize i18n_default_text='Confirm' />\n                    </Button>\n                </div>\n            ),\n            headingText: localize('Confirm to change your {{title}} password', { title }),\n        },\n        introScreen: {\n            bodyText: localize(\n                'Use this password to log in to your {{title}} accounts on the desktop, web, and mobile apps.',\n                { title }\n            ),\n            button: (\n                <Button onClick={() => handleClick('confirmationScreen')} size='lg' textSize={buttonTextSize}>\n                    <Localize i18n_default_text='Change password' />\n                </Button>\n            ),\n            headingText: localize('{{title}} password', { title }),\n        },\n    };\n\n    if (activeScreen === 'emailVerification') {\n        return (\n            <div\n                className={classNames('wallets-change-password__sent-email-content-wrapper', {\n                    'wallets-change-password__sent-email-content-wrapper--dxtrade': platform === 'dxtrade',\n                })}\n            >\n                <SentEmailContent isChangePassword platform={platform} />\n            </div>\n        );\n    }\n\n    return (\n        <div\n            className={classNames('wallets-change-password__content', {\n                'wallets-change-password__content--dxtrade': platform === 'dxtrade',\n            })}\n        >\n            <ActionScreen\n                actionButtons={ChangePasswordScreens[activeScreen].button}\n                description={ChangePasswordScreens[activeScreen].bodyText}\n                descriptionSize='sm'\n                icon={\n                    isDerivX ? (\n                        <DerivLightIcDxtradePasswordIcon height={120} width={120} />\n                    ) : (\n                        <DerivLightDmt5PasswordIcon height={120} width={120} />\n                    )\n                }\n                title={ChangePasswordScreens[activeScreen].headingText}\n            />\n        </div>\n    );\n};\n\nexport default TradingPlatformChangePasswordScreens;\n","import React, { useState } from 'react';\nimport { useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { SentEmailContent } from '../../../../components';\nimport { Tab, Tabs } from '../../../../components/Base';\nimport { PlatformDetails } from '../../constants';\nimport MT5ChangeInvestorPasswordScreens from './InvestorPassword/MT5ChangeInvestorPasswordScreens';\nimport TradingPlatformChangePasswordScreens from './TradingPlatformChangePasswordScreens';\n\nconst MT5ChangePasswordScreens = () => {\n    const [showSentEmailContentWithoutTabs, setShowSentEmailContentWithoutTabs] = useState(false);\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    const platform = PlatformDetails.mt5.platform;\n    const { title } = PlatformDetails[platform];\n\n    return showSentEmailContentWithoutTabs ? (\n        <div\n            className='wallets-change-password__sent-email-content-wrapper--mt5-investor'\n            data-testid='dt_change_password_sent_email_content_wrapper'\n        >\n            <SentEmailContent\n                description={localize('Please click on the link in the email to reset your password.')}\n                isInvestorPassword\n            />\n        </div>\n    ) : (\n        <Tabs fontSize={isDesktop ? 'sm' : 'md'} preSelectedTab={0} wrapperClassName='wallets-change-password__tab'>\n            <Tab title={localize('{{title}} Password', { title })}>\n                <TradingPlatformChangePasswordScreens platform={platform} />\n            </Tab>\n            <Tab title={localize('Investor Password')}>\n                <MT5ChangeInvestorPasswordScreens setShowEmailSentScreen={setShowSentEmailContentWithoutTabs} />\n            </Tab>\n        </Tabs>\n    );\n};\n\nexport default MT5ChangePasswordScreens;\n","import React from 'react';\nimport { useTranslations } from '@deriv-com/translations';\nimport { ModalStepWrapper } from '../../../../components/Base';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { PlatformDetails } from '../../constants';\nimport MT5ChangePasswordScreens from './MT5ChangePasswordScreens';\nimport TradingPlatformChangePasswordScreens from './TradingPlatformChangePasswordScreens';\nimport './ChangePassword.scss';\n\nconst ChangePassword = () => {\n    const { getModalState } = useModal();\n    const { localize } = useTranslations();\n    const platform = getModalState('platform') ?? PlatformDetails.mt5.platform;\n    const { title } = PlatformDetails[platform];\n\n    const isDerivX = platform === PlatformDetails.dxtrade.platform;\n\n    return (\n        <ModalStepWrapper title={localize('Manage {{title}} password', { title })}>\n            <div className='wallets-change-password__modal-wrapper'>\n                <div className='wallets-change-password__container'>\n                    {isDerivX ? (\n                        <TradingPlatformChangePasswordScreens platform={platform} />\n                    ) : (\n                        <MT5ChangePasswordScreens />\n                    )}\n                </div>\n            </div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default ChangePassword;\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Localize } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport { WalletClipboard } from '../../../../../components/Base';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport useIsRtl from '../../../../../hooks/useIsRtl';\nimport { ChangePassword } from '../../ChangePassword';\nimport './MT5TradeDetailsItem.scss';\n\ntype TMT5TradeDetailsItemProps = {\n    label?: string;\n    value?: string;\n    variant?: 'clipboard' | 'info' | 'password';\n};\n\nconst MT5TradeDetailsItem: FC<TMT5TradeDetailsItemProps> = ({ label, value = '', variant = 'clipboard' }) => {\n    const { isDesktop } = useDevice();\n    const { show } = useModal();\n    const isRtl = useIsRtl();\n\n    const textSize = isDesktop ? 'xs' : 'sm';\n    return (\n        <div\n            className={classNames('wallets-mt5-trade-details-item', {\n                'wallets-mt5-trade-details-item--info': variant === 'info',\n            })}\n        >\n            {variant === 'clipboard' && (\n                <React.Fragment>\n                    <Text align='start' color='less-prominent' size={textSize}>\n                        {label}\n                    </Text>\n                    <div className='wallets-mt5-trade-details-item__values'>\n                        <Text\n                            align='start'\n                            className='wallets-mt5-trade-details-item__values--mono-text'\n                            size={textSize}\n                            weight='bold'\n                        >\n                            {value}\n                        </Text>\n                        <WalletClipboard popoverAlignment={isRtl ? 'right' : 'left'} textCopy={value} />\n                    </div>\n                </React.Fragment>\n            )}\n            {variant === 'password' && (\n                <React.Fragment>\n                    <Text align='start' color='less-prominent' size={textSize}>\n                        {label}\n                    </Text>\n                    <div className='wallets-mt5-trade-details-item__values'>\n                        <Text\n                            align='start'\n                            as='a'\n                            className='wallets-mt5-trade-details-item__values--forgot-link'\n                            onClick={() => show(<ChangePassword />)}\n                            size={textSize}\n                            weight='bold'\n                        >\n                            <Localize i18n_default_text='Forgot Password?' />\n                        </Text>\n                    </div>\n                </React.Fragment>\n            )}\n            {variant === 'info' && (\n                <Text align='start' color='less-prominent' size={textSize}>\n                    {value}\n                </Text>\n            )}\n        </div>\n    );\n};\n\nexport default MT5TradeDetailsItem;\n","import React, { FC, Fragment, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useCtraderAccountsList, useDxtradeAccountsList, useIsEuRegion } from '@deriv/api-v2';\nimport {\n    LabelPairedArrowUpArrowDownMdBoldIcon,\n    LabelPairedCircleExclamationMdFillIcon,\n    StandaloneArrowUpRightRegularIcon,\n    StandaloneChartAreaRegularIcon,\n} from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, InlineMessage, Text, useDevice } from '@deriv-com/ui';\nimport { InformationBanner, WalletBadge, WalletListCardBadge } from '../../../../components';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { TAddedMT5Account, THooks } from '../../../../types';\nimport {\n    CFD_PLATFORMS,\n    getMarketTypeDetails,\n    getServiceMaintenanceMessages,\n    PlatformDetails,\n    PRODUCT,\n} from '../../constants';\nimport MT5DesktopRedirectOption from './MT5TradeLink/MT5DesktopRedirectOption';\nimport MT5MobileRedirectOption from './MT5TradeLink/MT5MobileRedirectOption';\nimport { MT5TradeDetailsItem } from './MT5TradeDetailsItem';\nimport { MT5TradeLink } from './MT5TradeLink';\nimport './MT5TradeScreen.scss';\nimport { OSDetect } from '@deriv/shared';\n\ntype MT5TradeScreenProps = {\n    mt5Account?: TAddedMT5Account;\n};\n\nconst MT5TradeScreen: FC<MT5TradeScreenProps> = ({ mt5Account }) => {\n    const { isDesktop } = useDevice();\n    const { getModalState, hide } = useModal();\n    const { localize } = useTranslations();\n    const history = useHistory();\n    const { data: dxtradeAccountsList } = useDxtradeAccountsList();\n    const { data: ctraderAccountsList } = useCtraderAccountsList();\n    const { data: activeWalletData } = useActiveWalletAccount();\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const mt5Platform = CFD_PLATFORMS.MT5;\n    const dxtradePlatform = CFD_PLATFORMS.DXTRADE;\n    const ctraderPlatform = CFD_PLATFORMS.CTRADER;\n\n    const marketType: keyof ReturnType<typeof getMarketTypeDetails> | undefined = getModalState('marketType');\n    const platform = getModalState('platform') ?? mt5Platform;\n\n    const { icon: platformIcon, title: platformTitle } = PlatformDetails[platform as keyof typeof PlatformDetails];\n    const { icon: marketTypeIcon, title: marketTypeTitle } = getMarketTypeDetails(\n        localize,\n        mt5Account?.product,\n        isEuRegion\n    )[marketType ?? 'all'];\n\n    const platformToAccountsListMapper = useMemo(\n        () => ({\n            ctrader: ctraderAccountsList,\n            dxtrade: dxtradeAccountsList,\n            mt5: [mt5Account],\n        }),\n        [ctraderAccountsList, dxtradeAccountsList, mt5Account]\n    );\n\n    const shouldShowAccountBalance = useMemo(() => {\n        if (\n            platform === mt5Platform &&\n            platformToAccountsListMapper.mt5?.filter(account => account?.market_type === marketType)[0]?.status ===\n                'migrated_without_position'\n        )\n            return false;\n        return true;\n    }, [marketType, mt5Platform, platform, platformToAccountsListMapper.mt5]);\n\n    const details = useMemo(() => {\n        switch (platform) {\n            case mt5Platform:\n                return platformToAccountsListMapper.mt5?.filter(account => account?.market_type === marketType)[0];\n            case dxtradePlatform:\n                return platformToAccountsListMapper.dxtrade?.[0];\n            case ctraderPlatform:\n                return platformToAccountsListMapper.ctrader?.[0];\n            default:\n                return undefined;\n        }\n    }, [\n        platform,\n        mt5Platform,\n        platformToAccountsListMapper.mt5,\n        platformToAccountsListMapper.dxtrade,\n        platformToAccountsListMapper.ctrader,\n        dxtradePlatform,\n        ctraderPlatform,\n        marketType,\n    ]);\n\n    const isWindows = OSDetect() === 'windows';\n\n    const loginId = useMemo(() => {\n        if (platform === mt5Platform) {\n            return (details as THooks.MT5AccountsList)?.display_login;\n        } else if (platform === dxtradePlatform) {\n            return (details as THooks.DxtradeAccountsList)?.account_id;\n        }\n        return details?.login;\n    }, [details, dxtradePlatform, mt5Platform, platform]);\n\n    const shouldShowBadge =\n        !activeWalletData?.is_virtual &&\n        details &&\n        'product' in details &&\n        //@ts-expect-error needs backend type\n        details.product !== 'stp' &&\n        details.landing_company_name !== 'labuan' &&\n        !isEuRegion;\n\n    const migrationMessage = useMemo(() => {\n        if (platform === mt5Platform && !activeWalletData?.is_virtual) {\n            switch (\n                platformToAccountsListMapper.mt5?.filter(account => account?.market_type === marketType)[0]?.status\n            ) {\n                case 'migrated_with_position':\n                    return (\n                        <InlineMessage\n                            className='wallets-mt5-trade-screen__description-badge'\n                            type='outlined'\n                            variant='warning'\n                        >\n                            <Text align='start' color='warning' size='2xs' weight='bold'>\n                                <Localize i18n_default_text='No new positions' />\n                            </Text>\n                        </InlineMessage>\n                    );\n                case 'migrated_without_position':\n                    return (\n                        <InlineMessage\n                            className='wallets-mt5-trade-screen__description-badge'\n                            type='outlined'\n                            variant='warning'\n                        >\n                            <Text align='start' color='warning' size='2xs' weight='bold'>\n                                <Localize i18n_default_text='Account closed' />\n                            </Text>\n                        </InlineMessage>\n                    );\n                default:\n                    return null;\n            }\n        }\n    }, [activeWalletData?.is_virtual, marketType, mt5Platform, platform, platformToAccountsListMapper.mt5]);\n\n    return (\n        <div className='wallets-mt5-trade-screen' data-testid='dt_mt5_trade_screen'>\n            <div className='wallets-mt5-trade-screen__content'>\n                <div className='wallets-mt5-trade-screen__content-header'>\n                    <div className='wallets-mt5-trade-screen__description'>\n                        <div className='wallets-mt5-trade-screen__description-icon'>\n                            {platform === mt5Platform ? marketTypeIcon : platformIcon}\n                        </div>\n                        <div className='wallets-mt5-trade-screen__description-details'>\n                            <div className='wallets-mt5-trade-screen__label'>\n                                <Text align='start' lineHeight='3xs' size={isDesktop ? 'sm' : 'md'}>\n                                    {platform === mt5Platform ? marketTypeTitle : platformTitle}{' '}\n                                </Text>\n                                {shouldShowBadge && (\n                                    <WalletBadge>{details?.landing_company_short?.toUpperCase()}</WalletBadge>\n                                )}\n                                {activeWalletData?.is_virtual && <WalletListCardBadge />}\n                            </div>\n                            <Text align='start' color='less-prominent' size='xs'>\n                                {platform !== ctraderPlatform && loginId}\n                            </Text>\n                        </div>\n                        <div className='wallets-mt5-trade-screen__description-balance'>\n                            {shouldShowAccountBalance && <Text weight='bold'>{details?.display_balance}</Text>}\n                            {migrationMessage}\n                        </div>\n                    </div>\n                    <div className='wallets-mt5-trade-screen__content-header-btn'>\n                        <Button\n                            aria-label='account-transfer'\n                            icon={<LabelPairedArrowUpArrowDownMdBoldIcon fill='#FFF' height={18} width={14} />}\n                            key='account-transfer'\n                            onClick={() => {\n                                hide();\n                                history.push('/wallet/account-transfer', { toAccountLoginId: details?.loginid });\n                            }}\n                            rounded='md'\n                            size='sm'\n                            textSize={isDesktop ? 'xs' : 'sm'}\n                        >\n                            <Localize i18n_default_text='Transfer' />\n                        </Button>\n                    </div>\n                </div>\n\n                <div className='wallets-mt5-trade-screen__content-clipboards'>\n                    {getModalState('platform') === mt5Platform && details?.platform === mt5Platform && (\n                        <Fragment>\n                            <MT5TradeDetailsItem label={localize('Broker')} value={details?.landing_company ?? ''} />\n                            <MT5TradeDetailsItem\n                                label={localize('Server')}\n                                value={details?.server_info?.environment ?? localize('Deriv-Server')}\n                            />\n                            <MT5TradeDetailsItem label={localize('Login ID')} value={loginId ?? '12345678'} />\n                            <MT5TradeDetailsItem label={localize('Password')} variant='password' />\n                        </Fragment>\n                    )}\n                    {getModalState('platform') === dxtradePlatform && (\n                        <Fragment>\n                            <MT5TradeDetailsItem label={localize('Username')} value={details?.login ?? '12345678'} />\n                            <MT5TradeDetailsItem label={localize('Password')} variant='password' />\n                        </Fragment>\n                    )}\n                    {getModalState('platform') === ctraderPlatform && (\n                        <MT5TradeDetailsItem\n                            value={localize(\n                                'Use your Deriv account email and password to login into the cTrader platform.'\n                            )}\n                            variant='info'\n                        />\n                    )}\n                </div>\n\n                <div className='wallets-mt5-trade-screen__content-maintenance'>\n                    <LabelPairedCircleExclamationMdFillIcon fill='#FFAD3A' />\n                    <Text\n                        align='start'\n                        className='wallets-mt5-trade-screen__content-text'\n                        color='less-prominent'\n                        size={isDesktop ? '2xs' : 'xs'}\n                    >\n                        {\n                            getServiceMaintenanceMessages(localize)[\n                                (platform as keyof ReturnType<typeof getServiceMaintenanceMessages>) ??\n                                    PlatformDetails.mt5.platform\n                            ]\n                        }\n                    </Text>\n                </div>\n\n                {isDesktop &&\n                    details?.platform === mt5Platform &&\n                    isWindows &&\n                    marketTypeTitle.toLowerCase() !== PRODUCT.GOLD && (\n                        <InformationBanner\n                            description={\n                                <Localize i18n_default_text='Tailor your indicators with expert-driven trend analysis.' />\n                            }\n                            informationIcon={<StandaloneChartAreaRegularIcon fill='#095A66' iconSize='sm' />}\n                            link='https://docs.deriv.com/misc/alpha_generation_guide.pdf'\n                            redirectIcon={<StandaloneArrowUpRightRegularIcon fill='#000000' iconSize='sm' />}\n                            title={<Localize i18n_default_text='Alpha Generation guide' />}\n                        />\n                    )}\n            </div>\n            <div className='wallets-mt5-trade-screen__links'>\n                {platform === mt5Platform && (\n                    <Fragment>\n                        {isDesktop ? (\n                            <MT5DesktopRedirectOption mt5TradeAccount={details as THooks.MT5AccountsList} />\n                        ) : (\n                            <MT5MobileRedirectOption mt5TradeAccount={details as THooks.MT5AccountsList} />\n                        )}\n                    </Fragment>\n                )}\n                {platform === dxtradePlatform && (\n                    <MT5TradeLink isDemo={activeWalletData?.is_virtual} platform={dxtradePlatform} />\n                )}\n                {platform === ctraderPlatform && (\n                    <Fragment>\n                        <MT5TradeLink platform={ctraderPlatform} />\n                        <MT5TradeLink app={ctraderPlatform} platform={ctraderPlatform} />\n                    </Fragment>\n                )}\n            </div>\n        </div>\n    );\n};\nexport default MT5TradeScreen;\n","import React, { FC, useEffect } from 'react';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { TAddedMT5Account, TMarketTypes, TPlatforms } from '../../../../types';\nimport { ModalTradeWrapper } from '../../components';\nimport { MT5TradeScreen } from '../../screens';\n\ntype TMT5TradeModalProps = {\n    marketType?: TMarketTypes.All;\n    mt5Account?: TAddedMT5Account;\n    platform: TPlatforms.All;\n};\n\nconst MT5TradeModal: FC<TMT5TradeModalProps> = ({ marketType, mt5Account, platform }) => {\n    const { setModalState } = useModal();\n    useEffect(() => {\n        setModalState('marketType', marketType);\n        setModalState('platform', platform);\n        setModalState('accountId', mt5Account?.loginid);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <ModalTradeWrapper mt5Account={mt5Account} platform={platform}>\n            <MT5TradeScreen mt5Account={mt5Account} />\n        </ModalTradeWrapper>\n    );\n};\n\nexport default MT5TradeModal;\n","import React from 'react';\nimport { useCtraderAccountsList } from '@deriv/api-v2';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { Text } from '@deriv-com/ui';\nimport { TradingAccountCard } from '../../../../../components';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport useIsRtl from '../../../../../hooks/useIsRtl';\nimport { PlatformDetails } from '../../../constants';\nimport { MT5TradeModal } from '../../../modals';\n\nconst AddedCTraderAccountsList: React.FC = () => {\n    const { data: cTraderAccounts } = useCtraderAccountsList();\n    const { show } = useModal();\n    const isRtl = useIsRtl();\n\n    return (\n        <React.Fragment>\n            {cTraderAccounts?.map((account, index) => (\n                <TradingAccountCard\n                    key={`added-ctrader-${account.login}-${index}`}\n                    onClick={() => show(<MT5TradeModal platform={PlatformDetails.ctrader.platform} />)}\n                >\n                    <TradingAccountCard.Icon>{PlatformDetails.ctrader.icon}</TradingAccountCard.Icon>\n                    <TradingAccountCard.Section>\n                        <TradingAccountCard.Content>\n                            <Text align='start' size='sm'>\n                                {PlatformDetails.ctrader.title}\n                            </Text>\n                            <Text align='start' size='sm' weight='bold'>\n                                {account?.display_balance}\n                            </Text>\n                            <Text align='start' size='xs'>\n                                {account.login}\n                            </Text>\n                        </TradingAccountCard.Content>\n                        <TradingAccountCard.Button>\n                            {isRtl ? (\n                                <LabelPairedChevronLeftCaptionRegularIcon width={16} />\n                            ) : (\n                                <LabelPairedChevronRightCaptionRegularIcon width={16} />\n                            )}\n                        </TradingAccountCard.Button>\n                    </TradingAccountCard.Section>\n                </TradingAccountCard>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AddedCTraderAccountsList;\n","import React from 'react';\nimport { useDxtradeAccountsList } from '@deriv/api-v2';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { Text } from '@deriv-com/ui';\nimport { TradingAccountCard } from '../../../../../../components';\nimport { useModal } from '../../../../../../components/ModalProvider';\nimport useIsRtl from '../../../../../../hooks/useIsRtl';\nimport { PlatformDetails } from '../../../../constants';\nimport { MT5TradeModal } from '../../../../modals';\n\nconst AddedDxtradeAccountsList: React.FC = () => {\n    const { data } = useDxtradeAccountsList();\n    const { show } = useModal();\n    const isRtl = useIsRtl();\n\n    return (\n        <React.Fragment>\n            {data?.map((account, index) => (\n                <TradingAccountCard\n                    key={`added-dxtrade-${account?.login}-${index}`}\n                    onClick={() => show(<MT5TradeModal platform={PlatformDetails.dxtrade.platform} />)}\n                >\n                    <TradingAccountCard.Icon>{PlatformDetails.dxtrade.icon}</TradingAccountCard.Icon>\n                    <TradingAccountCard.Section>\n                        <TradingAccountCard.Content>\n                            <Text align='start' size='sm'>\n                                {PlatformDetails.dxtrade.title}\n                            </Text>\n                            <Text align='start' size='sm' weight='bold'>\n                                {account?.display_balance}\n                            </Text>\n                            <Text align='start' size='xs'>\n                                {account?.login}\n                            </Text>\n                        </TradingAccountCard.Content>\n                        <TradingAccountCard.Button>\n                            {isRtl ? (\n                                <LabelPairedChevronLeftCaptionRegularIcon width={16} />\n                            ) : (\n                                <LabelPairedChevronRightCaptionRegularIcon width={16} />\n                            )}\n                        </TradingAccountCard.Button>\n                    </TradingAccountCard.Section>\n                </TradingAccountCard>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AddedDxtradeAccountsList;\n","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" fill=\"none\" viewBox=\"0 0 128 128\" {...props}><path fill=\"#EBECEE\" d=\"M33.147 47.735q.199.207.403.404c.133.14.265.272.402.405q.198.207.404.404.194.205.4.4.196.207.402.405.196.206.403.404.196.206.402.405.196.205.403.404.197.206.402.404.198.207.403.404.197.208.402.405.198.206.403.404.2.208.407.409.198.207.405.407.197.206.403.404.202.214.413.414.19.198.387.387.197.21.406.408.192.202.393.395l.096.1q.156.16.319.316.196.206.402.404.196.206.403.405-.102-.105-.2-.211 0-.002-.003-.003-.1-.105-.187-.21a8 8 0 01-.187-.213 6 6 0 01-.184-.22 6 6 0 01-.185-.225l-.051-.066-.125-.159a10 10 0 01-.171-.23l-.17-.235q-.087-.12-.167-.24a7 7 0 01-.163-.242 5 5 0 01-.157-.247 7 7 0 01-.158-.251q-.078-.128-.15-.254-.076-.129-.148-.258-.074-.132-.143-.262-.072-.135-.14-.269c-.046-.092-.093-.18-.133-.273a6 6 0 01-.133-.275 9 9 0 01-.126-.279 7 7 0 01-.123-.285 5 5 0 01-.119-.29 10 10 0 01-.112-.293c-.974-2.586-1.384-5.564-1.111-8.812 1.05-12.5 11.81-24.32 24.036-26.403 3.629-.616 6.98-.307 9.87.763q.146.05.289.11.142.053.285.115.14.057.28.119.138.059.276.125.138.06.273.128.134.064.265.132.133.066.262.136.13.067.26.142.128.069.256.147.128.072.253.148.125.074.245.153.124.077.243.158.122.08.24.16a11 11 0 01.465.331q.118.085.23.174l.226.178q.11.087.218.176.111.092.219.186.11.093.213.19c.074.063.142.128.213.19l.003.004q.101.094.198.189a14 14 0 00-.403-.405 14 14 0 00-.402-.404 14 14 0 00-.403-.404 15 15 0 00-.413-.415 11 11 0 00-.39-.389 11 11 0 00-.403-.404 10 10 0 00-.402-.404 10 10 0 00-.402-.405 11 11 0 00-.414-.415q-.194-.205-.4-.401a12 12 0 00-.402-.404 12 12 0 00-.402-.405 14 14 0 00-.403-.404 14 14 0 00-.402-.404 14 14 0 00-.403-.404 14 14 0 00-.402-.405 14 14 0 00-.403-.404 12 12 0 00-.404-.404 11 11 0 00-.402-.404 11 11 0 00-.402-.405 12 12 0 00-.403-.404 12 12 0 00-.403-.404c-3.665-3.815-9.238-5.65-15.688-4.551-12.226 2.083-22.987 13.903-24.036 26.404-.515 6.134 1.404 11.294 4.938 14.707z\" /><path fill=\"#000\" d=\"M42.003 56.938a.32.32 0 01-.217-.088q-.22-.211-.412-.413a17 17 0 01-.402-.404 12 12 0 01-.317-.316l-.098-.101a12 12 0 01-.393-.395 10 10 0 01-.401-.403c-.131-.124-.26-.256-.386-.385-.13-.123-.266-.26-.418-.419a12 12 0 01-.402-.404 14 14 0 01-.406-.407 14 14 0 01-.405-.408 13 13 0 01-.403-.404 14 14 0 01-.402-.404c-.135-.128-.273-.27-.403-.404-.134-.128-.273-.27-.402-.404a13 13 0 01-.404-.406 12 12 0 01-.403-.405 14 14 0 01-.402-.404c-.136-.13-.275-.27-.403-.404a11 11 0 01-.394-.397q-.209-.2-.41-.408-.21-.203-.402-.405a14 14 0 01-.397-.4c-3.75-3.623-5.535-8.933-5.03-14.953 1.066-12.609 11.964-24.579 24.3-26.683 6.282-1.07 12.102.622 15.967 4.642q.18.172.402.405.176.165.396.398c.147.139.286.282.403.404.15.142.293.289.402.404q.217.207.409.409c.137.131.28.278.402.404.135.128.273.27.403.404.137.132.28.278.402.405.133.126.273.27.403.404.134.128.273.27.402.404q.184.175.404.406.181.173.403.404c.132.127.268.263.394.397q.2.189.414.415c.157.15.285.28.402.404.16.152.287.281.403.404q.214.205.4.403c.12.111.241.233.394.394q.214.206.413.415c.136.13.278.276.401.402.136.13.28.277.403.405.137.13.279.277.402.404a.313.313 0 01-.443.442q-.097-.095-.193-.185l-.003-.003-.075-.068q-.064-.06-.127-.114l-.012-.013a5 5 0 00-.17-.153l-.035-.03-.14-.12-.147-.121-.138-.113-.225-.178a6 6 0 00-.222-.165 9 9 0 00-.224-.164 7 7 0 00-.233-.162q-.12-.082-.237-.158l-.054-.036-.18-.115c-.087-.058-.167-.105-.245-.153l-.057-.035q-.091-.055-.184-.106l-.015-.01a5 5 0 00-.241-.137 6 6 0 00-.256-.139 4 4 0 00-.253-.129 11 11 0 00-.529-.256 8 8 0 00-.274-.123 6 6 0 00-.273-.116c-.1-.044-.19-.078-.28-.112a5 5 0 00-.279-.105c-2.953-1.094-6.22-1.345-9.717-.75-12.074 2.055-22.74 13.774-23.777 26.12-.264 3.132.103 6.051 1.092 8.676q.054.147.109.286.056.149.114.28.059.15.12.282.063.145.125.278c.042.09.082.18.128.265q.005.008.007.017.053.117.114.233l.013.025q.07.14.134.262l.027.051q.053.105.112.206l.026.047q.058.104.117.205c.046.08.086.15.128.22l.02.034q.072.121.149.239l.01.016q.067.114.144.229.081.125.158.237c.056.085.109.161.164.238q.082.115.162.223c.062.087.118.16.176.237l.12.153.053.067q.087.109.176.215c.064.08.122.149.183.219q.089.107.184.21.093.107.183.202l.006.006.014.016.18.192a.313.313 0 01-.222.53zm13.83-50.313q-1.734 0-3.537.306C40.22 8.988 29.556 20.707 28.518 33.053c-.49 5.833 1.231 10.966 4.846 14.458l.009.009c.122.126.25.256.393.395.131.137.259.265.403.404.138.145.266.273.402.403l.011.01q.18.193.387.39c.132.138.265.27.404.405q.19.2.402.404.193.203.403.405c.13.136.262.268.402.404q.2.207.401.403.2.207.403.404c.154.16.276.284.402.404q.198.207.403.404c.14.146.273.28.408.41.131.137.26.266.406.407q.15.158.312.317l-.108-.197-.026-.049a11 11 0 01-.137-.266l-.018-.033a6 6 0 01-.124-.256 8 8 0 01-.135-.28 6 6 0 01-.128-.285 7 7 0 01-.124-.292 5 5 0 01-.122-.3 7 7 0 01-.112-.295c-1.02-2.708-1.4-5.719-1.128-8.945 1.06-12.613 11.957-24.583 24.294-26.683 3.606-.614 6.98-.352 10.03.777.094.031.198.072.3.112.09.035.19.074.291.117q.136.055.283.12.135.058.282.127.135.059.28.13c.085.04.179.087.27.134.083.039.177.089.268.139.076.039.159.082.241.13a10 10 0 00-.332-.332l-.01-.01a10 10 0 00-.402-.403l-.012-.013q-.181-.192-.387-.389-.22-.23-.403-.404a13 13 0 00-.402-.404 14 14 0 00-.403-.404c-.152-.16-.276-.283-.402-.405a14 14 0 00-.402-.404c-.135-.137-.267-.275-.403-.404a14 14 0 00-.402-.404 12 12 0 00-.414-.414 10 10 0 00-.402-.404 10 10 0 00-.392-.393l-.01-.011c-.144-.15-.272-.278-.392-.394-.152-.159-.28-.287-.403-.404-2.992-3.112-7.2-4.774-11.885-4.774zm42.455 75.961a.31.31 0 01-.25-.127l-.148-.191-.059-.083-.098-.137a.313.313 0 01.5-.373q.157.206.308.415a.311.311 0 01-.253.494z\" /><path fill=\"#EBECEE\" d=\"M4.312 109.339l.337.456.337.455.337.455.337.455.674.91.337.456.337.456 1.01 1.366.336.454.335.456.336.454.335.455.337.456.336.456.335.454.335.456.674.911.336.455.335.455.674.912.337.456.337.455.674.912q-.001-.258.004-.515.001-.257.008-.517.005-.257.014-.518.007-.258.02-.52.01-.257.026-.518.011-.26.03-.52.016-.26.037-.519a28 28 0 01.092-1.046q.023-.263.054-.523.029-.264.061-.526.028-.264.066-.526.034-.264.071-.526.036-.266.077-.531.04-.264.086-.529.042-.266.089-.53.045-.267.095-.533.05-.267.103-.533.053-.267.109-.534.054-.27.115-.534.058-.27.12-.535.062-.27.128-.537.064-.27.136-.539.066-.27.139-.538.07-.27.145-.54.075-.271.153-.542.076-.271.16-.542.081-.272.167-.546.084-.273.174-.545c6.193-19.148 23.309-35.143 43.453-38.698 12.868-2.27 24.501.972 32.84 8.031q.112.093.22.19a24 24 0 01.431.376l.214.19q.107.096.21.192.107.097.211.195.107.098.21.198.104.097.207.198a24 24 0 01.404.397l.201.203a23 23 0 01.395.406l.195.203.192.204q.097.104.192.21l.19.21q.094.105.187.212.095.106.189.216l.185.215.181.214.183.217q.088.104.175.212l.176.218a13 13 0 01.355.453l.185.239-.152-.212q-.165-.233-.337-.458l-.018-.023q-.18-.247-.36-.487l-.024-.033-.27-.365-.017-.022q-.158-.218-.32-.434l-.019-.023q-.157-.218-.318-.431l-.014-.02q-.16-.22-.323-.436l-.014-.02q-.16-.22-.323-.436-.001-.005-.008-.007-.18-.249-.362-.492-.15-.207-.304-.41l-.014-.02-.321-.435a32 32 0 00-.38-.515l-.023-.033q-.153-.21-.31-.416l-.296-.404-.018-.022a28 28 0 00-.32-.434l-.014-.02a28 28 0 00-.36-.487l-.296-.405q-.002-.005-.007-.008a42 42 0 00-.372-.502 23 23 0 00-.48-.642l-.15-.212q-.167-.231-.337-.457l-.02-.024q-.179-.246-.36-.487-.01-.017-.023-.032-.134-.185-.27-.366l-.017-.022q-.158-.218-.32-.433l-.019-.024q-.158-.217-.318-.43l-.014-.02q-.16-.222-.323-.436-.01-.015-.023-.03-.166-.232-.339-.457-.171-.235-.344-.469c-3.938-5.405-9.28-9.57-15.567-12.118-6.774-2.745-14.647-3.611-23.048-2.13q-.328.058-.653.12-.056.01-.113.023C24.465 60.242 4.312 84.215 4.312 109.34\" /><path fill=\"#000\" d=\"M14.078 122.854a.31.31 0 01-.252-.126l-.674-.91s-.007-.013-.012-.019l-.325-.437-.012-.019-.997-1.347s-.01-.012-.012-.019l-.315-.426-.01-.012-.329-.445-.008-.009-.674-.91-.012-.019-.318-.429-.007-.008-.329-.445-.008-.009-.329-.445-.008-.009-.336-.456-.015-.021-.316-.429-.006-.008-.33-.444-.007-.01-.33-.445s-.006-.006-.007-.011l-4.04-5.462a.3.3 0 01-.06-.186c0-12.215 4.714-24.564 13.277-34.773 8.55-10.197 19.966-17.105 32.145-19.451.024-.007.06-.013.095-.02l.017-.002q.33-.062.66-.12c8.167-1.441 16.196-.698 23.218 2.147 6.308 2.555 11.738 6.782 15.702 12.225q.174.23.347.468.165.218.332.45.014.016.026.034l.334.45a25 25 0 01.33.447c.115.153.221.298.327.443l.014.018q.141.185.273.368l.024.031q.185.247.366.495l.016.02a24 24 0 01.435.595l.058.081.148.194q.166.22.33.446.185.245.372.503l.008.01q.15.2.296.403a22 22 0 01.364.49l.012.017a28 28 0 01.332.452q.151.202.3.407.151.197.304.409l.022.03q.194.258.38.515l.004.004q.16.214.318.43l.02.03c.095.124.194.257.292.39l.012.018q.179.239.358.486l.009.012q.165.218.326.439l.01.014c.115.153.22.296.327.44l.01.014c.112.15.218.293.322.437l.016.02q.164.219.323.437l.008.008a20 20 0 01.296.401q.182.241.356.482l.01.014s.013.018.016.02a24 24 0 01.445.608l.05.07a.312.312 0 01-.501.372q-.09-.118-.183-.236l-.171-.222-.013-.015-.168-.211-.175-.217-.173-.21q-.09-.11-.181-.218-.09-.108-.18-.212l-.043-.051-.14-.161q-.094-.109-.188-.212c-.056-.066-.11-.125-.163-.186l-.025-.027-.188-.206-.139-.153-.243-.26a8 8 0 00-.19-.199 8 8 0 00-.198-.206l-.017-.018q-.088-.09-.177-.178l-.4-.398q-.09-.09-.183-.178l-.019-.017-.203-.194c-.073-.07-.138-.134-.209-.198l-.207-.194-.21-.192-.211-.189-.214-.188a7 7 0 00-.212-.185c-.072-.064-.14-.121-.21-.18l-.012-.01c-4.195-3.55-9.105-6.057-14.597-7.45-5.687-1.442-11.74-1.614-17.988-.513-19.514 3.443-36.88 18.91-43.211 38.486q-.09.27-.172.54a21 21 0 00-.165.542q-.085.274-.161.54-.079.271-.153.54-.075.268-.143.535-.074.268-.138.534c-.048.183-.092.359-.134.537q-.066.27-.128.535l-.118.531c-.043.181-.078.356-.116.532q-.057.269-.109.531l-.069.353-.034.178q-.048.26-.094.524c-.03.178-.06.351-.088.528a37 37 0 00-.161 1.053q-.038.264-.072.525-.036.26-.065.521-.035.265-.061.524-.03.261-.053.519-.028.266-.05.524a27 27 0 00-.077 1.032 21 21 0 00-.03.518q-.018.262-.026.513-.014.264-.02.517-.01.261-.014.515-.008.261-.008.511a28 28 0 00-.005.515.31.31 0 01-.312.312zm-.41-1.391l.107.145.003-.109c.003-.168.006-.345.014-.52q.007-.254.02-.521.009-.256.027-.524.013-.257.031-.523.015-.256.036-.52.018-.264.044-.527.021-.265.05-.53.023-.26.054-.526.029-.265.063-.53.027-.262.065-.528.034-.263.073-.527.036-.266.078-.533.04-.266.086-.533.042-.266.09-.533.046-.265.096-.533l.034-.18q.033-.18.069-.359.053-.269.11-.538.055-.27.117-.54l.12-.536q.06-.272.129-.541.065-.272.135-.544.066-.267.14-.541a38 38 0 01.462-1.634q.08-.271.167-.548.083-.275.175-.55c6.4-19.79 23.961-35.425 43.697-38.908 6.335-1.117 12.475-.94 18.25.523 5.583 1.416 10.578 3.965 14.847 7.578l.012.011q.108.09.214.183a17 17 0 01.433.379l.214.19q.108.097.212.194l.113.103-.26-.348-.015-.022-.013-.016a20 20 0 00-.305-.41c-.103-.142-.202-.275-.3-.408l-.018-.025a28 28 0 00-.317-.429q-.005-.004-.006-.01-.008-.008-.014-.02a27 27 0 00-.353-.474c-.101-.142-.2-.273-.3-.406l-.009-.012v-.002q-.181-.249-.367-.495a41 41 0 00-.475-.636l-.067-.094-.083-.115-.01-.014q-.164-.226-.33-.447l-.017-.022a39 39 0 00-.382-.518c-.007-.006-.007-.008-.013-.016q-.132-.182-.267-.36l-.01-.013-.01-.012a28 28 0 00-.317-.43l-.012-.016a33 33 0 00-.348-.472q-.155-.212-.314-.423l.236-.207-.248.19s-.01-.01-.014-.017a24 24 0 00-.334-.453q-.174-.24-.345-.468c-3.898-5.352-9.235-9.505-15.436-12.017-6.912-2.801-14.823-3.532-22.875-2.111q-.327.057-.65.118l-.016.003-.085.017c-12.05 2.323-23.336 9.156-31.795 19.242C9.31 85.034 4.65 97.202 4.624 109.236l3.972 5.371.008.011.329.444.007.01.331.446s.005.005.006.008l.336.454.014.019.317.428.007.009.33.445.007.009.331.447.006.007.336.455.012.018.655.885.008.01.328.443.01.012.335.455.012.018.997 1.347.012.019.325.437s.01.013.012.019zM96.542 79.39l.003.005zm-.328-.44l.002.003zm-6.07-8.21l.005.005q-.001-.003-.004-.005\" /><path fill=\"#000\" d=\"M91.892 73.936a.31.31 0 01-.25-.127l-.148-.191-.067-.094q-.044-.063-.09-.125a.313.313 0 01.5-.373q.157.206.308.415a.311.311 0 01-.253.495\" /><path fill=\"#fff\" d=\"M14.076 122.542l91.866-16.208c0-9.394-2.817-17.635-7.654-24.061q-.074-.1-.152-.198-.09-.12-.184-.24a22 22 0 00-.532-.67l-.174-.213-.183-.217-.181-.213-.186-.216-.188-.215q-.093-.108-.187-.212l-.19-.21q-.096-.106-.193-.21l-.192-.205q-.097-.103-.195-.203-.097-.104-.198-.206l-.196-.2-.201-.202-.2-.199-.205-.198q-.102-.101-.207-.198c-.07-.067-.137-.133-.21-.198q-.104-.099-.21-.195l-.21-.192-.214-.19-.215-.191q-.106-.094-.216-.186-.108-.095-.22-.189c-8.338-7.06-19.97-10.301-32.84-8.032-20.144 3.554-37.262 19.551-43.454 38.699q-.09.271-.173.545-.086.272-.167.546-.084.271-.16.542-.081.27-.153.541-.075.27-.145.54-.074.27-.14.539-.069.269-.135.538-.066.27-.128.537l-.12.536q-.06.266-.116.533t-.109.534l-.103.534q-.049.264-.095.532-.046.265-.089.531-.044.264-.085.529-.041.264-.077.531-.038.26-.072.526-.035.26-.065.526-.034.26-.061.526-.031.26-.055.522a30 30 0 00-.092 1.046 57 57 0 00-.112 2.078q-.01.257-.014.518-.008.257-.008.516a29 29 0 00-.005.516z\" /><path fill=\"#000\" d=\"M14.076 122.854a.31.31 0 01-.312-.312q-.001-.26.005-.52 0-.256.01-.521c.003-.169.006-.345.014-.52.004-.168.01-.345.02-.521q.009-.256.026-.525.012-.257.031-.522.015-.257.036-.52.019-.264.044-.528.023-.264.05-.529.024-.26.055-.526.027-.265.062-.531.028-.261.065-.527.033-.263.074-.528.035-.264.078-.532.04-.267.086-.534.041-.264.09-.532.046-.265.095-.534l.035-.179q.032-.18.068-.359.053-.27.111-.539.055-.269.117-.54.057-.263.119-.535t.129-.542q.064-.271.136-.543.065-.267.14-.541a38 38 0 01.462-1.635c.051-.179.11-.363.167-.547q.082-.275.175-.55c6.4-19.79 23.96-35.426 43.696-38.908 6.335-1.117 12.476-.941 18.25.523 5.584 1.416 10.579 3.965 14.847 7.578l.012.01.214.183q.105.089.215.186.108.092.219.194.105.09.213.19l.213.194.212.196q.105.096.21.2c.067.062.14.131.21.2l.015.015.189.183.404.403q.09.09.18.184l.018.019.203.21.195.203.246.264q.073.078.144.158l.189.206.024.028q.086.094.167.189l.19.213.141.163.045.051.184.217.185.22.171.208.184.228q.084.102.17.212l.014.017q.091.115.175.227l.186.238q.077.099.152.202c5.049 6.705 7.718 15.09 7.718 24.247a.31.31 0 01-.258.307L14.14 122.848a.3.3 0 01-.054.005zm53.973-54.78a46 46 0 00-7.986.715c-19.514 3.443-36.88 18.91-43.211 38.487q-.09.269-.172.54-.088.273-.165.541-.084.274-.161.54-.079.272-.153.54-.075.27-.143.536-.074.268-.138.534-.071.272-.134.536l-.128.536-.118.53c-.042.182-.078.356-.116.533q-.057.267-.109.53l-.069.353-.034.178q-.048.26-.094.525l-.088.527a36 36 0 00-.161 1.054q-.038.263-.072.524-.036.261-.065.521c-.024.178-.042.35-.061.525q-.03.26-.053.518a35 35 0 00-.092 1.041q-.02.258-.036.515-.02.263-.031.518-.017.261-.025.514-.014.263-.02.516-.011.261-.015.516-.008.26-.007.51 0 .072-.002.142l91.239-16.097c-.05-8.918-2.672-17.078-7.593-23.612l-.146-.193-.184-.24-.172-.22-.012-.016-.169-.211a9 9 0 00-.175-.217l-.173-.21-.18-.218q-.09-.108-.18-.212l-.044-.051-.14-.161c-.063-.074-.125-.142-.187-.212q-.084-.098-.164-.186l-.025-.027-.187-.206-.14-.153-.242-.26a8 8 0 00-.19-.199 9 9 0 00-.199-.206l-.017-.018-.176-.178-.4-.398q-.091-.09-.184-.178l-.017-.017-.203-.194c-.073-.07-.139-.134-.209-.198l-.207-.194-.21-.192-.212-.189-.213-.188a7 7 0 00-.212-.185c-.072-.064-.14-.121-.21-.18l-.012-.01c-4.195-3.55-9.105-6.057-14.597-7.45a40.6 40.6 0 00-10.002-1.228z\" /><path fill=\"#fff\" d=\"M38.573 51.128q.054.148.112.292.056.149.119.29.058.145.123.286.06.14.127.28.062.137.132.274.062.136.134.273.066.135.14.269.069.131.143.262.071.13.148.257.071.128.15.255.074.126.157.251.073.125.158.247c.051.08.106.164.162.242q.081.121.167.24.085.12.17.234.085.117.171.231l.125.16.052.065q.089.114.184.225.09.112.184.22.09.108.187.214a6 6 0 00.19.212q.1.108.2.21c3.664 3.818 9.24 5.652 15.692 4.555 3.22-.548 6.338-1.773 9.206-3.507 8.015-4.851 14.057-13.688 14.83-22.896.515-6.137-1.405-11.297-4.942-14.712l-.198-.189q0-.002-.003-.003c-.072-.064-.14-.13-.212-.19-.07-.067-.144-.13-.214-.19q-.11-.097-.218-.186l-.219-.177a17 17 0 00-.683-.517 8 8 0 00-.237-.165q-.12-.082-.24-.16a8 8 0 00-.244-.158q-.121-.079-.245-.153-.126-.077-.252-.149-.128-.078-.256-.146a7 7 0 00-.26-.142 5 5 0 00-.263-.136 9 9 0 00-.265-.133 5 5 0 00-.273-.128 7 7 0 00-.276-.125 7 7 0 00-.28-.118 6 6 0 00-.285-.116 5 5 0 00-.288-.11c-2.89-1.07-6.24-1.379-9.87-.762-12.226 2.082-22.987 13.902-24.037 26.402-.273 3.249.138 6.227 1.111 8.813z\" /><path fill=\"#000\" d=\"M54.104 61.8c-4.858 0-9.222-1.728-12.325-4.959a8 8 0 01-.189-.2l-.01-.01s-.006-.005-.007-.008a6 6 0 01-.198-.222 7 7 0 01-.187-.214 7 7 0 01-.192-.228 6 6 0 01-.187-.228l-.05-.064q-.064-.08-.127-.162l-.178-.239-.173-.237a6 6 0 01-.17-.247 5 5 0 01-.165-.25 4 4 0 01-.158-.247 6 6 0 01-.16-.258l-.02-.033-.135-.232a7 7 0 01-.12-.21l-.025-.045-.12-.218-.027-.049a11 11 0 01-.137-.267l-.017-.032a7 7 0 01-.125-.256 8 8 0 01-.134-.28 6 6 0 01-.128-.285 7 7 0 01-.125-.292 5 5 0 01-.121-.3c-.038-.092-.075-.193-.113-.293-1.02-2.711-1.399-5.722-1.13-8.947 1.06-12.613 11.958-24.583 24.295-26.684 3.606-.613 6.98-.35 10.03.778.094.03.198.071.3.112.09.034.19.073.291.117q.136.055.283.12c.089.038.186.081.282.127q.136.058.28.13c.085.04.179.087.27.134.084.039.177.088.268.138.084.044.176.092.266.146q.125.066.258.146.097.055.196.114l.058.035q.13.078.258.159c.057.034.123.078.19.122l.053.034.246.164q.122.082.244.17.117.082.234.17a15 15 0 01.463.358l.147.118.154.128.148.127.033.028q.094.081.186.165l.137.122.069.062.024.024c.06.054.127.12.192.184 3.754 3.624 5.541 8.939 5.036 14.962-.757 9.006-6.636 18.088-14.98 23.136-2.994 1.81-6.128 3.004-9.315 3.547a21.7 21.7 0 01-3.644.314zm-12.072-5.6l.014.016.18.192c3.718 3.872 9.337 5.499 15.418 4.464 3.109-.53 6.168-1.695 9.096-3.467 8.18-4.95 13.942-13.841 14.681-22.655.49-5.833-1.232-10.97-4.848-14.463l-.195-.185-.003-.003-.075-.07-.14-.126a5 5 0 00-.17-.152l-.033-.03-.14-.12-.147-.122-.14-.113-.224-.177a5 5 0 00-.221-.166 9 9 0 00-.225-.164 7 7 0 00-.233-.162l-.237-.158-.054-.036q-.09-.059-.18-.115c-.087-.058-.167-.105-.245-.153l-.057-.034q-.091-.056-.184-.107l-.014-.009a5 5 0 00-.242-.137 6 6 0 00-.256-.14 4 4 0 00-.253-.129 11 11 0 00-.529-.256 8 8 0 00-.274-.123q-.141-.064-.273-.115c-.1-.044-.19-.078-.28-.113a5 5 0 00-.279-.104c-2.953-1.095-6.22-1.346-9.717-.751-12.074 2.055-22.74 13.774-23.777 26.12-.264 3.133.103 6.051 1.092 8.677v.003q.051.142.107.282.056.149.114.281.058.147.12.281.063.145.125.278.062.136.128.265l.008.017q.052.117.114.233l.012.025c.049.095.09.18.135.262l.026.052q.054.102.112.206l.027.047q.057.103.117.204c.045.081.086.15.128.22l.02.035q.072.12.148.238l.01.016q.067.114.145.23.08.125.157.237c.056.084.11.16.164.237q.083.116.162.223c.063.087.119.16.177.237l.12.153.053.067q.086.11.176.216c.064.08.122.148.183.218q.089.106.184.21.092.108.182.202l.006.007z\" /><path fill=\"#FF535E\" d=\"M71.358 92.61c.053.833.157 1.985.387 3.34.346 2.041 1.135 6.43 4.066 11.084 2.947 4.677 6.556 7.203 8.762 8.712a34.8 34.8 0 0010.625 4.879 26.3 26.3 0 01-6.173-4.733c-2.99-3.101-4.654-6.379-5.534-8.536-1.555-3.814-1.897-7.191-2.098-9.31a39 39 0 01-.161-4.275V79.976l-9.777-4.696z\" /><path fill=\"#000\" d=\"M95.198 120.969a.342.342 0 00.166-.642 26 26 0 01-6.092-4.672c-2.902-3.01-4.574-6.245-5.464-8.427-1.565-3.842-1.884-7.204-2.074-9.213a38 38 0 01-.16-4.238V79.976a.34.34 0 00-.193-.309l-9.776-4.695a.34.34 0 00-.331.019.34.34 0 00-.162.287l-.097 17.33v.024c.072 1.135.204 2.27.39 3.376.326 1.915 1.086 6.401 4.115 11.209 3.051 4.842 6.828 7.425 8.858 8.812a35 35 0 0010.73 4.927q.044.012.088.012zM80.89 80.192V93.77c-.026 1.433.03 2.885.163 4.308.182 1.913.518 5.472 2.122 9.408.912 2.238 2.626 5.554 5.604 8.643a26.4 26.4 0 003.98 3.381 34.3 34.3 0 01-7.991-4.048c-1.989-1.359-5.69-3.891-8.666-8.612-2.955-4.692-3.701-9.085-4.018-10.96a32 32 0 01-.384-3.29l.094-16.776z\" /><path fill=\"#FF535E\" d=\"M71.452 75.28l9.777 4.696c3.09-.25 5.575-.926 7.31-1.524 4.201-1.452 7.026-3.498 8.688-4.72a37 37 0 005.252-4.695l-9.972-4.696a33.8 33.8 0 01-8.422 6.777 33.9 33.9 0 01-12.633 4.162\" /><path fill=\"#000\" d=\"M81.23 80.319h.027a30.2 30.2 0 007.394-1.542c4.337-1.498 7.228-3.625 8.78-4.767a37.6 37.6 0 005.3-4.738.342.342 0 00-.107-.544l-9.972-4.695a.34.34 0 00-.4.08 33.4 33.4 0 01-8.337 6.708 33.3 33.3 0 01-12.504 4.12.342.342 0 00-.107.65l9.777 4.695a.35.35 0 00.15.034zm20.679-11.172a37 37 0 01-4.884 4.31c-1.522 1.12-4.357 3.207-8.597 4.67a29.5 29.5 0 01-7.133 1.499l-8.667-4.162A34.08 34.08 0 0092.593 64.76z\" /><path fill=\"#FF7E88\" d=\"M81.394 98.046c.2 2.119.543 5.496 2.098 9.311.88 2.156 2.544 5.434 5.534 8.535a26.3 26.3 0 006.176 4.735 28.5 28.5 0 007.312 2.816c3.629-1.995 9.401-5.82 14.029-12.416 3.117-4.44 4.581-8.52 4.986-9.705.363-1.057 1.32-4.011 1.815-7.987a41 41 0 00.314-4.889l-.072-14.811a25 25 0 01-5.615.703c-4.332.046-7.587-1.05-8.857-1.526a24.1 24.1 0 01-6.631-3.775 37 37 0 01-5.253 4.695c-1.66 1.223-4.486 3.268-8.688 4.72a29.7 29.7 0 01-7.31 1.524v13.795a39 39 0 00.162 4.275\" /><path fill=\"#000\" d=\"M102.513 123.786a.33.33 0 00.165-.042c5.708-3.139 10.601-7.47 14.144-12.52 2.856-4.068 4.377-7.88 5.03-9.79.485-1.411 1.368-4.334 1.831-8.056a41 41 0 00.317-4.93l-.072-14.815a.342.342 0 00-.423-.333 24.7 24.7 0 01-5.538.693 24.3 24.3 0 01-8.734-1.503 23.7 23.7 0 01-6.536-3.722.343.343 0 00-.467.034 37 37 0 01-5.204 4.653c-1.523 1.121-4.358 3.207-8.597 4.671a29.5 29.5 0 01-7.226 1.507.34.34 0 00-.316.341V93.77a39 39 0 00.163 4.308c.182 1.913.518 5.472 2.123 9.408.912 2.239 2.626 5.555 5.604 8.644a26.7 26.7 0 006.231 4.783l.026.015a29 29 0 007.399 2.849.3.3 0 00.078.009zm20.733-49.719l.07 14.381a41 41 0 01-.31 4.845c-.456 3.66-1.324 6.531-1.8 7.918-.641 1.877-2.135 5.621-4.943 9.619-3.461 4.932-8.23 9.166-13.798 12.248a28.2 28.2 0 01-7.073-2.737l-.007-.004-.02-.012a26 26 0 01-6.093-4.671c-2.902-3.01-4.574-6.245-5.463-8.428-1.566-3.841-1.884-7.203-2.075-9.212a38 38 0 01-.16-4.238V80.29a30 30 0 007.08-1.514c4.336-1.498 7.227-3.626 8.778-4.767a37.6 37.6 0 005.085-4.507 24.4 24.4 0 006.474 3.63c1.943.73 5.08 1.586 8.982 1.549 1.77-.02 3.541-.227 5.269-.614z\" /><path fill=\"#FF535E\" d=\"M102.482 69.037a24.1 24.1 0 006.631 3.775c1.27.476 4.526 1.572 8.858 1.526a25 25 0 005.614-.703l-9.68-4.792c-2.395.48-5.337.79-8.664.533a31 31 0 01-2.759-.339\" /><path fill=\"#000\" d=\"M117.703 74.682h.272c1.915-.02 3.83-.26 5.692-.713a.342.342 0 00.072-.64l-9.681-4.79a.34.34 0 00-.219-.03 31.4 31.4 0 01-8.57.528 31 31 0 01-2.727-.336.344.344 0 00-.371.197.344.344 0 00.098.408 24.4 24.4 0 006.725 3.828c1.898.712 4.932 1.55 8.709 1.55zm4.86-1.17a25 25 0 01-4.595.483 24.3 24.3 0 01-8.734-1.504 23.6 23.6 0 01-5.48-2.92q.734.09 1.46.148c2.868.221 5.776.048 8.644-.516q4.35 2.156 8.705 4.308\" /><path fill=\"#FF444F\" d=\"M99.71 101.791l-4.22-3.621a2.802 2.802 0 10-3.635 4.265l8.072 6.831a.44.44 0 00.616-.048l15.723-18.221a2.789 2.789 0 10-4.233-3.635z\" /><path stroke=\"#0E0E0E\" strokeWidth=\".6\" d=\"M99.71 101.791l-4.22-3.621a2.802 2.802 0 10-3.635 4.265l8.072 6.831a.44.44 0 00.616-.048l15.723-18.221a2.789 2.789 0 10-4.233-3.635z\" /></svg>;","import React from 'react';\nimport classNames from 'classnames';\nimport {\n    LabelPairedCircleCheckCaptionBoldIcon,\n    LabelPairedCircleExclamationCaptionBoldIcon,\n    LabelPairedClockThreeCaptionBoldIcon,\n    LabelPairedTriangleExclamationCaptionBoldIcon,\n} from '@deriv/quill-icons';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Badge, Text, useDevice } from '@deriv-com/ui';\nimport { TTranslations } from '../../types';\nimport './ClientVerificationStatusBadge.scss';\n\ntype TBadgeColor = React.ComponentProps<typeof Badge>['color'];\n\nconst getBadgeVariations = (localize: TTranslations['localize']) => {\n    return {\n        failed: {\n            color: 'danger-secondary',\n            content: localize('Failed'),\n            icon: <LabelPairedTriangleExclamationCaptionBoldIcon fill='#C40000' />,\n        },\n        in_review: {\n            color: 'warning-secondary',\n            content: localize('In review'),\n            icon: <LabelPairedClockThreeCaptionBoldIcon fill='#C47D00' />,\n        },\n        needs_verification: {\n            color: 'blue-secondary',\n            content: localize('Needs verification'),\n            icon: <LabelPairedCircleExclamationCaptionBoldIcon fill='#0777C4' />,\n        },\n        verified: {\n            color: 'success-secondary',\n            content: localize('Verified'),\n            icon: <LabelPairedCircleCheckCaptionBoldIcon fill='#007A22' />,\n        },\n    };\n};\n\ntype TClientVerificationBadgeProps = {\n    onClick?: VoidFunction;\n    variant: keyof ReturnType<typeof getBadgeVariations>;\n};\n\nconst ClientVerificationStatusBadge: React.FC<TClientVerificationBadgeProps> = ({ onClick, variant }) => {\n    const { localize } = useTranslations();\n    const { isDesktop } = useDevice();\n    const { color, content, icon } = getBadgeVariations(localize)[variant];\n    return (\n        <Badge\n            badgeSize='sm'\n            className='wallets-client-verification-badge'\n            color={color as TBadgeColor}\n            leftIcon={icon}\n            onClick={e => {\n                if (onClick) {\n                    e.stopPropagation();\n                    onClick();\n                }\n            }}\n        >\n            <Text\n                className={classNames('wallets-client-verification-badge__content', {\n                    'wallets-client-verification-badge__content--underlined': !!onClick,\n                })}\n                size={isDesktop ? 'xs' : 'sm'}\n                weight='bold'\n            >\n                {content}\n            </Text>\n        </Badge>\n    );\n};\n\nexport default ClientVerificationStatusBadge;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { LabelPairedChevronRightMdRegularIcon } from '@deriv/quill-icons';\nimport { Text } from '@deriv-com/ui';\nimport './DocumentTile.scss';\n\ntype TDocumentTileProps = {\n    badge?: JSX.Element;\n    disabled?: boolean;\n    onClick: VoidFunction;\n    title: string;\n};\n\nconst DocumentTile: React.FC<TDocumentTileProps> = ({ badge, disabled, onClick, title }) => {\n    return (\n        <button className='wallets-document-tile' disabled={disabled} onClick={onClick}>\n            <Text align='start' size='sm' weight='bold'>\n                {title}\n            </Text>\n            <div className='wallets-document-tile__status'>\n                {badge}\n                <LabelPairedChevronRightMdRegularIcon\n                    className={classNames('wallets-document-tile__chevron', {\n                        'wallets-document-tile__chevron--disabled': disabled,\n                    })}\n                />\n            </div>\n        </button>\n    );\n};\n\nexport default DocumentTile;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useGrowthbookGetFeatureValue } from '@deriv/api-v2';\nimport {\n    ACCOUNTS_OS_POI_STATUS_URL,\n    ACCOUNTS_OS_POI_URL,\n    ACCOUNTS_OS_POA_URL,\n    getSocketURL,\n    isNavigationFromTradersHubOS,\n} from '@deriv/shared';\nimport { useTranslations } from '@deriv-com/translations';\nimport { getToken } from '@deriv/utils';\nimport { TModifiedMT5Account, TWalletsMFAccountStatus } from '../../../../types';\nimport { getClientVerification } from '../../../../utils';\nimport { ClientVerificationStatusBadge } from '../../../ClientVerificationBadge';\nimport { DocumentTile } from './components';\nimport './DocumentsList.scss';\nimport { LocalStorageUtils, URLUtils, WebSocketUtils } from '@deriv-com/utils';\n\ntype TDocumentsListProps = {\n    account: TModifiedMT5Account | TWalletsMFAccountStatus;\n};\n\ntype TStatusBadgeProps = Record<TModifiedMT5Account['client_kyc_status']['poa_status' | 'poi_status'], JSX.Element>;\n\nconst statusBadge: TStatusBadgeProps = {\n    expired: <ClientVerificationStatusBadge variant='failed' />,\n    none: <></>,\n    pending: <ClientVerificationStatusBadge variant='in_review' />,\n    rejected: <ClientVerificationStatusBadge variant='failed' />,\n    suspected: <ClientVerificationStatusBadge variant='failed' />,\n    verified: <ClientVerificationStatusBadge variant='verified' />,\n};\n\nconst DocumentsList: React.FC<TDocumentsListProps> = ({ account }) => {\n    const history = useHistory();\n    const { localize } = useTranslations();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { hasPoaStatus, hasPoiStatus, isPoaRequired, isPoiRequired, isTinRequired, statuses } =\n        getClientVerification(account);\n    const [shouldRedirectToAccountsOSApp, isRedirectToAccountsOSAppFFLoaded] = useGrowthbookGetFeatureValue({\n        featureFlag: 'redirect_to_poi_in_accounts_os',\n    });\n    const localizeLanguage = LocalStorageUtils.getValue<string>('i18n_language');\n    const urlLang = URLUtils.getQueryParameter('lang');\n    const i18nLanguage = localizeLanguage || urlLang || 'en';\n\n    const getFormattedURL = (urlLink: string) => {\n        const url = new URL(urlLink);\n        const urlParams = new URLSearchParams(location.search);\n        const platformConfig = urlParams.get('platform') ?? window.sessionStorage.getItem('config.platform');\n        const platform = platformConfig ?? (isNavigationFromTradersHubOS() ? 'tradershub_os' : 'deriv_app');\n\n        const params = {\n            appid: WebSocketUtils.getAppId(),\n            lang: i18nLanguage,\n            platform,\n            server: getSocketURL(),\n            token: getToken(activeWallet?.loginid || ''),\n        };\n\n        Object.entries(params).forEach(([key, value]) => {\n            url.searchParams.append(key, String(value));\n        });\n\n        return url.toString();\n    };\n\n    return (\n        <div className='wallets-documents-list'>\n            {hasPoiStatus && (\n                <DocumentTile\n                    badge={statusBadge[statuses.poi_status]}\n                    disabled={!isPoiRequired}\n                    onClick={() => {\n                        if (isRedirectToAccountsOSAppFFLoaded && shouldRedirectToAccountsOSApp) {\n                            const { poi_status: poiStatus } = account.client_kyc_status;\n                            const redirectUrl = poiStatus === 'none' ? ACCOUNTS_OS_POI_URL : ACCOUNTS_OS_POI_STATUS_URL;\n                            window.location.replace(getFormattedURL(redirectUrl));\n                        } else {\n                            // @ts-expect-error the following link is not part of wallets routes config\n                            history.push('/account/proof-of-identity');\n                        }\n                    }}\n                    title={localize('Proof of identity')}\n                />\n            )}\n            {hasPoaStatus && (\n                <DocumentTile\n                    badge={statusBadge[statuses.poa_status]}\n                    disabled={!isPoaRequired}\n                    onClick={() => {\n                        if ('platform' in account && account?.platform === 'mt5') {\n                            localStorage.setItem('mt5_poa_status', statuses.poa_status);\n                        }\n                        if (isRedirectToAccountsOSAppFFLoaded && shouldRedirectToAccountsOSApp) {\n                            window.location.replace(getFormattedURL(ACCOUNTS_OS_POA_URL));\n                        } else {\n                            // @ts-expect-error the following link is not part of wallets routes config\n                            history.push('/account/proof-of-address');\n                        }\n                    }}\n                    title={localize('Proof of address')}\n                />\n            )}\n            {isTinRequired && (\n                <DocumentTile\n                    // @ts-expect-error the following link is not part of wallets routes config\n                    onClick={() => history.push('/account/financial-assessment')}\n                    title={localize('Additional information')}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default DocumentsList;\n","import React from 'react';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport DerivLightUserVerificationIcon from '../../public/images/ic-deriv-light-user-verification.svg';\nimport { TModifiedMT5Account, TWalletsMFAccountStatus } from '../../types';\nimport { ModalStepWrapper } from '../Base';\nimport { DocumentsList } from './components';\nimport './ClientVerificationModal.scss';\n\ntype TClientVerificationModal = {\n    account: TModifiedMT5Account | TWalletsMFAccountStatus;\n};\n\nconst ClientVerificationModal: React.FC<TClientVerificationModal> = ({ account }) => {\n    const { localize } = useTranslations();\n    const { isMobile } = useDevice();\n\n    return (\n        <ModalStepWrapper\n            disableScroll\n            title={account.is_added ? localize('Verification required') : localize('Complete your profile')}\n        >\n            <div className='wallets-client-verification-modal'>\n                <DerivLightUserVerificationIcon height={128} width={128} />\n                <Text\n                    align='center'\n                    className='wallets-client-verification-modal__description'\n                    size={isMobile ? 'md' : 'sm'}\n                >\n                    {account.is_added ? (\n                        <Localize i18n_default_text='Your account needs verification.' />\n                    ) : (\n                        <Localize\n                            i18n_default_text={\n                                'Confirm your details to open the account. After verification, you can begin trading.'\n                            }\n                        />\n                    )}\n                </Text>\n                <DocumentsList account={account} />\n            </div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default ClientVerificationModal;\n","import React, { ComponentProps, FC } from 'react';\nimport { Chat } from '@deriv/utils';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, Text } from '@deriv-com/ui';\nimport { WalletDialog } from '../Base';\nimport './WalletDisabledAccountModal.scss';\n\ntype WalletDisabledAccountModalProps = ComponentProps<typeof WalletDialog> & {\n    accountType: string;\n};\n\nconst WalletDisabledAccountModal: FC<WalletDisabledAccountModalProps> = ({ accountType, isVisible, onClose }) => {\n    return (\n        <WalletDialog\n            className='wallets-disabled-account-modal'\n            isVisible={isVisible}\n            onClose={onClose}\n            shouldCloseOnOverlayClick\n        >\n            <WalletDialog.Header onClose={onClose}>\n                <Localize i18n_default_text='{{accountType}} account disabled ' values={{ accountType }} />\n            </WalletDialog.Header>\n            <WalletDialog.Content>\n                <Text align='start' size='sm'>\n                    <Localize i18n_default_text='Contact us via live chat for more details.' />\n                </Text>\n            </WalletDialog.Content>\n            <WalletDialog.Footer>\n                <Button\n                    color='primary'\n                    onClick={() => {\n                        Chat.open();\n                    }}\n                >\n                    <Localize i18n_default_text='Live chat' />\n                </Button>\n            </WalletDialog.Footer>\n        </WalletDialog>\n    );\n};\n\nexport default WalletDisabledAccountModal;\n","import React from 'react';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { DISABLED_PLATFORM_STATUSES, MT5_ACCOUNT_STATUS, TRADING_PLATFORM_STATUS } from '../../constants';\nimport './TradingPlatformStatus.scss';\n\ntype TradingPlatformStatusModalProps = {\n    status: (typeof DISABLED_PLATFORM_STATUSES)[number];\n};\n\nconst getContentConfig = (localize: ReturnType<typeof useTranslations>['localize']) => {\n    const maintenanceConfig = {\n        content: localize('We’re currently performing server maintenance. Service may be affected.'),\n        title: localize('Server Maintenance'),\n    };\n    const unavailableConfig = {\n        content: localize('Check back in a few minutes by refreshing the page.'),\n        title: localize('Account temporarily unavailable'),\n    };\n\n    return {\n        [MT5_ACCOUNT_STATUS.UNDER_MAINTENANCE]: maintenanceConfig,\n        [TRADING_PLATFORM_STATUS.MAINTENANCE]: maintenanceConfig,\n        [MT5_ACCOUNT_STATUS.UNAVAILABLE]: unavailableConfig,\n    };\n};\n\nconst TradingPlatformStatus: React.FC<TradingPlatformStatusModalProps> = ({ status }) => {\n    const { hide } = useModal();\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const { content, title } = getContentConfig(localize)[status];\n\n    return (\n        <div className='wallets-server-maintenance'>\n            <Text size='md' weight='bold'>\n                {title}\n            </Text>\n            <div className='wallets-server-maintenance__content'>\n                <Text size='sm'>{content}</Text>\n            </div>\n            <div className='wallets-server-maintenance__footer'>\n                <Button\n                    borderWidth='sm'\n                    color='black'\n                    onClick={() => hide()}\n                    size={isDesktop ? 'md' : 'lg'}\n                    textSize='sm'\n                    variant='outlined'\n                >\n                    {localize('OK')}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default TradingPlatformStatus;\n","import React from 'react';\nimport { ModalWrapper } from '../../../../components/Base';\nimport { DISABLED_PLATFORM_STATUSES } from '../../constants';\nimport { TradingPlatformStatus } from '../../screens';\n\ntype TradingPlatformStatusModalProps = {\n    status: (typeof DISABLED_PLATFORM_STATUSES)[number];\n};\n\nconst TradingPlatformStatusModal: React.FC<TradingPlatformStatusModalProps> = ({ status }) => (\n    <ModalWrapper>\n        <TradingPlatformStatus status={status} />\n    </ModalWrapper>\n);\n\nexport default TradingPlatformStatusModal;\n","import React, { useMemo } from 'react';\nimport { useIsEuRegion, useTradingPlatformStatus } from '@deriv/api-v2';\nimport { useTranslations } from '@deriv-com/translations';\nimport { ClientVerificationStatusBadge } from '../../../../../../components';\nimport type { THooks } from '../../../../../../types';\nimport { TAddedMT5Account } from '../../../../../../types';\nimport {\n    CFD_PLATFORMS,\n    DISABLED_PLATFORM_STATUSES,\n    getMarketTypeDetails,\n    MARKET_TYPE,\n    MT5_ACCOUNT_STATUS,\n    TRADING_PLATFORM_STATUS,\n} from '../../../../constants';\n\ntype TBadgeVariations = Partial<React.ComponentProps<typeof ClientVerificationStatusBadge>['variant']> | undefined;\ntype TPlatformStatus = THooks.TradingPlatformStatus[number]['status'];\ntype TDisabledPlatformStatus = (typeof DISABLED_PLATFORM_STATUSES)[number];\n\nconst getClientKycStatus = (status: TAddedMT5Account['status']): TBadgeVariations => {\n    switch (status) {\n        case MT5_ACCOUNT_STATUS.POA_FAILED:\n        case MT5_ACCOUNT_STATUS.PROOF_FAILED:\n            return 'failed';\n        case MT5_ACCOUNT_STATUS.VERIFICATION_PENDING:\n        case MT5_ACCOUNT_STATUS.POA_PENDING:\n            return 'in_review';\n        case MT5_ACCOUNT_STATUS.NEEDS_VERIFICATION:\n        case MT5_ACCOUNT_STATUS.POA_REQUIRED:\n            return 'needs_verification';\n        default:\n    }\n};\n\nconst getMT5PlatformStatus = (status: TAddedMT5Account['status'] | TPlatformStatus) => {\n    switch (status) {\n        case TRADING_PLATFORM_STATUS.ACTIVE:\n            return 'active';\n        case TRADING_PLATFORM_STATUS.UNAVAILABLE:\n        case MT5_ACCOUNT_STATUS.UNAVAILABLE:\n            return 'unavailable';\n        case MT5_ACCOUNT_STATUS.UNDER_MAINTENANCE:\n            return 'under_maintenance';\n        case TRADING_PLATFORM_STATUS.MAINTENANCE:\n            return 'maintenance';\n        default:\n    }\n};\n\nconst useAddedMT5Account = (account: TAddedMT5Account) => {\n    const { localize } = useTranslations();\n\n    // @ts-expect-error The enabled property exists, but the api-types are invalid\n    const isAccountDisabled = 'rights' in account && !account.rights.enabled;\n\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const accountDetails = useMemo(\n        () => getMarketTypeDetails(localize, account.product, isEuRegion)[account.market_type ?? MARKET_TYPE.ALL],\n        [account.market_type, account.product, localize, isEuRegion]\n    );\n\n    const { getPlatformStatus } = useTradingPlatformStatus();\n    const platformStatus = getMT5PlatformStatus(account.status || getPlatformStatus(CFD_PLATFORMS.MT5));\n    const hasDisabledPlatformStatus = DISABLED_PLATFORM_STATUSES.includes(platformStatus as TDisabledPlatformStatus);\n\n    const kycStatus = getClientKycStatus(account.status);\n\n    const showMT5TradeModal = platformStatus === TRADING_PLATFORM_STATUS.ACTIVE && !kycStatus;\n\n    return {\n        accountDetails,\n        hasDisabledPlatformStatus,\n        isAccountDisabled,\n        kycStatus,\n        platformStatus,\n        showMT5TradeModal,\n    };\n};\n\nexport default useAddedMT5Account;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Text } from '@deriv-com/ui';\nimport {\n    ClientVerificationModal,\n    ClientVerificationStatusBadge,\n    WalletDisabledAccountModal,\n    WalletStatusBadge,\n} from '../../../../../components';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport { TradingAccountCard } from '../../../../../components/TradingAccountCard';\nimport useIsRtl from '../../../../../hooks/useIsRtl';\nimport { TAddedMT5Account } from '../../../../../types';\nimport { PlatformStatusBadge } from '../../../components';\nimport { DISABLED_PLATFORM_STATUSES, MARKET_TYPE, PlatformDetails } from '../../../constants';\nimport { MT5TradeModal, TradingPlatformStatusModal } from '../../../modals';\nimport { useAddedMT5Account } from './hooks';\nimport './AddedMT5AccountsList.scss';\n\ntype TProps = { account: TAddedMT5Account };\n\ntype TDisabledPlatformStatus = (typeof DISABLED_PLATFORM_STATUSES)[number];\n\nconst AddedMT5AccountsList: React.FC<TProps> = ({ account }) => {\n    const { localize } = useTranslations();\n    const isRtl = useIsRtl();\n    const {\n        accountDetails,\n        hasDisabledPlatformStatus,\n        isAccountDisabled,\n        kycStatus,\n        platformStatus,\n        showMT5TradeModal,\n    } = useAddedMT5Account(account);\n\n    const { show } = useModal();\n    const [showDisabledAccountModal, setShowDisabledAccountModal] = useState(false);\n\n    const shouldShowBalance = !isAccountDisabled && !(kycStatus || hasDisabledPlatformStatus);\n\n    return (\n        <>\n            <TradingAccountCard\n                className={classNames('wallets-added-mt5__card', {\n                    'wallets-added-mt5__card--disabled': isAccountDisabled || hasDisabledPlatformStatus,\n                })}\n                onClick={() => {\n                    if (isAccountDisabled) {\n                        setShowDisabledAccountModal(true);\n                        return;\n                    }\n\n                    if (hasDisabledPlatformStatus) {\n                        return show(<TradingPlatformStatusModal status={platformStatus as TDisabledPlatformStatus} />, {\n                            defaultRootId: 'wallets_modal_root',\n                        });\n                    }\n\n                    if (showMT5TradeModal) {\n                        return show(\n                            <MT5TradeModal\n                                marketType={account.market_type ?? MARKET_TYPE.ALL}\n                                mt5Account={account}\n                                platform={PlatformDetails.mt5.platform}\n                            />,\n                            { defaultRootId: 'wallets_modal_root' }\n                        );\n                    }\n                }}\n            >\n                <TradingAccountCard.Icon className='wallets-added-mt5__icon'>\n                    {accountDetails.icon}\n                </TradingAccountCard.Icon>\n                <TradingAccountCard.Section>\n                    <TradingAccountCard.Content\n                        className={classNames('wallets-added-mt5__details', {\n                            'wallets-added-mt5__details--disabled': isAccountDisabled || hasDisabledPlatformStatus,\n                        })}\n                    >\n                        <div className='wallets-added-mt5__details-title'>\n                            <Text size='sm'>{accountDetails.title}</Text>\n                        </div>\n                        {shouldShowBalance && (\n                            <Text align='start' size='sm' weight='bold'>\n                                {account.display_balance}\n                            </Text>\n                        )}\n                        <Text align='start' as='p' size='xs'>\n                            {account.display_login}\n                        </Text>\n                        {!isAccountDisabled && kycStatus && (\n                            <ClientVerificationStatusBadge\n                                onClick={() =>\n                                    show(<ClientVerificationModal account={account} />, {\n                                        defaultRootId: 'wallets_modal_root',\n                                    })\n                                }\n                                variant={kycStatus}\n                            />\n                        )}\n                        {!isAccountDisabled && platformStatus && (\n                            <PlatformStatusBadge badgeSize='md' status={platformStatus as TDisabledPlatformStatus} />\n                        )}\n                        {isAccountDisabled && <WalletStatusBadge badgeSize='md' padding='tight' status='disabled' />}\n                    </TradingAccountCard.Content>\n                    <TradingAccountCard.Button\n                        className={classNames('wallets-added-mt5__icon', {\n                            'wallets-added-mt5__icon--pending': kycStatus === 'in_review',\n                        })}\n                    >\n                        <div className='wallets-available-mt5__icon'>\n                            {isRtl ? (\n                                <LabelPairedChevronLeftCaptionRegularIcon width={16} />\n                            ) : (\n                                <LabelPairedChevronRightCaptionRegularIcon width={16} />\n                            )}\n                        </div>\n                    </TradingAccountCard.Button>\n                </TradingAccountCard.Section>\n            </TradingAccountCard>\n            <WalletDisabledAccountModal\n                accountType={localize('CFDs')}\n                isVisible={showDisabledAccountModal}\n                onClose={() => setShowDisabledAccountModal(false)}\n            />\n        </>\n    );\n};\n\nexport default AddedMT5AccountsList;\n","import React, { ComponentProps } from 'react';\nimport classNames from 'classnames';\nimport { useActiveWalletAccount, useIsEuRegion } from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport { WalletMarketCurrencyIcon, WalletSuccess } from '../../../../components';\nimport { WalletGradientBackground } from '../../../../components/WalletGradientBackground';\nimport { TDisplayBalance, THooks, TMarketTypes, TPlatforms } from '../../../../types';\nimport { CFD_PLATFORMS, getMarketTypeDetails, MARKET_TYPE, PlatformDetails } from '../../constants';\nimport './CFDSuccess.scss';\n\ntype TSuccessProps = {\n    actionButtons?: ComponentProps<typeof WalletSuccess>['actionButtons'];\n    description: React.ReactNode;\n    displayBalance:\n        | TDisplayBalance.CtraderAccountsList\n        | TDisplayBalance.DxtradeAccountsList\n        | TDisplayBalance.MT5AccountsList;\n    landingCompanyName?: string;\n    marketType?: TMarketTypes.SortedMT5Accounts;\n    platform?: TPlatforms.All;\n    product?: THooks.AvailableMT5Accounts['product'];\n    title: React.ReactNode;\n};\n\nconst CFDSuccess: React.FC<TSuccessProps> = ({\n    actionButtons,\n    description,\n    displayBalance,\n    landingCompanyName,\n    marketType,\n    platform,\n    product,\n    title,\n}) => {\n    const { data } = useActiveWalletAccount();\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const { data: isEuRegion } = useIsEuRegion();\n    const isDemo = data?.is_virtual;\n\n    const isDxtradeOrCtrader =\n        marketType === MARKET_TYPE.ALL &&\n        (platform === PlatformDetails.dxtrade.platform || platform === PlatformDetails.ctrader.platform);\n\n    let marketTypeTitle = isEuRegion ? localize('Multipliers') : localize('Options');\n\n    if (marketType && platform) {\n        const isPlatformValid = Object.keys(PlatformDetails).includes(platform);\n        if (isDxtradeOrCtrader && isPlatformValid) {\n            marketTypeTitle = PlatformDetails[platform].title;\n        } else {\n            marketTypeTitle = getMarketTypeDetails(localize, product, isEuRegion)[marketType].title;\n        }\n    }\n\n    const platformTitlePrefix = platform === PlatformDetails.mt5.platform ? CFD_PLATFORMS.MT5.toLocaleUpperCase() : '';\n\n    return (\n        <WalletSuccess\n            actionButtons={isDesktop ? actionButtons : undefined}\n            description={description}\n            renderIcon={() => (\n                <WalletGradientBackground\n                    bodyClassName='wallets-cfd-success__gradient'\n                    currency={data?.currency ?? 'USD'}\n                    hasShine\n                    theme='grey'\n                >\n                    <div className='wallets-cfd-success'>\n                        <div className='wallets-cfd-success__icon'>\n                            <div\n                                className={classNames(\n                                    'wallets-cfd-success__badge',\n                                    `wallets-cfd-success__badge--${isDemo ? 'demo' : 'real'}`\n                                )}\n                            >\n                                <Text color='white' size='2xs' weight='bold'>\n                                    {isDemo ? localize('Demo') : localize('Real')}\n                                </Text>\n                            </div>\n                            <div className='wallets-cfd-success__market-icon'>\n                                <WalletMarketCurrencyIcon\n                                    currency={data?.currency ?? 'USD'}\n                                    isDemo={isDemo ?? false}\n                                    marketType={marketType}\n                                    platform={platform}\n                                    product={product}\n                                />\n                            </div>\n                            <div className='wallets-cfd-success__info'>\n                                <Text size='2xs'>\n                                    {platformTitlePrefix} {marketTypeTitle} {!isDemo && landingCompanyName}\n                                </Text>\n                                <Text color='primary' size='2xs'>\n                                    <Localize\n                                        i18n_default_text='{{currency}} Wallet'\n                                        values={{ currency: data?.currency }}\n                                    />\n                                </Text>\n                                {!displayBalance ? (\n                                    <div\n                                        className='wallets-skeleton wallets-cfd-success__balance-loader'\n                                        data-testid='dt_wallets_cfd_success_skeleton_loader'\n                                    />\n                                ) : (\n                                    <Text size='sm' weight='bold'>\n                                        {displayBalance}\n                                    </Text>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </WalletGradientBackground>\n            )}\n            title={title}\n        />\n    );\n};\n\nexport default CFDSuccess;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { WalletButtonGroup } from '../../../../../components';\nimport { THooks } from '../../../../../types';\n\ntype TCTraderSuccessModalButtons = {\n    createdAccount?: THooks.CreateOtherCFDAccount;\n    hide: () => void;\n    isDemo?: boolean;\n};\n\nconst CTraderSuccessModalButtons = ({ createdAccount, hide, isDemo }: TCTraderSuccessModalButtons) => {\n    const history = useHistory();\n    const { isDesktop } = useDevice();\n\n    const walletButtonSizes = isDesktop ? 'md' : 'lg';\n\n    if (isDemo) {\n        return (\n            <div className='wallets-success-btn'>\n                <Button isFullWidth onClick={hide} size={walletButtonSizes} textSize='sm'>\n                    <Localize i18n_default_text='OK' />\n                </Button>\n            </div>\n        );\n    }\n\n    return (\n        <WalletButtonGroup isFlex isFullWidth>\n            <Button\n                borderWidth='sm'\n                color='black'\n                onClick={hide}\n                size={walletButtonSizes}\n                textSize='sm'\n                variant='outlined'\n            >\n                <Localize i18n_default_text='Maybe later' />\n            </Button>\n            <Button\n                onClick={() => {\n                    hide();\n                    history.push('/wallet/account-transfer', { toAccountLoginId: createdAccount?.account_id });\n                }}\n                size={walletButtonSizes}\n                textSize='sm'\n            >\n                <Localize i18n_default_text='Transfer funds' />\n            </Button>\n        </WalletButtonGroup>\n    );\n};\n\nexport default CTraderSuccessModalButtons;\n","import React from 'react';\nimport { useCtraderAccountsList } from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper, ModalWrapper, WalletLoader } from '../../../../components';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { THooks } from '../../../../types';\nimport { PlatformDetails } from '../../constants';\nimport { CFDSuccess } from '../../screens';\nimport { CTraderSuccessModalButtons } from './components';\n\ntype TCTraderSuccessModal = {\n    createdAccount?: THooks.CreateOtherCFDAccount;\n    isDemo?: boolean;\n    walletCurrencyType: THooks.WalletAccountsList['wallet_currency_type'];\n};\n\nconst CTraderSuccessModal = ({ createdAccount, isDemo, walletCurrencyType }: TCTraderSuccessModal) => {\n    const { data: cTraderAccounts, isLoading: isCtraderAccountsListLoading } = useCtraderAccountsList();\n    const { isDesktop } = useDevice();\n    const { hide } = useModal();\n    const { localize } = useTranslations();\n\n    const cTraderAccount = cTraderAccounts?.find(account => account.login);\n    const isLoading = !cTraderAccounts || isCtraderAccountsListLoading || !cTraderAccount;\n\n    if (isLoading) return <WalletLoader />;\n\n    const description = isDemo\n        ? localize('Practise trading with {{ctraderBalance}} virtual funds.', {\n              ctraderBalance: cTraderAccount.display_balance,\n          })\n        : localize(\n              'Transfer funds from your {{walletCurrencyType}} Wallet to your {{ctraderTitle}} account to start trading.',\n              {\n                  ctraderTitle: PlatformDetails.ctrader.title,\n                  walletCurrencyType,\n              }\n          );\n\n    const title = isDemo ? (\n        <Localize\n            i18n_default_text='Your {{ctraderTitle}} demo account is ready'\n            values={{ ctraderTitle: PlatformDetails.ctrader.title }}\n        />\n    ) : (\n        <Localize\n            i18n_default_text='Your {{ctraderTitle}} account is ready'\n            values={{ ctraderTitle: PlatformDetails.ctrader.title }}\n        />\n    );\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper hideCloseButton>\n                <CFDSuccess\n                    actionButtons={\n                        <CTraderSuccessModalButtons createdAccount={createdAccount} hide={hide} isDemo={isDemo} />\n                    }\n                    description={description}\n                    displayBalance={cTraderAccount.display_balance}\n                    marketType='all'\n                    platform={PlatformDetails.ctrader.platform}\n                    title={title}\n                />\n            </ModalWrapper>\n        );\n    }\n    return (\n        <ModalStepWrapper\n            renderFooter={() => (\n                <CTraderSuccessModalButtons createdAccount={createdAccount} hide={hide} isDemo={isDemo} />\n            )}\n            title={' '}\n        >\n            <CFDSuccess\n                actionButtons={\n                    <CTraderSuccessModalButtons createdAccount={createdAccount} hide={hide} isDemo={isDemo} />\n                }\n                description={description}\n                displayBalance={cTraderAccount.display_balance}\n                marketType='all'\n                platform={PlatformDetails.ctrader.platform}\n                title={title}\n            />\n        </ModalStepWrapper>\n    );\n};\n\nexport default CTraderSuccessModal;\n","import React, { useEffect } from 'react';\nimport { useActiveWalletAccount, useCreateOtherCFDAccount } from '@deriv/api-v2';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text } from '@deriv-com/ui';\nimport { TradingAccountCard, WalletError } from '../../../../../components';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport useIsRtl from '../../../../../hooks/useIsRtl';\nimport { PlatformDetails } from '../../../constants';\nimport { CTraderSuccessModal } from '../../../modals/CTraderSuccessModal';\n\nconst AvailableCTraderAccountsList: React.FC = () => {\n    const { hide, show } = useModal();\n    const {\n        data: createdAccount,\n        error,\n        isLoading: isCFDAccountCreationLoading,\n        isSuccess: isCFDAccountCreationSuccess,\n        mutate,\n        status,\n    } = useCreateOtherCFDAccount();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const isRtl = useIsRtl();\n    const { localize } = useTranslations();\n\n    const accountType = activeWallet?.is_virtual ? 'demo' : 'real';\n\n    const onSubmit = () => {\n        mutate({\n            payload: {\n                account_type: accountType,\n                market_type: 'all',\n                platform: PlatformDetails.ctrader.platform,\n            },\n        });\n    };\n\n    useEffect(() => {\n        if (status === 'success') {\n            show(\n                <CTraderSuccessModal\n                    createdAccount={createdAccount}\n                    isDemo={activeWallet?.is_virtual}\n                    walletCurrencyType={activeWallet?.wallet_currency_type || 'USD'}\n                />\n            );\n        }\n        if (status === 'error') {\n            show(\n                <WalletError\n                    errorMessage={error?.error?.message ?? localize('Something went wrong. Please try again')}\n                    onClick={() => hide()}\n                    title={error?.error?.message ?? localize('Error')}\n                />\n            );\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [accountType, activeWallet?.wallet_currency_type, error?.error?.message, status]);\n\n    return (\n        <TradingAccountCard disabled={isCFDAccountCreationLoading || isCFDAccountCreationSuccess} onClick={onSubmit}>\n            <TradingAccountCard.Icon>{PlatformDetails.ctrader.icon}</TradingAccountCard.Icon>\n            <TradingAccountCard.Section>\n                <TradingAccountCard.Content>\n                    <Text align='start' size='sm'>\n                        {PlatformDetails.ctrader.title}\n                    </Text>\n                    <Text align='start' size='xs'>\n                        <Localize i18n_default_text='CFDs on financial and derived instruments with copy trading.' />\n                    </Text>\n                </TradingAccountCard.Content>\n                <TradingAccountCard.Button>\n                    {isRtl ? (\n                        <LabelPairedChevronLeftCaptionRegularIcon width={16} />\n                    ) : (\n                        <LabelPairedChevronRightCaptionRegularIcon width={16} />\n                    )}\n                </TradingAccountCard.Button>\n            </TradingAccountCard.Section>\n        </TradingAccountCard>\n    );\n};\n\nexport default AvailableCTraderAccountsList;\n","import React from 'react';\nimport { DerivLightDmt5PasswordIcon, DerivLightIcDxtradePasswordIcon } from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { WalletPasswordFieldLazy } from '../../../../components/Base';\nimport { TPlatforms } from '../../../../types';\nimport { validPassword, validPasswordMT5 } from '../../../../utils/password-validation';\nimport { CFD_PLATFORMS, PlatformDetails } from '../../constants';\nimport './CreatePassword.scss';\n\ntype TProps = {\n    isLoading?: boolean;\n    onPasswordChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onPrimaryClick: () => void;\n    password: string;\n    platform: TPlatforms.All;\n};\n\nconst CreatePasswordIcon = {\n    dxtrade: <DerivLightIcDxtradePasswordIcon height={120} width={120} />,\n    mt5: <DerivLightDmt5PasswordIcon height={120} width={120} />,\n} as const;\n\nconst CreatePassword: React.FC<TProps> = ({ isLoading, onPasswordChange, onPrimaryClick, password, platform }) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    const { title } = PlatformDetails[platform as keyof typeof PlatformDetails];\n    const isMT5 = platform === CFD_PLATFORMS.MT5;\n    const disableButton = isMT5 ? !validPasswordMT5(password) : !validPassword(password);\n\n    return (\n        <div className='wallets-create-password'>\n            {CreatePasswordIcon[platform as keyof typeof CreatePasswordIcon]}\n            <div className='wallets-create-password__text'>\n                <Text align='center' lineHeight='xl' weight='bold'>\n                    <Localize i18n_default_text='Create a {{title}} password' values={{ title }} />\n                </Text>\n                <Text align='center' size='sm'>\n                    <Localize\n                        i18n_default_text='You can use this password for all your {{title}} accounts.'\n                        values={{ title }}\n                    />\n                </Text>\n            </div>\n            <WalletPasswordFieldLazy\n                label={localize('{{title}} password', { title })}\n                mt5Policy={isMT5}\n                onChange={onPasswordChange}\n                password={password}\n            />\n            {isDesktop && (\n                <Button\n                    disabled={!password || isLoading || disableButton}\n                    isLoading={isLoading}\n                    onClick={onPrimaryClick}\n                    size='md'\n                >\n                    <Localize i18n_default_text='Create {{title}} password' values={{ title }} />\n                </Button>\n            )}\n        </div>\n    );\n};\n\nexport default CreatePassword;\n","import React, { ComponentProps, FC } from 'react';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper, ModalWrapper } from '../../../../components';\nimport { validPassword, validPasswordMT5 } from '../../../../utils/password-validation';\nimport { CFD_PLATFORMS, PlatformDetails } from '../../constants';\nimport { CreatePassword } from '../../screens';\nimport '../EnterPasswordModal/EnterPasswordModal.scss';\n\nconst CreatePasswordModal: FC<ComponentProps<typeof CreatePassword>> = ({\n    isLoading,\n    onPasswordChange,\n    onPrimaryClick,\n    password,\n    platform,\n}) => {\n    const { isDesktop } = useDevice();\n    const isMT5 = platform === CFD_PLATFORMS.MT5;\n    const disableButton = isMT5 ? !validPasswordMT5(password) : !validPassword(password);\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper>\n                <div className='wallets-password-modal'>\n                    <CreatePassword\n                        isLoading={isLoading}\n                        onPasswordChange={onPasswordChange}\n                        onPrimaryClick={onPrimaryClick}\n                        password={password}\n                        platform={platform}\n                    />\n                </div>\n            </ModalWrapper>\n        );\n    }\n\n    return (\n        <ModalStepWrapper\n            renderFooter={() => {\n                return (\n                    <div className='wallets-password-modal__footer'>\n                        <Button\n                            disabled={!password || isLoading || disableButton}\n                            isFullWidth\n                            isLoading={isLoading}\n                            onClick={onPrimaryClick}\n                            size='lg'\n                            textSize={isDesktop ? 'md' : 'sm'}\n                        >\n                            <Localize\n                                i18n_default_text='Create {{platformTitle}} password'\n                                values={{ platformTitle: PlatformDetails[platform].title }}\n                            />\n                        </Button>\n                    </div>\n                );\n            }}\n            title={''}\n        >\n            <div className='wallets-password-modal__body'>\n                <CreatePassword\n                    isLoading={isLoading}\n                    onPasswordChange={onPasswordChange}\n                    onPrimaryClick={onPrimaryClick}\n                    password={password}\n                    platform={platform}\n                />\n            </div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default CreatePasswordModal;\n","import React from 'react';\nimport { useIsEuRegion } from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { InlineMessage, Text, useDevice } from '@deriv-com/ui';\nimport { TAvailableMT5Account } from '../../../../../types';\nimport { getMarketTypeDetails, JURISDICTION, MARKET_TYPE, PlatformDetails } from '../../../constants';\nimport './MT5LicenceMessage.scss';\n\ntype TMT5LicenseMessageProps = {\n    account: TAvailableMT5Account;\n};\n\nconst MT5LicenseMessage: React.FC<TMT5LicenseMessageProps> = ({ account }) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const isSvg = account.shortcode === JURISDICTION.SVG;\n    const { data: isEuRegion } = useIsEuRegion();\n    const accountName = getMarketTypeDetails(localize, account.product, isEuRegion)[\n        account.market_type || MARKET_TYPE.ALL\n    ].title;\n\n    return (\n        <InlineMessage className='wallets-mt5-licence-message' iconPosition='top' variant='info'>\n            <Text align='start' size={isDesktop ? '2xs' : 'xs'}>\n                {isSvg ? (\n                    // TODO: remove this hardcoded logic for the company number for SVG once BE provides company_number key for non-regulated accounts\n                    <Localize\n                        i18n_default_text='You are adding your {{accountTitle}} {{accountName}} account under {{companyName}} (company no. 273 LLC 2020).'\n                        values={{\n                            accountName,\n                            accountTitle: PlatformDetails.mt5.title,\n                            companyName: account.name,\n                        }}\n                    />\n                ) : (\n                    <Localize\n                        i18n_default_text='You are adding your {{accountTitle}} {{accountName}} account under {{companyName}}, regulated by the {{regulatoryAuthority}}{{licenceNumber}}.'\n                        values={{\n                            accountName,\n                            accountTitle: PlatformDetails.mt5.title,\n                            companyName: account.name,\n                            licenceNumber: account.licence_number\n                                ? ` (${localize('licence no.')} ${account.licence_number})`\n                                : '',\n                            regulatoryAuthority: account.regulatory_authority,\n                        }}\n                    />\n                )}\n            </Text>\n        </InlineMessage>\n    );\n};\n\nexport default MT5LicenseMessage;\n","import React from 'react';\nimport { Localize } from '@deriv-com/translations';\nimport { Checkbox, Text, useDevice } from '@deriv-com/ui';\nimport { WalletLink } from '../../../../../components/Base';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport { companyNamesAndUrls } from '../../../constants';\nimport './MT5PasswordModalTnc.scss';\n\nexport type TMT5PasswordModalTncProps = {\n    checked: boolean;\n    companyName?: string;\n    onChange: () => void;\n};\n\nconst MT5PasswordModalTnc = ({ checked, companyName, onChange }: TMT5PasswordModalTncProps) => {\n    const { isDesktop } = useDevice();\n    const { getModalState } = useModal();\n    const selectedJurisdiction = getModalState('selectedJurisdiction');\n    // TODO: replace the company name with the information provided by the trading_platform_account_available API's BE response\n    const selectedCompany = companyNamesAndUrls[selectedJurisdiction as keyof typeof companyNamesAndUrls];\n\n    return (\n        <div className='wallets-mt5-modal-tnc'>\n            <Checkbox\n                checked={checked}\n                data-testid='dt_wallets_mt5_tnc_checkbox'\n                label={\n                    <Text size={isDesktop ? 'xs' : 'sm'}>\n                        <Localize\n                            components={[\n                                <WalletLink key={0} language='en' staticUrl={selectedCompany.tncUrl} variant='bold' />,\n                            ]}\n                            i18n_default_text=\"I confirm and accept {{companyName}}'s <0>terms and conditions</0>\"\n                            values={{ companyName }}\n                        />\n                    </Text>\n                }\n                name='mt5-tnc-checkbox'\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nexport default MT5PasswordModalTnc;\n","import React, { useEffect } from 'react';\nimport { useActiveWalletAccount, useIsEuRegion } from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { WalletPasswordFieldLazy } from '../../../../components/Base';\nimport { validatePassword } from '../../../../components/Base/WalletPasswordField/WalletPasswordField';\nimport { getPasswordErrorMessage } from '../../../../constants/password';\nimport { TAvailableMT5Account, THooks, TMarketTypes, TPlatforms } from '../../../../types';\nimport { validPassword, validPasswordMT5 } from '../../../../utils/password-validation';\nimport { CFD_PLATFORMS, getMarketTypeDetails, JURISDICTION, PlatformDetails } from '../../constants';\nimport { MT5LicenceMessage, MT5PasswordModalTnc } from '../components';\nimport './EnterPassword.scss';\n\n// Note: this component requires a proper refactor to remove props for keys available under the `account` prop\ntype TProps = {\n    account?: TAvailableMT5Account;\n    isForgotPasswordLoading?: boolean;\n    isLoading?: boolean;\n    isTncChecked?: boolean;\n    isVirtual?: boolean;\n    marketType: TMarketTypes.CreateOtherCFDAccount;\n    modalTitle?: string;\n    onPasswordChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onPrimaryClick?: () => void;\n    onSecondaryClick?: () => void;\n    onTncChange?: () => void;\n    password: string;\n    passwordError?: boolean;\n    platform: TPlatforms.All;\n    product?: THooks.AvailableMT5Accounts['product'];\n    setPassword: (value: string) => void;\n};\n\nconst EnterPassword: React.FC<TProps> = ({\n    account,\n    isForgotPasswordLoading,\n    isLoading,\n    isTncChecked = true,\n    isVirtual,\n    marketType,\n    modalTitle,\n    onPasswordChange,\n    onPrimaryClick,\n    onSecondaryClick,\n    onTncChange,\n    password,\n    passwordError,\n    platform,\n    product,\n    setPassword,\n}) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const { data } = useActiveWalletAccount();\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const isMT5 = platform === CFD_PLATFORMS.MT5;\n    const { validationErrorMessage } = validatePassword(password, isMT5, localize);\n    const disableButton = isMT5\n        ? !validPasswordMT5(password) &&\n          validationErrorMessage !== getPasswordErrorMessage(localize).missingCharacterMT5\n        : !validPassword(password);\n    const accountType = data?.is_virtual ? localize('Demo') : localize('Real');\n    const title = PlatformDetails[platform].title;\n    const marketTypeTitle =\n        platform === PlatformDetails.dxtrade.platform\n            ? accountType\n            : getMarketTypeDetails(localize, product, isEuRegion)[marketType].title;\n    const passwordErrorHints = localize(\n        'Hint: You may have entered your Deriv password, which is different from your {{title}} password.',\n        { title }\n    );\n\n    useEffect(() => {\n        if (passwordError) {\n            setPassword('');\n        }\n    }, [passwordError, setPassword]);\n\n    return (\n        <div className='wallets-enter-password'>\n            {isDesktop && (\n                <Text align='start' lineHeight='xl' weight='bold'>\n                    {modalTitle}\n                </Text>\n            )}\n            <div className='wallets-enter-password__content'>\n                <Text align='start' className='wallets-enter-password__description' size={isDesktop ? 'sm' : 'md'}>\n                    {isMT5 ? (\n                        <Localize\n                            i18n_default_text='Enter your {{title}} password to add an {{accountTitle}} {{marketTypeTitle}} account'\n                            values={{\n                                accountTitle: CFD_PLATFORMS.MT5.toLocaleUpperCase(),\n                                marketTypeTitle: isVirtual\n                                    ? `${marketTypeTitle} ${accountType.toLocaleLowerCase()}`\n                                    : marketTypeTitle,\n                                title,\n                            }}\n                        />\n                    ) : (\n                        <Localize\n                            i18n_default_text='Enter your {{title}} password to add a {{title}} {{marketTypeTitle}} account'\n                            values={{\n                                marketTypeTitle: isVirtual\n                                    ? `${marketTypeTitle} ${accountType.toLocaleLowerCase()}`\n                                    : marketTypeTitle,\n                                title,\n                            }}\n                        />\n                    )}\n                </Text>\n                <WalletPasswordFieldLazy\n                    hideWarning\n                    label={localize('{{title}} password', { title })}\n                    onChange={onPasswordChange}\n                    password={password}\n                    passwordError={passwordError}\n                    shouldDisablePasswordMeter\n                />\n                {passwordError && (\n                    <Text align='start' className='wallets-enter-password__hint' size={isDesktop ? 'sm' : 'md'}>\n                        {passwordErrorHints}\n                    </Text>\n                )}\n                {account && !isVirtual && <MT5LicenceMessage account={account} />}\n                {account && account.shortcode !== JURISDICTION.SVG && platform === CFD_PLATFORMS.MT5 && !isVirtual && (\n                    <MT5PasswordModalTnc\n                        checked={isTncChecked}\n                        companyName={account.name}\n                        onChange={() => onTncChange?.()}\n                    />\n                )}\n            </div>\n            {isDesktop && (\n                <div className='wallets-enter-password__buttons'>\n                    <Button\n                        color='black'\n                        isLoading={isForgotPasswordLoading}\n                        onClick={onSecondaryClick}\n                        size='lg'\n                        textSize='sm'\n                        variant='outlined'\n                    >\n                        <Localize i18n_default_text='Forgot password' />\n                    </Button>\n                    <Button\n                        disabled={!password || isLoading || disableButton || !isTncChecked}\n                        isLoading={isLoading}\n                        onClick={onPrimaryClick}\n                        size='lg'\n                        textSize='sm'\n                    >\n                        <Localize i18n_default_text='Add account' />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default EnterPassword;\n","import React, { ComponentProps, FC } from 'react';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper, ModalWrapper, WalletButtonGroup } from '../../../../components';\nimport { validPassword, validPasswordMT5 } from '../../../../utils/password-validation';\nimport { CFD_PLATFORMS, PlatformDetails } from '../../constants';\nimport { EnterPassword } from '../../screens';\nimport './EnterPasswordModal.scss';\n\nconst EnterPasswordModal: FC<ComponentProps<typeof EnterPassword>> = ({\n    isForgotPasswordLoading,\n    isLoading,\n    marketType,\n    onPasswordChange,\n    onPrimaryClick,\n    onSecondaryClick,\n    password,\n    passwordError,\n    platform,\n    setPassword,\n}) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    const isMT5 = platform === CFD_PLATFORMS.MT5;\n    const disableButton = isMT5 ? !validPasswordMT5(password) : !validPassword(password);\n    const title = localize('Enter your {{platformTitle}} password', { platformTitle: PlatformDetails[platform].title });\n    const buttonTextSize = isDesktop ? 'md' : 'sm';\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper>\n                <div className='wallets-password-modal__body'>\n                    <EnterPassword\n                        isForgotPasswordLoading={isForgotPasswordLoading}\n                        isLoading={isLoading}\n                        marketType={marketType}\n                        modalTitle={title}\n                        onPasswordChange={onPasswordChange}\n                        onPrimaryClick={onPrimaryClick}\n                        onSecondaryClick={onSecondaryClick}\n                        password={password}\n                        passwordError={passwordError}\n                        platform={platform}\n                        setPassword={setPassword}\n                    />\n                </div>\n            </ModalWrapper>\n        );\n    }\n\n    return (\n        <ModalStepWrapper\n            renderFooter={() => {\n                return (\n                    <div className='wallets-password-modal__footer'>\n                        <WalletButtonGroup isFullWidth>\n                            <Button\n                                borderWidth='sm'\n                                color='black'\n                                isFullWidth\n                                isLoading={isForgotPasswordLoading}\n                                onClick={onSecondaryClick}\n                                size='lg'\n                                textSize={buttonTextSize}\n                                variant='outlined'\n                            >\n                                <Localize i18n_default_text='Forgot password?' />\n                            </Button>\n                            <Button\n                                disabled={!password || isLoading || disableButton}\n                                isFullWidth\n                                isLoading={isLoading}\n                                onClick={onPrimaryClick}\n                                size='lg'\n                                textSize={buttonTextSize}\n                            >\n                                <Localize i18n_default_text='Add account' />\n                            </Button>\n                        </WalletButtonGroup>\n                    </div>\n                );\n            }}\n            title={title}\n        >\n            <div className='wallets-password-modal__body'>\n                <EnterPassword\n                    isForgotPasswordLoading={isForgotPasswordLoading}\n                    isLoading={isLoading}\n                    marketType={marketType}\n                    modalTitle={title}\n                    onPasswordChange={onPasswordChange}\n                    onPrimaryClick={onPrimaryClick}\n                    onSecondaryClick={onSecondaryClick}\n                    password={password}\n                    passwordError={passwordError}\n                    platform={platform}\n                    setPassword={setPassword}\n                />\n            </div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default EnterPasswordModal;\n","import React from 'react';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper, ModalWrapper, WalletButtonGroup } from '../../../../components/Base';\nimport './PasswordLimitExceededModal.scss';\n\ntype TProps = {\n    onPrimaryClick: () => void;\n    onSecondaryClick: () => void;\n};\n\nconst PasswordLimitExceededModal: React.FC<TProps> = ({ onPrimaryClick, onSecondaryClick }) => {\n    const { isDesktop } = useDevice();\n\n    const textSize = isDesktop ? 'sm' : 'md';\n    const { localize } = useTranslations();\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper hideCloseButton>\n                <div className='wallets-password-limit-exceeded-modal'>\n                    <div className='wallets-password-limit-exceeded-modal__title'>\n                        <Text align='start' weight='bold'>\n                            <Localize i18n_default_text='Too many attempts' />\n                        </Text>\n                    </div>\n                    <div className='wallets-password-limit-exceeded-modal__content'>\n                        <Text align='start' size='sm'>\n                            <Localize i18n_default_text='Please try again in a minute.' />\n                        </Text>\n                    </div>\n                    <div className='wallets-password-limit-exceeded-modal__buttons'>\n                        <Button\n                            borderWidth='md'\n                            color='black'\n                            onClick={onSecondaryClick}\n                            size='lg'\n                            textSize={textSize}\n                            variant='outlined'\n                        >\n                            <Localize i18n_default_text='Forgot password?' />\n                        </Button>\n                        <Button onClick={onPrimaryClick} size='lg' textSize={textSize}>\n                            <Localize i18n_default_text='Try later' />\n                        </Button>\n                    </div>\n                </div>\n            </ModalWrapper>\n        );\n    }\n\n    return (\n        <ModalStepWrapper\n            renderFooter={() => {\n                return (\n                    <WalletButtonGroup isFullWidth>\n                        <Button\n                            borderWidth='sm'\n                            color='black'\n                            isFullWidth\n                            onClick={onSecondaryClick}\n                            size='lg'\n                            textSize='sm'\n                            variant='outlined'\n                        >\n                            <Localize i18n_default_text='Forgot password?' />\n                        </Button>\n                        <Button isFullWidth onClick={onPrimaryClick} size='lg' textSize='sm'>\n                            <Localize i18n_default_text='Try later' />\n                        </Button>\n                    </WalletButtonGroup>\n                );\n            }}\n            title={localize('Too many attempts')}\n        >\n            <div className='wallets-password-limit-exceeded-modal'>\n                <div className='wallets-password-limit-exceeded-modal__content'>\n                    <Text align='center' size='md'>\n                        <Localize i18n_default_text='Please try again in a minute.' />\n                    </Text>\n                </div>\n            </div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default PasswordLimitExceededModal;\n","import React, { ComponentProps, FC } from 'react';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper, ModalWrapper, WalletButtonGroup } from '../../../../components';\nimport { PlatformDetails } from '../../constants';\nimport { CFDSuccess } from '../../screens';\n\ntype TProps = Omit<ComponentProps<typeof CFDSuccess>, 'title'> & {\n    isDemo?: boolean;\n    onPrimaryClick?: () => void;\n    onSecondaryClick?: () => void;\n};\n\nconst SuccessModal: FC<TProps> = ({\n    description,\n    displayBalance = '',\n    isDemo,\n    marketType = 'all',\n    onPrimaryClick,\n    onSecondaryClick,\n    platform = 'dxtrade',\n}) => {\n    const { isDesktop } = useDevice();\n\n    const buttonSize = isDesktop ? 'md' : 'lg';\n\n    const renderButton = isDemo ? (\n        <div className='wallets-success-btn'>\n            <Button isFullWidth onClick={onSecondaryClick} size={buttonSize} textSize='sm'>\n                <Localize i18n_default_text='OK' />\n            </Button>\n        </div>\n    ) : (\n        <WalletButtonGroup isFlex isFullWidth>\n            <Button\n                borderWidth='sm'\n                color='black'\n                onClick={onSecondaryClick}\n                size={buttonSize}\n                textSize='sm'\n                variant='outlined'\n            >\n                <Localize i18n_default_text='Maybe later' />\n            </Button>\n            <Button onClick={onPrimaryClick} size={buttonSize} textSize='sm'>\n                <Localize i18n_default_text='Transfer funds' />\n            </Button>\n        </WalletButtonGroup>\n    );\n\n    const title = isDemo ? (\n        <Localize\n            i18n_default_text='Your {{platformTitle}} demo account is ready'\n            values={{ platformTitle: PlatformDetails[platform].title }}\n        />\n    ) : (\n        <Localize\n            i18n_default_text='Your {{platformTitle}} account is ready'\n            values={{ platformTitle: PlatformDetails[platform].title }}\n        />\n    );\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper hideCloseButton>\n                <CFDSuccess\n                    actionButtons={renderButton}\n                    description={description}\n                    displayBalance={displayBalance}\n                    marketType={marketType}\n                    platform={platform}\n                    title={title}\n                />\n            </ModalWrapper>\n        );\n    }\n\n    return (\n        <ModalStepWrapper renderFooter={() => renderButton} title={' '}>\n            <CFDSuccess\n                actionButtons={renderButton}\n                description={description}\n                displayBalance={displayBalance}\n                marketType={marketType}\n                platform={platform}\n                title={title}\n            />\n        </ModalStepWrapper>\n    );\n};\n\nexport default SuccessModal;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    useAccountStatus,\n    useActiveWalletAccount,\n    useCreateOtherCFDAccount,\n    useDxtradeAccountsList,\n} from '@deriv/api-v2';\nimport { useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { SentEmailContent, WalletError } from '../../../../components';\nimport { ModalWrapper } from '../../../../components/Base';\nimport { useModal } from '../../../../components/ModalProvider';\nimport useSendPasswordResetEmail from '../../../../hooks/useSendPasswordResetEmail';\nimport { PlatformDetails } from '../../constants';\nimport { CreatePasswordModal } from '../CreatePasswordModal';\nimport { EnterPasswordModal } from '../EnterPasswordModal';\nimport { PasswordLimitExceededModal } from '../PasswordLimitExceededModal';\nimport { SuccessModal } from '../SuccessModal';\nimport './DxtradeEnterPasswordModal.scss';\n\nconst DxtradeEnterPasswordModal = () => {\n    const history = useHistory();\n    const { isDesktop } = useDevice();\n    const [password, setPassword] = useState('');\n    const { data: getAccountStatus, isSuccess: accountStatusSuccess } = useAccountStatus();\n    const {\n        data: createdAccount,\n        error,\n        isLoading,\n        isSuccess: isCreateAccountSuccessful,\n        mutateAsync,\n        status,\n    } = useCreateOtherCFDAccount();\n    const { data: dxtradeAccount, isSuccess: dxtradeAccountListSuccess } = useDxtradeAccountsList();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const {\n        error: resetPasswordError,\n        isLoading: isResetPasswordLoading,\n        isSuccess: isResetPasswordSuccessful,\n        sendEmail,\n    } = useSendPasswordResetEmail();\n    const { hide, show } = useModal();\n    const { localize } = useTranslations();\n\n    const accountType = activeWallet?.is_virtual ? 'demo' : 'real';\n    const dxtradePlatform = PlatformDetails.dxtrade.platform;\n    const isDxtradePasswordNotSet = getAccountStatus?.is_dxtrade_password_not_set;\n\n    const onSubmit = useCallback(async () => {\n        await mutateAsync({\n            payload: {\n                account_type: accountType,\n                market_type: 'all',\n                password,\n                platform: dxtradePlatform,\n            },\n        }).catch(() => setPassword(''));\n    }, [mutateAsync, accountType, password, dxtradePlatform]);\n\n    const dxtradeBalance = useMemo(() => {\n        return dxtradeAccount?.find(account => account.market_type === 'all')?.display_balance;\n    }, [dxtradeAccount]);\n\n    const successDescription = useMemo(() => {\n        return accountType === 'demo'\n            ? localize('Practise trading with {{dxtradeBalance}} virtual funds.', { dxtradeBalance })\n            : localize(\n                  'Transfer funds from your {{currency}} Wallet to your {{dxtradeTitle}} account to start trading.',\n                  { currency: activeWallet?.currency, dxtradeTitle: PlatformDetails.dxtrade.title }\n              );\n    }, [accountType, activeWallet?.currency, dxtradeBalance, localize]);\n\n    useEffect(() => {\n        if (!isResetPasswordSuccessful) return;\n        if (!isDxtradePasswordNotSet) {\n            show(\n                <ModalWrapper isFullscreen={!isDesktop}>\n                    <SentEmailContent isForgottenPassword onErrorButtonClick={hide} platform={dxtradePlatform} />\n                </ModalWrapper>\n            );\n        }\n    }, [dxtradePlatform, hide, isDxtradePasswordNotSet, isDesktop, isResetPasswordSuccessful, show]);\n\n    if (status === 'error' && error?.error?.code === 'PasswordReset') {\n        return (\n            <PasswordLimitExceededModal\n                onPrimaryClick={hide}\n                onSecondaryClick={() => {\n                    sendEmail({\n                        platform: dxtradePlatform,\n                    });\n                }}\n            />\n        );\n    }\n    if (status === 'error' && error?.error?.code !== 'PasswordError') {\n        return <WalletError errorMessage={error?.error.message} onClick={hide} title={error?.error?.code} />;\n    }\n\n    if (resetPasswordError) {\n        return (\n            <WalletError\n                errorMessage={resetPasswordError?.error.message}\n                onClick={hide}\n                title={resetPasswordError?.error?.code}\n            />\n        );\n    }\n\n    if (!isCreateAccountSuccessful && accountStatusSuccess) {\n        return isDxtradePasswordNotSet ? (\n            <CreatePasswordModal\n                isLoading={isLoading}\n                onPasswordChange={e => setPassword(e.target.value)}\n                onPrimaryClick={onSubmit}\n                password={password}\n                platform={dxtradePlatform}\n            />\n        ) : (\n            <EnterPasswordModal\n                isForgotPasswordLoading={isResetPasswordLoading}\n                isLoading={isLoading}\n                marketType='all'\n                onPasswordChange={e => setPassword(e.target.value)}\n                onPrimaryClick={onSubmit}\n                onSecondaryClick={() => {\n                    sendEmail({\n                        platform: dxtradePlatform,\n                    });\n                }}\n                password={password}\n                passwordError={error?.error?.code === 'PasswordError'}\n                platform={dxtradePlatform}\n                setPassword={setPassword}\n            />\n        );\n    }\n    if (isCreateAccountSuccessful && dxtradeAccountListSuccess) {\n        return (\n            <SuccessModal\n                description={successDescription}\n                displayBalance={dxtradeBalance ?? ''}\n                isDemo={activeWallet?.is_virtual}\n                marketType='all'\n                onPrimaryClick={() => {\n                    hide();\n                    history.push('/wallet/account-transfer', { toAccountLoginId: createdAccount?.account_id });\n                }}\n                onSecondaryClick={hide}\n                platform={dxtradePlatform}\n            />\n        );\n    }\n    return null;\n};\n\nexport default DxtradeEnterPasswordModal;\n","import React from 'react';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { Localize } from '@deriv-com/translations';\nimport { Text } from '@deriv-com/ui';\nimport { TradingAccountCard } from '../../../../../../components';\nimport { useModal } from '../../../../../../components/ModalProvider';\nimport useIsRtl from '../../../../../../hooks/useIsRtl';\nimport { PlatformDetails } from '../../../../constants';\nimport { DxtradeEnterPasswordModal } from '../../../../modals';\n\nconst AvailableDxtradeAccountsList: React.FC = () => {\n    const { show } = useModal();\n    const isRtl = useIsRtl();\n\n    return (\n        <TradingAccountCard onClick={() => show(<DxtradeEnterPasswordModal />)}>\n            <TradingAccountCard.Icon data-testid='dt_icon_dxtrade'>\n                {PlatformDetails.dxtrade.icon}\n            </TradingAccountCard.Icon>\n            <TradingAccountCard.Section>\n                <TradingAccountCard.Content>\n                    <p className='wallets-available-dxtrade__details-title'>\n                        <Text align='start' size='sm'>\n                            Deriv X\n                        </Text>\n                    </p>\n                    <Text align='start' size='xs'>\n                        <Localize\n                            components={[<strong key={0} />]}\n                            i18n_default_text='CFDs on financial and derived instruments, <0>powered by TradingView</0>.'\n                        />\n                    </Text>\n                </TradingAccountCard.Content>\n                <TradingAccountCard.Button>\n                    {isRtl ? (\n                        <LabelPairedChevronLeftCaptionRegularIcon width={16} />\n                    ) : (\n                        <LabelPairedChevronRightCaptionRegularIcon width={16} />\n                    )}\n                </TradingAccountCard.Button>\n            </TradingAccountCard.Section>\n        </TradingAccountCard>\n    );\n};\n\nexport default AvailableDxtradeAccountsList;\n","import React, { FC } from 'react';\nimport { DerivLightMt5SuccessPasswordResetIcon } from '@deriv/quill-icons';\nimport { useTranslations } from '@deriv-com/translations';\nimport { ActionScreen, Button, useDevice } from '@deriv-com/ui';\nimport { PlatformDetails } from '../../features/cfd/constants';\nimport { ModalStepWrapper, ModalWrapper } from '../Base';\nimport './WalletSuccessChangeMT5Password.scss';\n\ntype TWalletSuccessChangeMT5Password = {\n    onClick: () => void;\n};\n\nconst WalletSuccessChangeMT5Password: FC<TWalletSuccessChangeMT5Password> = ({ onClick }) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    const icon = <DerivLightMt5SuccessPasswordResetIcon data-testid='dt_mt5_success_icon' height={100} width={100} />;\n    const title = localize('Success');\n    const description = localize('You can log in to all your {{title}} accounts with your new password.', {\n        title: PlatformDetails.mt5.title,\n    });\n    const renderButtons = (\n        <Button isFullWidth={!isDesktop} onClick={onClick} size='lg' textSize='sm'>\n            {localize('Next')}\n        </Button>\n    );\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper hideCloseButton shouldPreventCloseOnEscape>\n                <div className='wallets-change-mt5-password'>\n                    <ActionScreen\n                        actionButtons={renderButtons}\n                        description={description}\n                        descriptionSize='sm'\n                        icon={icon}\n                        title={title}\n                    />\n                </div>\n            </ModalWrapper>\n        );\n    }\n\n    return (\n        <ModalStepWrapper\n            renderFooter={() => renderButtons}\n            shouldHideFooter={isDesktop}\n            shouldHideHeader\n            shouldPreventCloseOnEscape\n        >\n            <div className='wallets-change-mt5-password'>\n                <ActionScreen description={description} descriptionSize='sm' icon={icon} title={title} />\n            </div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default WalletSuccessChangeMT5Password;\n","import React from 'react';\nimport { DerivLightDmt5PasswordIcon } from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { WalletPasswordFieldLazy } from '../../../../components/Base';\nimport { TAvailableMT5Account, TPlatforms } from '../../../../types';\nimport { validPassword, validPasswordMT5 } from '../../../../utils/password-validation';\nimport { CFD_PLATFORMS, PlatformDetails } from '../../constants';\nimport { MT5LicenceMessage, MT5PasswordModalTnc } from '../components';\nimport './CreatePasswordMT5.scss';\n\ntype TProps = {\n    account: TAvailableMT5Account;\n    isLoading?: boolean;\n    isTncChecked: boolean;\n    isVirtual?: boolean;\n    onPasswordChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onPrimaryClick: () => void;\n    onTncChange: () => void;\n    password: string;\n    platform: TPlatforms.All;\n};\n\nconst CreatePasswordMT5: React.FC<TProps> = ({\n    account,\n    isLoading,\n    isTncChecked,\n    isVirtual,\n    onPasswordChange,\n    onPrimaryClick,\n    onTncChange,\n    password,\n    platform,\n}) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const { title } = PlatformDetails[platform as keyof typeof PlatformDetails];\n    const accountTitle = isVirtual ? localize('demo {{title}}', { title }) : title;\n    const isMT5 = platform === CFD_PLATFORMS.MT5;\n    const disableButton = isMT5 ? !validPasswordMT5(password) : !validPassword(password);\n\n    return (\n        <div className='wallets-create-password-mt5'>\n            {isDesktop && (\n                <div className='wallets-create-password-mt5__header'>\n                    <Text lineHeight='xl' weight='bold'>\n                        <Localize i18n_default_text='Create a {{accountTitle}} password' values={{ accountTitle }} />\n                    </Text>\n                </div>\n            )}\n            <div className='wallets-create-password-mt5__body'>\n                <DerivLightDmt5PasswordIcon height={120} width={120} />\n                <Text align='start' size={isDesktop ? 'sm' : 'md'}>\n                    <Localize\n                        i18n_default_text='Note: You can use this password for all your {{title}} accounts.'\n                        values={{ title }}\n                    />\n                </Text>\n                <WalletPasswordFieldLazy\n                    label={localize('{{title}} password', { title })}\n                    mt5Policy={isMT5}\n                    onChange={onPasswordChange}\n                    password={password}\n                />\n                {!isVirtual && <MT5LicenceMessage account={account} />}\n                {!isVirtual && account.shortcode !== 'svg' && (\n                    <MT5PasswordModalTnc checked={isTncChecked} companyName={account.name} onChange={onTncChange} />\n                )}\n            </div>\n\n            {isDesktop && (\n                <div className='wallets-create-password-mt5__footer'>\n                    <Button\n                        data-testid='dt_create_password_mt5_button'\n                        disabled={!password || isLoading || disableButton || !isTncChecked}\n                        isLoading={isLoading}\n                        onClick={onPrimaryClick}\n                        size='lg'\n                        textSize='sm'\n                    >\n                        <Localize i18n_default_text='Create {{title}} password' values={{ title }} />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CreatePasswordMT5;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Field, FieldProps, Form, Formik, FormikProps } from 'formik';\nimport { TSocketError } from '@deriv/api-v2/types';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { WalletButtonGroup, WalletPasswordFieldLazy, WalletTextField } from '../../../../components';\nimport PasswordViewerIcon from '../../../../components/Base/WalletPasswordField/PasswordViewerIcon';\nimport { getPasswordRequirements } from '../../../../constants/password';\nimport { validPasswordMT5 } from '../../../../utils/password-validation';\nimport { PlatformDetails } from '../../constants';\nimport { TPlatformPasswordChange } from '../../modals/MT5PasswordModal/MT5PasswordModal';\nimport './MT5ResetPasswordModal.scss';\n\ntype TFormInitialValues = {\n    currentPassword: string;\n    newPassword: string;\n};\n\ntype TProps = {\n    formError: TSocketError<'trading_platform_password_change'> | null;\n    isLoading: boolean;\n    onClickSubmitPasswordChange: (values: TPlatformPasswordChange) => void;\n    sendEmailVerification: () => void;\n};\n\nconst MT5ResetPasswordModal: React.FC<TProps> = ({\n    formError,\n    isLoading,\n    onClickSubmitPasswordChange,\n    sendEmailVerification,\n}) => {\n    const { title } = PlatformDetails.mt5;\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const [isCurrentPasswordVisible, setIsCurrentPasswordVisible] = useState(false);\n\n    const walletButtonSizes = isDesktop ? 'md' : 'lg';\n    const initialValues: TFormInitialValues = { currentPassword: '', newPassword: '' };\n    const formikRef = useRef<FormikProps<TFormInitialValues> | null>(null);\n\n    useEffect(() => {\n        if (formError) {\n            if (formError.error.code === 'PasswordError') {\n                formikRef.current?.setErrors({ currentPassword: formError.error?.message });\n            } else {\n                formikRef.current?.setErrors({ newPassword: formError.error?.message });\n            }\n        }\n    }, [formError]);\n\n    const validateCurrentPassword = (value: string) => {\n        if (!value) return localize('The field is required');\n    };\n\n    const handleOnSubmit = (values: TFormInitialValues) => {\n        onClickSubmitPasswordChange({\n            currentPassword: values.currentPassword,\n            newPassword: values.newPassword,\n        });\n    };\n\n    return (\n        <div className='wallets-mt5-reset'>\n            {isDesktop && (\n                <div className='wallets-mt5-reset__header'>\n                    <Text as='h2' weight='bold'>\n                        <Localize i18n_default_text='{{title}} latest password requirements' values={{ title }} />\n                    </Text>\n                </div>\n            )}\n            <Formik initialValues={initialValues} innerRef={formikRef} onSubmit={values => handleOnSubmit(values)}>\n                {({ errors, handleChange, values }) => (\n                    <Form>\n                        <div className='wallets-mt5-reset__container'>\n                            <div className='wallets-mt5-reset__content'>\n                                <Text size='sm'>\n                                    <Localize\n                                        components={[<br key={0} />]}\n                                        i18n_default_text='To enhance your MT5 account security we have upgraded our password policy.<0 />Please update your password accordingly.'\n                                    />\n                                </Text>\n                                <div className='wallets-mt5-reset__fields'>\n                                    <Field name='currentPassword' validate={validateCurrentPassword}>\n                                        {({ field, form }: FieldProps) => {\n                                            return (\n                                                <WalletTextField\n                                                    autoComplete='current-password'\n                                                    errorMessage={form.errors[field.name]}\n                                                    isInvalid={Boolean(form.errors[field.name])}\n                                                    label={localize('Current password')}\n                                                    name={field.name}\n                                                    onBlur={field.onBlur}\n                                                    onChange={handleChange}\n                                                    renderRightIcon={() => (\n                                                        <PasswordViewerIcon\n                                                            setViewPassword={setIsCurrentPasswordVisible}\n                                                            viewPassword={isCurrentPasswordVisible}\n                                                        />\n                                                    )}\n                                                    type={isCurrentPasswordVisible ? 'text' : 'password'}\n                                                    value={values.currentPassword}\n                                                />\n                                            );\n                                        }}\n                                    </Field>\n                                    <WalletPasswordFieldLazy\n                                        label={localize('New Password')}\n                                        mt5Policy\n                                        name='newPassword'\n                                        onChange={handleChange}\n                                        password={values.newPassword}\n                                        passwordError={!!errors?.newPassword}\n                                        serverErrorMessage={errors?.newPassword}\n                                    />\n                                </div>\n                                <ul className='wallets-mt5-reset__requirements'>\n                                    {getPasswordRequirements(localize).map(requirement => (\n                                        <li key={requirement}>\n                                            <Text size='sm'>{requirement}</Text>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className='wallets-mt5-reset__footer'>\n                            <WalletButtonGroup isFlex isFullWidth={!isDesktop}>\n                                <Button\n                                    borderWidth='sm'\n                                    color='black'\n                                    onClick={sendEmailVerification}\n                                    size={walletButtonSizes}\n                                    textSize='sm'\n                                    variant='outlined'\n                                >\n                                    <Localize i18n_default_text='Forgot password?' />\n                                </Button>\n                                <Button\n                                    disabled={!!errors.currentPassword || !validPasswordMT5(values.newPassword)}\n                                    isLoading={isLoading}\n                                    size={walletButtonSizes}\n                                    textSize='sm'\n                                    type='submit'\n                                >\n                                    <Localize i18n_default_text='Change my password' />\n                                </Button>\n                            </WalletButtonGroup>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default MT5ResetPasswordModal;\n","import React, { FC, useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useIsEuRegion, useMT5AccountsList, usePOA, usePOI } from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { ModalStepWrapper, ModalWrapper, WalletButtonGroup } from '../../../../components';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { THooks, TMarketTypes, TPlatforms } from '../../../../types';\nimport {\n    CFD_PLATFORMS,\n    companyNamesAndUrls,\n    getMarketTypeDetails,\n    MARKET_TYPE,\n    PlatformDetails,\n} from '../../constants';\nimport { CFDSuccess } from '../../screens/CFDSuccess';\n\ntype TProps = {\n    account?: THooks.CreateMT5Account;\n    marketType: TMarketTypes.SortedMT5Accounts;\n    platform: TPlatforms.All;\n    product?: THooks.AvailableMT5Accounts['product'];\n};\n\nconst MT5AccountAdded: FC<TProps> = ({ account, marketType, platform, product }) => {\n    const { data: activeWallet, isLoading: isActiveWalletAccountLoading } = useActiveWalletAccount();\n    const { data: mt5Accounts, isLoading: isMT5AccountsListLoading } = useMT5AccountsList();\n    const { data: poiData, isLoading: isPOILoading } = usePOI();\n    const { data: poaData, isLoading: isPOALoading } = usePOA();\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const history = useHistory();\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const { getModalState, hide } = useModal();\n\n    const addedAccount = mt5Accounts?.find(acc => acc.login === account?.login);\n\n    const isLoading =\n        isActiveWalletAccountLoading ||\n        isMT5AccountsListLoading ||\n        isPOILoading ||\n        !poiData ||\n        isPOALoading ||\n        !poaData ||\n        !addedAccount;\n\n    const marketTypeTitle =\n        marketType === MARKET_TYPE.ALL && platform in PlatformDetails && platform !== CFD_PLATFORMS.MT5\n            ? PlatformDetails[platform].title\n            : getMarketTypeDetails(localize, product, isEuRegion)[marketType].title;\n    const selectedJurisdiction = getModalState('selectedJurisdiction');\n    const landingCompanyName = isEuRegion\n        ? ''\n        : `(${companyNamesAndUrls?.[selectedJurisdiction as keyof typeof companyNamesAndUrls]?.shortcode})`;\n\n    const isDemo = activeWallet?.is_virtual;\n    const buttonSize = isDesktop ? 'md' : 'lg';\n\n    const renderAccountSuccessButton = useCallback(\n        (isDemo?: boolean) => {\n            if (isDemo) {\n                return (\n                    <div className='wallets-success-btn'>\n                        <Button isFullWidth onClick={hide} size={buttonSize} textSize='sm'>\n                            <Localize i18n_default_text='OK' />\n                        </Button>\n                    </div>\n                );\n            }\n            return (\n                <div className='wallets-mt5-password-modal__footer'>\n                    <WalletButtonGroup isFlex isFullWidth>\n                        <Button\n                            borderWidth='sm'\n                            color='black'\n                            onClick={hide}\n                            size={buttonSize}\n                            textSize='sm'\n                            variant='outlined'\n                        >\n                            <Localize i18n_default_text='Maybe later' />\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                hide();\n                                history.push('/wallet/account-transfer', {\n                                    toAccountLoginId: addedAccount?.loginid,\n                                });\n                            }}\n                            size={buttonSize}\n                            textSize='sm'\n                        >\n                            <Localize i18n_default_text='Transfer funds' />\n                        </Button>\n                    </WalletButtonGroup>\n                </div>\n            );\n        },\n        [hide, buttonSize, history, addedAccount?.loginid]\n    );\n\n    const renderSuccessDescription = useMemo(() => {\n        if (isDemo) {\n            return localize('Practise trading with {{accountBalance}} virtual funds.', {\n                accountBalance: addedAccount?.display_balance,\n            });\n        }\n        return localize(\n            'Transfer funds from your {{walletCurrencyType}} Wallet to your {{marketTypeTitle}} {{landingCompanyName}} account to start trading.',\n            { landingCompanyName, marketTypeTitle, walletCurrencyType: activeWallet?.wallet_currency_type }\n        );\n    }, [\n        activeWallet?.wallet_currency_type,\n        addedAccount?.display_balance,\n        isDemo,\n        marketTypeTitle,\n        landingCompanyName,\n        localize,\n    ]);\n\n    const renderMainContent = useMemo(() => {\n        if (isLoading) return null;\n\n        return (\n            <CFDSuccess\n                actionButtons={renderAccountSuccessButton(isDemo)}\n                description={renderSuccessDescription}\n                displayBalance={addedAccount?.display_balance}\n                landingCompanyName={landingCompanyName}\n                marketType={marketType}\n                platform={platform}\n                product={product}\n                title={\n                    <Localize\n                        i18n_default_text='Your {{marketTypeTitle}} {{demoTitle}} account is ready'\n                        values={{\n                            demoTitle: isDemo ? localize('demo') : landingCompanyName,\n                            marketTypeTitle:\n                                isDemo && platform === CFD_PLATFORMS.MT5\n                                    ? `${CFD_PLATFORMS.MT5.toUpperCase()} ${getMarketTypeDetails(localize, product)[marketType].title}`\n                                    : marketTypeTitle,\n                        }}\n                    />\n                }\n            />\n        );\n    }, [\n        addedAccount?.display_balance,\n        isDemo,\n        isLoading,\n        landingCompanyName,\n        localize,\n        marketType,\n        marketTypeTitle,\n        platform,\n        renderAccountSuccessButton,\n        renderSuccessDescription,\n        product,\n    ]);\n\n    if (isLoading) return null;\n\n    if (isDesktop) {\n        return (\n            <ModalWrapper hideCloseButton>\n                <div className='wallets-mt5-password-modal wallets-mt5-password-modal__body'>{renderMainContent}</div>\n            </ModalWrapper>\n        );\n    }\n\n    return (\n        <ModalStepWrapper renderFooter={() => renderAccountSuccessButton(isDemo)}>\n            <div className='wallets-mt5-password-modal wallets-mt5-password-modal__body'>{renderMainContent}</div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default MT5AccountAdded;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { TSocketError } from '@deriv/api-v2/types';\nimport { useTranslations } from '@deriv-com/translations';\nimport { WalletError } from '../../../../components';\n\ntype TProps = {\n    error: TSocketError<'mt5_new_account'>['error'];\n    onClickHandler: () => void;\n};\n\ntype TGetErrorConfigValues = {\n    error: TSocketError<'mt5_new_account'>['error'];\n    history: ReturnType<typeof useHistory>;\n    localize: ReturnType<typeof useTranslations>['localize'];\n};\n\nconst getErrorConfig = ({ error, history, localize }: TGetErrorConfigValues) => {\n    switch (error.code) {\n        case 'ASK_FIX_DETAILS':\n            return {\n                buttonText: localize('Update profile'),\n                description: localize('To continue, provide the required information in the Personal details section.'),\n                //@ts-expect-error need to proper type history\n                onClick: () => history.push('/account/personal-details'),\n                title: localize('Complete your profile'),\n            };\n        default:\n            return {\n                description: error.message ?? '',\n                title: error.code ?? localize('Error'),\n            };\n    }\n};\n\nconst MT5ErrorModal: React.FC<TProps> = ({ error, onClickHandler }) => {\n    const history = useHistory();\n    const { localize } = useTranslations();\n\n    const { buttonText, description, onClick, title } = getErrorConfig({ error, history, localize });\n\n    return (\n        <WalletError\n            buttonText={buttonText}\n            errorMessage={description}\n            onClick={onClick || onClickHandler}\n            title={title}\n        />\n    );\n};\n\nexport default MT5ErrorModal;\n","import React, { ComponentProps } from 'react';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { WalletButtonGroup } from '../../../../components';\n\ntype TProps = {\n    disabled: ComponentProps<typeof Button>['disabled'];\n    isLoading: ComponentProps<typeof Button>['isLoading'];\n    onPrimaryClick: ComponentProps<typeof Button>['onClick'];\n    onSecondaryClick: ComponentProps<typeof Button>['onClick'];\n};\n\nexport const MT5PasswordModalFooter = ({ disabled, isLoading, onPrimaryClick, onSecondaryClick }: TProps) => {\n    const { isDesktop } = useDevice();\n    const walletButtonSize = isDesktop ? 'md' : 'lg';\n\n    return (\n        <WalletButtonGroup isFullWidth>\n            <Button\n                borderWidth='sm'\n                color='black'\n                isFullWidth\n                onClick={onSecondaryClick}\n                size={walletButtonSize}\n                textSize='sm'\n                variant='outlined'\n            >\n                <Localize i18n_default_text='Forgot password' />\n            </Button>\n            <Button\n                disabled={disabled}\n                isFullWidth\n                isLoading={isLoading}\n                onClick={onPrimaryClick}\n                size={walletButtonSize}\n                textSize='sm'\n            >\n                <Localize i18n_default_text='Add account' />\n            </Button>\n        </WalletButtonGroup>\n    );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport {\n    useAccountStatus,\n    useAvailableMT5Accounts,\n    useCreateMT5Account,\n    useIsEuRegion,\n    useSettings,\n    useTradingPlatformPasswordChange,\n    useVerifyEmail,\n} from '@deriv/api-v2';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { SentEmailContent } from '../../../../components';\nimport { ModalStepWrapper, ModalWrapper, WalletLoader } from '../../../../components/Base';\nimport { validatePassword } from '../../../../components/Base/WalletPasswordField/WalletPasswordField';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { WalletSuccessChangeMT5Password } from '../../../../components/WalletsChangeMT5Password';\nimport { getPasswordErrorMessage } from '../../../../constants/password';\nimport { TAvailableMT5Account } from '../../../../types';\nimport { platformPasswordResetRedirectLink } from '../../../../utils/cfd';\nimport { validPasswordMT5 } from '../../../../utils/password-validation';\nimport { CFD_PLATFORMS, getMarketTypeDetails, JURISDICTION, MARKET_TYPE, PlatformDetails } from '../../constants';\nimport { CreatePassword, CreatePasswordMT5, EnterPassword, MT5ResetPasswordModal } from '../../screens';\nimport { MT5AccountAdded } from '../MT5AccountAdded';\nimport { MT5ErrorModal } from '../MT5ErrorModal';\nimport { PasswordLimitExceededModal } from '../PasswordLimitExceededModal';\nimport { MT5PasswordModalFooter } from './MT5PasswordModalFooters';\nimport './MT5PasswordModal.scss';\n\ntype TProps = {\n    account: TAvailableMT5Account;\n    isVirtual?: boolean;\n};\n\nexport type TPlatformPasswordChange = {\n    currentPassword: string;\n    newPassword: string;\n};\n\nconst MT5PasswordModal: React.FC<TProps> = ({ account, isVirtual = false }) => {\n    const [isTncChecked, setIsTncChecked] = useState(\n        // tnc is automatically checked for real SVG accounts and all demo accounts\n        (account as TAvailableMT5Account).shortcode === JURISDICTION.SVG || isVirtual\n    );\n    const {\n        data: createMT5AccountData,\n        error: createMT5AccountError,\n        isLoading: createMT5AccountLoading,\n        isSuccess: createMT5AccountSuccess,\n        mutate: createMT5AccountMutate,\n        status: createMT5AccountStatus,\n    } = useCreateMT5Account();\n    const {\n        error: tradingPasswordChangeError,\n        isLoading: tradingPlatformPasswordChangeLoading,\n        mutateAsync: tradingPasswordChangeMutateAsync,\n    } = useTradingPlatformPasswordChange();\n    const { data: accountStatusData, isLoading: accountStatusLoading } = useAccountStatus();\n    const { data: availableMT5AccountsData } = useAvailableMT5Accounts();\n    const {\n        error: emailVerificationError,\n        mutate: emailVerificationMutate,\n        status: emailVerificationStatus,\n    } = useVerifyEmail();\n    const { isDesktop } = useDevice();\n    const { getModalState, hide, setModalOptions } = useModal();\n    const { data: settingsData } = useSettings();\n    const { localize } = useTranslations();\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const {\n        address_city: addressCity,\n        address_line_1: addressLine1,\n        address_postcode: addressPostcode,\n        address_state: addressState,\n        country_code: countryCode,\n        email,\n        first_name: firstName,\n        phone,\n    } = settingsData;\n\n    const [password, setPassword] = useState('');\n    const [isPasswordChanged, setIsPasswordChanged] = useState(false);\n\n    const marketType = account.market_type ?? 'synthetic';\n    const platform = account.platform;\n    const product = account.product;\n    const marketTypeTitle = getMarketTypeDetails(localize, product, isEuRegion)[marketType].title;\n\n    const isMT5PasswordNotSet = accountStatusData?.is_mt5_password_not_set;\n    const { platform: mt5Platform, title } = PlatformDetails.mt5;\n    const selectedJurisdiction = isVirtual ? JURISDICTION.SVG : getModalState('selectedJurisdiction');\n    const { validationErrorMessage: validateMT5ErrorMessage } = validatePassword(password, true, localize);\n\n    const isLoading = accountStatusLoading || createMT5AccountLoading || tradingPlatformPasswordChangeLoading;\n\n    const updateMT5Password =\n        createMT5AccountStatus === 'error' &&\n        (createMT5AccountError?.error?.code === 'InvalidTradingPlatformPasswordFormat' ||\n            createMT5AccountError?.error?.code === 'IncorrectMT5PasswordFormat');\n\n    const createMT5Account = useCallback(() => {\n        const accountType = marketType === MARKET_TYPE.SYNTHETIC ? 'gaming' : marketType;\n        const categoryAccountType = isVirtual ? 'demo' : accountType;\n\n        createMT5AccountMutate({\n            payload: {\n                account_type: categoryAccountType,\n                address: addressLine1 ?? '',\n                city: addressCity ?? '',\n                country: countryCode ?? '',\n                email: email ?? '',\n                leverage: availableMT5AccountsData?.find(acc => acc.market_type === marketType)?.leverage ?? 500,\n                mainPassword: password,\n                ...(selectedJurisdiction && !isVirtual ? { company: selectedJurisdiction } : {}),\n                ...(marketType === MARKET_TYPE.FINANCIAL && { mt5_account_type: MARKET_TYPE.FINANCIAL }),\n                ...(selectedJurisdiction &&\n                    (selectedJurisdiction !== JURISDICTION.LABUAN\n                        ? {\n                              account_type: categoryAccountType,\n                              ...(marketType === MARKET_TYPE.FINANCIAL && {\n                                  mt5_account_type: MARKET_TYPE.FINANCIAL,\n                                  product,\n                              }),\n                          }\n                        : {\n                              account_type: MARKET_TYPE.FINANCIAL,\n                              mt5_account_type: 'financial_stp',\n                              product,\n                          })),\n                ...(marketType === MARKET_TYPE.ALL && { product }),\n                name: firstName ?? '',\n                phone: phone ?? '',\n                state: addressState ?? '',\n                zipCode: addressPostcode ?? '',\n            },\n        });\n    }, [\n        addressCity,\n        addressLine1,\n        addressPostcode,\n        addressState,\n        availableMT5AccountsData,\n        countryCode,\n        createMT5AccountMutate,\n        email,\n        firstName,\n        isVirtual,\n        marketType,\n        password,\n        phone,\n        product,\n        selectedJurisdiction,\n    ]);\n\n    const onSubmit = useCallback(async () => {\n        // ====== Create MT5 Account ======\n        // In order to create account, we need to set a password through trading_platform_password_change endpoint first,\n        // then only mt5_create_account can be called, otherwise it will response an error for password required.\n        // =================================\n\n        if (isMT5PasswordNotSet) {\n            await tradingPasswordChangeMutateAsync({\n                new_password: password,\n                platform: mt5Platform,\n            });\n        }\n\n        createMT5Account();\n    }, [createMT5Account, isMT5PasswordNotSet, mt5Platform, password, tradingPasswordChangeMutateAsync]);\n\n    const sendEmailVerification = useCallback(() => {\n        if (email) {\n            emailVerificationMutate({\n                type: 'trading_platform_mt5_password_reset',\n                url_parameters: {\n                    redirect_to: platformPasswordResetRedirectLink(CFD_PLATFORMS.MT5, isVirtual),\n                },\n                verify_email: email,\n            });\n        }\n    }, [email, emailVerificationMutate, isVirtual]);\n\n    const onSubmitPasswordChange = useCallback(\n        ({ currentPassword, newPassword }: TPlatformPasswordChange) => {\n            tradingPasswordChangeMutateAsync({\n                new_password: newPassword,\n                old_password: currentPassword,\n                platform: mt5Platform,\n            }).then(() => {\n                setPassword(newPassword);\n                setModalOptions(prev => ({ ...prev, shouldCloseOnClickOutside: false }));\n                setIsPasswordChanged(true);\n            });\n        },\n        [mt5Platform, setModalOptions, tradingPasswordChangeMutateAsync]\n    );\n\n    const renderTitle = useCallback(() => {\n        let modalTitle;\n\n        if (updateMT5Password) {\n            modalTitle = localize('{{title}} latest password requirements', { title });\n        } else if (isMT5PasswordNotSet) {\n            modalTitle = isVirtual\n                ? localize('Create a demo {{title}} password', { title })\n                : localize('Create a {{title}} password', { title });\n        } else {\n            modalTitle = isVirtual\n                ? localize('Add an {{title}} {{marketTypeTitle}} demo account', {\n                      marketTypeTitle,\n                      title: CFD_PLATFORMS.MT5.toLocaleUpperCase(),\n                  })\n                : localize('Add an {{title}} {{marketTypeTitle}} account', {\n                      marketTypeTitle,\n                      title: CFD_PLATFORMS.MT5.toLocaleUpperCase(),\n                  });\n        }\n\n        return modalTitle;\n    }, [isMT5PasswordNotSet, isVirtual, localize, marketTypeTitle, title, updateMT5Password]);\n\n    const renderFooter = useCallback(() => {\n        if (isMT5PasswordNotSet)\n            return (\n                <div className='wallets-mt5-password-modal__footer'>\n                    <Button\n                        disabled={\n                            !password ||\n                            createMT5AccountLoading ||\n                            tradingPlatformPasswordChangeLoading ||\n                            !validPasswordMT5(password) ||\n                            !isTncChecked\n                        }\n                        isFullWidth\n                        isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                        onClick={onSubmit}\n                        size='lg'\n                        textSize={isDesktop ? 'md' : 'sm'}\n                    >\n                        <Localize i18n_default_text='Create {{title}} password' values={{ title }} />\n                    </Button>\n                </div>\n            );\n\n        return (\n            <div className='wallets-mt5-password-modal__footer'>\n                <MT5PasswordModalFooter\n                    disabled={\n                        !password ||\n                        createMT5AccountLoading ||\n                        tradingPlatformPasswordChangeLoading ||\n                        (!validPasswordMT5(password) &&\n                            validateMT5ErrorMessage !== getPasswordErrorMessage(localize).missingCharacterMT5) ||\n                        !isTncChecked\n                    }\n                    isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                    onPrimaryClick={onSubmit}\n                    onSecondaryClick={() => sendEmailVerification()}\n                />\n            </div>\n        );\n    }, [\n        isMT5PasswordNotSet,\n        password,\n        createMT5AccountLoading,\n        tradingPlatformPasswordChangeLoading,\n        isTncChecked,\n        onSubmit,\n        isDesktop,\n        title,\n        validateMT5ErrorMessage,\n        localize,\n        sendEmailVerification,\n    ]);\n\n    const PasswordComponent = useMemo(() => {\n        if (isLoading) return <WalletLoader />;\n\n        if (isMT5PasswordNotSet && platform !== CFD_PLATFORMS.MT5)\n            return (\n                <CreatePassword\n                    isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                    onPasswordChange={e => setPassword(e.target.value)}\n                    onPrimaryClick={onSubmit}\n                    password={password}\n                    platform={mt5Platform}\n                />\n            );\n\n        if (isMT5PasswordNotSet && platform === CFD_PLATFORMS.MT5)\n            return (\n                <CreatePasswordMT5\n                    account={account as TAvailableMT5Account}\n                    isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                    isTncChecked={isTncChecked}\n                    isVirtual={isVirtual}\n                    onPasswordChange={e => setPassword(e.target.value)}\n                    onPrimaryClick={onSubmit}\n                    onTncChange={() => {\n                        setIsTncChecked(prev => !prev);\n                    }}\n                    password={password}\n                    platform={mt5Platform}\n                />\n            );\n\n        if (updateMT5Password)\n            return (\n                <MT5ResetPasswordModal\n                    formError={tradingPasswordChangeError}\n                    isLoading={tradingPlatformPasswordChangeLoading}\n                    onClickSubmitPasswordChange={onSubmitPasswordChange}\n                    sendEmailVerification={() => sendEmailVerification()}\n                />\n            );\n\n        return (\n            <EnterPassword\n                account={account}\n                isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                isTncChecked={isTncChecked}\n                isVirtual={isVirtual}\n                marketType={marketType}\n                modalTitle={\n                    isVirtual\n                        ? localize('Add an {{title}} {{marketTypeTitle}} demo account', {\n                              marketTypeTitle,\n                              title: CFD_PLATFORMS.MT5.toLocaleUpperCase(),\n                          })\n                        : localize('Add an {{title}} {{marketTypeTitle}} account', {\n                              marketTypeTitle,\n                              title: CFD_PLATFORMS.MT5.toLocaleUpperCase(),\n                          })\n                }\n                onPasswordChange={e => setPassword(e.target.value)}\n                onPrimaryClick={onSubmit}\n                onSecondaryClick={() => sendEmailVerification()}\n                onTncChange={() => setIsTncChecked(prev => !prev)}\n                password={password}\n                passwordError={createMT5AccountError?.error?.code === 'PasswordError'}\n                platform={mt5Platform}\n                product={product}\n                setPassword={setPassword}\n            />\n        );\n    }, [\n        isLoading,\n        isMT5PasswordNotSet,\n        platform,\n        tradingPlatformPasswordChangeLoading,\n        createMT5AccountLoading,\n        onSubmit,\n        password,\n        mt5Platform,\n        account,\n        isTncChecked,\n        isVirtual,\n        updateMT5Password,\n        tradingPasswordChangeError,\n        onSubmitPasswordChange,\n        marketType,\n        localize,\n        marketTypeTitle,\n        createMT5AccountError?.error?.code,\n        product,\n        sendEmailVerification,\n    ]);\n\n    if (accountStatusLoading) {\n        return <WalletLoader />;\n    }\n\n    if (emailVerificationStatus === 'error') {\n        return <MT5ErrorModal error={emailVerificationError?.error} onClickHandler={hide} />;\n    }\n\n    if (emailVerificationStatus === 'success') {\n        return (\n            <ModalWrapper isFullscreen={!isDesktop}>\n                <SentEmailContent isForgottenPassword platform={CFD_PLATFORMS.MT5} />\n            </ModalWrapper>\n        );\n    }\n\n    if (isPasswordChanged) {\n        return (\n            <WalletSuccessChangeMT5Password\n                onClick={() => {\n                    createMT5Account();\n                    setIsPasswordChanged(false);\n                    setModalOptions(prev => ({ ...prev, shouldCloseOnClickOutside: true }));\n                }}\n            />\n        );\n    }\n\n    if (createMT5AccountSuccess) {\n        return (\n            <MT5AccountAdded\n                account={createMT5AccountData}\n                marketType={marketType}\n                platform={platform}\n                product={product}\n            />\n        );\n    }\n\n    if (\n        createMT5AccountStatus === 'error' &&\n        createMT5AccountError?.error?.code === 'PasswordReset' &&\n        !updateMT5Password\n    ) {\n        return <PasswordLimitExceededModal onPrimaryClick={hide} onSecondaryClick={() => sendEmailVerification()} />;\n    }\n    if (\n        createMT5AccountStatus === 'error' &&\n        createMT5AccountError?.error?.code !== 'PasswordError' &&\n        !updateMT5Password\n    ) {\n        return <MT5ErrorModal error={createMT5AccountError?.error} onClickHandler={hide} />;\n    }\n\n    if (isDesktop) {\n        return <ModalWrapper hideCloseButton={isLoading || createMT5AccountSuccess}>{PasswordComponent}</ModalWrapper>;\n    }\n\n    return (\n        <ModalStepWrapper renderFooter={!updateMT5Password ? renderFooter : undefined} title={renderTitle()}>\n            <div className='wallets-mt5-password-modal__body'>{PasswordComponent}</div>\n        </ModalStepWrapper>\n    );\n};\n\nexport default MT5PasswordModal;\n","import React, { useCallback } from 'react';\nimport { useActiveWalletAccount, useIsEuRegion, useMT5AccountsList, useTradingPlatformStatus } from '@deriv/api-v2';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text } from '@deriv-com/ui';\nimport { ClientVerificationModal, TradingAccountCard } from '../../../../../components';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport useIsRtl from '../../../../../hooks/useIsRtl';\nimport { TAvailableMT5Account } from '../../../../../types';\nimport { getClientVerification } from '../../../../../utils';\nimport {\n    getMarketTypeDetails,\n    MARKET_TYPE,\n    MT5_ACCOUNT_STATUS,\n    PRODUCT,\n    TRADING_PLATFORM_STATUS,\n} from '../../../constants';\nimport { MT5PasswordModal, TradingPlatformStatusModal } from '../../../modals';\nimport './AvailableMT5AccountsList.scss';\n\ntype TProps = {\n    account: TAvailableMT5Account;\n};\n\nconst AvailableMT5AccountsList: React.FC<TProps> = ({ account }) => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { getPlatformStatus } = useTradingPlatformStatus();\n    const { localize } = useTranslations();\n    const isRtl = useIsRtl();\n    const { setModalState, show } = useModal();\n    const { data: isEuRegion } = useIsEuRegion();\n    const { availability, description, icon, title } = getMarketTypeDetails(localize, account.product, isEuRegion)[\n        account.market_type || MARKET_TYPE.ALL\n    ];\n    const { data: mt5Accounts } = useMT5AccountsList();\n    const platformStatus = getPlatformStatus(account.platform);\n    const hasUnavailableAccount = mt5Accounts?.some(account => account.status === 'unavailable');\n    const isVirtual = activeWallet?.is_virtual;\n    const { hasClientKycStatus } = getClientVerification(account);\n    //@ts-expect-error - needs backend type update for account product\n    const isNewBadgeVisible = [PRODUCT.ZEROSPREAD, PRODUCT.GOLD].includes(account.product);\n\n    const onButtonClick = useCallback(() => {\n        if (hasUnavailableAccount) return show(<TradingPlatformStatusModal status={MT5_ACCOUNT_STATUS.UNAVAILABLE} />);\n\n        switch (platformStatus) {\n            case TRADING_PLATFORM_STATUS.MAINTENANCE:\n                return show(<TradingPlatformStatusModal status={TRADING_PLATFORM_STATUS.MAINTENANCE} />);\n            case TRADING_PLATFORM_STATUS.UNAVAILABLE:\n                return show(<TradingPlatformStatusModal status={TRADING_PLATFORM_STATUS.UNAVAILABLE} />);\n            case TRADING_PLATFORM_STATUS.ACTIVE:\n            default:\n                if (!isVirtual && hasClientKycStatus) {\n                    show(<ClientVerificationModal account={account} />);\n                } else {\n                    show(<MT5PasswordModal account={account} isVirtual={isVirtual} />);\n                }\n                setModalState('marketType', account.market_type);\n                setModalState('selectedJurisdiction', account.shortcode);\n                break;\n        }\n    }, [hasUnavailableAccount, show, platformStatus, isVirtual, hasClientKycStatus, setModalState, account]);\n\n    if (isEuRegion && availability === 'Non-EU') return null;\n\n    return (\n        <TradingAccountCard onClick={onButtonClick}>\n            <TradingAccountCard.Icon className='wallets-available-mt5__icon'>{icon}</TradingAccountCard.Icon>\n            <TradingAccountCard.Section>\n                <TradingAccountCard.Content className='wallets-available-mt5__details'>\n                    <div className='wallets-available-mt5__title'>\n                        <Text align='start' size='sm'>\n                            {title}\n                        </Text>\n                        {isNewBadgeVisible && (\n                            <div className='wallets-available-mt5__badge'>\n                                <Text align='start' size='xs' weight='bold'>\n                                    <Localize i18n_default_text='NEW' />\n                                </Text>\n                            </div>\n                        )}\n                    </div>\n                    <Text align='start' size='xs'>\n                        {description}\n                    </Text>\n                </TradingAccountCard.Content>\n                <TradingAccountCard.Button className='wallets-available-mt5__icon'>\n                    {isRtl ? (\n                        <LabelPairedChevronLeftCaptionRegularIcon width={16} />\n                    ) : (\n                        <LabelPairedChevronRightCaptionRegularIcon width={16} />\n                    )}\n                </TradingAccountCard.Button>\n            </TradingAccountCard.Section>\n        </TradingAccountCard>\n    );\n};\n\nexport default AvailableMT5AccountsList;\n","import React from 'react';\nimport {\n    useCtraderAccountsList,\n    useDxtradeAccountsList,\n    useIsEuRegion,\n    useLandingCompany,\n    useSortedMT5Accounts,\n} from '@deriv/api-v2';\nimport { TradingAppCardLoader } from '../../../../components/SkeletonLoader';\nimport { TAddedMT5Account, TAvailableMT5Account } from '../../../../types';\nimport {\n    AddedCTraderAccountsList,\n    AddedDxtradeAccountsList,\n    AddedMT5AccountsList,\n    AvailableCTraderAccountsList,\n    AvailableDxtradeAccountsList,\n    AvailableMT5AccountsList,\n} from '../../flows';\nimport './CFDPlatformsListAccounts.scss';\n\nconst CFDPlatformsListAccounts: React.FC = () => {\n    const {\n        data: mt5AccountsList,\n        isFetchedAfterMount: isMT5FetchedAfterMount,\n        isLoading: isMT5Loading,\n    } = useSortedMT5Accounts();\n    const {\n        data: ctraderAccountsList,\n        isFetchedAfterMount: isCtraderFetchedAfterMount,\n        isLoading: isCTraderLoading,\n    } = useCtraderAccountsList();\n    const {\n        data: dxtradeAccountsList,\n        isFetchedAfterMount: isDxtradeFetchedAfterMount,\n        isLoading: isDxtradeLoading,\n    } = useDxtradeAccountsList();\n    const { data: landingCompany, isLoading: isLandingCompanyLoading } = useLandingCompany();\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const isLoading = isMT5Loading || isCTraderLoading || isDxtradeLoading || isLandingCompanyLoading;\n    const isFetchedAfterMount = isMT5FetchedAfterMount || isCtraderFetchedAfterMount || isDxtradeFetchedAfterMount;\n\n    const hasCTraderAccount = !!ctraderAccountsList?.length;\n    const hasDxtradeAccount = !!dxtradeAccountsList?.length;\n\n    const financialRestrictedCountry =\n        landingCompany?.financial_company?.shortcode === 'svg' && !landingCompany?.gaming_company;\n    const cfdRestrictedCountry =\n        landingCompany?.gaming_company?.shortcode === 'svg' && !landingCompany.financial_company;\n    const isRestricted = financialRestrictedCountry || cfdRestrictedCountry;\n\n    if (isLoading || !isFetchedAfterMount) {\n        return (\n            <div className='wallets-cfd-list-accounts__content'>\n                {Array.from({ length: 3 }).map((_, idx) => (\n                    <TradingAppCardLoader key={`wallets-carousel-loader-action-${idx}`} />\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div className='wallets-cfd-list-accounts__content'>\n            {mt5AccountsList?.map((account, index) => {\n                if (account.is_added)\n                    return (\n                        <AddedMT5AccountsList\n                            account={account as TAddedMT5Account}\n                            key={`added-mt5-list${(account as TAddedMT5Account).loginid}-${index}`}\n                        />\n                    );\n\n                return (\n                    <AvailableMT5AccountsList\n                        account={account as TAvailableMT5Account}\n                        key={`available-mt5-list${account.name}-${index}`}\n                    />\n                );\n            })}\n            {!isRestricted && !isEuRegion && (\n                <>\n                    {hasCTraderAccount ? <AddedCTraderAccountsList /> : <AvailableCTraderAccountsList />}\n                    {hasDxtradeAccount ? <AddedDxtradeAccountsList /> : <AvailableDxtradeAccountsList />}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default CFDPlatformsListAccounts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useIsEuRegion } from '@deriv/api-v2';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { WalletLink } from '../../components/Base';\nimport CFDPlatformsListEmptyState from './CFDPlatformsListEmptyState';\nimport { CFDPlatformsListAccounts } from './components';\nimport './CFDPlatformsList.scss';\n\nconst CFDPlatformsListHeader: React.FC<{ isDesktop?: boolean; isEuRegion?: boolean }> = ({ isDesktop, isEuRegion }) => {\n    const history = useHistory();\n\n    return isDesktop ? (\n        <React.Fragment>\n            <div className='wallets-cfd-list__header-compare-accounts'>\n                <Text size='xl' weight='bold'>\n                    <Localize i18n_default_text='CFDs' />\n                </Text>\n                <Button\n                    color='primary-transparent'\n                    onClick={() => {\n                        history.push('/compare-accounts');\n                    }}\n                    size='sm'\n                    variant='ghost'\n                >\n                    {isEuRegion ? (\n                        <Localize i18n_default_text='Account Information' />\n                    ) : (\n                        <Localize i18n_default_text='Compare accounts' />\n                    )}\n                </Button>\n            </div>\n            <Text align='start' size='md'>\n                <Localize\n                    components={[<WalletLink key={0} staticUrl='/trade-types/cfds/' />]}\n                    i18n_default_text='Trade bigger positions with less capital on a wide range of global markets. <0>Learn more</0>'\n                />\n            </Text>\n        </React.Fragment>\n    ) : (\n        <div className='wallets-cfd-list__header-description'>\n            <Text align='start' size='sm'>\n                <Localize\n                    components={[\n                        <a\n                            className='wallets-cfd-list__header-description__link'\n                            href='https://deriv.com/trade-types/cfds/'\n                            key={0}\n                            rel='noopener noreferrer'\n                            target='_blank'\n                        />,\n                    ]}\n                    i18n_default_text='Trade bigger positions with less capital on a wide range of global markets. <0>Learn more</0>'\n                />\n            </Text>\n            <Button\n                color='primary-transparent'\n                onClick={() => {\n                    history.push('/compare-accounts');\n                }}\n                size='sm'\n                textSize='sm'\n                variant='ghost'\n            >\n                {isEuRegion ? (\n                    <Localize i18n_default_text='Account Information' />\n                ) : (\n                    <Localize i18n_default_text='Compare accounts' />\n                )}\n            </Button>\n        </div>\n    );\n};\n\nconst CFDPlatformsList: React.FC = () => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { isDesktop } = useDevice();\n    const { data: isEuRegion, isLoading } = useIsEuRegion();\n\n    return (\n        <div className='wallets-cfd-list'>\n            <section className='wallets-cfd-list__header'>\n                {isLoading ? (\n                    <div className='wallets-cfd-list__header--loader' />\n                ) : (\n                    <CFDPlatformsListHeader isDesktop={isDesktop} isEuRegion={isEuRegion} />\n                )}\n            </section>\n            {activeWallet?.currency_config?.is_crypto ? <CFDPlatformsListEmptyState /> : <CFDPlatformsListAccounts />}\n        </div>\n    );\n};\n\nexport default CFDPlatformsList;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Localize } from '@deriv-com/translations';\nimport { Button, useDevice } from '@deriv-com/ui';\nimport { useModal } from '../ModalProvider';\nimport './DerivAppsSuccessFooter.scss';\n\nconst DerivAppsSuccessFooter = () => {\n    const { hide } = useModal();\n    const { isDesktop } = useDevice();\n    const history = useHistory();\n\n    return (\n        <div className='wallets-deriv-apps-success-footer'>\n            <Button\n                borderWidth='sm'\n                color='black'\n                isFullWidth={!isDesktop}\n                onClick={hide}\n                size='lg'\n                textSize='sm'\n                variant='outlined'\n            >\n                <Localize i18n_default_text='Maybe later' />\n            </Button>\n            <Button\n                isFullWidth={!isDesktop}\n                onClick={() => {\n                    history.push('/wallet/account-transfer');\n                    hide();\n                }}\n                size='lg'\n                textSize='sm'\n            >\n                <Localize i18n_default_text='Transfer funds' />\n            </Button>\n        </div>\n    );\n};\n\nexport { DerivAppsSuccessFooter };\n","import React, { useEffect } from 'react';\nimport {\n    useActiveLinkedToTradingAccount,\n    useActiveWalletAccount,\n    useCreateNewRealAccount,\n    useCreateNewVirtualAccount,\n    useInvalidateQuery,\n    useIsEuRegion,\n    useSettings,\n} from '@deriv/api-v2';\nimport { displayMoney } from '@deriv/api-v2/src/utils';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { FormatUtils } from '@deriv-com/utils';\nimport { CFDSuccess } from '../../features/cfd/screens/CFDSuccess';\nimport useAllBalanceSubscription from '../../hooks/useAllBalanceSubscription';\nimport useSyncLocalStorageClientAccounts from '../../hooks/useSyncLocalStorageClientAccounts';\nimport { ModalStepWrapper } from '../Base';\nimport { useModal } from '../ModalProvider';\nimport { TradingAccountCard } from '../TradingAccountCard';\nimport { WalletMarketIcon } from '../WalletMarketIcon';\nimport { DerivAppsSuccessFooter } from './DerivAppsSuccessFooter';\n\nconst DerivAppsGetAccount: React.FC = () => {\n    const { show } = useModal();\n    const { isDesktop } = useDevice();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const {\n        isLoading: isAccountCreationLoading,\n        isSuccess: isAccountCreationSuccess,\n        mutateAsync: createNewRealAccount,\n    } = useCreateNewRealAccount();\n    const {\n        isLoading: isVirtualAccountCreationLoading,\n        isSuccess: isVirtualAccountCreationSuccess,\n        mutateAsync: createNewVirtualAccount,\n    } = useCreateNewVirtualAccount();\n    const {\n        data: { country_code: countryCode, date_of_birth: dateOfBirth, first_name: firstName, last_name: lastName },\n    } = useSettings();\n    const { addTradingAccountToLocalStorage } = useSyncLocalStorageClientAccounts();\n    const invalidate = useInvalidateQuery();\n\n    const { isLoading: isActiveLinkedToTradingAccountLoading } = useActiveLinkedToTradingAccount();\n\n    const { data: balanceData } = useAllBalanceSubscription();\n\n    const { localize } = useTranslations();\n    const { data: isEuRegion } = useIsEuRegion();\n\n    const createTradingAccount = async () => {\n        if (!activeWallet?.is_virtual) {\n            const createAccountResponse = await createNewRealAccount({\n                payload: {\n                    currency: activeWallet?.currency_config?.display_code,\n                    date_of_birth: FormatUtils.getFormattedDateString(Number(dateOfBirth), {\n                        format: 'YYYY-MM-DD',\n                        unix: true,\n                    }),\n                    first_name: firstName,\n                    last_name: lastName,\n                    residence: countryCode || '',\n                },\n            });\n\n            const newAccountReal = createAccountResponse?.new_account_real;\n\n            if (!newAccountReal) return;\n\n            await addTradingAccountToLocalStorage(newAccountReal, false);\n\n            invalidate('account_list');\n        } else {\n            const createAccountResponse = await createNewVirtualAccount();\n            const newAccountVirtual = createAccountResponse?.new_account_virtual;\n\n            if (!newAccountVirtual) return;\n\n            await addTradingAccountToLocalStorage(newAccountVirtual, true);\n            invalidate('account_list');\n        }\n    };\n\n    useEffect(() => {\n        if (isAccountCreationSuccess || isVirtualAccountCreationSuccess) {\n            const displayBalance = displayMoney(\n                balanceData?.[activeWallet?.loginid ?? '']?.balance,\n                activeWallet?.currency,\n                {\n                    fractional_digits: activeWallet?.currency_config?.fractional_digits,\n                }\n            );\n\n            show(\n                <ModalStepWrapper\n                    renderFooter={isDesktop ? undefined : () => <DerivAppsSuccessFooter />}\n                    shouldHideDerivAppHeader\n                    shouldHideHeader={isDesktop}\n                >\n                    <CFDSuccess\n                        actionButtons={<DerivAppsSuccessFooter />}\n                        description={localize(\n                            'Transfer funds from your {{walletCurrencyType}} Wallet to your {{accountType}} account to start trading.',\n                            {\n                                accountType: isEuRegion ? localize('Multipliers') : localize('Options'),\n                                walletCurrencyType: activeWallet?.wallet_currency_type,\n                            }\n                        )}\n                        displayBalance={displayBalance}\n                        title={\n                            isEuRegion\n                                ? localize('Your Multipliers account is ready')\n                                : localize('Your Options account is ready')\n                        }\n                    />\n                </ModalStepWrapper>,\n                {\n                    defaultRootId: 'wallets_modal_root',\n                }\n            );\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [addTradingAccountToLocalStorage, isAccountCreationSuccess, isVirtualAccountCreationSuccess]);\n\n    return (\n        <TradingAccountCard className='wallets-deriv-apps-section wallets-deriv-apps-section__border'>\n            <TradingAccountCard.Icon>\n                <WalletMarketIcon icon='standard' size={isDesktop ? 'lg' : 'md'} />\n            </TradingAccountCard.Icon>\n            <TradingAccountCard.Section>\n                <TradingAccountCard.Content>\n                    <Text align='start' size='sm'>\n                        {isEuRegion ? (\n                            <Localize i18n_default_text='Multipliers' />\n                        ) : (\n                            <Localize i18n_default_text='Options' />\n                        )}\n                    </Text>\n                    <Text align='start' size='xs'>\n                        {isEuRegion ? (\n                            <Localize i18n_default_text='Expand your potential gains; risk only what you put in.' />\n                        ) : (\n                            <Localize i18n_default_text='One options account for all platforms.' />\n                        )}\n                    </Text>\n                </TradingAccountCard.Content>\n                <TradingAccountCard.Button>\n                    <Button\n                        borderWidth='sm'\n                        color='black'\n                        disabled={\n                            isAccountCreationLoading ||\n                            isVirtualAccountCreationLoading ||\n                            isActiveLinkedToTradingAccountLoading\n                        }\n                        onClick={createTradingAccount}\n                        rounded='md'\n                        variant='outlined'\n                    >\n                        <Localize i18n_default_text='Enable' />\n                    </Button>\n                </TradingAccountCard.Button>\n            </TradingAccountCard.Section>\n        </TradingAccountCard>\n    );\n};\n\nexport { DerivAppsGetAccount };\n","import { useMemo } from 'react';\nimport { useAccountStatus, useActiveLinkedToTradingAccount } from '@deriv/api-v2';\nimport { ACCOUNT_VERIFICATION_BADGE_STATUS, ACCOUNT_VERIFICATION_STATUSES } from '../constants/constants';\nimport { TAccountStatuses } from '../types';\n\nconst useWalletsMFAccountStatus = () => {\n    const { data: accountStatus, ...rest } = useAccountStatus();\n    const { data: activeLinkedToTradingAccount } = useActiveLinkedToTradingAccount();\n\n    const authentication = accountStatus?.authentication;\n    const poiStatus = authentication?.identity?.status;\n    const onfidoStatus = authentication?.identity?.services?.onfido?.status;\n    const manualStatus = authentication?.identity?.services?.manual?.status;\n    const poaStatus = authentication?.document?.status;\n    const poaPending = poaStatus === ACCOUNT_VERIFICATION_STATUSES.PENDING;\n    const poaNotSubmitted = poaStatus === ACCOUNT_VERIFICATION_STATUSES.NONE;\n    const poiByOnfidoOrManualNotSubmitted = [onfidoStatus, manualStatus].every(\n        status => status === ACCOUNT_VERIFICATION_STATUSES.NONE\n    );\n    const poiByOnfidoOrManualVerified = [onfidoStatus, manualStatus].includes(ACCOUNT_VERIFICATION_STATUSES.VERIFIED);\n    const poiByOnfidoOrManualPending =\n        [onfidoStatus, manualStatus].includes(ACCOUNT_VERIFICATION_STATUSES.PENDING) && !poiByOnfidoOrManualVerified;\n\n    const failedCases = [\n        ACCOUNT_VERIFICATION_STATUSES.REJECTED,\n        ACCOUNT_VERIFICATION_STATUSES.EXPIRED,\n        ACCOUNT_VERIFICATION_STATUSES.SUSPECTED,\n    ];\n    // @ts-expect-error faildCases is a subset of poaStatus, it won't have all the statuses. It just contains the fail cases\n    const needPoaResubmission = failedCases.includes(poaStatus);\n    const needPoiSubmission = !poiByOnfidoOrManualPending && !poiByOnfidoOrManualVerified;\n\n    const needPoiResubmission = !poiByOnfidoOrManualNotSubmitted && needPoiSubmission;\n\n    const mfAccountStatus = useMemo(() => {\n        if (needPoiResubmission || needPoaResubmission) {\n            return ACCOUNT_VERIFICATION_BADGE_STATUS.FAILED;\n        }\n        if (poaNotSubmitted || poiByOnfidoOrManualNotSubmitted) {\n            return ACCOUNT_VERIFICATION_BADGE_STATUS.NEEDS_VERIFICATION;\n        }\n        if (poiByOnfidoOrManualPending || poaPending) {\n            return ACCOUNT_VERIFICATION_BADGE_STATUS.IN_REVIEW;\n        }\n    }, [\n        needPoaResubmission,\n        needPoiResubmission,\n        poaNotSubmitted,\n        poaPending,\n        poiByOnfidoOrManualNotSubmitted,\n        poiByOnfidoOrManualPending,\n    ]);\n\n    // eslint-disable-next-line camelcase\n    const client_kyc_status = useMemo(() => {\n        return {\n            poa_status: poaStatus as TAccountStatuses,\n            poi_status: poiStatus as TAccountStatuses,\n            required_tin: 1,\n            valid_tin: 1,\n        } as const;\n    }, [poaStatus, poiStatus]);\n\n    return {\n        data: {\n            // eslint-disable-next-line camelcase\n            client_kyc_status,\n            is_added: Boolean(activeLinkedToTradingAccount?.loginid),\n            mfAccountStatus,\n        },\n        ...rest,\n    };\n};\n\nexport default useWalletsMFAccountStatus;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveLinkedToTradingAccount, useActiveWalletAccount, useIsEuRegion } from '@deriv/api-v2';\nimport { LabelPairedArrowUpArrowDownSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport useAllBalanceSubscription from '../../hooks/useAllBalanceSubscription';\nimport useWalletsMFAccountStatus from '../../hooks/useWalletsMFAccountStatus';\nimport { THooks } from '../../types';\nimport { ClientVerificationStatusBadge } from '../ClientVerificationBadge';\nimport { ClientVerificationModal } from '../ClientVerificationModal';\nimport { useModal } from '../ModalProvider';\nimport { TradingAccountCard } from '../TradingAccountCard';\nimport { WalletDisabledAccountModal } from '../WalletDisabledAccountModal';\nimport { WalletListCardBadge } from '../WalletListCardBadge';\nimport { WalletMarketIcon } from '../WalletMarketIcon';\nimport { WalletMoney } from '../WalletMoney';\nimport { WalletStatusBadge } from '../WalletStatusBadge';\n\ntype TDerivAppsTradingAccountButtonContent = {\n    activeTradingAccount: THooks.TActiveLinkedToTradingAccount;\n    isEuRegion: boolean;\n    mfAccountStatusDetails?: ReturnType<typeof useWalletsMFAccountStatus>['data'];\n};\n\nconst DerivAppsTradingAccountButtonContent: React.FC<TDerivAppsTradingAccountButtonContent> = ({\n    activeTradingAccount,\n    isEuRegion,\n    mfAccountStatusDetails,\n}) => {\n    const history = useHistory();\n    const { show } = useModal();\n    const { is_disabled: isAccountDisabled, is_virtual: isDemo, loginid } = activeTradingAccount ?? {};\n    const {\n        client_kyc_status: clientKycStatus,\n        is_added: isMFAccountAdded,\n        mfAccountStatus,\n    } = mfAccountStatusDetails ?? {};\n\n    const shouldShowVerificationStatus =\n        isEuRegion && !isDemo && mfAccountStatus && isMFAccountAdded && clientKycStatus;\n\n    if (isAccountDisabled) {\n        return <WalletStatusBadge badgeSize='md' padding='tight' status='disabled' />;\n    }\n\n    if (shouldShowVerificationStatus) {\n        return (\n            <ClientVerificationStatusBadge\n                onClick={() =>\n                    show(\n                        <ClientVerificationModal\n                            account={{\n                                client_kyc_status: clientKycStatus,\n                                is_added: isMFAccountAdded,\n                            }}\n                        />\n                    )\n                }\n                variant={mfAccountStatus}\n            />\n        );\n    }\n\n    return (\n        <button\n            className='wallets-deriv-apps-section__button'\n            data-testid='dt_deriv-apps-trading-account-transfer-button'\n            onClick={() => {\n                history.push('/wallet/account-transfer', {\n                    toAccountLoginId: loginid,\n                });\n            }}\n        >\n            <LabelPairedArrowUpArrowDownSmBoldIcon />\n        </button>\n    );\n};\n\nconst AccountBalance: React.FC<{ activeTradingAccount: THooks.TActiveLinkedToTradingAccount }> = ({\n    activeTradingAccount,\n}) => {\n    const { data: balanceData, isLoading: isBalanceLoading } = useAllBalanceSubscription();\n    const balance = balanceData?.[activeTradingAccount?.loginid ?? '']?.balance;\n\n    return isBalanceLoading ? (\n        <div\n            className='wallets-skeleton wallets-deriv-apps-balance-loader'\n            data-testid='dt_deriv-apps-balance-loader'\n        />\n    ) : (\n        <Text align='start' data-testid='dt_wallets_deriv_apps_balance' size='sm' weight='bold'>\n            <WalletMoney amount={balance} currency={activeTradingAccount?.currency_config?.display_code} />\n        </Text>\n    );\n};\n\nconst DerivAppsTradingAccount = () => {\n    const [shouldShowDisabledAccountModal, setShouldShowDisabledAccountModal] = useState(false);\n    const { localize } = useTranslations();\n    const { isDesktop } = useDevice();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { data: activeLinkedToTradingAccount } = useActiveLinkedToTradingAccount();\n    const { data: isEuRegion, isLoading: isEuRegionLoading } = useIsEuRegion();\n    const { data: mfAccountStatusDetails, isLoading: isMFAccountLoading } = useWalletsMFAccountStatus();\n\n    const isLoading = isEuRegionLoading || isMFAccountLoading;\n\n    const shouldHideBalance =\n        isLoading ||\n        (isEuRegion && !activeLinkedToTradingAccount?.is_virtual && mfAccountStatusDetails.mfAccountStatus) ||\n        activeLinkedToTradingAccount?.is_disabled;\n\n    return (\n        <>\n            <TradingAccountCard\n                className={classNames('wallets-deriv-apps-section wallets-deriv-apps-section__border', {\n                    'wallets-deriv-apps-section--disabled': activeLinkedToTradingAccount?.is_disabled,\n                })}\n                onClick={() => {\n                    if (activeLinkedToTradingAccount?.is_disabled) {\n                        setShouldShowDisabledAccountModal(true);\n                    }\n                }}\n            >\n                <TradingAccountCard.Icon\n                    className={classNames({\n                        'wallets-deriv-apps-section--disabled-icon': activeLinkedToTradingAccount?.is_disabled,\n                    })}\n                >\n                    <WalletMarketIcon icon='standard' size={isDesktop ? 'lg' : 'md'} />\n                </TradingAccountCard.Icon>\n                <TradingAccountCard.Section>\n                    <TradingAccountCard.Content\n                        className={classNames({\n                            'wallets-deriv-apps-section--disabled-content': activeLinkedToTradingAccount?.is_disabled,\n                        })}\n                    >\n                        <div className='wallets-deriv-apps-section__title-and-badge'>\n                            <Text align='start' size='sm'>\n                                {isEuRegion ? (\n                                    <Localize i18n_default_text='Multipliers' />\n                                ) : (\n                                    <Localize i18n_default_text='Options' />\n                                )}\n                            </Text>\n                            {activeWallet?.is_virtual && <WalletListCardBadge />}\n                        </div>\n                        {shouldHideBalance ? null : (\n                            <AccountBalance activeTradingAccount={activeLinkedToTradingAccount} />\n                        )}\n\n                        <Text align='start' color='less-prominent' lineHeight='sm' size='xs' weight='bold'>\n                            {activeLinkedToTradingAccount?.loginid}\n                        </Text>\n                    </TradingAccountCard.Content>\n                    <TradingAccountCard.Button>\n                        {isLoading ? (\n                            <div\n                                className='wallets-skeleton wallets-deriv-apps-button-content-loader'\n                                data-testid='dt_deriv-apps-button-content-loader'\n                            />\n                        ) : (\n                            <DerivAppsTradingAccountButtonContent\n                                activeTradingAccount={activeLinkedToTradingAccount}\n                                isEuRegion={isEuRegion}\n                                mfAccountStatusDetails={mfAccountStatusDetails}\n                            />\n                        )}\n                    </TradingAccountCard.Button>\n                </TradingAccountCard.Section>\n            </TradingAccountCard>\n            {shouldShowDisabledAccountModal && (\n                <WalletDisabledAccountModal\n                    accountType={localize('Options')}\n                    isVisible={shouldShowDisabledAccountModal}\n                    onClose={() => setShouldShowDisabledAccountModal(false)}\n                />\n            )}\n        </>\n    );\n};\n\nexport { DerivAppsTradingAccount };\n","import React from 'react';\nimport { useActiveLinkedToTradingAccount } from '@deriv/api-v2';\nimport { DerivAppsGetAccount } from './DerivAppsGetAccount';\nimport { DerivAppsTradingAccount } from './DerivAppsTradingAccount';\nimport './DerivAppsSection.scss';\n\nconst DerivAppsSection = () => {\n    const { data: activeLinkedToTradingAccount } = useActiveLinkedToTradingAccount();\n\n    return activeLinkedToTradingAccount?.loginid ? <DerivAppsTradingAccount /> : <DerivAppsGetAccount />;\n};\n\nexport default DerivAppsSection;\n","import React, { ComponentProps } from 'react';\nimport { getStaticUrl, getUrlSmartTrader } from '../../helpers/urls';\nimport { WalletMarketIcon } from '../WalletMarketIcon';\n\nconst LinkTitle: React.FC<{ platform: ComponentProps<typeof WalletMarketIcon>['icon'] }> = ({ platform }) => {\n    const handleClick = (event: React.KeyboardEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>) => {\n        event.persist();\n        switch (platform) {\n            case 'trader':\n                window.open(getStaticUrl(`/dtrader`));\n                break;\n            case 'bot':\n                window.open(getStaticUrl(`/dbot`));\n                break;\n            case 'smarttrader':\n                window.open(getUrlSmartTrader());\n                break;\n            case 'derivgo':\n                window.open(getStaticUrl('/deriv-go'));\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <div\n            className='wallets-options-and-multipliers-listing__content__icon'\n            data-testid='dt_wallet_link_title'\n            onClick={handleClick}\n            // Fix sonarcloud issue\n            onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (event.key === 'Enter') {\n                    handleClick(event);\n                }\n            }}\n        >\n            <WalletMarketIcon icon={platform} size='lg' />\n        </div>\n    );\n};\n\nexport default LinkTitle;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveLinkedToTradingAccount, useIsEuRegion } from '@deriv/api-v2';\nimport {\n    LabelPairedChevronLeftCaptionRegularIcon,\n    LabelPairedChevronRightCaptionRegularIcon,\n} from '@deriv/quill-icons';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { Text, useDevice } from '@deriv-com/ui';\nimport { getOptionsAndMultipliersContent } from '../../constants/constants';\nimport useIsRtl from '../../hooks/useIsRtl';\nimport { TRoute } from '../../routes/Router';\nimport { WalletLink } from '../Base';\nimport { DerivAppsSection } from '../DerivAppsSection';\nimport { TradingAppCardLoader } from '../SkeletonLoader';\nimport { TradingAccountCard } from '../TradingAccountCard';\nimport LinkTitle from './LinkTitle';\nimport './OptionsAndMultipliersListing.scss';\nimport classNames from 'classnames';\n\nconst OptionsAndMultipliersListingContentLoader = () => {\n    return (\n        <>\n            {Array.from({ length: 3 }).map((_, idx) => (\n                <TradingAppCardLoader key={`wallets-carousel-loader-action-${idx}`} />\n            ))}\n        </>\n    );\n};\n\nconst OptionsAndMultipliersListingContent: React.FC<{ isEuRegion: boolean }> = ({ isEuRegion }) => {\n    const { localize } = useTranslations();\n    const isRtl = useIsRtl();\n    const history = useHistory();\n    const { data: activeLinkedToTradingAccount } = useActiveLinkedToTradingAccount();\n\n    return (\n        <>\n            {getOptionsAndMultipliersContent(localize, isEuRegion).map(account => {\n                const { availability, description, key, redirect, title } = account;\n                if (availability === 'Non-EU' && isEuRegion) return;\n                return (\n                    <TradingAccountCard\n                        {...account}\n                        disabled={activeLinkedToTradingAccount?.is_disabled}\n                        key={`trading-account-card-${title}`}\n                        onClick={() => {\n                            if (!activeLinkedToTradingAccount?.loginid) return;\n                            account.isExternal ? window.open(redirect, '_blank') : history.push(redirect as TRoute);\n                        }}\n                    >\n                        <TradingAccountCard.Icon>\n                            <LinkTitle platform={key} />\n                        </TradingAccountCard.Icon>\n                        <TradingAccountCard.Section>\n                            <TradingAccountCard.Content>\n                                <Text align='start' size='sm'>\n                                    {title}\n                                </Text>\n                                <Text align='start' size='xs'>\n                                    {description}\n                                </Text>\n                            </TradingAccountCard.Content>\n                            {activeLinkedToTradingAccount?.loginid && (\n                                <TradingAccountCard.Button>\n                                    {isRtl ? (\n                                        <LabelPairedChevronLeftCaptionRegularIcon\n                                            data-testid='dt_label_paired_chevron'\n                                            width={16}\n                                        />\n                                    ) : (\n                                        <LabelPairedChevronRightCaptionRegularIcon\n                                            data-testid='dt_label_paired_chevron'\n                                            width={16}\n                                        />\n                                    )}\n                                </TradingAccountCard.Button>\n                            )}\n                        </TradingAccountCard.Section>\n                    </TradingAccountCard>\n                );\n            })}\n        </>\n    );\n};\n\nconst OptionsAndMultipliersListing = () => {\n    const { isDesktop } = useDevice();\n    const { data: isEuRegion, isLoading: isEuRegionLoading } = useIsEuRegion();\n    const isLoading = isEuRegionLoading;\n\n    const title = isEuRegion ? <Localize i18n_default_text='Multipliers' /> : <Localize i18n_default_text='Options' />;\n    const subtitle = isEuRegion ? (\n        <>\n            <Localize i18n_default_text='Leverage your trading; risk only what you put in.' />{' '}\n            <WalletLink staticUrl='/trade-types/options/digital-options/up-and-down/'>\n                <Localize i18n_default_text='Learn more' />\n            </WalletLink>\n        </>\n    ) : (\n        <>\n            <Localize i18n_default_text='Predict the market, profit if you’re right, risk only what you put in.' />{' '}\n            <WalletLink staticUrl='/trade-types/options/digital-options/up-and-down/'>\n                <Localize i18n_default_text='Learn more' />\n            </WalletLink>\n        </>\n    );\n\n    return (\n        <div className='wallets-options-and-multipliers-listing'>\n            <section className='wallets-options-and-multipliers-listing__header'>\n                <div className='wallets-options-and-multipliers-listing__header-title'>\n                    {isDesktop && (\n                        <Text align='center' size='xl' weight='bold'>\n                            {isLoading ? (\n                                <div className='wallets-skeleton wallets-options-and-multipliers-listing__header-title__loader' />\n                            ) : (\n                                title\n                            )}\n                        </Text>\n                    )}\n                    <Text align='start' size={isDesktop ? 'md' : 'sm'}>\n                        {isLoading ? (\n                            <div className='wallets-skeleton wallets-options-and-multipliers-listing__header-subtitle__loader' />\n                        ) : (\n                            subtitle\n                        )}\n                    </Text>\n                </div>\n                {isLoading ? <TradingAppCardLoader /> : <DerivAppsSection />}\n            </section>\n            <div\n                className={classNames('wallets-options-and-multipliers-listing__content', {\n                    'wallets-options-and-multipliers-listing__content--eu': isEuRegion,\n                })}\n            >\n                {isLoading ? (\n                    <OptionsAndMultipliersListingContentLoader />\n                ) : (\n                    <OptionsAndMultipliersListingContent isEuRegion={isEuRegion} />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default OptionsAndMultipliersListing;\n","import React, { FC, useCallback } from 'react';\nimport { useIsEuRegion } from '@deriv/api-v2';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Divider, Tab, Tabs, useDevice } from '@deriv-com/ui';\nimport { CFDPlatformsList } from '../../features';\nimport { OptionsAndMultipliersListing } from '../OptionsAndMultipliersListing';\nimport { WalletsTabsLoader } from '../SkeletonLoader';\nimport './AccountsList.scss';\n\ntype TProps = {\n    accountsActiveTabIndex?: number;\n    onTabClickHandler?: React.Dispatch<React.SetStateAction<number>>;\n};\n\nconst AccountsList: FC<TProps> = ({ accountsActiveTabIndex, onTabClickHandler }) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    const { data: isEuRegion, isLoading: isEuRegionLoading } = useIsEuRegion();\n\n    const optionsAndMultipliersTabTitle = isEuRegion ? localize('Multipliers') : localize('Options');\n\n    const tabs = [localize('CFDs'), optionsAndMultipliersTabTitle];\n\n    const onChangeTabHandler = useCallback((activeTab: number) => onTabClickHandler?.(activeTab), [onTabClickHandler]);\n\n    if (isDesktop)\n        return (\n            <div className='wallets-accounts-list' data-testid='dt_desktop_accounts_list'>\n                <div className='wallets-accounts-list__content'>\n                    <Divider color='var(--border-divider)' height={2} />\n                    <CFDPlatformsList />\n                    <Divider color='var(--border-divider)' height={2} />\n                    <OptionsAndMultipliersListing />\n                </div>\n            </div>\n        );\n\n    if (isEuRegionLoading && !isDesktop) {\n        return (\n            <div className='wallets-accounts-list'>\n                <WalletsTabsLoader />\n            </div>\n        );\n    }\n\n    return (\n        <Tabs\n            activeTab={tabs[accountsActiveTabIndex ?? 0]}\n            className='wallets-accounts-list__tabs'\n            onChange={onChangeTabHandler}\n            wrapperClassName='wallets-accounts-list'\n        >\n            <Tab className='wallets-accounts-list__tab' title={localize('CFDs')}>\n                <CFDPlatformsList />\n                <Divider className='wallets-accounts-list__divider' color='var(--wallets-banner-border-color)' />\n            </Tab>\n            <Tab className='wallets-accounts-list__tab' title={optionsAndMultipliersTabTitle}>\n                <OptionsAndMultipliersListing />\n                <Divider className='wallets-accounts-list__divider' color='var(--wallets-banner-border-color)' />\n            </Tab>\n        </Tabs>\n    );\n};\n\nexport default AccountsList;\n","/* eslint-disable sort-keys */\nimport React, { ComponentProps } from 'react';\nimport { fiatIcons } from '../../constants/icons';\nimport { THooks } from '../../types';\nimport { WalletCurrencyIcon } from '../WalletCurrencyIcon';\nimport { WalletGradientBackground } from '../WalletGradientBackground';\nimport './WalletCurrencyCard.scss';\n\nconst roundedIconWidth = {\n    xs: '12',\n    sm: '16',\n    md: '24',\n    lg: '32',\n    xl: '48',\n} as const;\n\nconst defaultIconWidth = {\n    xs: '18',\n    sm: '30',\n    md: '43',\n    lg: '58',\n    xl: '83',\n} as const;\n\ntype TProps = {\n    className?: string;\n    currency: THooks.WalletAccountsList['wallet_currency_type'];\n    isDemo?: ComponentProps<typeof WalletGradientBackground>['isDemo'];\n    size: keyof typeof defaultIconWidth | keyof typeof roundedIconWidth;\n};\n\nconst WalletCurrencyCard: React.FC<TProps> = ({ className, currency, isDemo, size = 'lg' }: TProps) => {\n    const isFiat = fiatIcons.includes(currency as typeof fiatIcons[number]);\n    const IconSize = isFiat && !isDemo ? roundedIconWidth[size] : defaultIconWidth[size];\n    return (\n        <WalletGradientBackground bodyClassName={className} currency={currency} isDemo={isDemo} type='card'>\n            <div className={`wallets-currency-card wallets-currency-card--${size}`}>\n                <WalletCurrencyIcon currency={isDemo ? 'DEMO' : currency} width={IconSize} />\n            </div>\n        </WalletGradientBackground>\n    );\n};\n\nexport default WalletCurrencyCard;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount } from '@deriv/api-v2';\nimport {\n    LabelPairedArrowsRotateMdBoldIcon,\n    LabelPairedArrowUpArrowDownMdBoldIcon,\n    LabelPairedMinusMdBoldIcon,\n    LabelPairedPlusMdBoldIcon,\n} from '@deriv/quill-icons';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Button, Text, useDevice } from '@deriv-com/ui';\nimport { IconButton } from '../Base';\nimport './WalletListCardActions.scss';\n\ntype TProps = {\n    accountsActiveTabIndex?: number;\n};\n\nconst getWalletHeaderButtons = (localize: ReturnType<typeof useTranslations>['localize'], isDemo?: boolean) => {\n    const buttons = [\n        {\n            className: isDemo ? 'wallets-mobile-actions-content-icon' : 'wallets-mobile-actions-content-icon--primary',\n            color: isDemo ? 'black' : 'primary',\n            icon: isDemo ? <LabelPairedArrowsRotateMdBoldIcon /> : <LabelPairedPlusMdBoldIcon fill='#FFF' />,\n            iconColor: isDemo ? 'white' : 'primary',\n            name: isDemo ? 'reset-balance' : 'deposit',\n            text: isDemo ? localize('Reset balance') : localize('Deposit'),\n            variant: isDemo ? 'outlined' : 'contained',\n            weight: isDemo ? 'normal' : 'bold',\n        },\n        {\n            className: 'wallets-mobile-actions-content-icon',\n            color: 'black',\n            icon: <LabelPairedMinusMdBoldIcon />,\n            iconColor: 'white',\n            name: 'withdrawal',\n            text: localize('Withdraw'),\n            variant: 'outlined',\n            weight: 'normal',\n        },\n        {\n            className: 'wallets-mobile-actions-content-icon',\n            color: 'black',\n            icon: <LabelPairedArrowUpArrowDownMdBoldIcon />,\n            iconColor: 'white',\n            name: 'account-transfer',\n            text: localize('Transfer'),\n            variant: 'outlined',\n            weight: 'normal',\n        },\n    ] as const;\n\n    // Filter out the \"Withdraw\" button when is_demo is true\n    const filteredButtons = isDemo ? buttons.filter(button => button.name !== 'withdrawal') : buttons;\n\n    return filteredButtons;\n};\n\nconst WalletListCardActions: React.FC<TProps> = ({ accountsActiveTabIndex }) => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { isDesktop } = useDevice();\n    const history = useHistory();\n    const { localize } = useTranslations();\n\n    const isActive = activeWallet?.is_active;\n    const isDemo = activeWallet?.is_virtual;\n\n    if (isDesktop)\n        return (\n            <div className='wallets-header__actions'>\n                {getWalletHeaderButtons(localize, isDemo).map(button => (\n                    <Button\n                        aria-label={button.name}\n                        borderWidth='sm'\n                        color={button.color}\n                        icon={button.icon}\n                        key={button.name}\n                        onClick={() => {\n                            history.push(`/wallet/${button.name}`);\n                        }}\n                        rounded='lg'\n                        variant={button.variant}\n                    >\n                        {isActive ? button.text : ''}\n                    </Button>\n                ))}\n            </div>\n        );\n\n    return (\n        <div className='wallets-mobile-actions__container'>\n            <div className='wallets-mobile-actions'>\n                {getWalletHeaderButtons(localize, isDemo).map(button => (\n                    <div className='wallets-mobile-actions-content' key={button.name}>\n                        <IconButton\n                            aria-label={button.name}\n                            className={button.className}\n                            color={button.iconColor}\n                            icon={button.icon}\n                            onClick={() => {\n                                history.push(`/wallet/${button.name}`, { accountsActiveTabIndex });\n                            }}\n                            size='lg'\n                        />\n                        <Text align='center' size='xs' weight={button.text === localize('Deposit') ? 'bold' : 'normal'}>\n                            {button.text}\n                        </Text>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default WalletListCardActions;\n","import React from 'react';\nimport { Localize } from '@deriv-com/translations';\nimport { Text } from '@deriv-com/ui';\nimport './WalletListCardBadge.scss';\n\nconst WalletListCardBadge: React.FC = () => (\n    <div className='wallets-list-card-badge' data-testid='dt_wallet_list_card_badge'>\n        <Text color='white' size='2xs' weight='bold'>\n            <Localize i18n_default_text='Demo' />\n        </Text>\n    </div>\n);\n\nexport default WalletListCardBadge;\n","import React, { ComponentProps, FC } from 'react';\nimport { CFDPlatformIcons, MT5GoldIcon, MT5MarketIcons } from '../../constants/icons';\nimport { CFD_PLATFORMS, MARKET_TYPE } from '../../features/cfd/constants';\nimport { THooks, TPlatforms } from '../../types';\nimport { WalletCurrencyCard } from '../WalletCurrencyCard';\nimport { WalletMarketIcon } from '../WalletMarketIcon';\nimport './WalletMarketCurrencyIcon.scss';\n\ntype TWalletMarketCurrencyIconProps = {\n    currency: Exclude<THooks.ActiveWalletAccount['currency'], undefined>;\n    isDemo: THooks.ActiveWalletAccount['is_virtual'];\n    marketType?: keyof typeof MT5MarketIcons;\n    platform?: TPlatforms.All;\n    product?: THooks.AvailableMT5Accounts['product'] | 'gold';\n    size?: ComponentProps<typeof WalletCurrencyCard>['size'];\n};\n\nconst WalletMarketCurrencyIcon: FC<TWalletMarketCurrencyIconProps> = ({\n    currency,\n    isDemo,\n    marketType,\n    platform = 'ctrader',\n    product,\n    size = 'sm',\n}) => {\n    const marketTypeAllkey = product ? `${marketType}_${product}` : platform;\n    let MarketTypeIcon;\n    if (marketType === MARKET_TYPE.ALL && platform && marketTypeAllkey in CFDPlatformIcons) {\n        MarketTypeIcon = marketTypeAllkey;\n    } else if (platform === CFD_PLATFORMS.MT5 && product && product in MT5GoldIcon) {\n        MarketTypeIcon = product;\n    } else if (platform === CFD_PLATFORMS.MT5 && marketType && marketType in MT5MarketIcons) {\n        MarketTypeIcon = marketType;\n    } else MarketTypeIcon = 'standard';\n\n    return (\n        <div className='wallets-market-currency-icon' data-testid='dt_wallet_market_icon'>\n            <div className='wallets-market-currency-icon__container'>\n                <WalletMarketIcon\n                    className='wallets-market-currency-icon__market-icon'\n                    icon={MarketTypeIcon as ComponentProps<typeof WalletMarketIcon>['icon']}\n                    size={size}\n                />\n                <WalletCurrencyCard\n                    className='wallets-market-currency-icon__currency-icon'\n                    currency={currency}\n                    isDemo={isDemo}\n                    size={size}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default WalletMarketCurrencyIcon;\n","/* eslint-disable sort-keys */\nimport React, { CSSProperties } from 'react';\nimport { AppIcons, CFDPlatformIcons, MT5GoldIcon, MT5MarketIcons, PlatformIcons } from '../../constants/icons';\nimport { TIconTypes } from '../../types';\n\nconst Icons: Record<string, React.ComponentType<React.SVGAttributes<SVGElement>>> | TIconTypes = {\n    ...AppIcons,\n    ...MT5MarketIcons,\n    ...CFDPlatformIcons,\n    ...PlatformIcons,\n    ...MT5GoldIcon,\n};\n\nconst IconSizes = {\n    xs: 16,\n    sm: 24,\n    md: 32,\n    lg: 48,\n    xl: 64,\n} as const;\n\ntype TWalletIconProps = {\n    className?: string;\n    height?: CSSProperties['height'];\n    icon: keyof typeof Icons;\n    size?: keyof typeof IconSizes;\n    width?: CSSProperties['width'];\n};\n\nconst WalletMarketIcon = ({ className = '', height, icon, size = 'md', width }: TWalletIconProps) => {\n    const IconSize = IconSizes[size];\n    const Icon = Icons[icon];\n\n    if (!Icon) {\n        return null;\n    }\n\n    return (\n        <Icon\n            className={className}\n            data-testid='dt_wallet_icon'\n            height={height ?? IconSize}\n            width={width ?? IconSize}\n        />\n    );\n};\n\nexport default WalletMarketIcon;\n","import React from 'react';\nimport { useCurrencyConfig } from '@deriv/api-v2';\nimport { displayMoney } from '@deriv/api-v2/src/utils';\n\ntype TProps = {\n    amount?: number;\n    currency?: string;\n    hasSign?: boolean;\n};\n\nconst WalletMoney: React.FC<TProps> = ({ amount = 0, currency = '', hasSign = false }) => {\n    const { getConfig } = useCurrencyConfig();\n    const currencyConfig = getConfig(currency);\n\n    const fractionalDigits = currencyConfig?.fractional_digits;\n    const displayCode = currencyConfig?.display_code;\n\n    let sign = '';\n    if (Number(amount) && (Number(amount) < 0 || hasSign)) {\n        sign = Number(amount) > 0 ? '+' : '-';\n    }\n\n    const value = hasSign ? Math.abs(Number(amount)) : amount;\n\n    const formattedAmount = displayMoney(value, '', {\n        fractional_digits: fractionalDigits,\n    });\n\n    return (\n        <>\n            <span dir='ltr'>{(hasSign ? sign : '') + formattedAmount}</span>\n            {currency ? `\\u00A0${displayCode}` : ''}\n        </>\n    );\n};\n\nexport default WalletMoney;\n","import React, { ComponentProps } from 'react';\nimport { LabelPairedTriangleExclamationSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv-com/translations';\nimport { Badge } from '@deriv-com/ui';\n\ntype TStatus = 'disabled';\n\ntype TProps = Omit<ComponentProps<typeof Badge>, 'children'> & {\n    status: TStatus;\n};\n\nconst statusConfig = {\n    disabled: {\n        color: 'danger-secondary',\n        icon: <LabelPairedTriangleExclamationSmBoldIcon fill='var(--du-badge-danger-secondary, #c40000)' />,\n        text: <Localize i18n_default_text='Disabled' />,\n    },\n} as const;\n\nconst WalletStatusBadge: React.FC<TProps> = ({\n    badgeSize = 'sm',\n    padding = 'loose',\n    rounded = 'sm',\n    status,\n    textSize = 'xs',\n    variant = 'bordered',\n    ...rest\n}) => {\n    return (\n        <Badge\n            badgeSize={badgeSize}\n            color={statusConfig[status].color}\n            isBold\n            leftIcon={statusConfig[status].icon}\n            padding={padding}\n            rounded={rounded}\n            textSize={textSize}\n            variant={variant}\n            {...rest}\n        >\n            {statusConfig[status].text}\n        </Badge>\n    );\n};\n\nexport default WalletStatusBadge;\n","import React, { FC } from 'react';\nimport { useWalletAccountsList } from '@deriv/api-v2';\nimport { Chat } from '@deriv/utils';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { SectionMessage, Text, useDevice } from '@deriv-com/ui';\nimport './WalletsDisabledAccountsBanner.scss';\n\ntype TProps = {\n    disabledAccounts: NonNullable<ReturnType<typeof useWalletAccountsList>['data']>[number][];\n};\n\nconst WalletsDisabledAccountsBanner: FC<TProps> = ({ disabledAccounts }) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    let disabledAccountsCurrencies = '';\n    const disabledAccountsLength = disabledAccounts.length;\n\n    disabledAccounts.forEach((disabledAccount, index) => {\n        if (disabledAccountsLength > 1) {\n            if (index === disabledAccountsLength - 1) {\n                disabledAccountsCurrencies += ` ${localize('and')} ${disabledAccount.currency}`;\n            } else {\n                disabledAccountsCurrencies += `${disabledAccount.currency}, `;\n            }\n        } else {\n            disabledAccountsCurrencies += disabledAccount.currency;\n        }\n    });\n\n    return (\n        <div className='wallets-disabled-account-banner__container'>\n            <SectionMessage variant='warning'>\n                <Text align='start' lineHeight='lg' size={isDesktop ? 'sm' : 'md'}>\n                    <Localize\n                        components={[\n                            <button\n                                aria-label={localize('Contact live chat')}\n                                className='wallets-link wallets-link__variant--dark'\n                                key={0}\n                                onClick={Chat.open}\n                            />,\n                        ]}\n                        i18n_default_text='Your {{currencies}} {{accountType}} {{verb}} disabled. Contact us via <0>live chat</0> for details.'\n                        values={{\n                            accountType: disabledAccountsLength > 1 ? localize('Wallets') : localize('Wallet'),\n                            currencies: disabledAccountsCurrencies,\n                            verb: disabledAccountsLength > 1 ? localize('are') : localize('is'),\n                        }}\n                    />\n                </Text>\n            </SectionMessage>\n        </div>\n    );\n};\n\nexport default WalletsDisabledAccountsBanner;\n","import React, { ComponentProps } from 'react';\nimport { LabelPairedCircleExclamationCaptionRegularIcon } from '@deriv/quill-icons';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Badge, Text } from '@deriv-com/ui';\nimport { DISABLED_PLATFORM_STATUSES, MT5_ACCOUNT_STATUS, TRADING_PLATFORM_STATUS } from '../../constants';\n\ntype TProps = {\n    badgeSize: ComponentProps<typeof Badge>['badgeSize'];\n    className?: ComponentProps<typeof Badge>['className'];\n    status: (typeof DISABLED_PLATFORM_STATUSES)[number];\n};\n\nconst getBadgeText = (status: TProps['status'], localize: (key: string) => string) => {\n    switch (status) {\n        case TRADING_PLATFORM_STATUS.MAINTENANCE:\n        case MT5_ACCOUNT_STATUS.UNDER_MAINTENANCE:\n            return localize('Server maintenance');\n        case TRADING_PLATFORM_STATUS.UNAVAILABLE:\n        case MT5_ACCOUNT_STATUS.UNAVAILABLE:\n            return localize('Temporarily unavailable');\n        default:\n            return '';\n    }\n};\n\nconst PlatformStatusBadge: React.FC<TProps> = ({ badgeSize, className, status }) => {\n    const { localize } = useTranslations();\n\n    if (!getBadgeText(status, localize)) return null;\n\n    return (\n        <Badge\n            badgeSize={badgeSize}\n            className={className}\n            color='warning-secondary'\n            isBold\n            leftIcon={<LabelPairedCircleExclamationCaptionRegularIcon fill='#C47D00' />}\n            padding='loose'\n            rounded='sm'\n            variant='bordered'\n        >\n            <Text lineHeight='2xl' size='2xs' weight='bold'>\n                {getBadgeText(status, localize)}\n            </Text>\n        </Badge>\n    );\n};\n\nexport default PlatformStatusBadge;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".focus-visible{outline:none}:focus-visible{outline:none}.wallets-accounts-list{height:100%;width:100%}@media(min-width: 1280px){.wallets-accounts-list{border-radius:0 0 1.6rem 1.6rem}}@media(max-width: 1279px){.wallets-accounts-list{padding:1.6rem;width:100%;height:auto}}.wallets-accounts-list__divider{width:100%}@media(min-width: 601px)and (max-width: 1279px){.wallets-accounts-list__divider{width:80%;margin-left:auto;margin-right:auto}}.wallets-accounts-list__tabs{height:5rem;padding:.4rem;border-radius:6px}.wallets-accounts-list__tab{border-radius:4px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AccountsList.scss\"],\"names\":[],\"mappings\":\"AAquBA,eACI,YAAA,CADJ,eACI,YAAA,CAGJ,uBACI,WAAA,CACA,UAAA,CA3DA,0BAyDJ,uBAKQ,+BAAA,CAAA,CAxDJ,0BAmDJ,uBASQ,cAAA,CACA,UAAA,CACA,WAAA,CAAA,CAGJ,gCACI,UAAA,CA9EJ,gDA6EA,gCAGQ,SAAA,CACA,gBAAA,CAAA,iBAAA,CAAA,CAIR,6BACI,WAAA,CACA,aAAA,CACA,iBAAA,CAGJ,4BACI,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n:focus-visible {\\n    outline: none;\\n}\\n\\n.wallets-accounts-list {\\n    height: 100%;\\n    width: 100%;\\n\\n    @include desktop-screen {\\n        border-radius: 0 0 1.6rem 1.6rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        padding: 1.6rem;\\n        width: 100%;\\n        height: auto;\\n    }\\n\\n    &__divider {\\n        width: 100%;\\n        @include tablet-screen {\\n            width: 80%;\\n            margin-inline: auto;\\n        }\\n    }\\n\\n    &__tabs {\\n        height: 5rem;\\n        padding: 0.4rem;\\n        border-radius: 6px;\\n    }\\n\\n    &__tab {\\n        border-radius: 4px;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"[dir=\\\"ltr\\\"] .wallets-client-verification-badge{margin-right:auto}[dir=\\\"rtl\\\"] .wallets-client-verification-badge{margin-left:auto}.wallets-client-verification-badge__content--underlined{text-decoration:underline}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ClientVerificationStatusBadge.scss\"],\"names\":[],\"mappings\":\"AAquBA,+CACI,iBAAA,CADJ,+CACI,gBAAA,CAGI,wDACI,yBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-client-verification-badge {\\n    margin-inline-end: auto;\\n\\n    &__content {\\n        &--underlined {\\n            text-decoration: underline;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-client-verification-modal{width:100%;min-width:44rem;height:100%;padding:2.4rem;display:flex;flex-direction:column;align-items:center;gap:2.4rem}.wallets-client-verification-modal__description{max-width:39.2rem}@media(max-width: 1279px){.wallets-client-verification-modal__description{max-width:100%}}@media(max-width: 1279px){.wallets-client-verification-modal{min-width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ClientVerificationModal.scss\"],\"names\":[],\"mappings\":\"AAquBA,mCACI,UAAA,CACA,eAAA,CACA,WAAA,CACA,cAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAEA,gDACI,iBAAA,CA1DJ,0BAyDA,gDAIQ,cAAA,CAAA,CA7DR,0BA+CJ,mCAmBQ,cAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-client-verification-modal {\\n    width: 100%;\\n    min-width: 44rem;\\n    height: 100%;\\n    padding: 2.4rem;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2.4rem;\\n\\n    &__description {\\n        max-width: 39.2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            max-width: 100%;\\n        }\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        min-width: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-documents-list{width:100%;display:flex;flex-direction:column;align-items:center;gap:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DocumentsList.scss\"],\"names\":[],\"mappings\":\"AAquBA,wBACI,UAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-documents-list {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 1.6rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-document-tile{width:100%;height:5.6rem;padding-left:1.6rem;padding-right:1.6rem;border:none;border-radius:8px;background:#f6f7f8;display:flex;align-items:center;justify-content:space-between;cursor:pointer}.wallets-document-tile:disabled{cursor:not-allowed}.wallets-document-tile__status{display:flex;align-items:center;gap:.8rem}.wallets-document-tile__chevron--disabled{fill:#d6d6d6}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DocumentTile.scss\"],\"names\":[],\"mappings\":\"AAquBA,uBACI,UAAA,CACA,aAAA,CACA,mBAAA,CAAA,oBAAA,CACA,WAAA,CACA,iBAAA,CACA,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,cAAA,CAEA,gCACI,kBAAA,CAGJ,+BACI,YAAA,CACA,kBAAA,CACA,SAAA,CAIA,0CACI,YAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-document-tile {\\n    width: 100%;\\n    height: 5.6rem;\\n    padding-inline: 1.6rem;\\n    border: none;\\n    border-radius: 8px;\\n    background: #f6f7f8;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    cursor: pointer;\\n\\n    &:disabled {\\n        cursor: not-allowed;\\n    }\\n\\n    &__status {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &__chevron {\\n        &--disabled {\\n            fill: #d6d6d6;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;opacity:.3;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-deriv-apps-section:hover:not(.wallets-deriv-apps-section--disabled){background:none;cursor:inherit}@media(min-width: 1280px){.wallets-deriv-apps-section{min-width:35.2rem}}@media(max-width: 1279px){.wallets-deriv-apps-section{width:100%;padding-left:1.6rem;padding-right:1.6rem}}.wallets-deriv-apps-section--disabled{cursor:pointer}@media(min-width: 1024px){.wallets-deriv-apps-section--disabled:hover{background:none}}.wallets-deriv-apps-section--disabled-icon,.wallets-deriv-apps-section--disabled-content{opacity:.48}.wallets-deriv-apps-section__border{border-radius:.8rem;border:.1rem solid #f2f3f4;border:.1rem solid var(--system-light-7-secondary-background, #f2f3f4)}.wallets-deriv-apps-section__title-and-badge{display:flex;align-items:center;gap:.8rem}.wallets-deriv-apps-section__button{height:3.2rem;width:3.2rem;border-radius:1.2rem;background:none;border:1px solid #000;border:1px solid var(--icon-black-plus, #000);display:flex;align-items:center;justify-content:center}.wallets-deriv-apps-section__button:hover{cursor:pointer;background:#e6e9e9;background:var(--system-light-6-hover-background, #e6e9e9)}.wallets-deriv-apps-balance-loader,.wallets-deriv-apps-button-content-loader{padding:.7rem;width:8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader/SkeletonLoader.scss\",\"webpack://./DerivAppsSection.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,UAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CC4tBJ,6EACI,eAAA,CACA,cAAA,CA1DJ,0BAuDJ,4BAOQ,iBAAA,CAAA,CAxDJ,0BAiDJ,4BAWQ,UAAA,CACA,mBAAA,CAAA,oBAAA,CAAA,CAGJ,sCACI,cAAA,CAvBJ,0BAyBQ,4CACI,eAAA,CAAA,CAKZ,yFAEI,WAAA,CAGJ,oCACI,mBAAA,CACA,0BAAA,CAAA,sEAAA,CAGJ,6CACI,YAAA,CACA,kBAAA,CACA,SAAA,CAGJ,oCACI,aAAA,CACA,YAAA,CACA,oBAAA,CACA,eAAA,CACA,qBAAA,CAAA,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAEA,0CACI,cAAA,CACA,kBAAA,CAAA,0DAAA,CAMR,6EAEI,aAAA,CACA,UAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    opacity: 0.3;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader/SkeletonLoader.scss';\\n\\n.wallets-deriv-apps-section {\\n    &:hover:not(&--disabled) {\\n        background: none;\\n        cursor: unset;\\n    }\\n\\n    @include desktop-screen {\\n        min-width: 35.2rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n        padding-inline: 1.6rem;\\n    }\\n\\n    &--disabled {\\n        cursor: pointer;\\n        @include desktop {\\n            &:hover {\\n                background: none;\\n            }\\n        }\\n    }\\n\\n    &--disabled-icon,\\n    &--disabled-content {\\n        opacity: 0.48;\\n    }\\n\\n    &__border {\\n        border-radius: 0.8rem;\\n        border: 0.1rem solid var(--system-light-7-secondary-background, #f2f3f4);\\n    }\\n\\n    &__title-and-badge {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &__button {\\n        height: 3.2rem;\\n        width: 3.2rem;\\n        border-radius: 1.2rem;\\n        background: none;\\n        border: 1px solid var(--icon-black-plus, #000);\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n\\n        &:hover {\\n            cursor: pointer;\\n            background: var(--system-light-6-hover-background, #e6e9e9);\\n        }\\n    }\\n}\\n\\n.wallets-deriv-apps {\\n    &-balance-loader,\\n    &-button-content-loader {\\n        padding: 0.7rem;\\n        width: 8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deriv-apps-success-footer{width:100%;display:flex;justify-content:center;gap:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DerivAppsSuccessFooter.scss\"],\"names\":[],\"mappings\":\"AAquBA,mCACI,UAAA,CACA,YAAA,CACA,sBAAA,CACA,QAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deriv-apps-success-footer {\\n    width: 100%;\\n    display: flex;\\n    justify-content: center;\\n    gap: 1rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-information-banner{display:flex;padding:1.6rem;background:#e7f2f4;border-radius:8px;justify-content:space-between;margin-top:1.6rem;cursor:pointer}.wallets-information-banner__content{display:flex}[dir=\\\"ltr\\\"] .wallets-information-banner__content-text{margin-left:.4rem}[dir=\\\"rtl\\\"] .wallets-information-banner__content-text{margin-right:.4rem}.wallets-information-banner__content-text{display:flex;flex-direction:column;padding-top:.3rem}.wallets-information-banner__title{font-weight:700;color:#095a66}.wallets-information-banner__description{color:#095a66}\", \"\",{\"version\":3,\"sources\":[\"webpack://./InformationBanner.scss\"],\"names\":[],\"mappings\":\"AAquBA,4BACI,YAAA,CACA,cAAA,CACA,kBAAA,CACA,iBAAA,CACA,6BAAA,CACA,iBAAA,CACA,cAAA,CAEA,qCACI,YAAA,CAEA,sDAEI,iBAEA,CAJJ,sDAEI,kBAEA,CAJJ,0CACI,YAAA,CAEA,qBAAA,CACA,iBAAA,CAIR,mCACI,eAAA,CACA,aAAA,CAGJ,yCACI,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-information-banner {\\n    display: flex;\\n    padding: 1.6rem;\\n    background: #e7f2f4;\\n    border-radius: 2 * $BORDER_RADIUS;\\n    justify-content: space-between;\\n    margin-top: 1.6rem;\\n    cursor: pointer;\\n\\n    &__content {\\n        display: flex;\\n\\n        &-text {\\n            display: flex;\\n            margin-inline-start: 0.4rem;\\n            flex-direction: column;\\n            padding-top: 0.3rem;\\n        }\\n    }\\n\\n    &__title {\\n        font-weight: 700;\\n        color: #095a66;\\n    }\\n\\n    &__description {\\n        color: #095a66;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;opacity:.3;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-options-and-multipliers-listing{width:100%;height:100%;padding-top:2.4rem}@media(max-width: 1279px){.wallets-options-and-multipliers-listing{padding-top:0;padding-top:initial;margin-bottom:.8rem;border-top:0;border-top:initial}}.wallets-options-and-multipliers-listing__header{display:flex;align-items:center;gap:2rem;align-self:stretch;padding-bottom:2.4rem;justify-content:space-between}.wallets-options-and-multipliers-listing__header-title{display:flex;flex-direction:column;align-items:flex-start;width:100%}.wallets-options-and-multipliers-listing__header-title__loader{width:12.1rem;height:2.4rem}@media(max-width: 1279px){.wallets-options-and-multipliers-listing__header{display:flex;flex-direction:column;justify-content:center;padding-top:1.6rem;padding-bottom:0}}.wallets-options-and-multipliers-listing__header-subtitle__link{color:#ff444f;color:var(--brand-coral, #ff444f);text-underline-offset:.3rem}.wallets-options-and-multipliers-listing__header-subtitle__loader{margin-top:.2rem;width:42.6rem;height:2.4rem}.wallets-options-and-multipliers-listing__content{display:grid;grid-gap:1.6rem;gap:1.6rem;grid-template-columns:repeat(3, 1fr);-webkit-user-select:none;-moz-user-select:none;user-select:none}@media(max-width: 1279px){.wallets-options-and-multipliers-listing__content{grid-template-rows:repeat(5, 1fr);grid-template-columns:auto;gap:0}.wallets-options-and-multipliers-listing__content--eu{grid-template-rows:repeat(1, 1fr)}}.wallets-options-and-multipliers-listing__content__icon{cursor:pointer}.wallets-options-and-multipliers-listing__content__details{flex-grow:1;display:flex;flex-direction:column;align-items:flex-start}.wallets-options-and-multipliers-listing__icon{width:-moz-fit-content;width:fit-content}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader/SkeletonLoader.scss\",\"webpack://./OptionsAndMultipliersListing.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,UAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CC2tBR,yCACI,UAAA,CACA,WAAA,CACA,kBAAA,CApDA,0BAiDJ,yCAMQ,aAAA,CAAA,mBAAA,CACA,mBAAA,CACA,YAAA,CAAA,kBAAA,CAAA,CAGJ,iDACI,YAAA,CACA,kBAAA,CACA,QAAA,CACA,kBAAA,CACA,qBAAA,CACA,6BAAA,CAEA,uDACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,UAAA,CAEA,+DACI,aAAA,CACA,aAAA,CA5EZ,0BA4DA,iDAqBQ,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,gBAAA,CAAA,CAIA,gEACI,aAAA,CAAA,iCAAA,CACA,2BAAA,CAEJ,kEACI,gBAAA,CACA,aAAA,CACA,aAAA,CAKZ,kDACI,YAAA,CACA,eAAA,CAAA,UAAA,CACA,oCAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CAzGJ,0BAqGA,kDAOQ,iCAAA,CAIA,0BAAA,CACA,KAAA,CAJA,sDACI,iCAAA,CAAA,CAMR,wDACI,cAAA,CAGJ,2DACI,WAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CAIR,+CACI,sBAAA,CAAA,iBAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    opacity: 0.3;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader/SkeletonLoader.scss';\\n\\n.wallets-options-and-multipliers-listing {\\n    width: 100%;\\n    height: 100%;\\n    padding-top: 2.4rem;\\n\\n    @include mobile-or-tablet-screen {\\n        padding-top: unset;\\n        margin-bottom: 0.8rem;\\n        border-top: unset;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        align-items: center;\\n        gap: 2rem;\\n        align-self: stretch;\\n        padding-bottom: 2.4rem;\\n        justify-content: space-between;\\n\\n        &-title {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: flex-start;\\n            width: 100%;\\n\\n            &__loader {\\n                width: 12.1rem;\\n                height: 2.4rem;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            padding-top: 1.6rem;\\n            padding-bottom: 0;\\n        }\\n\\n        &-subtitle {\\n            &__link {\\n                color: var(--brand-coral, #ff444f);\\n                text-underline-offset: 0.3rem;\\n            }\\n            &__loader {\\n                margin-top: 0.2rem;\\n                width: 42.6rem;\\n                height: 2.4rem;\\n            }\\n        }\\n    }\\n\\n    &__content {\\n        display: grid;\\n        gap: 1.6rem;\\n        grid-template-columns: repeat(3, 1fr);\\n        user-select: none;\\n\\n        @include mobile-or-tablet-screen {\\n            grid-template-rows: repeat(5, 1fr);\\n            &--eu {\\n                grid-template-rows: repeat(1, 1fr);\\n            }\\n            grid-template-columns: auto;\\n            gap: 0;\\n        }\\n\\n        &__icon {\\n            cursor: pointer;\\n        }\\n\\n        &__details {\\n            flex-grow: 1;\\n            display: flex;\\n            flex-direction: column;\\n            align-items: flex-start;\\n        }\\n    }\\n\\n    &__icon {\\n        width: fit-content;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-sent-email-content{display:inline-flex;flex-direction:column;justify-content:center;align-items:center;gap:2.4rem;width:45.2rem;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff)}@media(max-width: 1279px){.wallets-sent-email-content{width:100%;justify-content:flex-start;border-radius:0;padding-bottom:2.4rem}}.wallets-sent-email-content--scrollable{padding:6rem 2.4rem 3.2rem;padding-left:2.4rem;padding-right:2.4rem}@media(max-width: 1279px){.wallets-sent-email-content--scrollable{padding-top:4.8rem;height:calc(100vh - 40px);overflow-y:scroll}}.wallets-sent-email-content__resend{align-items:center;display:flex;flex-direction:column;gap:1.6rem}.wallets-sent-email-content__resend-item{display:grid;grid-template-columns:3.2rem auto;grid-gap:.8rem}.wallets-sent-email-content__reasons-container{display:flex;flex-direction:column;align-items:flex-start;row-gap:.8rem}.wallets-sent-email-content__reasons{display:flex;align-items:center;-moz-column-gap:1.6rem;column-gap:1.6rem}.wallets-sent-email-content__reasons svg{flex-shrink:0}.wallets-sent-email-content__reasons .wallets-text{display:flex;align-self:flex-start}\", \"\",{\"version\":3,\"sources\":[\"webpack://./SentEmailContent.scss\"],\"names\":[],\"mappings\":\"AAquBA,4BACI,mBAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,aAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CAvDA,0BA+CJ,4BAWQ,UAAA,CACA,0BAAA,CACA,eAAA,CACA,qBAAA,CAAA,CAGJ,wCACI,0BAAA,CACA,mBAAA,CAAA,oBAAA,CAlEJ,0BAgEA,wCAKQ,kBAAA,CACA,yBAAA,CACA,iBAAA,CAAA,CAIR,oCACI,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,UAAA,CAEA,yCACI,YAAA,CACA,iCAAA,CACA,cAAA,CAIR,+CACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,aAAA,CAGJ,qCACI,YAAA,CACA,kBAAA,CACA,sBAAA,CAAA,iBAAA,CAEA,yCACI,aAAA,CAGJ,mDACI,YAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-sent-email-content {\\n    display: inline-flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 2.4rem;\\n    width: 45.2rem;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n        justify-content: flex-start;\\n        border-radius: 0;\\n        padding-bottom: 2.4rem;\\n    }\\n\\n    &--scrollable {\\n        padding: 6rem 2.4rem 3.2rem;\\n        padding-inline: 2.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 4.8rem;\\n            height: calc(100vh - 40px);\\n            overflow-y: scroll;\\n        }\\n    }\\n\\n    &__resend {\\n        align-items: center;\\n        display: flex;\\n        flex-direction: column;\\n        gap: 1.6rem;\\n\\n        &-item {\\n            display: grid;\\n            grid-template-columns: 3.2rem auto;\\n            grid-gap: 0.8rem;\\n        }\\n    }\\n\\n    &__reasons-container {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        row-gap: 0.8rem;\\n    }\\n\\n    &__reasons {\\n        display: flex;\\n        align-items: center;\\n        column-gap: 1.6rem;\\n\\n        & svg {\\n            flex-shrink: 0;\\n        }\\n\\n        .wallets-text {\\n            display: flex;\\n            align-self: flex-start;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;opacity:.3;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-trading-app-card-loader{display:flex;flex-direction:column;gap:24px;padding:1rem 0rem;height:8.8rem}@media(max-width: 1279px){.wallets-trading-app-card-loader{height:8rem}}.wallets-trading-app-card-loader__content{display:flex;flex-direction:row;gap:14px;align-items:center}@media(max-width: 1279px){.wallets-trading-app-card-loader__content{width:100%}}.wallets-trading-app-card-loader__content__icon{height:50px;border-radius:10px;width:50px}.wallets-trading-app-card-loader__content__details{display:flex;flex-direction:column;gap:10px;width:100%}.wallets-trading-app-card-loader__content__details--title{height:14px;border-radius:2px;width:60px}@media(max-width: 1279px){.wallets-trading-app-card-loader__content__details--title{width:30%}}.wallets-trading-app-card-loader__content__details--description{height:24px;border-radius:2px;width:200px}@media(max-width: 1279px){.wallets-trading-app-card-loader__content__details--description{width:80%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader.scss\",\"webpack://./TradingAppCardLoader.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,UAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CC2tBR,iCACI,YAAA,CACA,qBAAA,CACA,QAAA,CACA,iBAAA,CACA,aAAA,CAtDA,0BAiDJ,iCAQQ,WAAA,CAAA,CAGJ,0CACI,YAAA,CACA,kBAAA,CACA,QAAA,CACA,kBAAA,CAhEJ,0BA4DA,0CAOQ,UAAA,CAAA,CAGJ,gDACI,WAAA,CACA,kBAAA,CACA,UAAA,CAGJ,mDACI,YAAA,CACA,qBAAA,CACA,QAAA,CACA,UAAA,CAEA,0DACI,WAAA,CACA,iBAAA,CACA,UAAA,CArFZ,0BAkFQ,0DAMQ,SAAA,CAAA,CAIR,gEACI,WAAA,CACA,iBAAA,CACA,WAAA,CA/FZ,0BA4FQ,gEAMQ,SAAA,CAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    opacity: 0.3;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader.scss';\\n\\n.wallets-trading-app-card-loader {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 24px;\\n    padding: 1rem 0rem;\\n    height: 8.8rem;\\n\\n    @include mobile-or-tablet-screen {\\n        height: 8rem;\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: row;\\n        gap: 14px;\\n        align-items: center;\\n\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n        }\\n\\n        &__icon {\\n            height: 50px;\\n            border-radius: 10px;\\n            width: 50px;\\n        }\\n\\n        &__details {\\n            display: flex;\\n            flex-direction: column;\\n            gap: 10px;\\n            width: 100%;\\n\\n            &--title {\\n                height: 14px;\\n                border-radius: 2px;\\n                width: 60px;\\n\\n                @include mobile-or-tablet-screen {\\n                    width: 30%;\\n                }\\n            }\\n\\n            &--description {\\n                height: 24px;\\n                border-radius: 2px;\\n                width: 200px;\\n\\n                @include mobile-or-tablet-screen {\\n                    width: 80%;\\n                }\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-trading-account-card{display:grid;align-items:center;grid-template-columns:auto 1fr;grid-gap:1.6rem;gap:1.6rem;height:8.8rem;padding:0;border:none;background:none}.wallets-trading-account-card--disabled{cursor:not-allowed;opacity:.48}@media(min-width: 1024px){.wallets-trading-account-card--disabled:hover{background:none}}@media(min-width: 1024px){.wallets-trading-account-card{padding-left:1.6rem;padding-right:1.6rem}.wallets-trading-account-card:nth-last-child(-n+3)>.wallets-trading-account-card__section,.wallets-trading-account-card:nth-last-child(-n+3)~.wallets-trading-account-card>.wallets-trading-account-card__section{border-bottom:none}.wallets-trading-account-card:hover:not(.wallets-trading-account-card--disabled){cursor:pointer;background-color:#e6e9e9;background-color:var(--system-light-6-hover-background, #e6e9e9);border-radius:.8rem}}@media(max-width: 1279px){.wallets-trading-account-card{height:8rem}.wallets-trading-account-card:last-child>.wallets-trading-account-card__section,.wallets-trading-account-card:last-child~.wallets-trading-account-card>.wallets-trading-account-card__section{border-bottom:none}}.wallets-trading-account-card__content{display:grid;justify-content:start;align-content:center;height:100%}.wallets-trading-account-card__section{display:grid;align-items:center;grid-template-columns:1fr auto;grid-gap:1.6rem;gap:1.6rem;border-bottom:1px solid #e6e9e9;border-bottom:1px solid var(--system-light-6-hover-background, #e6e9e9);height:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TradingAccountCard.scss\"],\"names\":[],\"mappings\":\"AAquBA,8BACI,YAAA,CACA,kBAAA,CACA,8BAAA,CACA,eAAA,CAAA,UAAA,CACA,aAAA,CACA,SAAA,CACA,WAAA,CACA,eAAA,CAEA,wCACI,kBAAA,CACA,WAAA,CAjBJ,0BAmBQ,8CACI,eAAA,CAAA,CApBZ,0BAKJ,8BAqBQ,mBAAA,CAAA,oBAAA,CAGA,kNAEI,kBAAA,CAGJ,iFACI,cAAA,CACA,wBAAA,CAAA,gEAAA,CACA,mBAAA,CAAA,CA/ER,0BA+CJ,8BAqCQ,WAAA,CACA,8LAEI,kBAAA,CAAA,CAIR,uCACI,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,WAAA,CAEJ,uCACI,YAAA,CACA,kBAAA,CACA,8BAAA,CACA,eAAA,CAAA,UAAA,CACA,+BAAA,CAAA,uEAAA,CACA,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-trading-account-card {\\n    display: grid;\\n    align-items: center;\\n    grid-template-columns: auto 1fr;\\n    gap: 1.6rem;\\n    height: 8.8rem;\\n    padding: 0;\\n    border: none;\\n    background: none;\\n\\n    &--disabled {\\n        cursor: not-allowed;\\n        opacity: 0.48;\\n        @include desktop {\\n            &:hover {\\n                background: none;\\n            }\\n        }\\n    }\\n\\n    @include desktop {\\n        padding-inline: 1.6rem;\\n        $columns: 3;\\n        $grid-last-row-children: '&:nth-last-child(-n+#{$columns})';\\n        #{$grid-last-row-children} > &__section,\\n        #{$grid-last-row-children} ~ & > &__section {\\n            border-bottom: none;\\n        }\\n\\n        &:hover:not(&--disabled) {\\n            cursor: pointer;\\n            background-color: var(--system-light-6-hover-background, #e6e9e9);\\n            border-radius: 0.8rem;\\n        }\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        height: 8rem;\\n        &:last-child > &__section,\\n        &:last-child ~ & > &__section {\\n            border-bottom: none;\\n        }\\n    }\\n\\n    &__content {\\n        display: grid;\\n        justify-content: start;\\n        align-content: center;\\n        height: 100%;\\n    }\\n    &__section {\\n        display: grid;\\n        align-items: center;\\n        grid-template-columns: 1fr auto;\\n        gap: 1.6rem;\\n        border-bottom: 1px solid var(--system-light-6-hover-background, #e6e9e9);\\n        height: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-badge{display:flex;align-items:center;height:2.2rem;padding:0rem .4rem;border-radius:.4rem;background:#f2f3f4;background:var(--system-light-7-secondary-background, #f2f3f4)}.wallets-badge>.wallets-text{opacity:.7}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletBadge.scss\"],\"names\":[],\"mappings\":\"AAquBA,eACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,kBAAA,CACA,mBAAA,CACA,kBAAA,CAAA,8DAAA,CAEA,6BACI,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-badge {\\n    display: flex;\\n    align-items: center;\\n    height: 2.2rem;\\n    padding: 0rem 0.4rem;\\n    border-radius: 0.4rem;\\n    background: var(--system-light-7-secondary-background, #f2f3f4);\\n\\n    & > .wallets-text {\\n        opacity: 0.7;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-currency-card{display:flex;justify-content:center;align-items:center;flex-shrink:0}.wallets-currency-card--xl{width:12.8rem;height:8rem}.wallets-currency-card--lg{width:8.4rem;height:5.2rem}.wallets-currency-card--md{width:6.4rem;height:4rem}.wallets-currency-card--sm{width:4rem;height:2.4rem}.wallets-currency-card--xs{width:2.4rem;height:1.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletCurrencyCard.scss\"],\"names\":[],\"mappings\":\"AAquBA,uBACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CAEA,2BACI,aAAA,CACA,WAAA,CAGJ,2BACI,YAAA,CACA,aAAA,CAGJ,2BACI,YAAA,CACA,WAAA,CAGJ,2BACI,UAAA,CACA,aAAA,CAGJ,2BACI,YAAA,CACA,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-currency-card {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-shrink: 0;\\n\\n    &--xl {\\n        width: 12.8rem;\\n        height: 8rem;\\n    }\\n\\n    &--lg {\\n        width: 8.4rem;\\n        height: 5.2rem;\\n    }\\n\\n    &--md {\\n        width: 6.4rem;\\n        height: 4rem;\\n    }\\n\\n    &--sm {\\n        width: 4rem;\\n        height: 2.4rem;\\n    }\\n\\n    &--xs {\\n        width: 2.4rem;\\n        height: 1.4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.wallets-disabled-account-modal{width:auto;height:auto;border-radius:8px}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletDisabledAccountModal.scss\"],\"names\":[],\"mappings\":\"AAsrBI,0BA+CJ,gCAEQ,UAAA,CACA,WAAA,CACA,iBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-disabled-account-modal {\\n    @include mobile-or-tablet-screen {\\n        width: auto;\\n        height: auto;\\n        border-radius: 8px;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-header__actions{display:flex;align-items:center;gap:.8rem}.wallets-header__actions .deriv-button__border-width--sm{border-radius:1.2rem}.wallets-header__actions-label{font-weight:700;display:none;opacity:0;transform:translateX(-100%)}.wallets-header__actions-label--active{animation:show-actions-label .3s ease;display:block;opacity:1;transform:translateX(0)}@keyframes show-actions-label{from{transform:translateX(-100%);opacity:0}to{transform:translateX(0);opacity:1}}.wallets-mobile-actions{display:flex;flex-direction:row;align-items:center;cursor:pointer;gap:3.2rem}.wallets-mobile-actions__container{display:flex;padding:0rem 1.6rem;justify-content:center;align-items:center;gap:.8rem}.wallets-mobile-actions-content{display:flex;flex-direction:column;align-items:center;gap:.4rem;width:5.6rem;white-space:nowrap}.wallets-mobile-actions-content-icon{border-radius:1.2rem;border:.1rem solid #333333;border:.1rem solid var(--text-general, #333333)}.wallets-mobile-actions-content-icon--primary{border-radius:1.2rem;border-collapse:collapse}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCardActions.scss\"],\"names\":[],\"mappings\":\"AAsuBI,yBACI,YAAA,CACA,kBAAA,CACA,SAAA,CAGA,yDACI,oBAAA,CAGJ,+BACI,eAAA,CACA,YAAA,CACA,SAAA,CACA,2BAAA,CAEA,uCACI,qCAAA,CACA,aAAA,CACA,SAAA,CACA,uBAAA,CAKZ,8BACI,KACI,2BAAA,CACA,SAAA,CAEJ,GACI,uBAAA,CACA,SAAA,CAAA,CAKZ,wBACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,cAAA,CACA,UAAA,CAEA,mCACI,YAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,gCACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,SAAA,CACA,YAAA,CACA,kBAAA,CAEA,qCACI,oBAAA,CACA,0BAAA,CAAA,+CAAA,CAEA,8CACI,oBAAA,CACA,wBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-header {\\n    &__actions {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n\\n        /* stylelint-disable-next-line selector-class-pattern */\\n        .deriv-button__border-width--sm {\\n            border-radius: 1.2rem;\\n        }\\n\\n        &-label {\\n            font-weight: 700;\\n            display: none;\\n            opacity: 0;\\n            transform: translateX(-100%);\\n\\n            &--active {\\n                animation: show-actions-label 0.3s ease;\\n                display: block;\\n                opacity: 1;\\n                transform: translateX(0);\\n            }\\n        }\\n    }\\n\\n    @keyframes show-actions-label {\\n        from {\\n            transform: translateX(-100%);\\n            opacity: 0;\\n        }\\n        to {\\n            transform: translateX(0);\\n            opacity: 1;\\n        }\\n    }\\n}\\n\\n.wallets-mobile-actions {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    cursor: pointer;\\n    gap: 3.2rem;\\n\\n    &__container {\\n        display: flex;\\n        padding: 0rem 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &-content {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        gap: 0.4rem;\\n        width: 5.6rem;\\n        white-space: nowrap;\\n\\n        &-icon {\\n            border-radius: 1.2rem;\\n            border: 0.1rem solid var(--text-general, #333333);\\n\\n            &--primary {\\n                border-radius: 1.2rem;\\n                border-collapse: collapse;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-list-card-badge{display:flex;padding-left:.4rem;padding-right:.4rem;justify-content:center;align-items:center;height:1.4rem;border-radius:.2rem;background:#377cfc;background:var(--status-light-information, #377cfc);outline:none}@media(max-width: 1279px){.wallets-list-card-badge{height:1.2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCardBadge.scss\"],\"names\":[],\"mappings\":\"AAquBA,yBACI,YAAA,CACA,kBAAA,CAAA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CACA,mBAAA,CACA,kBAAA,CAAA,mDAAA,CACA,YAAA,CAvDA,0BA+CJ,yBAWQ,aAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-list-card-badge {\\n    display: flex;\\n    padding-inline: 0.4rem;\\n    justify-content: center;\\n    align-items: center;\\n    height: 1.4rem;\\n    border-radius: 0.2rem;\\n    background: var(--status-light-information, #377cfc);\\n    outline: none;\\n\\n    @include mobile-or-tablet-screen {\\n        height: 1.2rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-market-currency-icon{display:inline-block;position:relative}[dir=rtl] .wallets-market-currency-icon{direction:ltr}.wallets-market-currency-icon__container{display:inline-flex;align-items:flex-start;justify-content:flex-start;width:100%;height:100%}.wallets-market-currency-icon__market-icon{z-index:1;position:relative}.wallets-market-currency-icon__currency-icon{transform:translate(-0.8rem, 1.2rem);border-radius:.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletMarketCurrencyIcon.scss\"],\"names\":[],\"mappings\":\"AAquBA,8BACI,oBAAA,CACA,iBAAA,CAhuBA,wCAmuBI,aAAA,CAGJ,yCACI,mBAAA,CACA,sBAAA,CACA,0BAAA,CACA,UAAA,CACA,WAAA,CAGJ,2CACI,SAAA,CACA,iBAAA,CAGJ,6CACI,oCAAA,CACA,mBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-market-currency-icon {\\n    display: inline-block;\\n    position: relative;\\n\\n    @include rtl {\\n        direction: ltr;\\n    }\\n\\n    &__container {\\n        display: inline-flex;\\n        align-items: flex-start;\\n        justify-content: flex-start;\\n        width: 100%;\\n        height: 100%;\\n    }\\n\\n    &__market-icon {\\n        z-index: 1;\\n        position: relative;\\n    }\\n\\n    &__currency-icon {\\n        transform: translate(-0.8rem, 1.2rem);\\n        border-radius: 0.4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-change-mt5-password{width:44rem;padding:2.4rem;display:flex;flex-direction:column;gap:2.4rem;background-color:#ffffff;background-color:var(--general-main-1, #ffffff);border-radius:.8rem}@media(max-width: 1279px){.wallets-change-mt5-password{width:100%;padding-left:1.6rem;padding-right:1.6rem;gap:1.6rem;margin:0 auto;max-width:60rem}}.wallets-change-mt5-password__footer{display:flex;justify-content:flex-end;gap:.8rem}@media(max-width: 1279px){.wallets-change-mt5-password__footer{width:100%;justify-content:center;margin:0 auto;max-width:60rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletSuccessChangeMT5Password.scss\"],\"names\":[],\"mappings\":\"AAquBA,6BACI,WAAA,CACA,cAAA,CACA,YAAA,CACA,qBAAA,CACA,UAAA,CACA,wBAAA,CAAA,+CAAA,CACA,mBAAA,CAtDA,0BA+CJ,6BAUQ,UAAA,CACA,mBAAA,CAAA,oBAAA,CACA,UAAA,CACA,aAAA,CACA,eAAA,CAAA,CAGJ,qCACI,YAAA,CACA,wBAAA,CACA,SAAA,CAnEJ,0BAgEA,qCAMQ,UAAA,CACA,sBAAA,CACA,aAAA,CACA,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-change-mt5-password {\\n    width: 44rem;\\n    padding: 2.4rem;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2.4rem;\\n    background-color: var(--general-main-1, #ffffff);\\n    border-radius: 0.8rem;\\n\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n        padding-inline: 1.6rem;\\n        gap: 1.6rem;\\n        margin: 0 auto;\\n        max-width: 60rem;\\n    }\\n\\n    &__footer {\\n        display: flex;\\n        justify-content: flex-end;\\n        gap: 0.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n            justify-content: center;\\n            margin: 0 auto;\\n            max-width: 60rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-disabled-account-banner__container{width:100%;display:flex;align-items:center;justify-content:center;padding:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsDisabledAccountsBanner.scss\"],\"names\":[],\"mappings\":\"AAsuBI,4CACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-disabled-account-banner {\\n    &__container {\\n        width: 100%;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        padding: 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;opacity:.3;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-cfd-list{width:100%;height:100%}.wallets-cfd-list__cfd-empty-state{display:flex;flex-direction:row;align-items:center;justify-content:flex-start;gap:1.6rem;padding:1.6rem;margin-bottom:2.4rem;border-radius:.8rem;border:1px dashed #d6dadb;border:1px dashed var(--system-light-5-active-background, #d6dadb)}.wallets-cfd-list__cfd-empty-state-button{height:3.2rem;min-width:3.2rem;border-radius:1.2rem;background:none;border:1px solid #000;border:1px solid var(--icon-black-plus, #000);display:flex;align-items:center;justify-content:center}.wallets-cfd-list__cfd-empty-state-button:hover{cursor:pointer;background:#e6e9e9;background:var(--system-light-6-hover-background, #e6e9e9)}.wallets-cfd-list__cfd-empty-state-text{display:flex;flex-direction:column}.wallets-cfd-list__header{padding:2.4rem 0}@media(max-width: 1279px){.wallets-cfd-list__header{display:flex;flex-direction:column;justify-content:center;padding:1.6rem 0}}.wallets-cfd-list__header-compare-accounts{display:flex;align-items:center;gap:.4rem}.wallets-cfd-list__header-title{display:flex}.wallets-cfd-list__header-description{display:flex;flex-direction:column;gap:1.6rem;align-items:start}.wallets-cfd-list__header-description__link{color:#ff444f;color:var(--brand-coral, #ff444f);text-underline-offset:.3rem}.wallets-cfd-list__header--loader{padding:.7rem;width:8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../components/SkeletonLoader/SkeletonLoader.scss\",\"webpack://./CFDPlatformsList.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,UAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CC2tBR,kBACI,UAAA,CACA,WAAA,CAEA,mCACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,0BAAA,CACA,UAAA,CACA,cAAA,CACA,oBAAA,CACA,mBAAA,CACA,yBAAA,CAAA,kEAAA,CAEA,0CACI,aAAA,CACA,gBAAA,CACA,oBAAA,CACA,eAAA,CACA,qBAAA,CAAA,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAEA,gDACI,cAAA,CACA,kBAAA,CAAA,0DAAA,CAIR,wCACI,YAAA,CACA,qBAAA,CAIR,0BACI,gBAAA,CAvFJ,0BAsFA,0BAIQ,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,gBAAA,CAAA,CAGJ,2CACI,YAAA,CACA,kBAAA,CACA,SAAA,CAGJ,gCACI,YAAA,CAGJ,sCACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,iBAAA,CAEA,4CACI,aAAA,CAAA,iCAAA,CACA,2BAAA,CAGR,kCACI,aAAA,CACA,UAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    opacity: 0.3;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../../components/SkeletonLoader/SkeletonLoader.scss';\\n\\n.wallets-cfd-list {\\n    width: 100%;\\n    height: 100%;\\n\\n    &__cfd-empty-state {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        justify-content: flex-start;\\n        gap: 1.6rem;\\n        padding: 1.6rem;\\n        margin-bottom: 2.4rem;\\n        border-radius: 0.8rem;\\n        border: 1px dashed var(--system-light-5-active-background, #d6dadb);\\n\\n        &-button {\\n            height: 3.2rem;\\n            min-width: 3.2rem;\\n            border-radius: 1.2rem;\\n            background: none;\\n            border: 1px solid var(--icon-black-plus, #000);\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n\\n            &:hover {\\n                cursor: pointer;\\n                background: var(--system-light-6-hover-background, #e6e9e9);\\n            }\\n        }\\n\\n        &-text {\\n            display: flex;\\n            flex-direction: column;\\n        }\\n    }\\n\\n    &__header {\\n        padding: 2.4rem 0;\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            padding: 1.6rem 0;\\n        }\\n\\n        &-compare-accounts {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.4rem;\\n        }\\n\\n        &-title {\\n            display: flex;\\n        }\\n\\n        &-description {\\n            display: flex;\\n            flex-direction: column;\\n            gap: 1.6rem;\\n            align-items: start;\\n\\n            &__link {\\n                color: var(--brand-coral, #ff444f);\\n                text-underline-offset: 0.3rem;\\n            }\\n        }\\n        &--loader {\\n            padding: 0.7rem;\\n            width: 8rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-cfd-list-accounts__content{display:grid;grid-template-columns:repeat(3, 1fr);padding-bottom:2.4rem}@media(min-width: 1024px){.wallets-cfd-list-accounts__content{gap:1.6rem}}@media(max-width: 1279px){.wallets-cfd-list-accounts__content{grid-template-columns:auto;padding-bottom:1.6rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CFDPlatformsListAccounts.scss\"],\"names\":[],\"mappings\":\"AAsuBI,oCACI,YAAA,CACA,oCAAA,CACA,qBAAA,CATJ,0BAMA,oCAMQ,UAAA,CAAA,CAtDR,0BAgDA,oCAUQ,0BAAA,CACA,qBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-cfd-list-accounts {\\n    &__content {\\n        display: grid;\\n        grid-template-columns: repeat(3, 1fr);\\n        padding-bottom: 2.4rem;\\n\\n        @include desktop {\\n            gap: 1.6rem;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            grid-template-columns: auto;\\n            padding-bottom: 1.6rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-modal-trade-wrapper__footer{display:flex;justify-content:center;align-items:center;flex-direction:column;height:-moz-fit-content;height:fit-content;width:100%;gap:1.6rem}@media(max-width: 1279px){.wallets-modal-trade-wrapper__footer{padding-top:0;min-height:19rem}.wallets-modal-trade-wrapper__footer .wallets-text{width:50%}}.wallets-modal-trade-wrapper__footer-installations{display:flex;gap:1.6rem}.wallets-modal-trade-wrapper__footer-installations-icons{display:flex;flex-direction:column;justify-content:center;gap:.8rem}.wallets-modal-trade-wrapper__footer-installations-icons svg{width:13.7rem;height:4rem;cursor:pointer}.wallets-modal-trade-wrapper__footer-installations-qr{border:1px solid #e6e9e9;border-radius:.4rem;display:flex;flex-direction:column;justify-content:center;align-items:center;width:15rem;gap:.5rem;padding:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ModalTradeWrapper.scss\"],\"names\":[],\"mappings\":\"AAsuBI,qCACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,UAAA,CACA,UAAA,CAvDJ,0BAgDA,qCAUQ,aAAA,CACA,gBAAA,CAEA,mDACI,SAAA,CAAA,CAIR,mDACI,YAAA,CACA,UAAA,CAEA,yDACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CAEA,6DACI,aAAA,CACA,WAAA,CACA,cAAA,CAIR,sDACI,wBAAA,CACA,mBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CACA,SAAA,CACA,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-modal-trade-wrapper {\\n    &__footer {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        flex-direction: column;\\n        height: fit-content;\\n        width: 100%;\\n        gap: 1.6rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 0;\\n            min-height: 19rem;\\n\\n            .wallets-text {\\n                width: 50%;\\n            }\\n        }\\n\\n        &-installations {\\n            display: flex;\\n            gap: 1.6rem;\\n\\n            &-icons {\\n                display: flex;\\n                flex-direction: column;\\n                justify-content: center;\\n                gap: 0.8rem;\\n\\n                svg {\\n                    width: 13.7rem;\\n                    height: 4rem;\\n                    cursor: pointer;\\n                }\\n            }\\n\\n            &-qr {\\n                border: 1px solid #e6e9e9;\\n                border-radius: 0.4rem;\\n                display: flex;\\n                flex-direction: column;\\n                justify-content: center;\\n                align-items: center;\\n                width: 15rem;\\n                gap: 0.5rem;\\n                padding: 0.8rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-added-mt5__card--disabled{cursor:pointer}.wallets-added-mt5__card--disabled>:first-child{opacity:.48}@media(min-width: 1024px){.wallets-added-mt5__card--disabled:hover{background:none !important}}.wallets-added-mt5__actions{display:flex;flex-direction:column;gap:.4rem}.wallets-added-mt5__badge{width:-moz-fit-content;width:fit-content}.wallets-added-mt5__badge span{color:#ffad3a;color:var(--status-warning, #ffad3a)}.wallets-added-mt5__badge a{cursor:pointer;text-decoration:underline}.wallets-added-mt5__badge-icon{width:100%;height:100%;display:grid;align-content:center;justify-content:center;place-content:center}.wallets-added-mt5__badge--error{width:-moz-fit-content;width:fit-content;padding:0 .4rem;gap:.4rem;background:none;outline:1px solid var(--du-text-loss-danger)}.wallets-added-mt5__badge--error-link{cursor:pointer;text-decoration:underline}.wallets-added-mt5__badge--warning{width:-moz-fit-content;width:fit-content;padding:0 .4rem;gap:.4rem;background:none;outline:1px solid var(--du-text-warning)}.wallets-added-mt5__details{-webkit-user-select:none;-moz-user-select:none;user-select:none}.wallets-added-mt5__details-title{display:flex;align-items:center;gap:.8rem;align-self:stretch}.wallets-added-mt5__details-landing-company{display:flex;height:2.4rem;padding:0rem .4rem;align-items:center;gap:.4rem;border-radius:.4rem;background:#f2f3f4;background:var(--system-light-7-secondary-background, #f2f3f4)}.wallets-added-mt5__details-landing-company>.wallets-text{opacity:.7}.wallets-added-mt5__details--disabled>:first-child,.wallets-added-mt5__details--disabled>:nth-child(2),.wallets-added-mt5__details--disabled+[class*=__icon]{opacity:.48}.wallets-added-mt5__icon{width:-moz-fit-content;width:fit-content}.wallets-added-mt5__icon--pending{opacity:.5}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AddedMT5AccountsList.scss\"],\"names\":[],\"mappings\":\"AAsuBI,mCACI,cAAA,CACA,gDACI,WAAA,CATR,0BAYQ,yCAEI,0BAAA,CAAA,CAIZ,4BACI,YAAA,CACA,qBAAA,CACA,SAAA,CAGJ,0BACI,sBAAA,CAAA,iBAAA,CACA,+BACI,aAAA,CAAA,oCAAA,CAEJ,4BACI,cAAA,CACA,yBAAA,CAEJ,+BACI,UAAA,CACA,WAAA,CACA,YAAA,CACA,oBAAA,CAAA,sBAAA,CAAA,oBAAA,CAEJ,iCACI,sBAAA,CAAA,iBAAA,CACA,eAAA,CACA,SAAA,CACA,eAAA,CACA,4CAAA,CAEA,sCACI,cAAA,CACA,yBAAA,CAGR,mCACI,sBAAA,CAAA,iBAAA,CACA,eAAA,CACA,SAAA,CACA,eAAA,CACA,wCAAA,CAIR,4BACI,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CAEA,kCACI,YAAA,CACA,kBAAA,CACA,SAAA,CACA,kBAAA,CAGJ,4CACI,YAAA,CACA,aAAA,CACA,kBAAA,CACA,kBAAA,CACA,SAAA,CACA,mBAAA,CACA,kBAAA,CAAA,8DAAA,CAEA,0DACI,UAAA,CAIJ,6JAGI,WAAA,CAKZ,yBACI,sBAAA,CAAA,iBAAA,CACA,kCACI,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-added-mt5 {\\n    &__card--disabled {\\n        cursor: pointer;\\n        & > :first-child {\\n            opacity: 0.48;\\n        }\\n        @include desktop {\\n            &:hover {\\n                /* stylelint-disable-next-line declaration-no-important */\\n                background: none !important; // to override background\\n            }\\n        }\\n    }\\n    &__actions {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.4rem;\\n    }\\n\\n    &__badge {\\n        width: fit-content;\\n        span {\\n            color: var(--status-warning, #ffad3a);\\n        }\\n        & a {\\n            cursor: pointer;\\n            text-decoration: underline;\\n        }\\n        &-icon {\\n            width: 100%;\\n            height: 100%;\\n            display: grid;\\n            place-content: center;\\n        }\\n        &--error {\\n            width: fit-content;\\n            padding: 0 0.4rem;\\n            gap: 0.4rem;\\n            background: none;\\n            outline: 1px solid var(--du-text-loss-danger);\\n\\n            &-link {\\n                cursor: pointer;\\n                text-decoration: underline;\\n            }\\n        }\\n        &--warning {\\n            width: fit-content;\\n            padding: 0 0.4rem;\\n            gap: 0.4rem;\\n            background: none;\\n            outline: 1px solid var(--du-text-warning);\\n        }\\n    }\\n\\n    &__details {\\n        user-select: none;\\n\\n        &-title {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.8rem;\\n            align-self: stretch;\\n        }\\n\\n        &-landing-company {\\n            display: flex;\\n            height: 2.4rem;\\n            padding: 0rem 0.4rem;\\n            align-items: center;\\n            gap: 0.4rem;\\n            border-radius: 0.4rem;\\n            background: var(--system-light-7-secondary-background, #f2f3f4);\\n\\n            & > .wallets-text {\\n                opacity: 0.7;\\n            }\\n        }\\n        &--disabled {\\n            & > :first-child,\\n            & > :nth-child(2),\\n            & + [class*='__icon'] {\\n                opacity: 0.48;\\n            }\\n        }\\n    }\\n\\n    &__icon {\\n        width: fit-content;\\n        &--pending {\\n            opacity: 0.5;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-available-mt5__title{display:flex;gap:.8rem;align-items:center}.wallets-available-mt5__badge{border-radius:.4rem;max-height:2.2rem;padding:.2rem .4rem;display:inline-flex;justify-content:center;align-items:center;background:#fff7e6}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AvailableMT5AccountsList.scss\"],\"names\":[],\"mappings\":\"AAsuBI,8BACI,YAAA,CACA,SAAA,CACA,kBAAA,CAEJ,8BACI,mBAAA,CACA,iBAAA,CACA,mBAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-available-mt5 {\\n    &__title {\\n        display: flex;\\n        gap: 0.8rem;\\n        align-items: center;\\n    }\\n    &__badge {\\n        border-radius: 0.4rem;\\n        max-height: 2.2rem;\\n        padding: 0.2rem 0.4rem;\\n        display: inline-flex;\\n        justify-content: center;\\n        align-items: center;\\n        background: #fff7e6;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dxtrade-enter-password{display:inline-flex;padding:2rem 0rem 2.4rem;flex-direction:column;justify-content:center;align-items:flex-start;border-radius:.8rem}.wallets-dxtrade-enter-password__button{display:flex;gap:.8rem}.wallets-dxtrade-enter-password__content{width:100%}@media(max-width: 1279px){.wallets-dxtrade-enter-password__content{width:100%;padding:0;max-width:60rem;margin:0 auto}}.wallets-success-btn{width:10rem}@media(max-width: 1279px){.wallets-success-btn{width:100%;margin:0 auto;max-width:60rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DxtradeEnterPasswordModal.scss\"],\"names\":[],\"mappings\":\"AAquBA,gCACI,mBAAA,CACA,wBAAA,CACA,qBAAA,CACA,sBAAA,CACA,sBAAA,CACA,mBAAA,CAEA,wCACI,YAAA,CACA,SAAA,CAGJ,yCACI,UAAA,CA7DJ,0BA4DA,yCAIQ,UAAA,CACA,SAAA,CACA,eAAA,CACA,aAAA,CAAA,CAKZ,qBACI,WAAA,CAzEA,0BAwEJ,qBAIQ,UAAA,CACA,aAAA,CACA,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dxtrade-enter-password {\\n    display: inline-flex;\\n    padding: 2rem 0rem 2.4rem;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: flex-start;\\n    border-radius: 0.8rem;\\n\\n    &__button {\\n        display: flex;\\n        gap: 0.8rem;\\n    }\\n\\n    &__content {\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n            padding: 0;\\n            max-width: 60rem;\\n            margin: 0 auto;\\n        }\\n    }\\n}\\n\\n.wallets-success-btn {\\n    width: 10rem;\\n\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n        margin: 0 auto;\\n        max-width: 60rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-password-modal__body{width:100%}@media(max-width: 1279px){.wallets-password-modal__body{width:100%;max-width:60rem;margin:0 auto}}.wallets-password-modal__footer{width:100%}@media(max-width: 1279px){.wallets-password-modal__footer{max-width:60rem;margin:0 auto}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./EnterPasswordModal.scss\"],\"names\":[],\"mappings\":\"AAsuBI,8BACI,UAAA,CAjDJ,0BAgDA,8BAIQ,UAAA,CACA,eAAA,CACA,aAAA,CAAA,CAIR,gCACI,UAAA,CA3DJ,0BA0DA,gCAIQ,eAAA,CACA,aAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-password-modal {\\n    &__body {\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n            max-width: 60rem;\\n            margin: 0 auto;\\n        }\\n    }\\n\\n    &__footer {\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            max-width: 60rem;\\n            margin: 0 auto;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-password-modal{height:100%}.wallets-mt5-password-modal__body{width:100%}@media(max-width: 1279px){.wallets-mt5-password-modal__body{height:100%;width:100%;padding:0;max-width:60rem;margin:0 auto}}.wallets-mt5-password-modal__footer{width:100%}@media(max-width: 1279px){.wallets-mt5-password-modal__footer{max-width:60rem;margin-left:auto;margin-right:auto}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5PasswordModal.scss\"],\"names\":[],\"mappings\":\"AAquBA,4BACI,WAAA,CACA,kCACI,UAAA,CAlDJ,0BAiDA,kCAIQ,WAAA,CACA,UAAA,CACA,SAAA,CACA,eAAA,CACA,aAAA,CAAA,CAIR,oCACI,UAAA,CA9DJ,0BA6DA,oCAIQ,eAAA,CACA,gBAAA,CAAA,iBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-password-modal {\\n    height: 100%;\\n    &__body {\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            height: 100%;\\n            width: 100%;\\n            padding: 0;\\n            max-width: 60rem;\\n            margin: 0 auto;\\n        }\\n    }\\n\\n    &__footer {\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            max-width: 60rem;\\n            margin-inline: auto;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-password-limit-exceeded-modal{position:relative;display:flex;flex-direction:column;background:#fff;background:var(--system-light-8-primary-background, #fff);border-radius:.8rem;width:44rem;height:18rem;padding:2.4rem;gap:2.4rem}@media(max-width: 1279px){.wallets-password-limit-exceeded-modal{width:100%;height:100%;padding:0;gap:0}}.wallets-password-limit-exceeded-modal__title{display:flex;width:100%}@media(max-width: 1279px){.wallets-password-limit-exceeded-modal__title{padding:2rem;align-items:center;justify-content:center}}.wallets-password-limit-exceeded-modal__content{width:100%;display:flex;flex-direction:column;justify-content:stretch}@media(max-width: 1279px){.wallets-password-limit-exceeded-modal__content{padding:1rem}}.wallets-password-limit-exceeded-modal__buttons{display:flex;gap:.8rem;justify-content:flex-end}\", \"\",{\"version\":3,\"sources\":[\"webpack://./PasswordLimitExceededModal.scss\"],\"names\":[],\"mappings\":\"AAquBA,uCACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,eAAA,CAAA,yDAAA,CACA,mBAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,UAAA,CAxDA,0BA+CJ,uCAWQ,UAAA,CACA,WAAA,CACA,SAAA,CACA,KAAA,CAAA,CAEJ,8CACI,YAAA,CACA,UAAA,CAjEJ,0BA+DA,8CAIQ,YAAA,CACA,kBAAA,CACA,sBAAA,CAAA,CAGR,gDACI,UAAA,CACA,YAAA,CACA,qBAAA,CACA,uBAAA,CA5EJ,0BAwEA,gDAOQ,YAAA,CAAA,CAGR,gDACI,YAAA,CACA,SAAA,CACA,wBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-password-limit-exceeded-modal {\\n    position: relative;\\n    display: flex;\\n    flex-direction: column;\\n    background: var(--system-light-8-primary-background, #fff);\\n    border-radius: 0.8rem;\\n    width: 44rem;\\n    height: 18rem;\\n    padding: 2.4rem;\\n    gap: 2.4rem;\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n        height: 100%;\\n        padding: 0;\\n        gap: 0;\\n    }\\n    &__title {\\n        display: flex;\\n        width: 100%;\\n        @include mobile-or-tablet-screen {\\n            padding: 2rem;\\n            align-items: center;\\n            justify-content: center;\\n        }\\n    }\\n    &__content {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: stretch;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 1rem;\\n        }\\n    }\\n    &__buttons {\\n        display: flex;\\n        gap: 0.8rem;\\n        justify-content: flex-end;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;opacity:.3;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-cfd-success{display:flex;flex-direction:column;align-items:flex-start;width:24rem;padding:1rem;position:relative;border-radius:1rem}@media(max-width: 1279px){.wallets-cfd-success{height:-moz-fit-content;height:fit-content}}[dir=\\\"ltr\\\"] .wallets-cfd-success__badge{right:0}[dir=\\\"rtl\\\"] .wallets-cfd-success__badge{left:0}[dir=\\\"ltr\\\"] .wallets-cfd-success__badge{border-top-right-radius:1rem}[dir=\\\"rtl\\\"] .wallets-cfd-success__badge{border-top-left-radius:1rem}[dir=\\\"ltr\\\"] .wallets-cfd-success__badge{border-bottom-left-radius:1rem}[dir=\\\"rtl\\\"] .wallets-cfd-success__badge{border-bottom-right-radius:1rem}.wallets-cfd-success__badge{position:absolute;top:0;font-weight:700;display:grid;align-items:center;justify-items:center;place-items:center;color:#fff;height:2.5rem;width:5rem}.wallets-cfd-success__badge--demo{background-color:#377cfc}.wallets-cfd-success__badge--real{background-color:#ff444f}.wallets-cfd-success__info{display:flex;flex-direction:column;align-items:flex-start}.wallets-cfd-success__gradient{border-radius:1rem}.wallets-cfd-success__market-icon{display:flex;padding:.5rem;width:10rem;height:7rem}.wallets-cfd-success__balance-loader{padding:.7rem;width:8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../../../components/SkeletonLoader/SkeletonLoader.scss\",\"webpack://./CFDSuccess.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,UAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CC2tBR,qBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,WAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CAxDA,0BAiDJ,qBAUQ,uBAAA,CAAA,kBAAA,CAAA,CAGJ,wCAGI,OAQA,CAXJ,wCAGI,MAQA,CAXJ,wCAKI,4BAMA,CAXJ,wCAKI,2BAMA,CAXJ,wCAMI,8BAKA,CAXJ,wCAMI,+BAKA,CAXJ,4BACI,iBAAA,CACA,KAAA,CAEA,eAAA,CAGA,YAAA,CACA,kBAAA,CAAA,oBAAA,CAAA,kBAAA,CACA,UAAA,CACA,aAAA,CACA,UAAA,CAEA,kCACI,wBAAA,CAGJ,kCACI,wBAAA,CAIR,2BACI,YAAA,CACA,qBAAA,CACA,sBAAA,CAGJ,+BACI,kBAAA,CAGJ,kCACI,YAAA,CACA,aAAA,CACA,WAAA,CACA,WAAA,CAGJ,qCACI,aAAA,CACA,UAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    opacity: 0.3;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../../../../components/SkeletonLoader/SkeletonLoader.scss';\\n\\n.wallets-cfd-success {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    width: 24rem;\\n    padding: 1rem;\\n    position: relative;\\n    border-radius: 1rem;\\n\\n    @include mobile-or-tablet-screen {\\n        height: fit-content;\\n    }\\n\\n    &__badge {\\n        position: absolute;\\n        top: 0;\\n        inset-inline-end: 0;\\n        font-weight: 700;\\n        border-start-end-radius: 1rem;\\n        border-end-start-radius: 1rem;\\n        display: grid;\\n        place-items: center;\\n        color: #ffffff;\\n        height: 2.5rem;\\n        width: 5rem;\\n\\n        &--demo {\\n            background-color: #377cfc;\\n        }\\n\\n        &--real {\\n            background-color: #ff444f;\\n        }\\n    }\\n\\n    &__info {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n    }\\n\\n    &__gradient {\\n        border-radius: 1rem;\\n    }\\n\\n    &__market-icon {\\n        display: flex;\\n        padding: 0.5rem;\\n        width: 10rem;\\n        height: 7rem;\\n    }\\n\\n    &__balance-loader {\\n        padding: 0.7rem;\\n        width: 8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-change-password__modal-wrapper{width:90.4rem;height:68.8rem;display:flex;flex-direction:column}@media(max-width: 1279px){.wallets-change-password__modal-wrapper{width:auto;padding:1.6rem;height:100%;margin-left:auto;margin-right:auto;max-width:60rem}}.wallets-change-password__container{margin:0 auto;padding-top:2.4rem;width:45.2rem;height:100%;display:flex;flex-direction:column;align-items:center}@media(max-width: 1279px){.wallets-change-password__container{padding-top:.8rem;width:100%}}.wallets-change-password__tab{width:45.2rem}@media(max-width: 1279px){.wallets-change-password__tab{width:100%}}.wallets-change-password__content{margin-top:3.2rem}@media(max-width: 1279px){.wallets-change-password__content{margin-top:4rem}}.wallets-change-password__content--dxtrade{margin-top:5.6rem}@media(max-width: 1279px){.wallets-change-password__content--dxtrade{margin-top:0}}.wallets-change-password__sent-email-content-wrapper{padding-top:3.2rem}.wallets-change-password__sent-email-content-wrapper--dxtrade,.wallets-change-password__sent-email-content-wrapper--mt5-investor{padding-top:5.6rem}@media(max-width: 1279px){.wallets-change-password__sent-email-content-wrapper--dxtrade,.wallets-change-password__sent-email-content-wrapper--mt5-investor{padding-top:0}}.wallets-change-password__btn{display:flex;gap:.8rem}.wallets-change-password__investor-password{display:flex;flex-direction:column;align-items:center;gap:2.4rem}.wallets-change-password__investor-password-fields{display:flex;flex-direction:column;align-items:center;gap:1.6rem;width:32.8rem}.wallets-change-password__investor-password-buttons{display:flex;flex-direction:column;align-items:center;gap:1.6rem}.wallets-change-password__back-arrow{display:flex;align-items:center;align-self:flex-start;gap:.8rem;cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ChangePassword.scss\"],\"names\":[],\"mappings\":\"AAsuBI,wCACI,aAAA,CACA,cAAA,CACA,YAAA,CACA,qBAAA,CApDJ,0BAgDA,wCAOQ,UAAA,CACA,cAAA,CACA,WAAA,CACA,gBAAA,CAAA,iBAAA,CACA,eAAA,CAAA,CAIR,oCACI,aAAA,CACA,kBAAA,CACA,aAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CAtEJ,0BA+DA,oCAUQ,iBAAA,CACA,UAAA,CAAA,CAIR,8BACI,aAAA,CA/EJ,0BA8EA,8BAGQ,UAAA,CAAA,CAIR,kCACI,iBAAA,CAtFJ,0BAqFA,kCAIQ,eAAA,CAAA,CAGJ,2CACI,iBAAA,CA7FR,0BA4FI,2CAIQ,YAAA,CAAA,CAKZ,qDACI,kBAAA,CAEA,iIAEI,kBAAA,CA1GR,0BAwGI,iIAKQ,aAAA,CAAA,CAKZ,8BACI,YAAA,CACA,SAAA,CAGJ,4CACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAEA,mDACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,aAAA,CAGJ,oDACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAIR,qCACI,YAAA,CACA,kBAAA,CACA,qBAAA,CACA,SAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-change-password {\\n    &__modal-wrapper {\\n        width: 90.4rem;\\n        height: 68.8rem;\\n        display: flex;\\n        flex-direction: column;\\n\\n        @include mobile-or-tablet-screen {\\n            width: auto;\\n            padding: 1.6rem;\\n            height: 100%;\\n            margin-inline: auto;\\n            max-width: 60rem;\\n        }\\n    }\\n\\n    &__container {\\n        margin: 0 auto;\\n        padding-top: 2.4rem;\\n        width: 45.2rem;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 0.8rem;\\n            width: 100%;\\n        }\\n    }\\n\\n    &__tab {\\n        width: 45.2rem;\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n        }\\n    }\\n\\n    &__content {\\n        margin-top: 3.2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            margin-top: 4rem;\\n        }\\n\\n        &--dxtrade {\\n            margin-top: 5.6rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin-top: 0;\\n            }\\n        }\\n    }\\n\\n    &__sent-email-content-wrapper {\\n        padding-top: 3.2rem;\\n\\n        &--dxtrade,\\n        &--mt5-investor {\\n            padding-top: 5.6rem;\\n\\n            @include mobile-or-tablet-screen {\\n                padding-top: 0;\\n            }\\n        }\\n    }\\n\\n    &__btn {\\n        display: flex;\\n        gap: 0.8rem;\\n    }\\n\\n    &__investor-password {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        gap: 2.4rem;\\n\\n        &-fields {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            gap: 1.6rem;\\n            width: 32.8rem;\\n        }\\n\\n        &-buttons {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            gap: 1.6rem;\\n        }\\n    }\\n\\n    &__back-arrow {\\n        display: flex;\\n        align-items: center;\\n        align-self: flex-start;\\n        gap: 0.8rem;\\n        cursor: pointer;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-change-investor-password-screens__content{margin-top:3.2rem}@media(max-width: 1279px){.wallets-change-investor-password-screens__content{margin-top:4rem;max-width:60rem;margin-left:auto;margin-right:auto}}.wallets-change-investor-password-screens__description{margin-bottom:5.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5ChangeInvestorPasswordScreens.scss\"],\"names\":[],\"mappings\":\"AAsuBI,mDACI,iBAAA,CAjDJ,0BAgDA,mDAIQ,eAAA,CACA,eAAA,CACA,gBAAA,CAAA,iBAAA,CAAA,CAIR,uDACI,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-change-investor-password-screens {\\n    &__content {\\n        margin-top: 3.2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            margin-top: 4rem;\\n            max-width: 60rem;\\n            margin-inline: auto;\\n        }\\n    }\\n\\n    &__description {\\n        margin-bottom: 5.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-create-password{display:inline-flex;padding:3.2rem;flex-direction:column;justify-content:center;align-items:center;gap:2.4rem;width:40rem;text-align:center;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff)}.wallets-create-password__text{display:flex;flex-direction:column;justify-content:center;gap:.8rem}@media(max-width: 1279px){.wallets-create-password__text{gap:2.4rem}}@media(max-width: 1279px){.wallets-create-password{width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CreatePassword.scss\"],\"names\":[],\"mappings\":\"AAquBA,yBACI,mBAAA,CACA,cAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CAEA,+BACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CA/DJ,0BA2DA,+BAOQ,UAAA,CAAA,CAlER,0BA+CJ,yBAwBQ,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-create-password {\\n    display: inline-flex;\\n    padding: 3.2rem;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 2.4rem;\\n    width: 40rem;\\n    text-align: center;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    &__text {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        gap: 0.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            gap: 2.4rem;\\n        }\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-create-password-mt5{width:45.5rem;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff)}.wallets-create-password-mt5__text{display:flex;flex-direction:column;justify-content:center;gap:.8rem}@media(max-width: 1279px){.wallets-create-password-mt5__text{gap:2.4rem}}[dir=\\\"ltr\\\"] .wallets-create-password-mt5__header{padding-left:2.4rem;padding-right:1.6rem}[dir=\\\"rtl\\\"] .wallets-create-password-mt5__header{padding-right:2.4rem;padding-left:1.6rem}.wallets-create-password-mt5__header{display:flex;width:100%;padding-top:1.9rem;padding-bottom:1.6rem;box-shadow:0px 2px 0px 0px #f2f3f4}.wallets-create-password-mt5__body{padding-top:3.2rem;padding-bottom:3.2rem;padding-left:2.4rem;padding-right:2.4rem;width:100%;display:flex;flex-direction:column;align-items:center;gap:1.6rem}@media(max-width: 1279px){.wallets-create-password-mt5__body{padding-left:1.6rem;padding-right:1.6rem;padding-top:4rem;padding-bottom:1.6rem;gap:2.4rem;height:100%}}.wallets-create-password-mt5__footer{padding-top:1.6rem;padding-bottom:1.6rem;padding-left:2.4rem;padding-right:2.4rem;box-shadow:0px -2px 0px 0px #f2f3f4;width:100%;display:flex;justify-content:flex-end}@media(max-width: 1279px){.wallets-create-password-mt5{width:100%;height:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CreatePasswordMT5.scss\"],\"names\":[],\"mappings\":\"AAquBA,6BACI,aAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CAEA,mCACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CAxDJ,0BAoDA,mCAOQ,UAAA,CAAA,CAIR,iDAII,mBAAA,CAAA,oBACA,CALJ,iDAII,oBAAA,CAAA,mBACA,CALJ,qCACI,YAAA,CACA,UAAA,CACA,kBAAA,CAAA,qBAAA,CAEA,kCAAA,CAEJ,mCACI,kBAAA,CAAA,qBAAA,CACA,mBAAA,CAAA,oBAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CA7EJ,0BAsEA,mCASQ,mBAAA,CAAA,oBAAA,CACA,gBAAA,CAAA,qBAAA,CACA,UAAA,CACA,WAAA,CAAA,CAGR,qCACI,kBAAA,CAAA,qBAAA,CACA,mBAAA,CAAA,oBAAA,CACA,mCAAA,CACA,UAAA,CACA,YAAA,CACA,wBAAA,CA3FJ,0BA+CJ,6BAgDQ,UAAA,CACA,WAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-create-password-mt5 {\\n    width: 45.5rem;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    &__text {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        gap: 0.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            gap: 2.4rem;\\n        }\\n    }\\n\\n    &__header {\\n        display: flex;\\n        width: 100%;\\n        padding-block: 1.9rem 1.6rem;\\n        padding-inline: 2.4rem 1.6rem;\\n        box-shadow: 0px 2px 0px 0px #f2f3f4;\\n    }\\n    &__body {\\n        padding-block: 3.2rem;\\n        padding-inline: 2.4rem;\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        gap: 1.6rem;\\n        @include mobile-or-tablet-screen {\\n            padding-inline: 1.6rem;\\n            padding-block: 4rem 1.6rem;\\n            gap: 2.4rem;\\n            height: 100%;\\n        }\\n    }\\n    &__footer {\\n        padding-block: 1.6rem;\\n        padding-inline: 2.4rem;\\n        box-shadow: 0px -2px 0px 0px #f2f3f4;\\n        width: 100%;\\n        display: flex;\\n        justify-content: flex-end;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        width: 100%;\\n        height: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-enter-password{display:flex;flex-direction:column;padding:2rem 2.4rem 2.4rem;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0rem 0rem 2.4rem 0rem rgba(0,0,0,.25);max-width:40rem;width:100%}@media(max-width: 1279px){.wallets-enter-password{padding-left:1.6rem;padding-right:1.6rem;padding-top:0;padding-bottom:0;box-shadow:none;height:100%;max-width:60rem}}.wallets-enter-password__container{display:flex;flex-direction:column;width:100%;height:100%}@media(max-width: 1279px){.wallets-enter-password__container{align-items:center}}.wallets-enter-password__content{padding:2.4rem 0rem;display:flex;flex-direction:column;gap:1.6rem}@media(max-width: 1279px){.wallets-enter-password__content{gap:1.6rem;width:100%;height:100%;align-items:center}}.wallets-enter-password__description{max-width:40rem}.wallets-enter-password__buttons{display:flex;width:100%;justify-content:flex-end;align-items:center;gap:.8rem}.wallets-enter-password__hint{max-width:44rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./EnterPassword.scss\"],\"names\":[],\"mappings\":\"AAquBA,wBACI,YAAA,CACA,qBAAA,CACA,0BAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CACA,gDAAA,CACA,eAAA,CACA,UAAA,CAvDA,0BA+CJ,wBAWQ,mBAAA,CAAA,oBAAA,CACA,aAAA,CAAA,gBAAA,CACA,eAAA,CACA,WAAA,CACA,eAAA,CAAA,CAGJ,mCACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CArEJ,0BAiEA,mCAOQ,kBAAA,CAAA,CAIR,iCACI,mBAAA,CACA,YAAA,CACA,qBAAA,CACA,UAAA,CAhFJ,0BA4EA,iCAOQ,UAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CAAA,CAIR,qCACI,eAAA,CAGJ,iCACI,YAAA,CACA,UAAA,CACA,wBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,8BACI,eAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-enter-password {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 2rem 2.4rem 2.4rem;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n    box-shadow: 0rem 0rem 2.4rem 0rem rgba(0, 0, 0, 0.25);\\n    max-width: 40rem;\\n    width: 100%;\\n\\n    @include mobile-or-tablet-screen {\\n        padding-inline: 1.6rem;\\n        padding-block: 0;\\n        box-shadow: none;\\n        height: 100%;\\n        max-width: 60rem;\\n    }\\n\\n    &__container {\\n        display: flex;\\n        flex-direction: column;\\n        width: 100%;\\n        height: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            align-items: center;\\n        }\\n    }\\n\\n    &__content {\\n        padding: 2.4rem 0rem;\\n        display: flex;\\n        flex-direction: column;\\n        gap: 1.6rem;\\n\\n        @include mobile-or-tablet-screen {\\n            gap: 1.6rem;\\n            width: 100%;\\n            height: 100%;\\n            align-items: center;\\n        }\\n    }\\n\\n    &__description {\\n        max-width: 40rem;\\n    }\\n\\n    &__buttons {\\n        display: flex;\\n        width: 100%;\\n        justify-content: flex-end;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &__hint {\\n        max-width: 44rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-reset{background:#ffffff;background:var(--general-main-2, #ffffff);position:relative;border-radius:.8rem;min-height:100%}@media(min-width: 1280px){.wallets-mt5-reset{min-width:50rem}}.wallets-mt5-reset__header{padding:2rem 1.6rem 1.6rem}.wallets-mt5-reset__container{display:inline-flex;flex-direction:column;width:100%;padding:2.4rem 1.6rem}@media(min-width: 1280px){.wallets-mt5-reset__container{border-top:.2rem solid #f2f3f4}}.wallets-mt5-reset__content{display:flex;flex-direction:column;justify-content:center;align-items:flex-start}.wallets-mt5-reset__fields{padding-top:2.4rem;padding-bottom:1.6rem;display:flex;flex-direction:column;align-items:center;width:100%;gap:1.6rem}.wallets-mt5-reset__requirements{display:flex;flex-direction:column;gap:.8rem}.wallets-mt5-reset__requirements li{list-style-type:disc;list-style-position:inside}.wallets-mt5-reset__footer{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:.8rem;padding:1.6rem 2.4rem;border-top:.2rem solid #f2f3f4}@media(max-width: 1279px){.wallets-mt5-reset__footer{position:absolute;bottom:0;z-index:2;padding:2rem}}.wallets-modal-wrapper__close-icon{z-index:1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5ResetPasswordModal.scss\"],\"names\":[],\"mappings\":\"AAquBA,mBACI,kBAAA,CAAA,yCAAA,CACA,iBAAA,CACA,mBAAA,CACA,eAAA,CAzDA,0BAqDJ,mBAMQ,eAAA,CAAA,CAGJ,2BACI,0BAAA,CAGJ,8BACI,mBAAA,CACA,qBAAA,CACA,UAAA,CACA,qBAAA,CAtEJ,0BAkEA,8BAOQ,8BAAA,CAAA,CAIR,4BACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,sBAAA,CAGJ,2BACI,kBAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CAGJ,iCACI,YAAA,CACA,qBAAA,CACA,SAAA,CAEA,oCACI,oBAAA,CACA,0BAAA,CAGR,2BACI,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,UAAA,CACA,SAAA,CACA,qBAAA,CACA,8BAAA,CAzGJ,0BAkGA,2BAUQ,iBAAA,CACA,QAAA,CACA,SAAA,CACA,YAAA,CAAA,CAKZ,mCACI,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-reset {\\n    background: var(--general-main-2, #ffffff);\\n    position: relative;\\n    border-radius: 0.8rem;\\n    min-height: 100%;\\n    @include desktop-screen {\\n        min-width: 50rem;\\n    }\\n\\n    &__header {\\n        padding: 2rem 1.6rem 1.6rem;\\n    }\\n\\n    &__container {\\n        display: inline-flex;\\n        flex-direction: column;\\n        width: 100%;\\n        padding: 2.4rem 1.6rem;\\n\\n        @include desktop-screen {\\n            border-top: 0.2rem solid #f2f3f4;\\n        }\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: flex-start;\\n    }\\n\\n    &__fields {\\n        padding-top: 2.4rem;\\n        padding-bottom: 1.6rem;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        width: 100%;\\n        gap: 1.6rem;\\n    }\\n\\n    &__requirements {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.8rem;\\n\\n        li {\\n            list-style-type: disc;\\n            list-style-position: inside;\\n        }\\n    }\\n    &__footer {\\n        display: flex;\\n        justify-content: flex-end;\\n        align-items: center;\\n        width: 100%;\\n        gap: 0.8rem;\\n        padding: 1.6rem 2.4rem;\\n        border-top: 0.2rem solid #f2f3f4;\\n\\n        @include mobile-or-tablet-screen {\\n            position: absolute;\\n            bottom: 0;\\n            z-index: 2;\\n            padding: 2rem;\\n        }\\n    }\\n}\\n\\n.wallets-modal-wrapper__close-icon {\\n    z-index: 1;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-trade-details-item{display:flex;align-items:center;height:3.2rem;justify-content:space-between;background-color:#f2f3f4;padding:.5rem .8rem}.wallets-mt5-trade-details-item--info{padding:.4rem .8rem;height:-moz-fit-content;height:fit-content;border-radius:.4rem}@media(max-width: 1279px){.wallets-mt5-trade-details-item--info{padding:.8rem}}.wallets-mt5-trade-details-item__values{display:flex;align-items:center;gap:.8rem}.wallets-mt5-trade-details-item__values .wallets-clipboard{border:none;border-radius:none}.wallets-mt5-trade-details-item__values--mono-text{font-family:\\\"Courier\\\",serif}.wallets-mt5-trade-details-item__values--forgot-link{text-decoration:underline;cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5TradeDetailsItem.scss\"],\"names\":[],\"mappings\":\"AAquBA,gCACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,6BAAA,CACA,wBAAA,CACA,mBAAA,CAEA,sCACI,mBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,mBAAA,CA1DJ,0BAuDA,sCAMQ,aAAA,CAAA,CAIR,wCACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,2DACI,WAAA,CACA,kBAAA,CAGJ,mDACI,2BAAA,CAGJ,qDACI,yBAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-trade-details-item {\\n    display: flex;\\n    align-items: center;\\n    height: 3.2rem;\\n    justify-content: space-between;\\n    background-color: #f2f3f4;\\n    padding: 0.5rem 0.8rem;\\n\\n    &--info {\\n        padding: 0.4rem 0.8rem;\\n        height: fit-content;\\n        border-radius: 0.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.8rem;\\n        }\\n    }\\n\\n    &__values {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n\\n        & .wallets-clipboard {\\n            border: none;\\n            border-radius: none;\\n        }\\n\\n        &--mono-text {\\n            font-family: 'Courier', serif;\\n        }\\n\\n        &--forgot-link {\\n            text-decoration: underline;\\n            cursor: pointer;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mobile-redirect-option{display:flex;flex-direction:column;width:100%;padding:2.4rem;gap:1rem}.wallets-mobile-redirect-option__button,.wallets-mobile-redirect-option a{border:none;display:flex;justify-content:space-between;align-items:center;text-decoration:none;outline:none;height:3.4rem;padding:.8rem;border-radius:.8rem;width:100%;gap:.5rem;background-color:var(--general-section-4)}.wallets-mobile-redirect-option__button--blue,.wallets-mobile-redirect-option a--blue{background-color:#0364b9}.wallets-mobile-redirect-option__button__content,.wallets-mobile-redirect-option a__content{flex:1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5MobileRedirectOption.scss\"],\"names\":[],\"mappings\":\"AAquBA,gCACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,cAAA,CACA,QAAA,CAEA,0EAEI,WAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,oBAAA,CACA,YAAA,CACA,aAAA,CACA,aAAA,CACA,mBAAA,CACA,UAAA,CACA,SAAA,CACA,yCAAA,CAEA,sFACI,wBAAA,CAGJ,4FACI,MAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mobile-redirect-option {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    padding: 2.4rem;\\n    gap: 1rem;\\n\\n    &__button,\\n    a {\\n        border: none;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        text-decoration: none;\\n        outline: none;\\n        height: 3.4rem;\\n        padding: 0.8rem;\\n        border-radius: 0.8rem;\\n        width: 100%;\\n        gap: 0.5rem;\\n        background-color: var(--general-section-4);\\n\\n        &--blue {\\n            background-color: #0364b9;\\n        }\\n\\n        &__content {\\n            flex: 1;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-trade-link{display:flex;justify-content:space-between;align-items:center;padding:1.6rem 2.4rem}.wallets-mt5-trade-link--left{display:flex;align-items:center;gap:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5TradeLink.scss\"],\"names\":[],\"mappings\":\"AAquBA,wBACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,qBAAA,CAEA,8BACI,YAAA,CACA,kBAAA,CACA,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-trade-link {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 1.6rem 2.4rem;\\n\\n    &--left {\\n        display: flex;\\n        align-items: center;\\n        gap: 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-trade-screen{width:100%;max-width:60rem;min-width:51.2rem;margin-left:auto;margin-right:auto}@media(max-width: 600px){.wallets-mt5-trade-screen{width:100%;min-width:100%;height:auto}}.wallets-mt5-trade-screen__label{display:flex;flex-direction:row;align-items:center;gap:.6rem}.wallets-mt5-trade-screen__description{display:flex;align-items:center;width:100%}.wallets-mt5-trade-screen__description-badge{width:auto;padding-top:.5rem;padding-bottom:.5rem}[dir=\\\"ltr\\\"] .wallets-mt5-trade-screen__description-balance{margin-left:auto}[dir=\\\"rtl\\\"] .wallets-mt5-trade-screen__description-balance{margin-right:auto}.wallets-mt5-trade-screen__description-details{display:flex;flex-direction:column;padding:0 .8rem}.wallets-mt5-trade-screen__description-icon>svg{width:2.4rem;height:2.4rem}.wallets-mt5-trade-screen__content{display:flex;flex-direction:column;padding:2.4rem;gap:1.6rem}.wallets-mt5-trade-screen__content-header{display:flex;flex-direction:column;gap:.8rem}.wallets-mt5-trade-screen__content-header-btn{display:flex;justify-content:flex-end}.wallets-mt5-trade-screen__content-clipboards{display:flex;flex-direction:column;gap:.2rem}.wallets-mt5-trade-screen__content-clipboards .wallets-mt5-trade-details-item:first-child{border-radius:.7rem .7rem 0 0}.wallets-mt5-trade-screen__content-clipboards .wallets-mt5-trade-details-item:last-child{border-radius:0 0 .7rem .7rem}.wallets-mt5-trade-screen__content-clipboards .wallets-mt5-trade-details-item--info:last-child{border-radius:.4rem}.wallets-mt5-trade-screen__content-maintenance{display:grid;grid-template-columns:1.6rem auto;align-items:center;grid-gap:.8rem;gap:.8rem}[dir=\\\"ltr\\\"] .wallets-mt5-trade-screen__content-text{text-align:left}[dir=\\\"rtl\\\"] .wallets-mt5-trade-screen__content-text{text-align:right}.wallets-mt5-trade-screen__links{width:100%}.wallets-mt5-trade-screen__links-link{align-items:center;display:grid;grid-template-columns:10% auto 10%;grid-gap:1.6rem;border-top:.2rem solid #f2f3f4;padding:1.6rem 2.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5TradeScreen.scss\"],\"names\":[],\"mappings\":\"AAquBA,0BACI,UAAA,CACA,eAAA,CACA,iBAAA,CACA,gBAAA,CAAA,iBAAA,CArEA,yBAiEJ,0BAOQ,UAAA,CACA,cAAA,CACA,WAAA,CAAA,CAGJ,iCACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,uCACI,YAAA,CACA,kBAAA,CACA,UAAA,CAEA,6CACI,UAAA,CACA,iBAAA,CAAA,oBAAA,CAGJ,2DACI,gBAAA,CADJ,2DACI,iBAAA,CAGJ,+CACI,YAAA,CACA,qBAAA,CACA,eAAA,CAIA,gDACI,YAAA,CACA,aAAA,CAKZ,mCACI,YAAA,CACA,qBAAA,CACA,cAAA,CACA,UAAA,CAEA,0CACI,YAAA,CACA,qBAAA,CACA,SAAA,CAEA,8CACI,YAAA,CACA,wBAAA,CAIR,8CACI,YAAA,CACA,qBAAA,CACA,SAAA,CAEA,0FACI,6BAAA,CAGJ,yFACI,6BAAA,CAGJ,+FACI,mBAAA,CAIR,+CACI,YAAA,CACA,iCAAA,CACA,kBAAA,CACA,cAAA,CAAA,SAAA,CAGJ,oDACI,eAAA,CADJ,oDACI,gBAAA,CAIR,iCACI,UAAA,CAEA,sCACI,kBAAA,CACA,YAAA,CACA,kCAAA,CACA,eAAA,CACA,8BAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-trade-screen {\\n    width: 100%;\\n    max-width: 60rem;\\n    min-width: 51.2rem;\\n    margin-inline: auto;\\n\\n    @include mobile-screen {\\n        width: 100%;\\n        min-width: 100%;\\n        height: auto;\\n    }\\n\\n    &__label {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        gap: 0.6rem;\\n    }\\n\\n    &__description {\\n        display: flex;\\n        align-items: center;\\n        width: 100%;\\n\\n        &-badge {\\n            width: auto;\\n            padding-block: 0.5rem;\\n        }\\n\\n        &-balance {\\n            margin-inline-start: auto;\\n        }\\n\\n        &-details {\\n            display: flex;\\n            flex-direction: column;\\n            padding: 0 0.8rem;\\n        }\\n\\n        &-icon {\\n            & > svg {\\n                width: 2.4rem;\\n                height: 2.4rem;\\n            }\\n        }\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        padding: 2.4rem;\\n        gap: 1.6rem;\\n\\n        &-header {\\n            display: flex;\\n            flex-direction: column;\\n            gap: 0.8rem;\\n\\n            &-btn {\\n                display: flex;\\n                justify-content: flex-end;\\n            }\\n        }\\n\\n        &-clipboards {\\n            display: flex;\\n            flex-direction: column;\\n            gap: 0.2rem;\\n\\n            & .wallets-mt5-trade-details-item:first-child {\\n                border-radius: 0.7rem 0.7rem 0 0;\\n            }\\n\\n            & .wallets-mt5-trade-details-item:last-child {\\n                border-radius: 0 0 0.7rem 0.7rem;\\n            }\\n\\n            & .wallets-mt5-trade-details-item--info:last-child {\\n                border-radius: 0.4rem;\\n            }\\n        }\\n\\n        &-maintenance {\\n            display: grid;\\n            grid-template-columns: 1.6rem auto;\\n            align-items: center;\\n            gap: 0.8rem;\\n        }\\n\\n        &-text {\\n            text-align: start;\\n        }\\n    }\\n\\n    &__links {\\n        width: 100%;\\n\\n        &-link {\\n            align-items: center;\\n            display: grid;\\n            grid-template-columns: 10% auto 10%;\\n            grid-gap: 1.6rem;\\n            border-top: 0.2rem solid #f2f3f4;\\n            padding: 1.6rem 2.4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-server-maintenance{display:flex;flex-direction:column;padding:2.4rem;gap:2.4rem;border-radius:.8rem;background-color:#fff;background-color:var(--system-light-8-primary-background, #fff);width:44rem}@media(max-width: 1279px){.wallets-server-maintenance{width:32rem;padding:1.6rem;gap:1.6rem}}.wallets-server-maintenance__content{display:flex;flex-direction:column;gap:2rem}@media(max-width: 1279px){.wallets-server-maintenance__content{gap:1rem}}.wallets-server-maintenance__footer{display:flex;justify-content:flex-end;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TradingPlatformStatus.scss\"],\"names\":[],\"mappings\":\"AAquBA,4BACI,YAAA,CACA,qBAAA,CACA,cAAA,CACA,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,+DAAA,CACA,WAAA,CAtDA,0BA+CJ,4BAUQ,WAAA,CACA,cAAA,CACA,UAAA,CAAA,CAGJ,qCACI,YAAA,CACA,qBAAA,CACA,QAAA,CAjEJ,0BA8DA,qCAMQ,QAAA,CAAA,CAIR,oCACI,YAAA,CACA,wBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-server-maintenance {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 2.4rem;\\n    gap: 2.4rem;\\n    border-radius: 0.8rem;\\n    background-color: var(--system-light-8-primary-background, #fff);\\n    width: 44rem;\\n\\n    @include mobile-or-tablet-screen {\\n        width: 32rem;\\n        padding: 1.6rem;\\n        gap: 1.6rem;\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            gap: 1rem;\\n        }\\n    }\\n\\n    &__footer {\\n        display: flex;\\n        justify-content: flex-end;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.wallets-mt5-licence-message{margin-top:auto}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5LicenceMessage.scss\"],\"names\":[],\"mappings\":\"AAsrBI,0BA+CJ,6BAEQ,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-licence-message {\\n    @include mobile-or-tablet-screen {\\n        margin-top: auto;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-modal-tnc{display:flex;flex-direction:column;gap:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5PasswordModalTnc.scss\"],\"names\":[],\"mappings\":\"AAquBA,uBACI,YAAA,CACA,qBAAA,CACA,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 48px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 48px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow:\\n    0px 12px 16px -4px rgba(14, 14, 14, 0.08),\\n    0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow:\\n    0px 24px 24px 0px rgba(0, 0, 0, 0.08),\\n    0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-modal-tnc {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1.6rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ClientVerificationStatusBadge.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ClientVerificationModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DocumentsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DocumentTile.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DerivAppsSection.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DerivAppsSuccessFooter.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./InformationBanner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./OptionsAndMultipliersListing.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./SentEmailContent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TradingAppCardLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TradingAccountCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletBadge.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletCurrencyCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletDisabledAccountModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCardActions.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCardBadge.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletMarketCurrencyIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletSuccessChangeMT5Password.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsDisabledAccountsBanner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CFDPlatformsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CFDPlatformsListAccounts.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ModalTradeWrapper.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AddedMT5AccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AvailableMT5AccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DxtradeEnterPasswordModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./EnterPasswordModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5PasswordModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./PasswordLimitExceededModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CFDSuccess.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ChangePassword.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5ChangeInvestorPasswordScreens.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CreatePassword.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CreatePasswordMT5.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./EnterPassword.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5ResetPasswordModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5TradeDetailsItem.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5MobileRedirectOption.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5TradeLink.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5TradeScreen.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TradingPlatformStatus.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5LicenceMessage.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5PasswordModalTnc.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["displayMoney","_options$fractional_d","amount","arguments","length","undefined","currency","options","FormatUtils","formatMoney","decimalPlaces","fractional_digits","locale","concat","activeWallet","useActiveWalletAccount","data","walletAccountsList","useWalletAccountsList","history","useHistory","isDesktop","useDevice","fiatAccount","useMemo","find","account","account_type","React","className","onClick","push","shouldSelectDefaultWallet","LabelPairedArrowUpArrowDownSmBoldIcon","Text","align","size","weight","Localize","i18n_default_text","values","walletCurrencyType","wallet_currency_type","_ref","children","dataTestId","classNames","TradingAccountCard","disabled","handleClick","onKeyDown","tabIndex","Icon","TradingAccountCardIcon","Content","TradingAccountCardContent","Button","TradingAccountCardButton","Section","TradingAccountCardSection","AppToIconMapper","android","styles","props","_objectWithoutProperties","_excluded","_extends","viewBox","fill","xmlns","y","width","height","rx","clipPath","d","id","maskUnits","x","stroke","strokeWidth","mask","transform","huawei","fillRule","clipRule","ios","mt5Account","platform","localize","useTranslations","appOrder","_PlatformDetails$plat","PlatformDetails","link","title","ModalStepWrapper","renderFooter","map","app","whiteLabelLinks","AppsLinkMapper","white_label_links","ctrader","ctraderLinks","dxtrade","dxtradeLinks","mt5","internalWhiteLabelLinks","AppIcon","appLink","key","window","open","QRCode","value","shouldFixedFooter","shouldHideFooter","description","informationIcon","redirectIcon","isMobile","color","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_ref3","_ref$app","_ref$isDemo","isDemo","mt5TradeAccount","requestToken","useCtraderServiceToken","mutateAsync","_getAppToContentMappe","getAppToContentMapper","icon","text","onClickWebTerminal","_ref2","_callee","_getPlatformFromUrl","isStaging","isTestLink","url","ctraderToken","ctraderURL","_serviceToken$ctrader","_yield$getCtraderToke","serviceToken","_context","getPlatformFromUrl","t0","CFD_PLATFORMS","DXTRADE","CTRADER","demo","live","staging","payload","server","service","service_token","token","t1","console","error","apply","_next","_throw","Divider","MT5","platformTitle","borderWidth","variant","Fragment","MT5TradeLink","isRtl","useIsRtl","mobileURLSet","mobileAppURL","timeout","location","replace","getDeeplinkUrl","getMobileAppInstallerUrl","setTimeout","document","addEventListener","hidden","clearTimeout","onblur","href","getWebtraderUrl","rel","target","LegacyMonitorIcon","iconSize","LabelPairedChevronLeftLgFillIcon","LabelPairedChevronRightLgFillIcon","StandaloneMobileNotchRegularIcon","as","components","platformPasswordResetRedirectLink","isVirtual","useSettings","_useVerifyEmail","useVerifyEmail","verifyEmail","mutate","rest","_objectSpread","sendEmail","useCallback","_ref$isInvestorPasswo","isInvestorPassword","mt5ResetType","mt5Platform","email","url_parameters","redirect_to","is_virtual","verify_email","emailReasons","content","DerivLightIcSpamEmailPasskeyIcon","DerivLightIcWrongEmailPasskeyIcon","DerivLightIcTypoEmailPasskeyIcon","DerivLightIcFirewallEmailPasskeyIcon","_resetPasswordError$e","_resetPasswordError$e2","_ref$isChangePassword","isChangePassword","_ref$isForgottenPassw","isForgottenPassword","onErrorButtonClick","_useState2","_slicedToArray","useState","shouldShowResendEmailReasons","setShouldShowResendEmailReasons","_useState4","hasCountdownStarted","setHasCountdownStarted","_useSendPasswordReset","useSendPasswordResetEmail","resetPasswordError","emailButtonTextSize","emailReasonsSize","_useCountdown2","useCountdown","countStart","intervalMs","count","_useCountdown2$","resetCountdown","startCountdown","isRateLimitError","code","EmailSentIcon","DerivLightIcEmailSentIcon","DerivLightIcEmailSentPasskeyIcon","useEffect","WalletError","errorMessage","message","ActionScreen","actionButtons","descriptionSize","titleSize","emailReason","lineHeight","textSize","setShowEmailSentScreen","getModalState","useModal","mt5AccountId","handleSendEmail","localStorage","setItem","MT5ChangeInvestorPasswordInputsScreen","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","activeScreen","setActiveScreen","nextScreen","hide","buttonTextSize","isDerivX","ChangePasswordScreens","confirmationScreen","bodyText","button","headingText","introScreen","SentEmailContent","DerivLightIcDxtradePasswordIcon","DerivLightDmt5PasswordIcon","showSentEmailContentWithoutTabs","setShowSentEmailContentWithoutTabs","Tabs","fontSize","preSelectedTab","wrapperClassName","Tab","TradingPlatformChangePasswordScreens","MT5ChangeInvestorPasswordScreens","_getModalState","MT5ChangePasswordScreens","label","_ref$value","_ref$variant","show","WalletClipboard","popoverAlignment","textCopy","ChangePassword","_details$landing_comp","_details$landing_comp2","_details$server_info$","_details$server_info","_details$login","_useModal","dxtradeAccountsList","useDxtradeAccountsList","ctraderAccountsList","useCtraderAccountsList","activeWalletData","isEuRegion","useIsEuRegion","dxtradePlatform","ctraderPlatform","marketType","_PlatformDetails","platformIcon","_getMarketTypeDetails","getMarketTypeDetails","product","marketTypeIcon","marketTypeTitle","platformToAccountsListMapper","shouldShowAccountBalance","_platformToAccountsLi","filter","market_type","status","details","_platformToAccountsLi2","_platformToAccountsLi3","_platformToAccountsLi4","isWindows","OSDetect","loginId","display_login","account_id","login","shouldShowBadge","landing_company_name","migrationMessage","_platformToAccountsLi5","InlineMessage","WalletBadge","landing_company_short","toUpperCase","WalletListCardBadge","display_balance","LabelPairedArrowUpArrowDownMdBoldIcon","toAccountLoginId","loginid","rounded","MT5TradeDetailsItem","landing_company","server_info","environment","LabelPairedCircleExclamationMdFillIcon","getServiceMaintenanceMessages","toLowerCase","PRODUCT","GOLD","InformationBanner","StandaloneChartAreaRegularIcon","StandaloneArrowUpRightRegularIcon","MT5DesktopRedirectOption","MT5MobileRedirectOption","setModalState","ModalTradeWrapper","MT5TradeScreen","cTraderAccounts","index","MT5TradeModal","LabelPairedChevronLeftCaptionRegularIcon","LabelPairedChevronRightCaptionRegularIcon","_getBadgeVariations$v","failed","LabelPairedTriangleExclamationCaptionBoldIcon","in_review","LabelPairedClockThreeCaptionBoldIcon","needs_verification","LabelPairedCircleExclamationCaptionBoldIcon","verified","LabelPairedCircleCheckCaptionBoldIcon","getBadgeVariations","Badge","badgeSize","leftIcon","stopPropagation","badge","LabelPairedChevronRightMdRegularIcon","statusBadge","expired","ClientVerificationStatusBadge","none","pending","rejected","suspected","_getClientVerificatio","getClientVerification","hasPoaStatus","hasPoiStatus","isPoaRequired","isPoiRequired","isTinRequired","statuses","_useGrowthbookGetFeat2","useGrowthbookGetFeatureValue","featureFlag","shouldRedirectToAccountsOSApp","isRedirectToAccountsOSAppFFLoaded","localizeLanguage","LocalStorageUtils","getValue","urlLang","URLUtils","getQueryParameter","i18nLanguage","getFormattedURL","urlLink","_urlParams$get","URL","platformConfig","URLSearchParams","search","get","sessionStorage","getItem","isNavigationFromTradersHubOS","params","appid","WebSocketUtils","getAppId","lang","getSocketURL","getToken","entries","searchParams","append","String","DocumentTile","poi_status","redirectUrl","client_kyc_status","ACCOUNTS_OS_POI_URL","ACCOUNTS_OS_POI_STATUS_URL","poa_status","ACCOUNTS_OS_POA_URL","disableScroll","is_added","DerivLightUserVerificationIcon","DocumentsList","accountType","isVisible","onClose","WalletDialog","shouldCloseOnOverlayClick","Header","Footer","Chat","_getContentConfig$sta","maintenanceConfig","unavailableConfig","_defineProperty","MT5_ACCOUNT_STATUS","UNDER_MAINTENANCE","TRADING_PLATFORM_STATUS","MAINTENANCE","UNAVAILABLE","getContentConfig","ModalWrapper","TradingPlatformStatus","isAccountDisabled","rights","enabled","accountDetails","_account$market_type","MARKET_TYPE","ALL","getPlatformStatus","useTradingPlatformStatus","platformStatus","ACTIVE","getMT5PlatformStatus","hasDisabledPlatformStatus","DISABLED_PLATFORM_STATUSES","includes","kycStatus","POA_FAILED","PROOF_FAILED","VERIFICATION_PENDING","POA_PENDING","NEEDS_VERIFICATION","POA_REQUIRED","getClientKycStatus","showMT5TradeModal","_useAddedMT5Account","useAddedMT5Account","showDisabledAccountModal","setShowDisabledAccountModal","shouldShowBalance","TradingPlatformStatusModal","defaultRootId","ClientVerificationModal","PlatformStatusBadge","WalletStatusBadge","padding","WalletDisabledAccountModal","displayBalance","landingCompanyName","isDxtradeOrCtrader","isPlatformValid","platformTitlePrefix","toLocaleUpperCase","WalletSuccess","renderIcon","_data$currency","_data$currency2","WalletGradientBackground","bodyClassName","hasShine","theme","WalletMarketCurrencyIcon","createdAccount","walletButtonSizes","isFullWidth","WalletButtonGroup","isFlex","_useCtraderAccountsLi","isCtraderAccountsListLoading","isLoading","cTraderAccount","WalletLoader","ctraderBalance","ctraderTitle","hideCloseButton","CFDSuccess","CTraderSuccessModalButtons","_error$error3","_useCreateOtherCFDAcc","useCreateOtherCFDAccount","isCFDAccountCreationLoading","isCFDAccountCreationSuccess","isSuccess","_error$error$message","_error$error","_error$error$message2","_error$error2","CTraderSuccessModal","CreatePasswordIcon","onPasswordChange","onPrimaryClick","password","isMT5","disableButton","validPasswordMT5","validPassword","WalletPasswordFieldLazy","mt5Policy","onChange","CreatePassword","isSvg","shortcode","JURISDICTION","SVG","accountName","iconPosition","accountTitle","companyName","licenceNumber","licence_number","regulatoryAuthority","regulatory_authority","checked","selectedJurisdiction","selectedCompany","companyNamesAndUrls","Checkbox","WalletLink","language","staticUrl","tncUrl","isForgotPasswordLoading","_ref$isTncChecked","isTncChecked","modalTitle","onSecondaryClick","onTncChange","passwordError","setPassword","validationErrorMessage","validatePassword","getPasswordErrorMessage","missingCharacterMT5","passwordErrorHints","toLocaleLowerCase","hideWarning","shouldDisablePasswordMeter","MT5LicenceMessage","MT5PasswordModalTnc","EnterPassword","_ref$displayBalance","_ref$marketType","_ref$platform","buttonSize","renderButton","_asyncToGenerator","_error$error4","_useAccountStatus","useAccountStatus","getAccountStatus","accountStatusSuccess","isCreateAccountSuccessful","_useDxtradeAccountsLi","dxtradeAccount","dxtradeAccountListSuccess","isResetPasswordLoading","isResetPasswordSuccessful","isDxtradePasswordNotSet","is_dxtrade_password_not_set","onSubmit","dxtradeBalance","_dxtradeAccount$find","successDescription","dxtradeTitle","isFullscreen","PasswordLimitExceededModal","CreatePasswordModal","EnterPasswordModal","SuccessModal","DxtradeEnterPasswordModal","DerivLightMt5SuccessPasswordResetIcon","renderButtons","shouldPreventCloseOnEscape","shouldHideHeader","formError","onClickSubmitPasswordChange","sendEmailVerification","isCurrentPasswordVisible","setIsCurrentPasswordVisible","formikRef","useRef","_formikRef$current","_formError$error","_formikRef$current2","_formError$error2","current","setErrors","currentPassword","newPassword","validateCurrentPassword","Formik","initialValues","innerRef","handleOnSubmit","errors","handleChange","Form","Field","validate","field","form","WalletTextField","autoComplete","isInvalid","Boolean","onBlur","renderRightIcon","PasswordViewerIcon","setViewPassword","viewPassword","serverErrorMessage","getPasswordRequirements","requirement","_companyNamesAndUrls","_useActiveWalletAccou","isActiveWalletAccountLoading","_useMT5AccountsList","useMT5AccountsList","mt5Accounts","isMT5AccountsListLoading","_usePOI","usePOI","poiData","isPOILoading","_usePOA","usePOA","poaData","isPOALoading","addedAccount","acc","renderAccountSuccessButton","renderSuccessDescription","accountBalance","renderMainContent","demoTitle","onClickHandler","_getErrorConfig","_error$message","_error$code","buttonText","getErrorConfig","MT5PasswordModalFooter","walletButtonSize","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","toPrimitive","Number","_toPrimitive","_toPropertyKey","_createMT5AccountErro","_createMT5AccountErro2","_createMT5AccountErro4","_createMT5AccountErro5","_createMT5AccountErro6","_ref$isVirtual","setIsTncChecked","_useCreateMT5Account","useCreateMT5Account","createMT5AccountData","createMT5AccountError","createMT5AccountLoading","createMT5AccountSuccess","createMT5AccountMutate","createMT5AccountStatus","_useTradingPlatformPa","useTradingPlatformPasswordChange","tradingPasswordChangeError","tradingPlatformPasswordChangeLoading","tradingPasswordChangeMutateAsync","accountStatusData","accountStatusLoading","availableMT5AccountsData","useAvailableMT5Accounts","emailVerificationError","emailVerificationMutate","emailVerificationStatus","setModalOptions","settingsData","addressCity","address_city","addressLine1","address_line_1","addressPostcode","address_postcode","addressState","address_state","countryCode","country_code","firstName","first_name","phone","_useState6","isPasswordChanged","setIsPasswordChanged","isMT5PasswordNotSet","is_mt5_password_not_set","_PlatformDetails$mt","validateMT5ErrorMessage","updateMT5Password","createMT5Account","_availableMT5Accounts","_availableMT5Accounts2","SYNTHETIC","categoryAccountType","address","city","country","leverage","mainPassword","company","FINANCIAL","mt5_account_type","LABUAN","state","zipCode","new_password","onSubmitPasswordChange","old_password","shouldCloseOnClickOutside","renderTitle","PasswordComponent","_createMT5AccountErro3","CreatePasswordMT5","MT5ResetPasswordModal","MT5ErrorModal","WalletSuccessChangeMT5Password","MT5AccountAdded","availability","hasUnavailableAccount","some","hasClientKycStatus","isNewBadgeVisible","ZEROSPREAD","onButtonClick","MT5PasswordModal","_landingCompany$finan","_landingCompany$gamin","_useSortedMT5Accounts","useSortedMT5Accounts","mt5AccountsList","isMT5FetchedAfterMount","isFetchedAfterMount","isMT5Loading","isCtraderFetchedAfterMount","isCTraderLoading","isDxtradeFetchedAfterMount","isDxtradeLoading","_useLandingCompany","useLandingCompany","landingCompany","isLandingCompanyLoading","hasCTraderAccount","hasDxtradeAccount","financialRestrictedCountry","financial_company","gaming_company","cfdRestrictedCountry","isRestricted","_","idx","TradingAppCardLoader","AddedMT5AccountsList","AvailableMT5AccountsList","AddedCTraderAccountsList","AvailableCTraderAccountsList","AddedDxtradeAccountsList","AvailableDxtradeAccountsList","CFDPlatformsListHeader","_activeWallet$currenc","_useIsEuRegion","currency_config","is_crypto","CFDPlatformsListEmptyState","CFDPlatformsListAccounts","DerivAppsSuccessFooter","DerivAppsGetAccount","_useCreateNewRealAcco","useCreateNewRealAccount","isAccountCreationLoading","isAccountCreationSuccess","createNewRealAccount","_useCreateNewVirtualA","useCreateNewVirtualAccount","isVirtualAccountCreationLoading","isVirtualAccountCreationSuccess","createNewVirtualAccount","_useSettings$data","dateOfBirth","date_of_birth","lastName","last_name","addTradingAccountToLocalStorage","useSyncLocalStorageClientAccounts","invalidate","useInvalidateQuery","isActiveLinkedToTradingAccountLoading","useActiveLinkedToTradingAccount","balanceData","useAllBalanceSubscription","createTradingAccount","createAccountResponse","newAccountReal","_createAccountResponse","newAccountVirtual","display_code","getFormattedDateString","format","unix","residence","new_account_real","new_account_virtual","_balanceData","_activeWallet$loginid","_activeWallet$currenc2","balance","shouldHideDerivAppHeader","WalletMarketIcon","_authentication$ident","_authentication$ident2","_authentication$ident3","_authentication$docum","accountStatus","activeLinkedToTradingAccount","authentication","poiStatus","identity","onfidoStatus","services","onfido","manualStatus","manual","poaStatus","poaPending","ACCOUNT_VERIFICATION_STATUSES","PENDING","poaNotSubmitted","NONE","poiByOnfidoOrManualNotSubmitted","every","poiByOnfidoOrManualVerified","VERIFIED","poiByOnfidoOrManualPending","needPoaResubmission","REJECTED","EXPIRED","SUSPECTED","needPoiResubmission","mfAccountStatus","ACCOUNT_VERIFICATION_BADGE_STATUS","FAILED","IN_REVIEW","required_tin","valid_tin","DerivAppsTradingAccountButtonContent","activeTradingAccount","mfAccountStatusDetails","is_disabled","clientKycStatus","isMFAccountAdded","shouldShowVerificationStatus","AccountBalance","_ref4","_activeTradingAccount","_activeTradingAccount2","_useAllBalanceSubscri","isBalanceLoading","WalletMoney","DerivAppsTradingAccount","shouldShowDisabledAccountModal","setShouldShowDisabledAccountModal","isEuRegionLoading","_useWalletsMFAccountS","useWalletsMFAccountStatus","isMFAccountLoading","shouldHideBalance","event","persist","getStaticUrl","getUrlSmartTrader","OptionsAndMultipliersListingContentLoader","OptionsAndMultipliersListingContent","getOptionsAndMultipliersContent","redirect","isExternal","LinkTitle","subtitle","DerivAppsSection","accountsActiveTabIndex","onTabClickHandler","optionsAndMultipliersTabTitle","tabs","onChangeTabHandler","activeTab","CFDPlatformsList","OptionsAndMultipliersListing","WalletsTabsLoader","roundedIconWidth","xs","sm","md","lg","xl","defaultIconWidth","_ref$size","IconSize","fiatIcons","WalletCurrencyIcon","getWalletHeaderButtons","buttons","LabelPairedArrowsRotateMdBoldIcon","LabelPairedPlusMdBoldIcon","iconColor","LabelPairedMinusMdBoldIcon","isActive","is_active","IconButton","MarketTypeIcon","marketTypeAllkey","CFDPlatformIcons","MT5GoldIcon","MT5MarketIcons","WalletCurrencyCard","Icons","AppIcons","PlatformIcons","IconSizes","_ref$className","_ref$amount","_ref$currency","_ref$hasSign","hasSign","currencyConfig","getConfig","useCurrencyConfig","fractionalDigits","displayCode","sign","Math","abs","formattedAmount","dir","statusConfig","LabelPairedTriangleExclamationSmBoldIcon","_ref$badgeSize","_ref$padding","_ref$rounded","_ref$textSize","isBold","disabledAccounts","disabledAccountsCurrencies","disabledAccountsLength","disabledAccount","SectionMessage","currencies","verb","getBadgeText","LabelPairedCircleExclamationCaptionRegularIcon","___CSS_LOADER_EXPORT___","module","api","__esModule","default","exports","locals"],"sourceRoot":""}