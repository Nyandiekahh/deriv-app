{"version":3,"file":"cfd/js/MT5TradeModal.js","mappings":"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","sources":["webpack://@deriv/cfd/webpack/universalModuleDefinition","webpack://@deriv/cfd/webpack/runtime/chunk loaded","webpack://@deriv/cfd/./src/Components/cfd-account-copy.tsx","webpack://@deriv/cfd/./src/Components/specbox.tsx","webpack://@deriv/cfd/./src/Containers/account-nakala-modal/account-nakala-modal.tsx","webpack://@deriv/cfd/./src/Components/passwordbox.tsx","webpack://@deriv/cfd/./src/Containers/ctrader-derivx-trade-modal.tsx","webpack://@deriv/cfd/./src/Containers/migration-banner/migration-banner-image.tsx","webpack://@deriv/cfd/./src/Containers/migration-banner/migration-banner.tsx","webpack://@deriv/cfd/./src/Containers/migration-banner/index.ts","webpack://@deriv/cfd/./src/Containers/mt5-desktop-redirect-option.tsx","webpack://@deriv/cfd/./src/Containers/mt5-mobile-redirect-option.tsx","webpack://@deriv/cfd/./src/Containers/dmt5-trade-modal.tsx","webpack://@deriv/cfd/./src/Containers/mt5-trade-modal.tsx","webpack://@deriv/cfd/external umd \"@deriv-com/analytics\"","webpack://@deriv/cfd/external umd \"@deriv/account/src/Configs/get-mt5-status-badge-config\"","webpack://@deriv/cfd/external umd \"@deriv/components\"","webpack://@deriv/cfd/external umd \"@deriv/hooks\"","webpack://@deriv/cfd/external umd \"@deriv/shared\"","webpack://@deriv/cfd/external umd \"@deriv/stores\"","webpack://@deriv/cfd/external umd \"@deriv/translations\"","webpack://@deriv/cfd/external umd \"classnames\"","webpack://@deriv/cfd/external umd \"react\"","webpack://@deriv/cfd/webpack/bootstrap","webpack://@deriv/cfd/webpack/runtime/compat get default export","webpack://@deriv/cfd/webpack/runtime/define property getters","webpack://@deriv/cfd/webpack/runtime/ensure chunk","webpack://@deriv/cfd/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/cfd/webpack/runtime/runtimeId","webpack://@deriv/cfd/webpack/runtime/jsonp chunk loading","webpack://@deriv/cfd/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv-com/analytics\"), require(\"@deriv/account/src/Configs/get-mt5-status-badge-config\"), require(\"@deriv/components\"), require(\"@deriv/hooks\"), require(\"@deriv/shared\"), require(\"@deriv/stores\"), require(\"@deriv/translations\"), require(\"classnames\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv-com/analytics\", \"@deriv/account/src/Configs/get-mt5-status-badge-config\", \"@deriv/components\", \"@deriv/hooks\", \"@deriv/shared\", \"@deriv/stores\", \"@deriv/translations\", \"classnames\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/cfd\"] = factory(require(\"@deriv-com/analytics\"), require(\"@deriv/account/src/Configs/get-mt5-status-badge-config\"), require(\"@deriv/components\"), require(\"@deriv/hooks\"), require(\"@deriv/shared\"), require(\"@deriv/stores\"), require(\"@deriv/translations\"), require(\"classnames\"), require(\"react\"));\n\telse\n\t\troot[\"@deriv/cfd\"] = factory(root[\"@deriv-com/analytics\"], root[\"@deriv/account/src/Configs/get-mt5-status-badge-config\"], root[\"@deriv/components\"], root[\"@deriv/hooks\"], root[\"@deriv/shared\"], root[\"@deriv/stores\"], root[\"@deriv/translations\"], root[\"classnames\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__, __WEBPACK_EXTERNAL_MODULE__deriv_account_src_Configs_get_mt5_status_badge_config__, __WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_hooks__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_stores__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_classnames__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\nimport { Clipboard } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile } from '@deriv/shared';\nimport { TCFDAccountCopy } from './props.types';\n\nconst CFDAccountCopy = ({ text, className }: TCFDAccountCopy) => {\n    return (\n        <div className={className} data-testid='cfd_account_copy_main_div'>\n            <Clipboard\n                text_copy={text}\n                info_message={isMobile() ? '' : localize('copy')}\n                success_message={localize('copied!')}\n                popoverAlignment={isMobile() ? 'left' : 'bottom'}\n            />\n        </div>\n    );\n};\n\nexport { CFDAccountCopy };\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from '@deriv/components';\n\nimport { CFDAccountCopy } from './cfd-account-copy';\n\nexport type TSpecBoxProps = {\n    value?: string;\n    is_bold?: boolean;\n    is_broker?: boolean;\n};\n\nconst SpecBox = ({ value, is_bold, is_broker }: TSpecBoxProps) => (\n    <div className='cfd-trade-modal__spec-box '>\n        <Text\n            size='xs'\n            weight={is_bold ? 'bold' : ''}\n            className={classNames('cfd-trade-modal__spec-text', { 'cfd-trade-modal__spec-text-broker': is_broker })}\n        >\n            {value}\n        </Text>\n        <CFDAccountCopy text={value} className='cfd-trade-modal__spec-copy' />\n    </div>\n);\n\nexport default SpecBox;\n","import React, { useEffect } from 'react';\nimport Cookies from 'js-cookie';\n\nimport { Button, Icon, Text } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\n\nimport SpecBox from '../../Components/specbox';\n\nimport './account-nakala-modal.scss';\n\ninterface CFDDerivNakalaModalProps {\n    onclickAction: () => void;\n}\n\nconst ModalInfo = () => {\n    return (\n        <React.Fragment>\n            <div className='nakala-modal-maintenance'>\n                <div className='nakala-modal-maintenance_icon'>\n                    <Icon icon='IcInfoYellow' />\n                </div>\n                <Text size='xxxs'>\n                    <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                </Text>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CFDDerivNakalaInfo = (props: CFDDerivNakalaModalProps) => {\n    return (\n        <React.Fragment>\n            <div className='cfd-nakala-modal'>\n                <div className='cfd-nakala-modal__logo-container'>\n                    <div className='cfd-nakala-modal__logo'>\n                        <Icon icon='IcRebrandingDerivNakala' size={64} />\n                    </div>\n                </div>\n\n                <div className='cfd-nakala-modal__description'>\n                    <Text as='p' size='s'>\n                        <Localize i18n_default_text='Follow top global traders and copy their strategies.' />\n                    </Text>\n                </div>\n\n                <div className='cfd-nakala-modal__getting-started'>\n                    <Text as='h3' weight='bold' size='s'>\n                        <Localize i18n_default_text='Getting started with Deriv Nakala' />\n                    </Text>\n\n                    <div className='cfd-nakala-modal__steps'>\n                        <div className='cfd-nakala-modal__step'>\n                            <div className='cfd-nakala-modal__step-number'>\n                                <Text weight='bold' color='colored-background'>\n                                    1\n                                </Text>\n                            </div>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Open an MT5 Standard account on our trading platform.' />\n                            </Text>\n                        </div>\n\n                        <div className='cfd-nakala-modal__step'>\n                            <div className='cfd-nakala-modal__step-number'>\n                                <Text weight='bold' color='colored-background'>\n                                    2\n                                </Text>\n                            </div>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Download the Nakala app and create your account.' />\n                            </Text>\n                        </div>\n                        <div className='cfd-nakala-modal__step'>\n                            <div className='cfd-nakala-modal__step-number'>\n                                <Text weight='bold' color='colored-background'>\n                                    3\n                                </Text>\n                            </div>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Link your MT5 account in the Deriv Nakala app.' />\n                            </Text>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={`cfd-nakala-modal__footer ${!isDesktop() && 'cfd-nakala-modal__footer--mobile'}`}>\n                <Button type='button' onClick={props.onclickAction} primary large>\n                    <Localize i18n_default_text='Next' />\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n};\n\ninterface TCFDDerivNakalaLinkAccountProps {\n    isSuccess?: boolean;\n    nakalaInfo: {\n        loginId: string | null;\n        serverName: string | null;\n    };\n}\n\nexport const CFDDerivNakalaLinkAccount = observer((props: TCFDDerivNakalaLinkAccountProps) => {\n    const { isSuccess = false, nakalaInfo } = props;\n\n    const manageNakalaCookie = () => {\n        const nakalaLinkedCookie = 'nakala_linked';\n\n        const nakalaLinkedCookieExist = Cookies.get(nakalaLinkedCookie);\n        if (nakalaLinkedCookieExist) return;\n\n        const nakalaLinkedCookieValue = 'true';\n        const nakalaLinkedCookieExpiry = 365; // days\n\n        Cookies.set(nakalaLinkedCookie, nakalaLinkedCookieValue, {\n            domain: '.deriv.com',\n            expires: nakalaLinkedCookieExpiry,\n        });\n    };\n\n    const isDesktopDevice = isDesktop();\n\n    useEffect(() => {\n        isDesktopDevice && manageNakalaCookie();\n    }, [isDesktopDevice]);\n\n    const onClickOpenApp = () => {\n        manageNakalaCookie();\n        window.open('https://onelink.to/uuuxmw', '_blank');\n    };\n\n    return (\n        <React.Fragment>\n            <div className='cfd-nakala-modal'>\n                <div className='cfd-nakala-modal__logo-container'>\n                    <div className='cfd-nakala-modal__logo'>\n                        <Icon icon='IcRebrandingNakalaMt5Linked' className='linked' />\n                    </div>\n                </div>\n\n                {isSuccess && (\n                    <div className='cfd-nakala-modal__title'>\n                        <Text as='h3' weight='bold' align='center'>\n                            <Localize i18n_default_text='Your MT5 Standard account is ready' />\n                        </Text>\n                    </div>\n                )}\n\n                <div className='cfd-nakala-modal__steps cfd-nakala-modal__steps--with-line'>\n                    <div className='cfd-nakala-modal__step'>\n                        <div className='cfd-nakala-modal__step-number'>\n                            <Text weight='bold' color='colored-background'>\n                                1\n                            </Text>\n                        </div>\n                        <div className='cfd-nakala-modal__step-content'>\n                            <Text as='p'>\n                                <Localize i18n_default_text='To copy trade, create your Deriv Nakala account in the mobile app. ' />\n                                {isDesktopDevice && (\n                                    <Localize i18n_default_text='Scan the below QR to download the mobile app.' />\n                                )}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {isDesktopDevice && (\n                        <div className='cfd-nakala-modal__qr-section'>\n                            <div className='cfd-nakala-modal__qr-section-code'>\n                                <Icon icon='IcRebrandingNakalaQrCode' height={120} width={120} />\n                            </div>\n                        </div>\n                    )}\n\n                    <div className='cfd-nakala-modal__step'>\n                        <div className='cfd-nakala-modal__step-number'>\n                            <Text weight='bold' color='colored-background'>\n                                2\n                            </Text>\n                        </div>\n                        <div className='cfd-nakala-modal__step-content'>\n                            <Text as='p'>\n                                <Localize i18n_default_text='Then, link your MT5 Standard account using these details and your MT5 password:' />\n                            </Text>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='cfd-nakala-modal__login-specs'>\n                    <div className='cfd-nakala-modal__login-specs-item'>\n                        <Text className='cfd-nakala-modal--paragraph'>{localize('Server')}</Text>\n                        <SpecBox is_bold value={nakalaInfo.serverName ?? ''} />\n                    </div>\n                    <div className='cfd-nakala-modal__login-specs-item'>\n                        <Text className='cfd-nakala-modal--paragraph'>{localize('Account no.')}</Text>\n                        <SpecBox is_bold value={nakalaInfo.loginId ?? ''} />\n                    </div>\n                    <ModalInfo />\n                </div>\n\n                <div className='cfd-nakala-modal__help-section'>\n                    <Text size='xs'>\n                        {localize('Need help?')}{' '}\n                        <a href='https://deriv.copytrade-resource.com/' target='_blank' rel='noreferrer'>\n                            {localize('Check the guide')}\n                        </a>\n                    </Text>\n                </div>\n            </div>\n            {!isDesktopDevice && (\n                <div className={`cfd-nakala-modal__footer cfd-nakala-modal__footer--info-mobile`}>\n                    <Button type='button' onClick={onClickOpenApp} primary large>\n                        <Localize i18n_default_text='Open Deriv Nakala mobile app' />\n                    </Button>\n                </div>\n            )}\n        </React.Fragment>\n    );\n});\nexport default CFDDerivNakalaInfo;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { TPasswordBoxProps } from './props.types';\nimport { Localize } from '@deriv/translations';\n\nconst PasswordBox = ({ onClick }: TPasswordBoxProps) => (\n    <div className='cfd-trade-modal__password-box'>\n        <Button className='cfd-trade-modal__password-action' transparent onClick={onClick}>\n            <Localize i18n_default_text='Forgot password?' />\n        </Button>\n    </div>\n);\n\nexport default PasswordBox;\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { getCFDAccountKey } from '@deriv/shared';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport { Icon, Money, Text, ExpansionPanel, Button } from '@deriv/components';\nimport SpecBox from '../Components/specbox';\nimport { CFD_PLATFORMS } from '../Helpers/cfd-config';\nimport PasswordBox from '../Components/passwordbox';\nimport { getPlatformQRCode, mobileDownloadLink, PlatformsDesktopDownload } from '../Helpers/config';\nimport { TCFDDashboardContainer, TCFDsPlatformType, TTradingPlatformAccounts } from 'Components/props.types';\nimport {\n    CTRADER_DESKTOP_MAC_DOWNLOAD,\n    CTRADER_DESKTOP_WINDOWS_DOWNLOAD,\n    getTitle,\n    platformsText,\n    STRATEGY_PROVIDER_NOTES,\n} from '../Helpers/constants';\n\nimport { TCFDPasswordReset } from './props.types';\n\ntype TTradeModalProps = {\n    ctrader_derivx_trade_account: Required<DetailsOfEachMT5Loginid>;\n    is_eu_user: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    dxtrade_tokens: TCFDDashboardContainer['dxtrade_tokens'];\n    ctrader_tokens: TCFDDashboardContainer['ctrader_tokens'];\n    is_demo: string;\n    platform: TCFDsPlatformType;\n    is_mobile?: boolean;\n};\n\nconst PlatformIconsAndDescriptions = (\n    platform: TCFDsPlatformType,\n    is_demo: string,\n    ctrader_derivx_trade_account: Required<DetailsOfEachMT5Loginid>\n) => {\n    return (\n        <React.Fragment>\n            <Icon icon={`IcRebranding${platform.charAt(0).toUpperCase()}${platform.slice(1)}Dashboard`} size={24} />\n            <div className='cfd-trade-modal__desc'>\n                <Text size='xs' line_height='l' weight='bold' className='cfd-trade-modal__desc-heading'>\n                    <Localize\n                        i18n_default_text='Deriv {{platform}} <0>{{is_demo}}</0>'\n                        values={{\n                            platform: platformsText(platform),\n                            is_demo: is_demo ? 'Demo' : '',\n                        }}\n                        components={[\n                            <span\n                                key={0}\n                                className={platform === CFD_PLATFORMS.CTRADER && is_demo ? 'cfd-trade-modal--tag' : ''}\n                            />,\n                        ]}\n                    />\n                </Text>\n                {((ctrader_derivx_trade_account as TTradingPlatformAccounts)?.display_login &&\n                    platform === CFD_PLATFORMS.DXTRADE) ||\n                    (platform === CFD_PLATFORMS.CTRADER && is_demo && (\n                        <Text color='less-prominent' size='xxxs' line_height='xxxs'>\n                            {(ctrader_derivx_trade_account as TTradingPlatformAccounts)?.display_login}\n                        </Text>\n                    ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CTraderDerivXTradeModal = ({\n    ctrader_derivx_trade_account,\n    is_eu_user,\n    onPasswordManager,\n    toggleModal,\n    dxtrade_tokens,\n    ctrader_tokens,\n    is_demo,\n    platform,\n    is_mobile,\n}: TTradeModalProps) => {\n    const { isDesktop } = useDevice();\n    const {\n        ui,\n        client,\n        common,\n        traders_hub,\n        modules: { cfd },\n    } = useStore();\n\n    const { ctrader_accounts_list, ctrader_trading_platform_available_accounts, ctrader_total_balance } = client;\n    const { setAccountType, toggleMT5TradeModal, is_account_being_created, loadCTraderTokens } = cfd;\n    const { setAppstorePlatform } = common;\n    const { openDerivRealAccountNeededModal } = ui;\n    const { selected_account_type, no_CR_account, is_real, has_any_real_account, getAccount } = traders_hub;\n\n    const message = {\n        header: (\n            <Text as='h2' size='xs' weight='bold' className='cfd-trade-modal__expansion-panel--header'>\n                {localize('See important notes')}\n            </Text>\n        ),\n        content: (\n            <ol className='cfd-trade-modal__expansion-panel--ordered-list'>\n                <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                    {localize('Use your Deriv account email and password to log in to cTrader.')}\n                </Text>\n                <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                    <Localize\n                        i18n_default_text='Manage up to {{max_count}} Deriv cTrader accounts. While you can convert any of your Deriv cTrader accounts into a strategy account, please take note of the following:'\n                        values={{\n                            max_count: ctrader_trading_platform_available_accounts[0]?.max_count,\n                        }}\n                    />\n                </Text>\n                <ul className='cfd-trade-modal__expansion-panel--unordered-list'>\n                    {STRATEGY_PROVIDER_NOTES().map(note => (\n                        <Text\n                            key={note}\n                            as='li'\n                            size='xxs'\n                            line_height='l'\n                            className='cfd-trade-modal__expansion-panel--content'\n                        >\n                            {localize(note)}\n                        </Text>\n                    ))}\n                    <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                        <Localize\n                            i18n_default_text='To ensure you can always create and manage strategies with fees, <0>keep at least one account free from being a strategy provider.</0> This way, you’ll always have an account ready for collecting fees, allowing you to have up to four strategies where you may impose fees.'\n                            components={[<span key={0} className='cfd-trade-modal__expansion-panel--content-bold' />]}\n                        />\n                    </Text>\n                </ul>\n            </ol>\n        ),\n    };\n\n    const downloadCenterDescription = () => {\n        switch (platform) {\n            case 'dxtrade':\n                return (\n                    <Text\n                        align='center'\n                        as='p'\n                        className='cfd-trade-modal__download-center-text'\n                        size={!isDesktop ? 'xxxs' : 'xxs'}\n                        weight='bold'\n                    >\n                        {localize('Download Deriv X on your phone to trade with the Deriv X account')}\n                    </Text>\n                );\n            case 'ctrader':\n                return (\n                    <Text\n                        align='center'\n                        as='p'\n                        className='cfd-trade-modal__download-center-text'\n                        size={!isDesktop ? 'xxxs' : 'xxs'}\n                        weight='bold'\n                    >\n                        {localize('Download cTrader on your phone to trade with the Deriv cTrader account')}\n                    </Text>\n                );\n            default:\n                return '';\n        }\n    };\n\n    const downloadCenterAppOption = (platform_type: TCFDsPlatformType) => {\n        let app_title = '';\n        if (platform_type === CFD_PLATFORMS.DXTRADE) {\n            app_title = localize('Run Deriv X on your browser');\n        } else if (platform_type === 'ctrader' && !is_mobile) {\n            app_title = localize('Run cTrader on your browser');\n        } else if (platform_type === 'ctrader' && is_mobile) {\n            return null;\n        } else {\n            return null;\n        }\n\n        return (\n            <div className='cfd-trade-modal__download-center-app--option'>\n                <Text className='cfd-trade-modal__download-center-app--option-item' size='xs'>\n                    {app_title}\n                </Text>\n                <PlatformsDesktopDownload\n                    platform={platform}\n                    is_demo={is_demo}\n                    dxtrade_tokens={dxtrade_tokens}\n                    ctrader_tokens={ctrader_tokens}\n                    ctraderTokenCall={loadCTraderTokens}\n                />\n            </div>\n        );\n    };\n\n    return (\n        <div className='cfd-trade-modal-container'>\n            <div className='cfd-trade-modal'>\n                {PlatformIconsAndDescriptions(platform, is_demo, ctrader_derivx_trade_account)}\n                {ctrader_derivx_trade_account?.display_balance && (\n                    <div className='cfd-trade-modal__balance'>\n                        {platform === CFD_PLATFORMS.CTRADER && is_real && (\n                            <Text size='xxs' align='right'>\n                                {localize('Total balance:')}\n                            </Text>\n                        )}\n                        <Text\n                            size='s'\n                            color={platform !== CFD_PLATFORMS.CTRADER ? 'profit-success' : 'prominent'}\n                            className='cfd-trade-modal__desc-balance'\n                            weight='bold'\n                        >\n                            <Money\n                                amount={\n                                    is_real && platform === CFD_PLATFORMS.CTRADER\n                                        ? ctrader_total_balance\n                                        : ctrader_derivx_trade_account.display_balance\n                                }\n                                currency={ctrader_derivx_trade_account.currency}\n                                has_sign={\n                                    !!ctrader_derivx_trade_account.balance && ctrader_derivx_trade_account.balance < 0\n                                }\n                                show_currency\n                            />\n                        </Text>\n                    </div>\n                )}\n            </div>\n            <div className='cfd-trade-modal__login-specs'>\n                {platform === CFD_PLATFORMS.DXTRADE && (\n                    <React.Fragment>\n                        <div className='cfd-trade-modal__login-specs-item'>\n                            <Text className='cfd-trade-modal--paragraph'>{localize('Username')}</Text>\n                            <SpecBox\n                                is_bold\n                                value={(ctrader_derivx_trade_account as TTradingPlatformAccounts)?.login}\n                            />\n                        </div>\n                        <div className='cfd-trade-modal__login-specs-item'>\n                            <Text className='cfd-trade-modal--paragraph'>{localize('Password')}</Text>\n                            <div className='cfd-trade-modal--paragraph'>\n                                <PasswordBox\n                                    platform='dxtrade'\n                                    onClick={() => {\n                                        const account_type = getCFDAccountKey({\n                                            market_type: ctrader_derivx_trade_account.market_type,\n                                            sub_account_type: ctrader_derivx_trade_account.sub_account_type,\n                                            platform: CFD_PLATFORMS.MT5,\n                                            shortcode: ctrader_derivx_trade_account.landing_company_short,\n                                        });\n                                        onPasswordManager(\n                                            ctrader_derivx_trade_account?.login,\n                                            getTitle(ctrader_derivx_trade_account.market_type, is_eu_user),\n                                            ctrader_derivx_trade_account.account_type,\n                                            account_type,\n                                            ctrader_derivx_trade_account?.server\n                                        );\n                                        toggleModal();\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </React.Fragment>\n                )}\n\n                {platform === CFD_PLATFORMS.CTRADER && is_real && (\n                    <React.Fragment>\n                        {ctrader_accounts_list\n                            .filter(all_ctrader_accounts => all_ctrader_accounts.account_type === 'real')\n                            .map(ctrader_account => {\n                                return (\n                                    <div key={ctrader_account.login} className='cfd-trade-modal__list-of-accounts'>\n                                        <Text size='xs'>{ctrader_account.login}</Text>\n                                        <Text size='xs' weight='bold'>\n                                            <Money\n                                                amount={ctrader_account.balance}\n                                                currency={ctrader_account.currency}\n                                                has_sign={!!ctrader_account.balance && ctrader_account.balance < 0}\n                                                show_currency\n                                            />\n                                        </Text>\n                                    </div>\n                                );\n                            })}\n                        {(ctrader_trading_platform_available_accounts[0]?.available_count ?? 1) > 0 && (\n                            <div className='cfd-trade-modal__get-more-accounts'>\n                                <Button\n                                    onClick={() => {\n                                        toggleMT5TradeModal();\n                                        if ((!has_any_real_account || no_CR_account) && is_real) {\n                                            openDerivRealAccountNeededModal();\n                                        } else {\n                                            setAccountType({\n                                                category: selected_account_type,\n                                                type: 'all',\n                                            });\n                                            setAppstorePlatform(CFD_PLATFORMS.CTRADER);\n                                            getAccount();\n                                        }\n                                    }}\n                                    transparent\n                                    disabled={!!is_account_being_created}\n                                >\n                                    <Icon\n                                        icon={'IcAppstoreGetMoreAccounts'}\n                                        size={24}\n                                        className='cfd-trade-modal__get-more-accounts--icon'\n                                    />\n                                    <div className='cfd-trade-modal__get-more-accounts--details'>\n                                        <Text size='xxs' line-height='xxs'>\n                                            {localize('Get another cTrader account')}\n                                        </Text>\n                                    </div>\n                                </Button>\n                            </div>\n                        )}\n\n                        <div className='cfd-trade-modal__expansion-panel'>\n                            <ExpansionPanel message={message} />\n                        </div>\n                    </React.Fragment>\n                )}\n\n                <div className='cfd-trade-modal__maintenance'>\n                    <Icon\n                        icon='IcAlertWarning'\n                        size={!isDesktop ? 28 : 24}\n                        className='cfd-trade-modal__maintenance-icon'\n                    />\n                    <div className='cfd-trade-modal__maintenance-text'>\n                        <Text size='xxxs' className='cfd-trade-modal__maintenance-text'>\n                            {platform === CFD_PLATFORMS.DXTRADE && (\n                                <Localize i18n_default_text='Server maintenance starts at 06:00 GMT every Sunday and may last up to 2 hours. You may experience service disruption during this time.' />\n                            )}\n                            {platform === CFD_PLATFORMS.MT5 && (\n                                <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                            )}\n                            {platform === CFD_PLATFORMS.CTRADER && (\n                                <Localize i18n_default_text='Server maintenance occurs every first Saturday of the month from 7 to 10 GMT time. You may experience service disruption during this time.' />\n                            )}\n                        </Text>\n                    </div>\n                </div>\n            </div>\n            <div className='cfd-trade-modal__download-center-app'>{downloadCenterAppOption(platform)}</div>\n            {platform === CFD_PLATFORMS.CTRADER && (\n                <React.Fragment>\n                    {!is_mobile && (\n                        <React.Fragment>\n                            <div className='cfd-trade-modal__download-center-app--windows'>\n                                <Icon icon='IcWindowsLogo' size={32} />\n                                <Text className='cfd-trade-modal__download-center-app--windows-item' size='xs'>\n                                    {localize('cTrader Windows app')}\n                                </Text>\n                                <a\n                                    className='dc-btn cfd-trade-modal__download-center-app--windows-link'\n                                    type='button'\n                                    href={CTRADER_DESKTOP_WINDOWS_DOWNLOAD}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <Text size='xxs' weight='bold' color='prominent'>\n                                        {localize('Download')}\n                                    </Text>\n                                </a>\n                            </div>\n                            <div className='cfd-trade-modal__download-center-app--macos'>\n                                <Icon icon='IcMacosLogo' size={32} />\n                                <Text className='cfd-trade-modal__download-center-app--macos-item' size='xs'>\n                                    {localize('cTrader MacOS app')}\n                                </Text>\n                                <a\n                                    className='dc-btn cfd-trade-modal__download-center-app--macos-link'\n                                    type='button'\n                                    href={CTRADER_DESKTOP_MAC_DOWNLOAD}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <Text size='xxs' weight='bold' color='prominent'>\n                                        {localize('Download')}\n                                    </Text>\n                                </a>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </React.Fragment>\n            )}\n            <div className='cfd-trade-modal__download-center-description'>{downloadCenterDescription()}</div>\n\n            <div className='cfd-trade-modal__download-center-options'>\n                <div className='cfd-trade-modal__download-center-options--mobile-links'>\n                    <div className='cfd-trade-modal__download-center-options--mobile-links--apple'>\n                        <a href={mobileDownloadLink(platform, 'ios')} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon='IcInstallationApple' width={!isDesktop ? '160' : '130'} height={40} />\n                        </a>\n                    </div>\n                    <a href={mobileDownloadLink(platform, 'android')} target='_blank' rel='noopener noreferrer'>\n                        <Icon icon='IcInstallationGoogle' width={135} height={40} />\n                    </a>\n                    {/* all platforms are on ios/android and huawei except ctrader is not on Huawei*/}\n                    {platform !== CFD_PLATFORMS.CTRADER && (\n                        <a href={mobileDownloadLink(platform, 'huawei')} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon='IcInstallationHuawei' width={135} height={40} />\n                        </a>\n                    )}\n                </div>\n                {isDesktop && (\n                    <div className='cfd-trade-modal__download-center-options--qrcode'>\n                        {getPlatformQRCode(platform)}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default observer(CTraderDerivXTradeModal);\n","import React from 'react';\nimport MigrateCard from '../../Assets/banner/migrate-card.svg';\nimport MigrateCardDark from '../../Assets/banner/migrate-card-dark.svg';\n\nexport type TBannerImageProps<TMigrationBannerListProps> = {\n    image: TMigrationBannerListProps;\n};\n\ntype TMigrationBannerListProps = keyof typeof MigrationBannerList;\n\nconst MigrationBannerList = {\n    migrate_card: MigrateCard,\n    migrate_card_dark: MigrateCardDark,\n};\n\nconst MigrationBannerImage = ({ image }: TBannerImageProps<TMigrationBannerListProps>) => {\n    const Component = MigrationBannerList[image];\n\n    return <Component className='mt5-migration-banner__image' data-testid={`dt_${image}`} />;\n};\n\nexport default MigrationBannerImage;\n","import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport classNames from 'classnames';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useMT5SVGEligibleToMigrate } from '@deriv/hooks';\nimport {\n    JURISDICTION_MARKET_TYPES,\n    getFormattedJurisdictionMarketTypes,\n    getCFDPlatformNames,\n    CFD_PLATFORMS,\n} from '@deriv/shared';\nimport { useCfdStore } from '../../Stores/Modules/CFD/Helpers/useCfdStores';\nimport MigrationBannerImage from './migration-banner-image';\nimport './migration-banner.scss';\n\ntype TMigrationBannerProps = {\n    is_trade_modal?: boolean;\n};\nconst MigrationBanner = observer(({ is_trade_modal = false }: TMigrationBannerProps) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on, toggleMT5MigrationModal, is_mobile } = ui;\n    const { setMT5MigrationError, is_mt5_trade_modal_visible, toggleMT5TradeModal } = useCfdStore();\n    const { has_derived_mt5_to_migrate, has_derived_and_financial_mt5 } = useMT5SVGEligibleToMigrate();\n    const openMT5MigrationModal = () => {\n        if (is_mt5_trade_modal_visible) toggleMT5TradeModal();\n        setMT5MigrationError('');\n        Analytics.trackEvent('ce_upgrade_mt5_banner', {\n            action: 'push_cta_upgrade',\n        });\n        toggleMT5MigrationModal(true);\n    };\n    const is_desktop_trade_modal = is_trade_modal && !is_mobile;\n    const banner_img = is_dark_mode_on ? 'migrate_card_dark' : 'migrate_card';\n    return (\n        <div\n            className={classNames('mt5-migration-banner', {\n                'mt5-migration-banner__trade-modal': is_trade_modal,\n            })}\n        >\n            <div\n                className={classNames('mt5-migration-banner__description', {\n                    'mt5-migration-banner__description--trade-modal': is_desktop_trade_modal,\n                })}\n            >\n                <div className='mt5-migration-banner__description-text'>\n                    {has_derived_and_financial_mt5 ? (\n                        <Text size='xs'>\n                            <Localize\n                                i18n_default_text='Upgrade your <0>{{account_1}}</0> <1/>and <0>{{account_2}} {{platform}} </0> account(s)'\n                                values={{\n                                    account_1: getFormattedJurisdictionMarketTypes(JURISDICTION_MARKET_TYPES.DERIVED),\n                                    account_2: getFormattedJurisdictionMarketTypes(JURISDICTION_MARKET_TYPES.FINANCIAL),\n                                    platform: getCFDPlatformNames(CFD_PLATFORMS.MT5),\n                                }}\n                                components={[<strong key={0} />, is_desktop_trade_modal ? null : <br key={1} />]}\n                            />\n                        </Text>\n                    ) : (\n                        <Text size='xs'>\n                            <Localize\n                                i18n_default_text='Upgrade your <0/><1>{{account_title}} {{platform}} </1> account(s)'\n                                values={{\n                                    account_title: getFormattedJurisdictionMarketTypes(\n                                        has_derived_mt5_to_migrate\n                                            ? JURISDICTION_MARKET_TYPES.DERIVED\n                                            : JURISDICTION_MARKET_TYPES.FINANCIAL\n                                    ),\n                                    platform: getCFDPlatformNames(CFD_PLATFORMS.MT5),\n                                }}\n                                components={[is_desktop_trade_modal ? null : <br key={0} />, <strong key={1} />]}\n                            />\n                        </Text>\n                    )}\n                </div>\n                <Button primary_light onClick={openMT5MigrationModal}>\n                    <Localize i18n_default_text='Upgrade' />\n                </Button>\n            </div>\n            <MigrationBannerImage image={banner_img} />\n        </div>\n    );\n});\n\nexport default MigrationBanner;\n","import MigrationBanner from './migration-banner';\n\nexport default MigrationBanner;\n","import React, { Fragment } from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getDesktopDownloadOptions, getMobileDownloadOptions } from '../Helpers/constants';\nimport { CFD_PLATFORMS, getCFDPlatformLabel, getPlatformSettings, getUrlBase } from '@deriv/shared';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport './mt5-mobile-redirect-option.scss';\n\ntype TMT5DesktopRedirectOptionProps = {\n    account_title: string;\n    mt5_trade_account: DetailsOfEachMT5Loginid;\n};\n\nconst MT5DesktopRedirectOption = ({ account_title, mt5_trade_account }: TMT5DesktopRedirectOptionProps) => {\n    const desktopDownloadOptions = getDesktopDownloadOptions({ mt5_trade_account });\n    const mobileDownloadOptions = getMobileDownloadOptions({ mt5_trade_account });\n\n    return (\n        <Fragment>\n            <div className='cfd-trade-modal__download-center-app'>\n                {desktopDownloadOptions.map(option => (\n                    <div key={option.icon} className='cfd-trade-modal__download-center-app--option'>\n                        <Icon icon={option.icon} size={32} />\n                        <Text className='cfd-trade-modal__download-center-app--option-item' size='xs'>\n                            {option.text}\n                        </Text>\n                        <a\n                            className='cfd-trade-modal__download-center-app--option-link'\n                            type='button'\n                            href={option.href as string}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <Text size='xxs' weight='bold' color='prominent'>\n                                {option.button_text}\n                            </Text>\n                        </a>\n                    </div>\n                ))}\n            </div>\n            <Text align='center' as='div' className='cfd-trade-modal__download-center-text' size='xxs' weight='bold'>\n                {localize(\n                    'Download {{ platform }} on your phone to trade with the {{ platform }} {{ account }} account',\n                    {\n                        platform: getCFDPlatformLabel(CFD_PLATFORMS.MT5),\n                        account: account_title,\n                    }\n                )}\n            </Text>\n            <div className='cfd-trade-modal__download-center-options'>\n                <div className='cfd-trade-modal__download-center-options--mobile-links'>\n                    {mobileDownloadOptions.map(({ href, icon }) => (\n                        <a key={icon} href={href} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon={icon} width={135} height={40} />\n                        </a>\n                    ))}\n                </div>\n\n                <div className='cfd-trade-modal__download-center-options--qrcode'>\n                    <img\n                        alt='mt5 download qr'\n                        src={getUrlBase('/public/images/common/mt5_download.png')}\n                        width={80}\n                        height={80}\n                    />\n                    <Text align='center' size='xxs'>\n                        {localize('Scan the QR code to download {{ platform }}.', {\n                            platform: getPlatformSettings(CFD_PLATFORMS.MT5).name,\n                        })}\n                    </Text>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default MT5DesktopRedirectOption;\n","import React from 'react';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport { Icon, Text } from '@deriv/components';\nimport { getDeeplinkUrl, getMobileAppInstallerUrl, getWebtraderUrl } from '../Helpers/constants';\nimport './mt5-mobile-redirect-option.scss';\nimport { Localize } from '@deriv/translations';\n\nconst MT5MobileRedirectOption = ({ mt5_trade_account }: { mt5_trade_account: DetailsOfEachMT5Loginid }) => {\n    const mobileURLSet = async () => {\n        window.location.replace(getDeeplinkUrl({ mt5_trade_account }));\n        const mobileAppURL = await getMobileAppInstallerUrl({ mt5_trade_account });\n\n        const timeout = setTimeout(() => {\n            mobileAppURL && window.location.replace(mobileAppURL);\n        }, 4000);\n\n        document.addEventListener('visibilitychange', function () {\n            if (document.hidden) {\n                clearTimeout(timeout);\n            }\n\n            // iOS (17+) and certain browsers (edge) may have popups before redirecting\n            if (window.onblur) {\n                clearTimeout(timeout); // installer wont open but will redirect to MetaTrader5\n                if (!document.hidden) {\n                    mobileAppURL && window.location.replace(mobileAppURL); // if it is not redirecting then open installer\n                }\n            }\n        });\n    };\n\n    return (\n        <div className='mt5-download-container'>\n            <a\n                className='mt5-download-container--option'\n                href={getWebtraderUrl({ mt5_trade_account })}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <div className='full-row'>\n                    <Icon icon='IcDesktopOutline' size={16} />\n                    <Text align='left' size='xxs' weight='bold' className='title'>\n                        <Localize i18n_default_text={'MetaTrader5 web terminal'} />\n                    </Text>\n                    <Icon icon='IcChevronRight' size={16} />\n                </div>\n            </a>\n            <button className='mt5-download-container--option blue' onClick={mobileURLSet}>\n                <div className='full-row'>\n                    <Icon icon='IcMobileOutline' size={16} />\n                    <Text align='left' size='xxs' weight='bold' className='title'>\n                        <Localize i18n_default_text={'Trade with MT5 mobile app'} />\n                    </Text>\n                    <Icon icon='IcChevronRightLight' size={16} />\n                </div>\n            </button>\n\n            <Text as='p' size='xxxxs'>\n                <Localize\n                    i18n_default_text=\"Note: Don't have the MT5 app? Tap the <0>Trade with MT5 mobile app</0> button to download. Once you have\n                installed the app, return to this screen and hit the same button to log in.\"\n                    components={[<strong key={0} />]}\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default MT5MobileRedirectOption;\n","import React from 'react';\nimport { TAdditionalDetailsOfEachMT5Loginid } from '@deriv/stores/types';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text, Icon, Money, StatusBadge, InformationBanner } from '@deriv/components';\nimport getMT5StatusBadgeConfig from '@deriv/account/src/Configs/get-mt5-status-badge-config';\nimport { getCFDAccountKey, MT5_ACCOUNT_STATUS, PRODUCT, Jurisdiction, OSDetect } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { CFD_PLATFORMS, MARKET_TYPE } from '../Helpers/cfd-config';\nimport TradingPlatformIcon from '../Assets/svgs/trading-platform';\nimport MigrationBanner from './migration-banner';\nimport MT5DesktopRedirectOption from './mt5-desktop-redirect-option';\nimport MT5MobileRedirectOption from './mt5-mobile-redirect-option';\nimport PasswordBox from '../Components/passwordbox';\nimport SpecBox from '../Components/specbox';\nimport { TCFDPasswordReset } from './props.types';\nimport { TProducts, TTradingPlatformAccounts } from '../Components/props.types';\nimport { StandaloneChartAreaRegularIcon, StandaloneArrowUpRightRegularIcon } from '@deriv/quill-icons';\n\ntype TMT5TradeModalProps = {\n    mt5_trade_account: TAdditionalDetailsOfEachMT5Loginid;\n    show_eu_related_content: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    product?: TProducts;\n    is_demo: string;\n};\n\nconst getTitle = (market_type: string, show_eu_related_content: boolean) => {\n    if (show_eu_related_content) localize('MT5 CFDs');\n    return market_type;\n};\n\nconst DMT5TradeModal = observer(\n    ({\n        mt5_trade_account,\n        show_eu_related_content,\n        onPasswordManager,\n        toggleModal,\n        product,\n        is_demo,\n    }: TMT5TradeModalProps) => {\n        const { isDesktop } = useDevice();\n        const { client } = useStore();\n        const { account_status: { authentication } = {} } = client;\n        const is_eligible_to_migrate = mt5_trade_account.eligible_to_migrate;\n\n        const getAccountTitle = () => {\n            switch (mt5_trade_account.product) {\n                case PRODUCT.STANDARD:\n                    return 'Standard';\n                case PRODUCT.SWAPFREE:\n                    return 'Swap-Free';\n                case PRODUCT.ZEROSPREAD:\n                    return 'Zero Spread';\n                case PRODUCT.STP:\n                    return 'Financial STP';\n                case PRODUCT.GOLD:\n                    return 'Gold';\n                default:\n                    return show_eu_related_content ? 'CFDs' : 'Financial';\n            }\n        };\n\n        const getAccountIcons = () => {\n            if (show_eu_related_content && product === PRODUCT.FINANCIAL) return 'CFDs';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.SYNTHETIC) return 'Standard';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.ALL && product === PRODUCT.SWAPFREE)\n                return 'SwapFree';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.ALL && product === PRODUCT.ZEROSPREAD)\n                return 'ZeroSpread';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.FINANCIAL && product === PRODUCT.GOLD) return 'Gold';\n            return 'Financial';\n        };\n\n        const { text: badge_text, icon: badge_icon } = getMT5StatusBadgeConfig(mt5_trade_account?.status);\n        const has_migration_status = [\n            MT5_ACCOUNT_STATUS.MIGRATED_WITH_POSITION,\n            MT5_ACCOUNT_STATUS.MIGRATED_WITHOUT_POSITION,\n        ].includes(mt5_trade_account?.status);\n        const getShortcode = () => {\n            switch (mt5_trade_account.landing_company_short) {\n                case Jurisdiction.SVG:\n                    return 'SVG';\n                case Jurisdiction.BVI:\n                    return 'BVI';\n                case Jurisdiction.VANUATU:\n                    return 'Vanuatu';\n                case Jurisdiction.MAURITIUS:\n                    return 'DML';\n                default:\n                    return null;\n            }\n        };\n        const is_window = OSDetect() === 'windows';\n        return (\n            <div className='cfd-trade-modal-container'>\n                <div className='cfd-trade-modal'>\n                    <TradingPlatformIcon icon={getAccountIcons()} size={24} />\n                    <div className='cfd-trade-modal__desc'>\n                        <div className='cfd-trade-modal__desc-heading'>\n                            <Text size='xs' line_height='l'>\n                                {getAccountTitle()}\n                            </Text>\n                            {!is_demo ? (\n                                getShortcode() && (\n                                    <Text size='xxs' line_height='l' className='cfd-trade-modal__desc-heading--real'>\n                                        {getShortcode()}\n                                    </Text>\n                                )\n                            ) : (\n                                <Text\n                                    size='xxs'\n                                    line_height='l'\n                                    weight='bold'\n                                    className='cfd-trade-modal__desc-heading--demo'\n                                >\n                                    {localize('Demo')}\n                                </Text>\n                            )}\n                        </div>\n                        {(mt5_trade_account as TTradingPlatformAccounts)?.display_login && (\n                            <Text color='less-prominent' size='xxxs' line_height='xxxs'>\n                                {(mt5_trade_account as TTradingPlatformAccounts)?.display_login}\n                            </Text>\n                        )}\n                    </div>\n                    <div className='cfd-trade-modal__acc_status'>\n                        {mt5_trade_account?.display_balance && (\n                            <Text\n                                size='xs'\n                                color='profit-success'\n                                className='cfd-trade-modal__desc-balance'\n                                weight='bold'\n                            >\n                                <Money\n                                    amount={mt5_trade_account.display_balance}\n                                    currency={mt5_trade_account.currency}\n                                    has_sign={!!mt5_trade_account.balance && mt5_trade_account.balance < 0}\n                                    show_currency\n                                />\n                            </Text>\n                        )}\n                        {has_migration_status && (\n                            <StatusBadge\n                                className='trading-app-card__acc_status_badge'\n                                account_status={mt5_trade_account.status}\n                                icon={badge_icon}\n                                text={badge_text}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className='cfd-trade-modal__login-specs'>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Broker')}</Text>\n                        <SpecBox is_bold is_broker value={mt5_trade_account?.landing_company} />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Server')}</Text>\n                        <SpecBox\n                            is_bold\n                            value={(mt5_trade_account as TAdditionalDetailsOfEachMT5Loginid)?.server_info?.environment}\n                        />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Login ID')}</Text>\n                        <SpecBox is_bold value={(mt5_trade_account as TTradingPlatformAccounts)?.display_login} />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Password')}</Text>\n                        <div className='cfd-trade-modal--paragraph'>\n                            <PasswordBox\n                                platform='mt5'\n                                onClick={() => {\n                                    const account_type = getCFDAccountKey({\n                                        market_type: mt5_trade_account.market_type,\n                                        sub_account_type: mt5_trade_account.sub_account_type,\n                                        platform: CFD_PLATFORMS.MT5,\n                                        shortcode: mt5_trade_account.landing_company_short,\n                                        product,\n                                    });\n                                    onPasswordManager(\n                                        mt5_trade_account?.login,\n                                        getTitle(mt5_trade_account.market_type ?? '', show_eu_related_content),\n                                        mt5_trade_account.account_type ?? '',\n                                        account_type,\n                                        (mt5_trade_account as TAdditionalDetailsOfEachMT5Loginid)?.server\n                                    );\n                                    toggleModal();\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className='cfd-trade-modal__maintenance'>\n                        <Icon\n                            icon='IcAlertWarning'\n                            size={!isDesktop ? 28 : 20}\n                            className='cfd-trade-modal__maintenance-icon'\n                        />\n                        <div className='cfd-trade-modal__maintenance-text'>\n                            <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                        </div>\n                    </div>\n                    {isDesktop && is_window && mt5_trade_account.product !== PRODUCT.GOLD && (\n                        <InformationBanner\n                            information_icon={<StandaloneChartAreaRegularIcon fill='#095A66' iconSize='sm' />}\n                            title={<Localize i18n_default_text='Alpha Generation guide' />}\n                            description={\n                                <Localize i18n_default_text='Tailor your indicators with expert-driven trend analysis.' />\n                            }\n                            redirect_icon={<StandaloneArrowUpRightRegularIcon fill='#000000' iconSize='sm' />}\n                            link='https://docs.deriv.com/misc/alpha_generation_guide.pdf'\n                        />\n                    )}\n                </div>\n                {is_eligible_to_migrate && <MigrationBanner is_trade_modal />}\n\n                {!isDesktop ? (\n                    <MT5MobileRedirectOption mt5_trade_account={mt5_trade_account} />\n                ) : (\n                    <MT5DesktopRedirectOption account_title={getAccountTitle()} mt5_trade_account={mt5_trade_account} />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default DMT5TradeModal;\n","import React from 'react';\n\nimport { Div100vhContainer, Modal, PageOverlay, UILoader } from '@deriv/components';\nimport { useIsEnabledNakala } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { useCfdStore } from '../Stores/Modules/CFD/Helpers/useCfdStores';\n\nimport { CFDDerivNakalaLinkAccount } from './account-nakala-modal/account-nakala-modal';\nimport CTraderDerivXTradeModal from './ctrader-derivx-trade-modal';\nimport DMT5TradeModal from './dmt5-trade-modal';\nimport { TCFDPasswordReset } from './props.types';\n\ntype TMT5TradeModalProps = {\n    is_eu_user: boolean;\n    is_open: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    is_demo: string;\n};\n\nconst MT5TradeModal = observer(\n    ({ is_eu_user, is_open, onPasswordManager, toggleModal, is_demo }: TMT5TradeModalProps) => {\n        const { isDesktop } = useDevice();\n        const {\n            traders_hub,\n            common,\n            modules: { cfd },\n        } = useStore();\n        const { is_nakala_banner_visible } = cfd;\n\n        const { show_eu_related_content, combined_cfd_mt5_accounts } = traders_hub;\n        const { platform } = common;\n\n        const { mt5_trade_account, dxtrade_tokens, ctrader_tokens, product } = useCfdStore();\n\n        const mt5Account = combined_cfd_mt5_accounts.filter(\n            account => account.product === 'standard' && account.action_type !== 'get'\n        );\n\n        const { nakalaServerInfo, loginId } = useIsEnabledNakala(mt5Account);\n\n        const CFDTradeModal = () => {\n            if (platform === 'mt5') {\n                return (\n                    <DMT5TradeModal\n                        mt5_trade_account={mt5_trade_account}\n                        show_eu_related_content={show_eu_related_content}\n                        onPasswordManager={onPasswordManager}\n                        toggleModal={toggleModal}\n                        product={product}\n                        is_demo={is_demo}\n                    />\n                );\n            }\n            return (\n                <CTraderDerivXTradeModal\n                    ctrader_derivx_trade_account={mt5_trade_account}\n                    is_eu_user={is_eu_user}\n                    onPasswordManager={onPasswordManager}\n                    toggleModal={toggleModal}\n                    is_demo={is_demo}\n                    platform={platform}\n                    ctrader_tokens={ctrader_tokens}\n                    dxtrade_tokens={dxtrade_tokens}\n                    is_mobile={!isDesktop}\n                />\n            );\n        };\n\n        return (\n            <React.Suspense fallback={<UILoader />}>\n                {isDesktop ? (\n                    <Modal\n                        is_open={is_open}\n                        title={is_nakala_banner_visible ? localize('Deriv Nakala') : localize('Trade')}\n                        toggleModal={toggleModal}\n                        should_header_stick_body={false}\n                        width={is_nakala_banner_visible ? '485px' : '600px'}\n                        exit_classname='cfd-modal--custom-exit'\n                    >\n                        {is_nakala_banner_visible ? (\n                            <CFDDerivNakalaLinkAccount nakalaInfo={{ loginId, serverName: nakalaServerInfo }} />\n                        ) : (\n                            <CFDTradeModal />\n                        )}\n                    </Modal>\n                ) : (\n                    <PageOverlay\n                        is_open={is_open}\n                        portal_id='deriv_app'\n                        header={is_nakala_banner_visible ? 'Deriv Nakala' : 'Trade'}\n                        onClickClose={toggleModal}\n                        header_classname='cfd-trade-modal__mobile-title'\n                    >\n                        <Div100vhContainer className='cfd-trade-modal__mobile-view-wrapper' height_offset='80px'>\n                            {is_nakala_banner_visible ? (\n                                <CFDDerivNakalaLinkAccount nakalaInfo={{ loginId, serverName: nakalaServerInfo }} />\n                            ) : (\n                                <CFDTradeModal />\n                            )}\n                        </Div100vhContainer>\n                    </PageOverlay>\n                )}\n            </React.Suspense>\n        );\n    }\n);\n\nexport default MT5TradeModal;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_account_src_Configs_get_mt5_status_badge_config__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_hooks__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_stores__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE_classnames__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = \"MT5TradeModal\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"MT5TradeModal\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_deriv_cfd\"] = self[\"webpackChunk_deriv_cfd\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"internalCFDStoreUsage\",\"utilities\",\"assets\",\"vendors-node_modules_deriv_quill-icons_dist_esm_react_Standalone_StandaloneArrowUpRightRegula-32bd46\"], () => (__webpack_require__(\"./src/Containers/mt5-trade-modal.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__","__WEBPACK_EXTERNAL_MODULE__deriv_account_src_Configs_get_mt5_status_badge_config__","__WEBPACK_EXTERNAL_MODULE__deriv_components__","__WEBPACK_EXTERNAL_MODULE__deriv_hooks__","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_stores__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__WEBPACK_EXTERNAL_MODULE_classnames__","__WEBPACK_EXTERNAL_MODULE_react__","deferred","CFDAccountCopy","_ref","text","className","React","Clipboard","text_copy","info_message","isMobile","localize","success_message","popoverAlignment","value","is_bold","is_broker","Text","size","weight","classNames","ModalInfo","Icon","icon","Localize","i18n_default_text","CFDDerivNakalaLinkAccount","observer","props","_nakalaInfo$serverNam","_nakalaInfo$loginId","_props$isSuccess","isSuccess","nakalaInfo","manageNakalaCookie","nakalaLinkedCookie","Cookies","get","set","domain","expires","isDesktopDevice","isDesktop","useEffect","as","align","color","height","width","SpecBox","serverName","loginId","href","target","rel","Button","type","onClick","window","open","primary","large","transparent","_ctrader_trading_plat","_ctrader_trading_plat2","_ctrader_trading_plat3","ctrader_derivx_trade_account","is_eu_user","onPasswordManager","toggleModal","dxtrade_tokens","ctrader_tokens","is_demo","platform","is_mobile","useDevice","_useStore","useStore","ui","client","common","traders_hub","cfd","modules","ctrader_accounts_list","ctrader_trading_platform_available_accounts","ctrader_total_balance","setAccountType","toggleMT5TradeModal","is_account_being_created","loadCTraderTokens","setAppstorePlatform","openDerivRealAccountNeededModal","selected_account_type","no_CR_account","is_real","has_any_real_account","getAccount","message","header","content","line_height","values","max_count","STRATEGY_PROVIDER_NOTES","map","note","key","components","concat","charAt","toUpperCase","slice","platformsText","CFD_PLATFORMS","CTRADER","display_login","DXTRADE","PlatformIconsAndDescriptions","display_balance","Money","amount","currency","has_sign","balance","show_currency","login","PasswordBox","account_type","getCFDAccountKey","market_type","sub_account_type","MT5","shortcode","landing_company_short","getTitle","server","filter","all_ctrader_accounts","ctrader_account","available_count","category","disabled","ExpansionPanel","platform_type","app_title","PlatformsDesktopDownload","ctraderTokenCall","downloadCenterAppOption","CTRADER_DESKTOP_WINDOWS_DOWNLOAD","CTRADER_DESKTOP_MAC_DOWNLOAD","downloadCenterDescription","mobileDownloadLink","getPlatformQRCode","MigrationBannerList","migrate_card","MigrateCard","migrate_card_dark","MigrateCardDark","image","Component","_ref$is_trade_modal","is_trade_modal","is_dark_mode_on","toggleMT5MigrationModal","_useCfdStore","useCfdStore","setMT5MigrationError","is_mt5_trade_modal_visible","_useMT5SVGEligibleToM","useMT5SVGEligibleToMigrate","has_derived_mt5_to_migrate","has_derived_and_financial_mt5","is_desktop_trade_modal","banner_img","account_1","getFormattedJurisdictionMarketTypes","JURISDICTION_MARKET_TYPES","DERIVED","account_2","FINANCIAL","getCFDPlatformNames","account_title","primary_light","Analytics","trackEvent","action","MigrationBannerImage","mt5_trade_account","desktopDownloadOptions","getDesktopDownloadOptions","mobileDownloadOptions","getMobileDownloadOptions","Fragment","option","button_text","getCFDPlatformLabel","account","_ref2","alt","src","getUrlBase","getPlatformSettings","name","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","mobileURLSet","_callee","mobileAppURL","timeout","_context","location","replace","getDeeplinkUrl","getMobileAppInstallerUrl","setTimeout","document","addEventListener","hidden","clearTimeout","onblur","arguments","apply","_next","_throw","getWebtraderUrl","_server_info","show_eu_related_content","product","_client$account_statu","account_status","is_eligible_to_migrate","authentication","eligible_to_migrate","getAccountTitle","PRODUCT","STANDARD","SWAPFREE","ZEROSPREAD","STP","GOLD","_getMT5StatusBadgeCon","getMT5StatusBadgeConfig","status","badge_text","badge_icon","has_migration_status","MT5_ACCOUNT_STATUS","MIGRATED_WITH_POSITION","MIGRATED_WITHOUT_POSITION","includes","getShortcode","Jurisdiction","SVG","BVI","VANUATU","MAURITIUS","is_window","OSDetect","TradingPlatformIcon","MARKET_TYPE","SYNTHETIC","ALL","StatusBadge","landing_company","server_info","environment","_mt5_trade_account$ma","_mt5_trade_account$ac","InformationBanner","information_icon","StandaloneChartAreaRegularIcon","fill","iconSize","title","description","redirect_icon","StandaloneArrowUpRightRegularIcon","link","MigrationBanner","MT5DesktopRedirectOption","MT5MobileRedirectOption","is_open","is_nakala_banner_visible","combined_cfd_mt5_accounts","mt5Account","action_type","_useIsEnabledNakala","useIsEnabledNakala","nakalaServerInfo","CFDTradeModal","DMT5TradeModal","CTraderDerivXTradeModal","fallback","UILoader","Modal","should_header_stick_body","exit_classname","PageOverlay","portal_id","onClickClose","header_classname","Div100vhContainer","height_offset","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","obj","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}