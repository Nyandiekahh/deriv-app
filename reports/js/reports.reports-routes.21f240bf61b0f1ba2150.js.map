{"version":3,"file":"reports/js/reports.reports-routes.21f240bf61b0f1ba2150.js","mappings":";iYAAI,SAAWA,WAAa,IAAMA,kBAAoBC,OAAS,IAAMA,cAAgBC,OAAS,IAAMA,cAAgBC,KAAO,IAAMA,KAAO,CAAC,ECEzI,IAAIC,EAAgB,iBAAL,GAAiB,GAAK,EAAEC,SAAWA,QAAU,EAAGC,EAAmB,iBAARH,MAAoBA,MAAQA,KAAKE,SAAWA,QAAUF,KAChIC,GAAKE,GAAKC,SAAS,cAATA,GACV,IAAI,SAAWN,OAAS,IAAM,kBAAI,YAiBlC,IAAIO,SAAWP,OAAS,IACxB,SAASQ,EAAEC,GACTC,aAAcC,GAAI,EAClBC,oBAAqBC,GAAI,GACvB,CAAC,GACH,MAAMC,EAAKC,GAAMR,EAAII,EAAIX,OAAOgB,WAAWD,GAAGE,SAAUC,EAAGC,IAAK,eAAE,IAAMN,EAAIC,EAAEL,GAAKE,IACnF,SAASS,IACPD,EAAEL,EAAEL,GACN,CACA,OAAO,GAAE,KACP,MAAMM,EAAIf,OAAOgB,WAAWP,GAC5B,OAAOW,IAAKL,EAAEM,YAAcN,EAAEM,YAAYD,GAAKL,EAAEO,iBAAiB,SAAUF,GAAI,KAC9EL,EAAEQ,eAAiBR,EAAEQ,eAAeH,GAAKL,EAAES,oBAAoB,SAAUJ,EAAE,CAC5E,GACA,CAACX,IAAKS,CACX,CCnCA,MAAMO,EAAI,KAQD,CAELC,UATQ,EAAE,uBAWVC,SAXsC,EAAE,sBAaxCC,SAbmE,EACnE,8CAcAC,iBAbK,EACL,0EAcAC,0BAbK,EACL,iHC2BJ,SAzB6BC,EAAAA,EAAAA,WAAS,SAAAC,GAA8C,IAA3CC,EAAaD,EAAbC,cACrCC,GAA8BC,EAAAA,EAAAA,KAAtBC,EAAMF,EAANE,OAAQC,EAASH,EAATG,UACRC,EAAgBF,EAAhBE,YACAC,EAAeF,EAAfE,WAER,IAAKN,EACD,OAAOO,IAAAA,cAAA,YAEX,IAAMC,EAAeR,EAAcS,aAAcC,EAAAA,EAAAA,gBAAeV,GAEhE,OAAKK,EAGDE,IAAAA,cAACI,EAAAA,eAAc,CACXH,aAAcA,EACdI,YAAaZ,EAAca,YAC3BC,cAAeA,EAAAA,cACfR,WAAYA,EACZD,YAAaA,EACbU,WAAYf,EAAcgB,WAC1BC,YAAajB,EAAcS,aAVV,IAa7B,IChCO,IAAMS,EAAkB,SAACC,GAAa,OAAOA,EAAMC,QAAQ,KAAM,KAAO,EAAI,SAAW,MAAM,ECmDpG,SAlCuBtB,EAAAA,EAAAA,WAAS,SAACuB,GAC7B,IAAQC,EAA0ED,EAA1EC,OAAQtB,EAAkEqB,EAAlErB,cAAeuB,EAAmDF,EAAnDE,SAAUC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,kBAAmBC,EAAWL,EAAXK,OAC/DtB,GAAcF,EAAAA,EAAAA,KAAdE,UACAX,EAAckC,IAAdlC,UACAmC,EAAgBxB,EAAhBwB,YAER,OACIrB,IAAAA,cAAA,OAAKsB,UAAU,8BACXtB,IAAAA,cAAA,OAAKsB,UAAU,sCACXtB,IAAAA,cAAA,OACIsB,UAAWC,IAAW,CAClB,2BAA4BC,OAAOL,GAAU,EAC7C,yBAA0BK,OAAOL,GAAU,IAE/C,cAAY,uBAEZnB,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQW,KAAKC,IAAIZ,GAASC,SAAUA,KAE/ChB,IAAAA,cAAC4B,EAAAA,eAAc,CAAChB,MAAOG,EAAQ,cAAY,yBAE7CE,GAAa/B,GACXc,IAAAA,cAAC6B,EAAAA,aAAaC,KAAI,CACdrC,cAAeA,EACfyB,kBAAmBA,EACnBX,cAAeA,EAAAA,cACfc,YAAa,SAAAU,GACLA,GAAaV,EAAYU,EACjC,IAKpB,ICuEA,QAxG4B,SAAHvC,GAMG,IAAAwC,EAAAC,EAAAC,EALxBC,EAAuB3C,EAAvB2C,wBACAC,EAAI5C,EAAJ4C,KACAC,EAAO7C,EAAP6C,QAAOC,EAAA9C,EACP+C,wBAAAA,OAAuB,IAAAD,GAAOA,EAAAE,EAAAhD,EAC9BiD,uBAAAA,OAAsB,IAAAD,GAAOA,EAEvBE,EAA4E,iBAAxCL,EAA0BM,UAC9DC,GAAsBC,EAAAA,EAAAA,0BAA6D,QAArCb,EAAEK,EAA0BM,iBAAS,IAAAX,EAAAA,EAAI,IACvFc,GAAcC,EAAAA,EAAAA,WAAU,CAAEC,eAAgBJ,IAC1CK,GAAiBC,EAAAA,EAAAA,kBAAiBN,EAAoBO,SAAU,CAClEJ,UAAWD,EACXM,eAAgBjB,IAEdkB,EAAgB,GAAAC,QAAGJ,EAAAA,EAAAA,kBAAiBN,EAAoBO,SAAU,CACpEJ,UAAWD,EACXS,eAAe,IACjB,KAAAD,OAAIL,GAAiBO,OAEvB,OAAId,GAA6BE,EAEzB5C,IAAAA,cAAA,OACIsB,UAAWC,IAAW,qBAAsB,CACxC,iCAAkCY,KAGtCnC,IAAAA,cAAA,OAAKsB,UAAU,2BACXtB,IAAAA,cAACyD,EAAAA,QAAO,CACJC,gBAAgB,8BAChBC,gBAAgB,qCAChBC,UAAU,MACVC,SAASC,EAAAA,EAAAA,eAAclB,EAAoBmB,YAC3CC,yBAAuB,EACvBC,qBAAmB,GAEnBjE,IAAAA,cAACkE,EAAAA,KAAI,CACD9B,KACIQ,EAAoBmB,WAAU,eAAAT,OACTV,EAAoBmB,YACnC,YAEVI,KAAM,MAGbhC,GAA4BE,EAA0B+B,cAG3DpE,IAAAA,cAAA,OAAKsB,UAAU,+BACXtB,IAAAA,cAACyD,EAAAA,QAAO,CACJC,gBAAgB,8BAChBC,gBAAgB,qCAChBC,UAAU,MACVC,QAASR,EACTW,yBAAuB,EACvBC,qBAAmB,GAEnBjE,IAAAA,cAACqE,EAAAA,eAAc,CACXC,KACIxB,EAAW,GAAAQ,OACDV,EAAoBO,SAAoBoB,cAAa,YACxD3B,EAAoBO,SAAoBoB,cAEnDC,MAAM,WAGbrC,GAA2Bc,GAE/BR,GAA0BG,EAAoB6B,YAC3CzE,IAAAA,cAAA,OAAKsB,UAAU,kCAAiC,IAAEsB,EAAoB6B,YAEzElC,GAA2BK,EAAoB8B,aAC5C1E,IAAAA,cAAA,OAAKsB,UAAU,kCAAqE,KAAlCsB,EAAoB8B,YAAkB,MAKpG,gBAAiBrC,GACjB,CAAC,UAAW,OAAQ,UAAW,aAAc,YAAYsC,SAA4B,QAApB1C,EAACI,EAAQuC,mBAAW,IAAA3C,EAAAA,EAAI,IAGrFjC,IAAAA,cAAA,OAAKsB,UAAU,sBACc,YAAxBe,EAAQuC,aAA6B5E,IAAAA,cAACkE,EAAAA,KAAI,CAAC9B,KAAMA,GAAQ,mBAAoB+B,KAAM,KAC3D,eAAxB9B,EAAQuC,aAAgC5E,IAAAA,cAACkE,EAAAA,KAAI,CAAC9B,KAAK,sBAAsB+B,KAAM,KACvD,aAAxB9B,EAAQuC,aAA8B5E,IAAAA,cAACkE,EAAAA,KAAI,CAAC9B,KAAK,2BAA2B+B,KAAM,MACzD,SAAxB9B,EAAQuC,aAAkD,YAAxBvC,EAAQuC,cACxC5E,IAAAA,cAACkE,EAAAA,KAAI,CAAC9B,KAAK,gBAAgB+B,KAAM,MAItC,CAAC,cAAcQ,SAAgD,QAAxCzC,EAAEG,EAA2BuC,mBAAW,IAAA1C,EAAAA,EAAI,IAEtElC,IAAAA,cAAA,OAAKsB,UAAU,sBACXtB,IAAAA,cAACkE,EAAAA,KAAI,CAAC9B,KAAK,eAAe+B,KAAM,MAMxCnE,IAAAA,cAAA,OAAK6E,MAAM,KAAKC,OAAO,KAAKxD,UAAU,eAAe,cAAY,mBAC7DtB,IAAAA,cAAA,QAAM6E,MAAM,KAAKC,OAAO,OAGpC,ECxGA,QANuB,SAAHtF,GAA6C,IAAvCoB,EAAKpB,EAALoB,MAAOmE,EAAQvF,EAARuF,SACvBC,EAASrE,EAAgBC,GAE/B,OAAOZ,IAAAA,cAAA,QAAMsB,UAAS,WAAAgC,OAAa0B,IAAWD,EAClD,ECGA,QARwB,SAAHvF,GAAA,IAAMwB,EAAQxB,EAARwB,SAAQ,OAC/BhB,IAAAA,cAAA,OAAKsB,UAAU,qBACXtB,IAAAA,cAACiF,EAAAA,KAAI,CAACT,MAAM,qBAAqBU,OAAO,OAAOf,KAAK,QAC/CnD,GAEH,ECKV,IAAMmE,EAAM,CACRC,IAAK,UACLC,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,KAAM,SACNC,WAAY,OACZC,QAAS,UACTC,WAAY,aACZC,SAAU,YCfRC,EAAsB,SAACC,GACzB,OAAIC,EAAAA,EAAAA,sBAAqBD,GACdE,EAAAA,wBAAwBC,aACxBC,EAAAA,EAAAA,uBAAsBJ,GACtBE,EAAAA,wBAAwBG,aAE5BH,EAAAA,wBAAwBI,OACnC,EAEaC,EAAwB,SACjCC,EACAC,GAGA,GAAID,EAAUE,OAAS,EAAG,KAAAC,EAEtB,GACIF,GACAD,EAAUI,MAAK,SAAAC,GAAO,IAAAC,EACZtC,EAAwB,QAApBsC,EAAGD,EAAIlH,qBAAa,IAAAmH,OAAA,EAAjBA,EAAmBd,cAChC,QAAKxB,GACEuB,EAAoBvB,KAAUiC,CACzC,IAEA,OAAOA,EAIX,IAMMT,EAA6C,QAAhCW,EANKH,EAAUO,QAAO,SAACC,EAAQC,GAAY,IAAAC,EAAAC,EAG1D,QAFgD,QAArBD,EAAAD,EAAQtH,qBAAa,IAAAuH,OAAA,EAArBA,EAAuBvG,aAAc,KAClB,QAApBwG,EAAAH,EAAOrH,qBAAa,IAAAwH,OAAA,EAApBA,EAAsBxG,aAAc,GACdsG,EAAUD,CAC9D,IAEsCrH,qBAAa,IAAAgH,OAAA,EAA7BA,EAA+BX,cACrD,GAAIA,EAAe,CACf,IAAM3C,EAAW0C,EAAoBC,GAGrC,OADAoB,aAAaC,QAAQ,sBAAuBhE,GACrCA,CACX,CACJ,CAGA,IAjDAvC,EAiDMwG,EAAeF,aAAaG,QAAQ,uBAC1C,OAhDiB,QAFjBzG,EAkD2BwG,IAhDFxJ,OAAO0J,OAAOtB,EAAAA,yBAAyBrB,SAAS/D,GAgD9BwG,EAAepB,EAAAA,wBAAwBI,OACtF,oTCZO,IAAMmB,EAAoB,SAAH/H,GASJ,IAAAgI,EAAAC,EAAAjI,EARtBkI,IAAAA,OAAG,IAAAD,EAAG,CAAC,EAACA,EACRxG,EAASzB,EAATyB,UAAS0G,EAAAnI,EACToI,YAAAA,OAAW,IAAAD,EAAG,CAAC,EAACA,EAAAE,EAAArI,EAChBM,YAAAA,OAAW,IAAA+H,GAAGC,EAAAA,EAAAA,YAAUD,EACxBE,EAAavI,EAAbuI,cACA1G,EAAW7B,EAAX6B,YACA2G,EAAOxI,EAAPwI,QACGlH,+WAAKmH,CAAAzI,EAAA0I,GAQR,GANAlI,IAAAA,WAAgB,WACPiB,GACD+G,SAAAA,GAER,GAAG,CAAkB,QAAlBR,EAACE,EAAIjI,qBAAa,IAAA+H,OAAA,EAAjBA,EAAmBzD,WAAYiE,EAAS/G,IAExCA,EACA,OACIjB,IAAAA,cAAA,OAAKsB,UAAU,6CACXtB,IAAAA,cAAA,WACIA,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYU,WAC7CtI,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYW,UAEjDvI,IAAAA,cAAA,WACIA,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAAC9G,UAAU,8BAA8BoG,IAAKA,EAAKW,OAAQT,EAAYY,aACrFxI,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAAC9G,UAAU,8BAA8BoG,IAAKA,EAAKW,OAAQT,EAAYzG,WAMrG,IAAAsH,EAAoEf,EAA5DjI,EAAagJ,EAAbhJ,cAAeiJ,EAAeD,EAAfC,gBAAiBpE,EAAImE,EAAJnE,KAAMpD,EAAiBuH,EAAjBvH,kBACtCF,EAAiEvB,EAAjEuB,SAAUV,EAAuDb,EAAvDa,YAAaG,EAA0ChB,EAA1CgB,WAAYP,EAA8BT,EAA9BS,WAAYyI,EAAkBlJ,EAAlBkJ,cACjD1I,EAAeC,GAAaC,EAAAA,EAAAA,gBAAeV,GAAiB,KAC5DmJ,EAAuB1I,EAAa,SAAU2I,EAAAA,EAAAA,sBAAoBC,EAAAA,EAAAA,mBAAkBrJ,IAAgB,GACpGsJ,GAAgBC,EAAAA,EAAAA,2BACjBC,EAAAA,EAAAA,kBAAiBxJ,EAAcqG,eAAiB8C,EAAuBnJ,EAAcyJ,WAAa,IAEjGC,GAAkBC,EAAAA,EAAAA,mBAAkBtJ,EAAaW,QAAAA,EAAc,EAAGH,QAAAA,EAAe,GACnF,IAEJ,OAAIyF,EAAAA,EAAAA,sBAAqBzB,KAAS4B,EAAAA,EAAAA,uBAAsB5B,GAEhDtE,IAAAA,cAACqJ,EAAAA,oBAAmBC,EAAA,CAChB7J,cAAeA,EACfiJ,gBAAiBA,EACjB1H,SAAUA,QAAAA,EAAY,GACtBuI,kBAAgB,EAChBxB,cAAeA,EACf1G,YAAaA,EACbvB,YAAaA,GACTgB,IAMZd,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYtD,QAC5CkF,EAAAA,EAAAA,mBAAkBlF,KAAU2E,EAAAA,EAAAA,kBAAiB3E,KAAUpE,EACpDF,IAAAA,cAACyJ,EAAAA,qBAAoB,CACjBxJ,aAAcA,EACdqB,UAAU,wBACVjB,YAAaC,EACbC,cAAeA,EAAAA,cACfR,YAAY,EACZD,YAAaA,EACbU,WAAYmI,EACZjI,YAAaR,IAGjBF,IAAAA,cAAC0J,EAAAA,YAAW,CAACC,MAAOZ,QAAAA,EAAiB,GAAInI,MAAOuI,KAGxDnJ,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYgC,YAC7C5J,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAAC9G,UAAU,8BAA8BoG,IAAKA,EAAKW,OAAQT,EAAY5G,YAEzFhB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYU,WAC7CtI,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAAC9G,UAAU,8BAA8BoG,IAAKA,EAAKW,OAAQT,EAAYY,cAEzFxI,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYW,SAC7CvI,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAAC9G,UAAU,8BAA8BoG,IAAKA,EAAKW,OAAQT,EAAYzG,UAEzFnB,IAAAA,cAAA,OAAKsB,UAAU,2BACftB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAAC6B,EAAAA,aAAaC,KAAI,CACdrC,cAAeA,EACfyB,kBAAmBA,EACnBX,cAAeA,EAAAA,cACfc,YAAaA,KAKjC,EC9HIwI,EAAW,WAQX,OAPAA,EAAWjM,OAAOkM,QAAU,SAAkB7L,GAC1C,IAAK,IAAIE,EAAGG,EAAI,EAAGK,EAAIoL,UAAUvD,OAAQlI,EAAIK,EAAGL,IAE5C,IAAK,IAAI0L,KADT7L,EAAI4L,UAAUzL,GACOV,OAAOqM,UAAUC,eAAeC,KAAKhM,EAAG6L,KAAI/L,EAAE+L,GAAK7L,EAAE6L,IAE9E,OAAO/L,CACX,EACO4L,EAASO,MAAMC,KAAMN,UAChC,EAcA,IAMIO,EAAM,SAAUC,GAChB,IAAIC,EAAKD,EAAGE,QAASA,OAAiB,IAAPD,GAAuBA,EAAIE,EAAeH,EAAGG,aAAcC,EAAKJ,EAAGK,gBAAiBA,OAAyB,IAAPD,EAAgB,UAAYA,EAAIE,EAAKN,EAAGO,kBAAmBA,OAA2B,IAAPD,EAAgB,EAAIA,EAAIE,EAAKR,EAAGS,QAASA,OAAiB,IAAPD,EAAgB,GAAKA,EAAIhG,EAAWwF,EAAGxF,SAAUkG,EAAKV,EAAGW,gBAAiBA,OAAyB,IAAPD,EAAgB,OAASA,EAAIE,EAAKZ,EAAGa,kBAAmBA,OAA2B,IAAPD,EAAgB,EAAIA,EAAIE,EAAKd,EAAGe,cAAeA,OAAuB,IAAPD,EAAgB,EAAIA,EAAIE,EAAKhB,EAAGiB,kBAAmBA,OAA2B,IAAPD,EAAgB,aAAeA,EAAIE,EAAYlB,EAAGkB,UAAWC,EAAKnB,EAAGoB,SAAUA,OAAkB,IAAPD,EAAgB,IAAOA,EAAIE,EAAKrB,EAAGsB,IAAKA,OAAa,IAAPD,GAAwBA,EAAIE,EAAKvB,EAAGwB,MAAOA,OAAe,IAAPD,EAAgB,IAAMA,EAAIE,EAAKzB,EAAG0B,MAAOA,OAAe,IAAPD,EAAgB,CAAC,EAAIA,EAAIE,EAAK3B,EAAG4B,MAAOA,OAAe,IAAPD,EAAgB,aAAeA,EAAIE,EAAK7B,EAAG8B,WAAYA,OAAoB,IAAPD,EAAgB,KAAOA,EAAItL,EAnBp7B,SAAgB3C,EAAGI,GACf,IAAIN,EAAI,CAAC,EACT,IAAK,IAAI+L,KAAK7L,EAAOP,OAAOqM,UAAUC,eAAeC,KAAKhM,EAAG6L,IAAMzL,EAAE+N,QAAQtC,GAAK,IAC9E/L,EAAE+L,GAAK7L,EAAE6L,IACb,GAAS,MAAL7L,GAAqD,mBAAjCP,OAAO2O,sBACtB,KAAIjO,EAAI,EAAb,IAAgB0L,EAAIpM,OAAO2O,sBAAsBpO,GAAIG,EAAI0L,EAAExD,OAAQlI,IAC3DC,EAAE+N,QAAQtC,EAAE1L,IAAM,GAAKV,OAAOqM,UAAUuC,qBAAqBrC,KAAKhM,EAAG6L,EAAE1L,MACvEL,EAAE+L,EAAE1L,IAAMH,EAAE6L,EAAE1L,IAF4B,CAItD,OAAOL,CACX,CAS47BwO,CAAOlC,EAAI,CAAC,UAAW,eAAgB,kBAAmB,oBAAqB,UAAW,WAAY,kBAAmB,oBAAqB,gBAAiB,oBAAqB,YAAa,WAAY,MAAO,QAAS,QAAS,QAAS,eACnqCmC,EAAUjB,GAPP/J,KAAKiL,SACPC,SAAS,IACTC,UAAU,GAMXC,EAASJ,EAAU,QACnBK,EAAaL,EAAU,iBACvBM,EAASN,EAAU,QACnBO,EAAWpB,EAAM,CAAEqB,UAAW,cAAiB,KAC/CC,EAAW,MAAQxB,EAAW,MAC9ByB,EAAMrB,EAAQ,IACdsB,EAA0C,eAAtB7B,EAAqC,kBAAe8B,EAC5E,OAAQ,IAAAC,eAAc,MAAO1D,EAAS,CAAE,kBAAmBmD,EAAQQ,KAAM,MAAOvB,MAAOpC,EAASA,EAAS,CAAC,EAAGoC,GAAQgB,IAAanM,GAC9HqL,GAAQ,IAAAoB,eAAc,QAAS,CAAEE,GAAIT,GAAUb,GAAS,KACxDE,IAAc,IAAAqB,gBAAerB,GAAcA,EAAa,MACxD,IAAAkB,eAAc,OAAQ,CAAEC,KAAM,eAAgBG,EAAG,IAAKC,EAAG,IAAK/I,MAAO,OAAQC,OAAQ,OAAQ+I,SAAU,OAAS7C,EAAU,IAAM8B,EAAS,IAAKb,MAAO,CAAE6B,KAAM,OAAS9C,EAAU,IAAM+B,EAAa,QACnM,IAAAQ,eAAc,OAAQ,MAClB,IAAAA,eAAc,WAAY,CAAEE,GAAIX,GAAU/H,IAC1C,IAAAwI,eAAc,iBAAkB,CAAEE,GAAIV,EAAYM,kBAAmBA,IACjE,IAAAE,eAAc,OAAQ,CAAEQ,OAAQ,KAAMC,UAAWpD,EAAiBqD,YAAanD,GAAqBL,IAAY,IAAA8C,eAAc,UAAW,CAAEW,cAAe,SAAU5G,QAASgE,EAAgB,MAAQA,EAAgB,MAAO6B,SAAUA,EAAUC,IAAKA,EAAKe,YAAa,aAAcC,MAAO1D,MAC5R,IAAA6C,eAAc,OAAQ,CAAEQ,OAAQ,MAAOC,UAAW9C,EAAiB+C,YAAa7C,GAAqBX,IAAY,IAAA8C,eAAc,UAAW,CAAEW,cAAe,SAAU5G,QAASgE,EAAgB,EAAI,MAAQA,EAAgB,EAAI,MAAQ,EAC9NA,EAAgB,GAAI6B,SAAUA,EAAUC,IAAKA,EAAKe,YAAa,aAAcC,MAAO1D,MAC5F,IAAA6C,eAAc,OAAQ,CAAEQ,OAAQ,OAAQC,UAAWpD,EAAiBqD,YAAanD,GAAqBL,IAAY,IAAA8C,eAAc,UAAW,CAAEW,cAAe,SAAU5G,OAAQ,UAAY,EAAIgE,GAAgB6B,SAAUA,EAAUC,IAAKA,EAAKe,YAAa,aAAcC,MAAO1D,OAC9R,EAEI2D,EAAgB,SAAUvN,GAC1B,OAAOA,EAAMiE,UAAW,IAAAwI,eAAcjD,EAAKT,EAAS,CAAC,EAAG/I,KAAU,IAAAyM,eAAce,EAA4BzE,EAAS,CAAC,EAAG/I,GAC7H,EAEIwN,EAA6B,SAAUxN,GAAS,OAAQ,IAAAyM,eAAcc,EAAexE,EAAS,CAAE0E,QAAS,eAAiBzN,IAC1H,IAAAyM,eAAc,OAAQ,CAAEI,EAAG,KAAMC,EAAG,IAAK/I,MAAO,KAAMC,OAAQ,IAAK0J,GAAI,OACvE,IAAAjB,eAAc,OAAQ,CAAEI,EAAG,KAAMC,EAAG,KAAM/I,MAAO,KAAMC,OAAQ,IAAK0J,GAAI,OACxE,IAAAjB,eAAc,OAAQ,CAAEI,EAAG,IAAKC,EAAG,KAAM/I,MAAO,MAAOC,OAAQ,IAAK0J,GAAI,OACxE,IAAAjB,eAAc,OAAQ,CAAEI,EAAG,IAAKC,EAAG,KAAM/I,MAAO,MAAOC,OAAQ,IAAK0J,GAAI,OACxE,IAAAjB,eAAc,OAAQ,CAAEI,EAAG,IAAKC,EAAG,KAAM/I,MAAO,MAAOC,OAAQ,IAAK0J,GAAI,OACxE,IAAAjB,eAAc,SAAU,CAAEkB,GAAI,KAAMC,GAAI,KAAM9P,EAAG,OAAW,EAoChE,UC5GA,IAAM+P,EAAwB,SAAHnP,GAAA,IAAMuM,EAAKvM,EAALuM,MAAK,OAClC/L,IAAAA,cAACqO,EAAa,CACVvJ,OAAQ,GACRD,MAAO,IACPkH,MAAOA,EACPnB,gBAAiB,uBACjBM,gBAAiB,yBAEjBlL,IAAAA,cAAA,QAAM2N,EAAE,KAAKC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,KAAKC,OAAO,OACpD9E,IAAAA,cAAA,QAAM2N,EAAE,KAAKC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,KAAKC,OAAO,OACpD9E,IAAAA,cAAA,QAAM2N,EAAE,MAAMC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,MAAMC,OAAO,MACtD9E,IAAAA,cAAA,QAAM2N,EAAE,MAAMC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,MAAMC,OAAO,MACtD9E,IAAAA,cAAA,QAAM2N,EAAE,MAAMC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,KAAKC,OAAO,MACrD9E,IAAAA,cAAA,QAAM2N,EAAE,MAAMC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,KAAKC,OAAO,MACrD9E,IAAAA,cAAA,QAAM2N,EAAE,MAAMC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,KAAKC,OAAO,MACrD9E,IAAAA,cAAA,QAAM2N,EAAE,MAAMC,EAAE,KAAKY,GAAG,IAAII,GAAG,IAAI/J,MAAM,KAAKC,OAAO,MACzC,ECSpB,QAtBiC,SAAHtF,GAAA,IAC1BqP,EAAiBrP,EAAjBqP,kBACAC,EAActP,EAAdsP,eACAC,EAAiBvP,EAAjBuP,kBACAC,EAAwBxP,EAAxBwP,yBAAwB,OAExBhP,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKsB,UAAU,uBACXtB,IAAAA,cAACkE,EAAAA,KAAI,CACD+K,YAAY,8BACZ7M,KAAM0M,EACNxN,UAAU,4BACVkD,MAAM,WACNL,KAAM,KAEVnE,IAAAA,cAACiF,EAAAA,KAAI,CAACd,KAAK,KAAK+K,MAAM,SAAS1K,MAAM,WAAWlD,UAAU,6BACpDuN,EAAwCG,EAApBD,IAGjB,ECNrB,QAZgB,SAAHvP,GAAA,IAAM8B,EAAS9B,EAAT8B,UAAW6N,EAAY3P,EAAZ2P,aAAcC,EAAK5P,EAAL4P,MAAO3B,EAAEjO,EAAFiO,GAAIwB,EAAWzP,EAAXyP,YAAW,OAC9DjP,IAAAA,cAAA,OACIyN,GAAIA,EACJ,cAAawB,EACb3N,UAAWC,IAAW,aAAc,eAAF+B,OAAiB8L,GAAS,QAAU,CAAEC,UAAWF,GAAgB7N,IAElGgO,MAAMC,KAAK,IAAID,MAAM,IAAInK,KAAI,SAACwI,EAAG6B,GAAG,OACjCxP,IAAAA,cAAA,OAAKyP,IAAKD,EAAKlO,UAAS,sCAAAgC,OAAwCkM,EAAM,EAAC,SAAAlM,OAAQkM,EAAM,IAAO,IAE9F,ECkBV,QAzB6B,SAAHhQ,GAQG,IAPzBsP,EAActP,EAAdsP,eACAY,EAAuBlQ,EAAvBkQ,wBACAb,EAAiBrP,EAAjBqP,kBACAc,EAAQnQ,EAARmQ,SACA5P,EAAUP,EAAVO,WACAgP,EAAiBvP,EAAjBuP,kBACAC,EAAwBxP,EAAxBwP,yBAEMY,EAAwBF,EAC9B,OACI1P,IAAAA,cAACA,IAAAA,SAAc,KACV2P,GAAYC,GACT5P,IAAAA,cAAC4P,EAAqB,CAClBd,eAAgBA,EAChBD,kBAAmBA,EACnBE,kBAAmBA,EACnBC,yBAA0BA,IAGjCjP,GAAcC,IAAAA,cAAC6P,EAAO,CAACZ,YAAY,yBAGhD,ECFA,IAAMa,EAA0B,SAAHtQ,GAAA,IAAMmQ,EAAQnQ,EAARmQ,SAAUb,EAActP,EAAdsP,eAAgB/J,EAAQvF,EAARuF,SAAQ,OACjE/E,IAAAA,cAACA,IAAAA,SAAc,KACV2P,EACG3P,IAAAA,cAAC+P,EAAoB,CACjBJ,SAAUA,EACVD,wBAAyBM,EACzBlB,eAAgBA,EAChBC,kBAAmB/O,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,sCAGnDnL,EAES,EAORoL,EAAoB,SAACC,GAA2B,OAAKC,MAAM7O,OAAO4O,EAAK9H,aAAe8H,EAAK9H,QAAQ,EAEnGgI,EAAe,WAA0D,IAAzDC,EAA+CxG,UAAAvD,OAAA,QAAA8G,IAAAvD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxEyG,EAAsD,CAAC,EACrDC,GAA4BC,EAAAA,EAAAA,2BAA0BH,EAAQjM,MAqBpE,OAnBIiM,EAAQ9Q,iBAAkBkR,EAAAA,EAAAA,oBAAmBJ,EAAQ9Q,eACrD+Q,EAAS,CACLI,UAAW5Q,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,yDAEpCO,GAA6BF,EAAQ9C,MAC5C+C,EAASC,EACH,CACIG,UACI5Q,IAAAA,cAACiQ,EAAAA,SAAQ,CACLC,kBAAkB,oHAClB5I,OAAQ,CACJuJ,gBAAiBJ,aAAyB,EAAzBA,EAA2BK,UAK5DC,EAAAA,EAAAA,iBAAgBR,EAAQ9C,KAG3B+C,CACX,EAEaQ,EAAqB,SAAHvI,GAaJ,IAZvBwI,EAAgBxI,EAAhBwI,iBACAC,EAAgBzI,EAAhByI,iBACA5P,EAASmH,EAATnH,UACA6P,EAAO1I,EAAP0I,QACArC,EAAcrG,EAAdqG,eACAsC,EAAmB3I,EAAnB2I,oBACApQ,EAAQyH,EAARzH,SACA2O,EAAQlH,EAARkH,SACA5P,EAAU0I,EAAV1I,WACAsR,EAAiB5I,EAAjB4I,kBACAC,EAAQ7I,EAAR6I,SACAC,EAAM9I,EAAN8I,OAEQrS,EAAckC,IAAdlC,UAYR,OAXAc,IAAAA,WAAgB,WACZwR,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,qBACRkB,UAAW,UACXC,aAAc,sBACdC,kBAAmBR,EACnBS,mBAAoBZ,GAG5B,GAAG,IAGCjR,IAAAA,cAACA,IAAAA,SAAc,KACVD,EACGC,IAAAA,cAAC+P,EAAoB,CACjBhQ,WAAYA,EACZ2P,wBAAyBM,EACzBlB,eAAgBA,EAChBC,kBAAmB/O,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,sCAGnDlP,GACIhB,IAAAA,cAAA,OAAKsB,UAAU,oBACXtB,IAAAA,cAAC8P,EAAuB,CAAChB,eAAgBA,EAAgBa,SAAUA,GAC9DzQ,EACGc,IAAAA,cAAC8R,EAAAA,UAAS,CACNxQ,UAAWA,EACX6P,QAASA,EACTY,eAAgB5B,EAChB6B,OAAQT,EACRU,YAAaf,EACbZ,aAAcA,EACd4B,WAAY,WAAF,OAAQZ,CAAQ,EAC1Ba,eAAgBxD,GAEhB3O,IAAAA,cAAC+P,EAAoB,OAGzB/P,IAAAA,cAACmI,EAAAA,SAAQ,CACL7G,UAAWA,EACX2Q,YAAaf,EACbc,OAAQT,EACRa,YAAaf,EACbf,aAAcA,EACd+B,QAAS,EACTC,UAAW,SAAAlC,GAAI,OAAIA,aAAI,EAAJA,EAAM3C,EAAE,GAE3BzN,IAAAA,cAAC+P,EAAoB,SASzD,+uCC/FA,IA+FMwC,GAAgBhT,EAAAA,EAAAA,WAAS,SAAAkJ,GAAkD,IAA/CqG,EAAcrG,EAAdqG,eAAmBhO,+WAAKmH,CAAAQ,EAAAP,GACtDxI,GAA0DC,EAAAA,EAAAA,KAAlDE,EAASH,EAATG,UAAW2S,EAAM9S,EAAN8S,OAAQC,EAAE/S,EAAF+S,GAAI7S,EAAMF,EAANE,OAAQ8S,EAAchT,EAAdgT,eAEnCxB,EAQArR,EARAqR,iBACAyB,EAOA9S,EAPA8S,MACAC,EAMA/S,EANA+S,gBACA7S,EAKAF,EALAE,WACAgI,EAIAlI,EAJAkI,cACA1G,EAGAxB,EAHAwB,YACAwR,EAEAhT,EAFAgT,QACoBC,EACpBjT,EADAkT,mBAEI/R,EAA2CwR,EAA3CxR,SAAiBgS,EAA0BR,EAAjCS,MAEYC,EAQ1BT,EARAU,yBACAC,EAOAX,EAPAW,SACAC,EAMAZ,EANAY,cACAC,EAKAb,EALAa,UACAC,EAIAd,EAJAc,YACAC,EAGAf,EAHAe,gBACAC,EAEAhB,EAFAgB,iCACAC,EACAjB,EADAiB,0BAEI5T,EAAgBF,EAAhBE,YAGF6T,EAAc,CAChBb,cAAAA,EACAI,qBAAAA,EACAE,SAAAA,EACAC,cAAAA,EACAC,UAAAA,EACAC,YAAAA,EACAC,gBAAAA,EACAC,iCAAAA,EACAC,0BAAAA,EACAE,gBAZwBlB,EAApBkB,iBAeA1U,EAAckC,IAAdlC,UACF2U,GAA4BC,EAAAA,EAAAA,aAAY5C,GAmDxC6C,EAAiB/T,IAAAA,SAAc,kBAjDP,WAC1B,IACMgU,EADc,IAAIC,gBAAgBC,SAASC,QACXC,IAAI,sBACpCC,EAAwBhO,EAAsB6K,GAEpD,IAAK8C,EACD,MAAO,CACH,CACIM,MAAMC,EAAAA,EAAAA,UAAS,WACf3T,MAAOoF,EAAAA,wBAAwBI,QAC/BoO,WAAYH,IAA0BrO,EAAAA,wBAAwBI,SAElE,CACIkO,MAAMC,EAAAA,EAAAA,UAAS,eACf3T,MAAOoF,EAAAA,wBAAwBC,YAC/BuO,WAAYH,IAA0BrO,EAAAA,wBAAwBC,aAElE,CACIqO,MAAMC,EAAAA,EAAAA,UAAS,gBACf3T,MAAOoF,EAAAA,wBAAwBG,aAC/BqO,WAAYH,IAA0BrO,EAAAA,wBAAwBG,eAK1E,IAAMsO,EAA0C,gCAAtBT,EACpBU,EAA2C,iCAAtBV,EAmB3B,MAjBuB,CACnB,CACIM,MAAMC,EAAAA,EAAAA,UAAS,WACf3T,MAAOoF,EAAAA,wBAAwBI,QAC/BoO,YAAaC,IAAsBC,GAEvC,CACIJ,MAAMC,EAAAA,EAAAA,UAAS,eACf3T,MAAOoF,EAAAA,wBAAwBC,YAC/BuO,WAAYC,GAEhB,CACIH,MAAMC,EAAAA,EAAAA,UAAS,gBACf3T,MAAOoF,EAAAA,wBAAwBG,aAC/BqO,WAAYE,GAIxB,CAG2CC,EAAuB,GAAE,CAACd,IAYnEe,EAAAC,EATkD7U,IAAAA,UAAe,WAAM,IAAA8U,EAE/DC,EAAiBC,eAAe3N,QAAQ,yBAC9C,OAAI0N,GAAkBnX,OAAO0J,OAAOtB,EAAAA,yBAAyBrB,SAASoQ,GAC3DA,GAIwC,QAA5CD,EAAAf,EAAekB,MAAK,SAAA3Q,GAAI,OAAIA,EAAKkQ,UAAU,WAAC,IAAAM,OAAA,EAA5CA,EAA8ClU,QAAS,SAClE,IAAE,GATKwQ,EAAmBwD,EAAA,GAAEM,EAAoBN,EAAA,GAU1CO,GAA2BrB,EAAAA,EAAAA,aAAY1C,GACvCgE,GAAoB,CACtB,CAAEd,MAAMC,EAAAA,EAAAA,UAAS,oBAAqB3T,MAAO,oBAC7C,CAAE0T,KAAM,KAAM1T,MAAO,MACrB,CAAE0T,KAAM,KAAM1T,MAAO,MACrB,CAAE0T,KAAM,KAAM1T,MAAO,MACrB,CAAE0T,KAAM,KAAM1T,MAAO,MACrB,CAAE0T,KAAM,KAAM1T,MAAO,OAEgEyU,GAAAR,EAA1C7U,IAAAA,SAAeoV,GAAkB,GAAGxU,OAAM,GAAlFqQ,GAAgBoE,GAAA,GAAEC,GAAkBD,GAAA,GACrCE,IAAwBzB,EAAAA,EAAAA,aAAY7C,IACpCuE,GAA0BpE,IAAwB2C,EAAe,GAAGnT,MACpE6U,GAAyBrE,IAAwB2C,EAAe,GAAGnT,MACnE8U,GAAsB3B,EACvB4B,QAAO,SAAA7P,GAAa,MAA4B,iBAAxBA,EAAclF,QAA6BoS,CAAqB,IACxF7N,KAAI,SAAAyQ,GAAc,MAAQ,CAAEtB,KAAjBsB,EAAJtB,KAA2B1T,MAAhBgV,EAALhV,MAA4B,IACxCiV,GAA4B3E,aAAgB,EAAhBA,EAAkByE,QAAO,SAAAG,GAAuB,IAApBrW,EAAaqW,EAAbrW,cAC1D,OAAIA,IACIgW,IAA+B1P,EAAAA,EAAAA,sBAAqBtG,EAAcqG,eAAiB,IACnF0P,IAEItP,EAAAA,EAAAA,uBAAsBzG,EAAcqG,iBACnC,GAAAxC,QAAGyS,EAAAA,EAAAA,yBAAwBvU,OAAO/B,EAAciF,cAAa,OAAQuM,KACjEA,GAAiBtM,SAAS,QAGlCoB,EAAAA,EAAAA,sBAAqBtG,EAAcqG,eAAiB,OACpDI,EAAAA,EAAAA,uBAAsBzG,EAAcqG,eAIjD,IACMkQ,GAvOqB,SAC3BH,EACAJ,EACAD,GAEA,IAAIjE,EAEJ,GAAIkE,EAAwB,CACxB,IAAIQ,EAAY,EACZ9U,EAAS,EACT+U,EAAY,EACZC,EAAY,EACZ7N,EAAW,EAEfuN,EAA0BO,SAAQ,SAAAC,GAI9B,GAHAH,GAAa1U,OAAO6U,EAAc5W,cAAcyW,WAChDC,GAAa3U,OAAO6U,EAAc5W,cAAc0W,WAChD7N,GAAY9G,OAAO6U,EAAc/N,UAC7B+N,EAAc5W,cAAe,KAAA6W,EAAAC,EACvBC,EAAS,CACXL,UAAgD,QAAvCG,EAAED,EAAc5W,cAAc0W,iBAAS,IAAAG,EAAAA,EAAI,EACpDJ,UAAgD,QAAvCK,EAAEF,EAAc5W,cAAcyW,iBAAS,IAAAK,EAAAA,EAAI,GAExDpV,IAAUsV,EAAAA,EAAAA,gBAAeD,GAErBH,EAAc5W,cAAciX,eAC5BT,GAAaI,EAAc5W,cAAciX,aAAaT,WAAa,EAE3E,CACJ,IACA1E,EAAS,CACL9R,cAAe,CACX0B,OAAAA,EACA+U,UAAAA,EACAC,UAAAA,GAEJ7N,SAAAA,GAGA2N,EAAY,GACR1E,EAAO9R,gBACP8R,EAAO9R,cAAciX,aAAe,CAChCT,UAAAA,GAGhB,MAAO,GAAIT,EAAyB,CAChC,IAAIU,EAAY,EACZC,EAAY,EACZQ,EAAc,EACdxV,EAAS,EAEb0U,SAAAA,EAA2BO,SAAQ,SAAA5W,GAAuB,IAAAoX,EAAAC,EAApBpX,EAAaD,EAAbC,cAClCyW,GAAa1U,OAAO/B,EAAcyW,WAClCC,GAAa3U,OAAO/B,EAAc0W,WACL,QAA7BS,EAAInX,EAAcqX,mBAAW,IAAAF,GAAa,QAAbC,EAAzBD,EAA2BD,mBAAW,IAAAE,GAAtCA,EAAwCE,eACxCJ,GAAelX,EAAcqX,YAAYH,YAAYI,cACrDtX,IACA0B,IAAUsV,EAAAA,EAAAA,gBAAehX,GAEjC,IACA8R,EAAS,CACL9R,cAAe,CACXyW,UAAAA,EACAC,UAAAA,EACAhV,OAAAA,EACA2V,YAAa,CACTH,YAAa,CACTI,aAAcJ,KAI1BrO,SAAU4N,EAElB,KAAO,CACH,IAAI1N,EAAa,EACbF,EAAW,EACX0O,EAAc,EACdzO,EAAS,EAEbsN,SAAAA,EAA2BO,SAAQ,SAAAC,GAC/B7N,IAAe6N,EAAc7N,WAC7BF,GAAY9G,OAAO6U,EAAc/N,UACjC0O,GAAexV,OAAO6U,EAAcW,aACpCzO,GAAU/G,OAAO6U,EAAc9N,OACnC,IACAgJ,EAAS,CACL/I,WAAAA,EACAF,SAAAA,EACA0O,YAAAA,EACAzO,OAAAA,EAER,CACA,OAAOgJ,CACX,CA0I6C0F,CACrCpB,GACAJ,GACAD,IAGJxV,IAAAA,WAAgB,WAMZ6S,GAEJ,GAAG,IAEH7S,IAAAA,WAAgB,WACZ,IAAM+U,EAAiBC,eAAe3N,QAAQ,yBAI1CwM,GAA6BA,EAA0BrN,OAAS0K,EAAiB1K,QAG7DuO,GACpBC,eAAekC,WAAW,yBAI9B,IAAMC,EAAyBnC,eAAe3N,QAAQ,yBACtD,IAAK8P,IAA2BvZ,OAAO0J,OAAOtB,EAAAA,yBAAyBrB,SAASwS,GAAyB,CACrG,IAAMrR,EAAgBO,EAAsB6K,EAAkBE,GAC1DtL,IAAkBsL,GAClB8D,EAAqBpP,EAE7B,CAEJ,GAAG,CAAC+N,EAA2B3C,EAAkB2E,GAA0BrP,SAE3ExG,IAAAA,WAAgB,WACRmV,GACA3D,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,oBACRkB,UAAW,UACXC,aAAc,sBACdC,kBAAmBR,GAI/B,GAAG,CAACA,IAEJpR,IAAAA,WAAgB,WACRuV,IACA/D,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,qBACRkB,UAAW,UACXC,aAAc,sBACdE,mBAAoBZ,IAIhC,GAAG,CAACA,KAGJ,IAAMmG,GAA2B,SAACxW,GAC9BsU,EAAqBtU,GACrBoU,eAAe7N,QAAQ,wBAAyBvG,EACpD,EAEA,GAAI+R,EAAO,OAAO3S,IAAAA,cAAA,SAAI2S,GAEtB,IAsBMxB,GArBEsE,IAA0B3V,ETzFmB,SAAHuX,GAAA,IAClDrW,EAAQqW,EAARrW,SACA+G,EAAasP,EAAbtP,cACA1G,EAAWgW,EAAXhW,YACAuR,EAAeyE,EAAfzE,gBACA9S,EAAWuX,EAAXvX,YACAZ,EAASmY,EAATnY,UAAS,MACgC,CACzC,CACIiN,MAAOjN,GAAYqV,EAAAA,EAAAA,UAAS,QAAU,GACtC+C,UAAW,OACXC,kBAAmB,SAAFC,GAAiD,IAA5CjH,EAAOiH,EAAPjH,QAClB,OADoCiH,EAATvW,WACLsT,EAAAA,EAAAA,UAAS,SAG3BvU,IAAAA,cAACyX,EAAmB,CAAChI,IAAKc,EAAQ9C,GAAIpL,QAASkO,EAAQ9Q,cAAegD,wBAAwB,GAEtG,GAEJ,CACI0J,OAAOoI,EAAAA,EAAAA,UAAS,cAChB+C,UAAW,aACXC,kBAAmB,SAAFG,GAAA,IAAKnH,EAAOmH,EAAPnH,QAAO,OACzBA,EAAQ9Q,eAAiB8Q,EAAQ9Q,cAAcgF,WAAa,IAAHnB,OAAOiN,EAAQ9Q,cAAcgF,YAAe,EAAE,GAE/G,CACI0H,OAAOoI,EAAAA,EAAAA,UAAS,YAChB+C,UAAW,WACXC,kBAAmB,SAAFI,GAAA,IAAAC,EAAKrH,EAAOoH,EAAPpH,QAAO,OACzBvQ,IAAAA,cAAC6X,EAAe,CAAC7W,UAAU8W,EAAAA,EAAAA,wBAA4C,QAAtBF,EAACrH,EAAQ9Q,qBAAa,IAAAmY,OAAA,EAArBA,EAAuB5W,WAAa,GAG9F,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,iBAChB+C,UAAW,YACXC,kBAAmB,SAAFQ,GAAsC,IAAjCxH,EAAOwH,EAAPxH,QAClB,GAAIA,EAAQ9Q,cAAe,CACvB,IAAsFuY,GAAxCzH,EAAQ9Q,cAAciX,cAAgB,CAAC,GAA7ET,UAAWgC,OAAkB,IAAAD,EAAG,EAACA,EACzC,OAAOhY,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQwP,EAAQ9Q,cAAcyW,UAAY+B,EAAoBjX,SAAUA,GAC1F,CACA,MAAO,EACX,GAEJ,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,oBAChB+C,UAAW,eACXC,kBAAmB,SAAFW,GAAsC,IAAjC3H,EAAO2H,EAAP3H,QAClB,OAAKA,EAAQ9Q,eAAkB8Q,EAAQ9Q,cAAcsE,YACjDwM,EAAQ9Q,cAAciX,aACf1W,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQwP,EAAQ9Q,cAAciX,aAAaT,UAAWjV,SAAUA,IAFV,GAK5E,GAEJ,CACImL,MAAOnM,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,UACnCoH,UAAW,WACXC,kBAAmB,SAAFY,GAAA,IAAKC,EAAUD,EAAVC,WAAU,OAA0BpY,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQqX,EAAYpX,SAAUA,GAAY,GAE/G,CACImL,MAAOnM,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,4BAA4BmI,WAAY,CAACrY,IAAAA,cAAA,MAAIyP,IAAK,OACrF6H,UAAW,cACXC,kBAAmB,SAAFe,GAAiD,IAAAC,EAA5ChI,EAAO+H,EAAP/H,QAClB,GADoC+H,EAATrX,UAEvB,MAAO,GAGX,IAAAuX,GAAwD,QAArBD,EAAAhI,EAAQ9Q,qBAAa,IAAA8Y,OAAA,EAArBA,EAAuBzB,cAAe,CAAC,EAAlEH,EAAW6B,EAAX7B,YAAa8B,EAASD,EAATC,UACrB,OACIzY,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,WACK2W,SAAAA,EAAaI,aACV/W,IAAAA,cAACyB,EAAAA,MAAK,CAACiX,UAAQ,EAAC3X,OAAQ4V,EAAYI,aAAc/V,SAAUA,IAE5D,KAGRhB,IAAAA,cAAA,WACKyY,SAAAA,EAAW1B,aACR/W,IAAAA,cAACyB,EAAAA,MAAK,CAACiX,UAAQ,EAAC3X,OAAQ0X,EAAU1B,aAAc/V,SAAUA,IAE1D,KAKpB,GAEJ,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,kBAChB+C,UAAW,YACXC,kBAAmB,SAAFoB,GAAiD,IAA5CpI,EAAOoI,EAAPpI,QAClB,GADoCoI,EAAT1X,UAEvB,MAAO,GAGX,IAAKsP,EAAQ9Q,gBAAkB8Q,EAAQ9Q,cAAc0W,UAAW,MAAO,IAEvE,IAAMyC,GAAenC,EAAAA,EAAAA,gBAAelG,EAAQ9Q,eAC5C,OACIO,IAAAA,cAAA,OACIsB,UAAWC,IAAW,4BAA6B,CAC/C,sCAAuCqX,EAAe,EACtD,sCAAuCA,EAAe,KAG1D5Y,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQwP,EAAQ9Q,cAAc0W,UAAWnV,SAAUA,IAC1DhB,IAAAA,cAAC4B,EAAAA,eAAc,CAACN,UAAU,sCAAsCV,MAAOgY,IAGnF,GAEJ,CACIzM,MAAOjN,EACHc,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,wBAAwBmI,WAAY,CAACrY,IAAAA,cAAA,MAAIyP,IAAK,OAE1EzP,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,sBAEhCoH,UAAW,SACXC,kBAAmB,SAAFsB,GAAsC,IAAjCtI,EAAOsI,EAAPtI,QAClB,IAAKA,EAAQ9Q,gBAAkB8Q,EAAQ9Q,cAAc0B,OAAQ,OAAO,KACpE,IAAMyX,GAAenC,EAAAA,EAAAA,gBAAelG,EAAQ9Q,eAE5C,OACIO,IAAAA,cAAA,OACIsB,UAAWC,IAAW,8BAA+B,CACjD,wCAAyCqX,EAAe,EACxD,wCAAyCA,EAAe,KAG5D5Y,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQW,KAAKC,IAAIiX,GAAe5X,SAAUA,IACjDhB,IAAAA,cAAC4B,EAAAA,eAAc,CAACN,UAAU,wCAAwCV,MAAOgY,IAGrF,GAEJ,CACIzM,OAAOoI,EAAAA,EAAAA,UAAS,UAChB+C,UAAW,SACXC,kBAAmB,SAAFuB,GAAiD,IAA5CvI,EAAOuI,EAAPvI,QAClB,GADoCuI,EAAT7X,UAEvB,OAAOjB,IAAAA,cAAA,OAAKsB,UAAU,+BAG1B,IAAQ7B,EAAkB8Q,EAAlB9Q,cAEAyB,GADS0R,EAAgBnT,EAAcsC,cACL,CAAC,GAAnCb,kBAER,OACIlB,IAAAA,cAAA,OAAKsB,UAAU,8BACXtB,IAAAA,cAAC6B,EAAAA,aAAakX,uBAAsB,CAChCtZ,cAAeA,EACfc,cAAeA,EAAAA,cACfW,kBAAmBA,EACnB6G,cAAeA,EACf1G,YAAaA,EACbvB,YAAaA,IAI7B,GAEP,CSxEkBkZ,CAA0C,CAC7ChY,SAAAA,EACA+G,cAAAA,EACA1G,YAAAA,EACAuR,gBAAAA,EACA9S,YAAAA,EACAZ,UAAAA,IAGJsW,GTiE8C,SAAHyD,GAAA,IACnDjY,EAAQiY,EAARjY,SACAK,EAAW4X,EAAX5X,YACAuR,EAAeqG,EAAfrG,gBACA1T,EAAS+Z,EAAT/Z,UAAS,MACiC,CAC1C,CACIiN,MAAOjN,GAAYqV,EAAAA,EAAAA,UAAS,QAAU,GACtC+C,UAAW,OACXC,kBAAmB,SAAF2B,GAAiD,IAA5C3I,EAAO2I,EAAP3I,QAClB,OADoC2I,EAATjY,WACLsT,EAAAA,EAAAA,UAAS,SAG3BvU,IAAAA,cAACyX,EAAmB,CAChBhI,IAAKc,EAAQ9C,GACbpL,QAASkO,EAAQ9Q,cACjBgD,wBAAwB,EACxBF,yBAAyB,GAGrC,GAEJ,CACI4J,OAAOoI,EAAAA,EAAAA,UAAS,eAChB+C,UAAW,cACXC,kBAAmB,SAAF4B,GAAA,IAAK5I,EAAO4I,EAAP5I,QAAO,OACzBA,EAAQ9Q,eAAiB8Q,EAAQ9Q,cAAciF,YAAW,GAAApB,QACjDyS,EAAAA,EAAAA,yBAAwBxF,EAAQ9Q,cAAciF,aAAY,KAC7D,EAAE,GAEhB,CACIyH,OAAOoI,EAAAA,EAAAA,UAAS,YAChB+C,UAAW,WACXC,kBAAmB,SAAF6B,GAAA,IAAAC,EAAK9I,EAAO6I,EAAP7I,QAAO,OACzBvQ,IAAAA,cAAC6X,EAAe,CAAC7W,UAAU8W,EAAAA,EAAAA,wBAA4C,QAAtBuB,EAAC9I,EAAQ9Q,qBAAa,IAAA4Z,OAAA,EAArBA,EAAuBrY,WAAa,GAG9F,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,SAChB+C,UAAWpY,EAAY,YAAc,WACrCqY,kBAAmB,SAAF+B,GAAsC,IAAjC/I,EAAO+I,EAAP/I,QAClB,OAAIA,EAAQ9Q,cACDO,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQwP,EAAQ9Q,cAAcyW,UAAWlV,SAAUA,IAE9D,EACX,GAEJ,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,eAChB+C,UAAW,cACXC,kBAAmB,SAAFgC,GAAsC,IAAAC,EAC3C7C,IAAqC,QAArB6C,EADCD,EAAPhJ,QACc9Q,qBAAa,IAAA+Z,OAAA,EAArBA,EAAuB1C,cAAe,CAAC,GAAvDH,YACR,OACI3W,IAAAA,cAAA,WACK2W,SAAAA,EAAaI,aACV/W,IAAAA,cAACyB,EAAAA,MAAK,CAACiX,UAAQ,EAAC3X,OAAQ4V,EAAYI,aAAc/V,SAAUA,IAE5D,IAIhB,GAEJ,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,kBAChB+C,UAAW,YACXC,kBAAmB,SAAFkC,GAAsC,IAAjClJ,EAAOkJ,EAAPlJ,QAClB,IAAKA,EAAQ9Q,gBAAkB8Q,EAAQ9Q,cAAc0W,UAAW,MAAO,IAEvE,IAAMyC,GAAenC,EAAAA,EAAAA,gBAAelG,EAAQ9Q,eAC5C,OACIO,IAAAA,cAAA,OACIsB,UAAWC,IAAW,4BAA6B,CAC/C,sCAAuCqX,EAAe,EACtD,sCAAuCA,EAAe,KAG1D5Y,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQwP,EAAQ9Q,cAAc0W,UAAWnV,SAAUA,IAC1DhB,IAAAA,cAAC4B,EAAAA,eAAc,CAACN,UAAU,sCAAsCV,MAAOgY,IAGnF,GAEJ,CACIzM,OAAOoI,EAAAA,EAAAA,UAAS,qBAChB+C,UAAW,SACXC,kBAAmB,SAAFmC,GAAsC,IAAjCnJ,EAAOmJ,EAAPnJ,QAClB,IAAKA,EAAQ9Q,gBAAkB8Q,EAAQ9Q,cAAc0B,OAAQ,OAAO,KACpE,IAAMyX,GAAenC,EAAAA,EAAAA,gBAAelG,EAAQ9Q,eAE5C,OACIO,IAAAA,cAAA,OACIsB,UAAWC,IAAW,8BAA+B,CACjD,wCAAyCqX,EAAe,EACxD,wCAAyCA,EAAe,KAG5D5Y,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQW,KAAKC,IAAIiX,GAAe5X,SAAUA,IACjDhB,IAAAA,cAAC4B,EAAAA,eAAc,CAACN,UAAU,wCAAwCV,MAAOgY,IAGrF,GAEJ,CACIzM,OAAOoI,EAAAA,EAAAA,UAAS,UAChB+C,UAAW,SACXC,kBAAmB,SAAFoC,GAAiD,IAA5CpJ,EAAOoJ,EAAPpJ,QAClB,GADoCoJ,EAAT1Y,UAEvB,OAAOjB,IAAAA,cAAA,OAAKsB,UAAU,+BAG1B,IAAQ7B,EAAkB8Q,EAAlB9Q,cAEAyB,GADS0R,EAAgBnT,EAAcsC,cACL,CAAC,GAAnCb,kBAER,OACIlB,IAAAA,cAAA,OAAKsB,UAAU,8BACXtB,IAAAA,cAAC4Z,EAAAA,iBAAgB,CACbna,cAAeA,EACfyB,kBAAmBA,EACnBX,cAAeA,EAAAA,cACfc,YAAaA,IAI7B,GAEP,CS/LkBwY,CAA2C,CAC9C7Y,SAAAA,EACAK,YAAAA,EACAuR,gBAAAA,EACA1T,UAAAA,ITnM+B,SAAC8B,EAAkB9B,GAAkB,MAAK,CACrF,CACIuQ,IAAK,OACLtD,MAAOjN,GAAYqV,EAAAA,EAAAA,UAAS,QAAU,GACtC+C,UAAW,OACXC,kBAAmB,SAAFuC,GAAwE,IAAnEvJ,EAAOuJ,EAAPvJ,QAAStP,EAAS6Y,EAAT7Y,UAAW8Y,EAAUD,EAAVC,WAAYC,EAASF,EAATE,UAClD,OAAI/Y,GAAkBsT,EAAAA,EAAAA,UAAS,SAG3BvU,IAAAA,cAACyX,EAAmB,CAChBhI,IAAKc,EAAQ9C,GACbpL,QAASkO,EAAQ9Q,cACjB0C,wBAAyB4X,GAAcC,GAGnD,GAEJ,CACI7N,OAAOoI,EAAAA,EAAAA,UAAS,WAChB+C,UAAW,aAEf,CACInL,OAAOoI,EAAAA,EAAAA,UAAS,YAChB+C,UAAW,WACXC,kBAAmB,SAAF0C,GAAA,IAAAC,EAAK3J,EAAO0J,EAAP1J,QAAO,OACzBvQ,IAAAA,cAAC6X,EAAe,CAAC7W,UAAU8W,EAAAA,EAAAA,wBAA4C,QAAtBoC,EAAC3J,EAAQ9Q,qBAAa,IAAAya,OAAA,EAArBA,EAAuBlZ,WAAa,GAG9F,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,SAChB+C,UAAW,WACXC,kBAAmB,SAAF4C,GAAA,IAAK/B,EAAU+B,EAAV/B,WAAU,OAA0BpY,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQqX,EAAYpX,SAAUA,GAAY,GAE/G,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,oBAChB+C,UAAW,SACX8C,aAAc,SAAFC,GAAA,IAAKlO,EAAKkO,EAALlO,MAAO4N,EAAUM,EAAVN,WAAU,OAAqB/Z,IAAAA,cAAA,YAAO+Z,GAAaxF,EAAAA,EAAAA,UAAS,UAAYpI,EAAa,EAC7GoL,kBAAmB,SAAF+C,GAA8D,IAAAC,EAAzDnC,EAAUkC,EAAVlC,WAAY7H,EAAO+J,EAAP/J,QAASwJ,EAAUO,EAAVP,WACjCS,EAAqBpC,EAAapY,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQqX,EAAYpX,SAAUA,IAAehB,IAAAA,cAAA,YAAM,KAClG,OAAO+Z,EAA4B,QAAlBQ,EAAGhK,EAAQkK,eAAO,IAAAF,OAAA,EAAfA,EAAiBG,QAAQ,GAAKF,CACtD,GAEJ,CACIrO,OAAOoI,EAAAA,EAAAA,UAAS,qBAChB+C,UAAW,SACXC,kBAAmB,SAAFoD,GAAsC,IAAjCpK,EAAOoK,EAAPpK,QAClBqK,EAAuCrK,QAAAA,EAAW,CAAC,EAA3CyG,EAAW4D,EAAX5D,YAAavX,EAAamb,EAAbnb,cACrB,GAAKuX,GAA+B,IAAhBA,GAAsBvX,SAAAA,EAAe0B,QAAoC,KAA1B1B,aAAa,EAAbA,EAAe0B,QAAlF,CACA,IAAMA,EAAS6V,QAAAA,EAAevX,EAAc0B,OAE5C,OACInB,IAAAA,cAAA,OACIsB,UAAWC,IAAW,8BAA+B,CACjD,wCAAyCJ,EAAS,EAClD,wCAAyCA,EAAS,KAGtDnB,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQW,KAAKC,IAAIR,GAASH,SAAUA,IAC3ChB,IAAAA,cAAC4B,EAAAA,eAAc,CAACN,UAAU,wCAAwCV,MAAOO,IAXqB,CAc1G,GAEJ,CACIgL,OAAOoI,EAAAA,EAAAA,UAAS,kBAChB+C,UAAW,aACXC,kBAAmB,SAAFsD,GAA6D,IAAxDzC,EAAUyC,EAAVzC,WAAY7H,EAAOsK,EAAPtK,QAAStP,EAAS4Z,EAAT5Z,UACvC6Z,EAAuCvK,QAAAA,EAAW,CAAC,EAA3CyG,EAAW8D,EAAX9D,YAAavX,EAAaqb,EAAbrb,cACf0B,EAAS6V,QAAAA,EAAevX,EAAc0B,OAE5C,OACInB,IAAAA,cAAC+a,EAAc,CACXha,QAASqX,EACTpX,SAAUA,EACVvB,cAAe8Q,EAAQ9Q,cACvByB,kBAAmBqP,EAAQrP,kBAC3BD,UAAWA,EACXE,OAAQA,GAGpB,GAEJ,CACIgL,OAAOoI,EAAAA,EAAAA,UAAS,kBAChB+C,UAAW,KACXC,kBAAmB,SAAFyD,GAAA,IAAKzK,EAAOyK,EAAPzK,QAAO,OACzBvQ,IAAAA,cAACib,EAAoB,CAACxb,cAAe8Q,EAAQ9Q,eAAiB,GAGzE,CS6Gcyb,CAAgCla,EAAU9B,GAK/C0I,GAAc,CAAC,EACrBuJ,GAAQiF,SAAQ,SAAA7X,GACZqJ,GAAYrJ,EAAE+Y,WAA0B/Y,CAC5C,IAEA,IAwBQ4c,GACA7J,GAbF8J,GAAe,CACjBnK,iBAAAA,GACAC,iBAAkB2E,GAClB/G,eAAAA,EACAsC,oBAAAA,EACApQ,SAAAA,EACAjB,WAAAA,EACAsR,kBAnBoC,SAAAgK,GAAI,OACxCrb,IAAAA,cAACuH,EAAiB+B,EAAA,GACV+R,EAAI,CACRzT,YAAaA,GACb9H,YAAaA,IAAegI,EAAAA,EAAAA,YAC5BC,cAAeA,EACf1G,YAAaA,GACTP,EACA6S,GACN,EAWFpC,OAAQyE,IA0BZ,OACIhW,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACkT,EAAoB,MACQ,IAA5BhC,EAAiB1K,SACbtH,EACGc,IAAAA,cAAA,OACIsB,UACIkU,GACM,wCACA,qDAGVxV,IAAAA,cAAA,OAAKsB,UAAU,4DACXtB,IAAAA,cAACsb,EAAAA,SAAQ,CACLC,oBAAkB,EAClBzK,KAAK,iBACL0K,KAAM9F,GACN9U,MAAOwQ,EACPqK,SAAU,SAAAld,GAAC,OAAI6Y,GAAyB7Y,EAAEmd,OAAO9a,MAAM,KAG9D4U,KAA4BxC,GACzBhT,IAAAA,cAAA,OAAKsB,UAAU,yDACXtB,IAAAA,cAACsb,EAAAA,SAAQ,CACLC,oBAAkB,EAClBzK,KAAK,oBACL0K,KAAMpG,GACNxU,MAAOqQ,GACPwK,SAAU,SAAAld,GAAC,OAAI+W,GAAmB/W,EAAEmd,OAAO9a,MAAM,MAMjEZ,IAAAA,cAAA,OACIsB,UACIkU,GACM,gDACA,6DAGVxV,IAAAA,cAAC2b,EAAAA,aAAY,CACTra,UAAU,kEACVsa,WAAYlG,GACZ9U,MAAOwQ,EACPyK,0BAA0B,EAC1BJ,SAAU,SAACld,GAAuE,OAC9E6Y,GAAyB7Y,EAAEmd,OAAO9a,MAAM,IAG/C4U,KAA4BxC,GACzBhT,IAAAA,cAAC2b,EAAAA,aAAY,CACTra,UAAU,gEACVsa,WAAYxG,GACZxU,MAAOqQ,GACP4K,0BAA0B,EAC1BJ,SAAU,SAACld,GAAuE,OAC9E+W,GAAmB/W,EAAEmd,OAAO9a,MAAM,OA/E1Dua,GAAY,iBACZ7J,GAAWpS,EAAY,GAAK,EAE5BsW,IACA2F,GAAY,4CACZ7J,GAAWpS,EAAY,GAAK,GACrBuW,KACP0F,GAAY,2CACZ7J,GAAWpS,EAAY,GAAK,GAI5Bc,IAAAA,cAACgR,EAAkB1H,EAAA,CACfhI,UAAW6Z,GACXhK,QAASA,GACTxB,SAA+C,IAArCkG,GAA0BrP,OACpC8K,SAAUA,IACN8J,MAuEpB,IAEA,SAAeU,EAAAA,EAAAA,YAAWvJ,+lCCpenB,IAAMwJ,GAAc,SAAHvc,GAAgF,IAA1EiO,EAAEjO,EAAFiO,GAAInM,EAAS9B,EAAT8B,UAAW0a,EAAcxc,EAAdwc,eAAgBpb,EAAKpB,EAALoB,MAAO+I,EAAKnK,EAALmK,MAAO8R,EAAQjc,EAARic,SACvE,OACIzb,IAAAA,cAAA,SACIic,QAASxO,EACTnM,UAAWC,IAAW,kCAAmCD,EAAW,CAChE,4CAA6C0a,IAAmBpb,IAEpEsb,QAAS,WAAF,OAAQT,EAAS,CAAE9R,MAAAA,EAAO/I,MAAAA,GAAQ,GAEzCZ,IAAAA,cAAA,SAAOsB,UAAU,wCAAwCmM,GAAIA,EAAInJ,KAAK,QAAQ1D,MAAOA,IACrFZ,IAAAA,cAAA,QACIsB,UAAWC,IAAW,yCAA0C,CAC5D,mDAAoDya,IAAmBpb,MAG/EZ,IAAAA,cAACiF,EAAAA,KAAI,CACDkX,GAAG,IACH3X,MAAM,YACNL,KAAK,KACLiY,YAAY,QACZlX,OAAQ8W,IAAmBpb,EAAQ,OAAS,UAE3C+I,GAIjB,EACM0S,GAAa,SAebC,GAA0Btc,IAAAA,MAC5B,SAAAyI,GAQgC,IAAA8T,EAP5BC,EAAgB/T,EAAhB+T,iBACAnJ,EAAa5K,EAAb4K,cACAoJ,EAAahU,EAAbgU,cACAhB,EAAQhT,EAARgT,SACAjI,EAAe/K,EAAf+K,gBACAjE,EAAI9G,EAAJ8G,KACAmN,EAAEjU,EAAFiU,GAEMC,EAAaH,IAAoBC,aAAa,EAAbA,EAAexH,MAAK,SAAA2H,GAAK,MAAoB,aAAhBA,EAAMhc,KAAoB,KAEKgU,EAAAC,GAAtE7U,IAAAA,SAAeuP,GAAOzH,EAAAA,EAAAA,UAASyH,GAAMsN,OAAO,mBAAgBvP,GAAU,GAA5FwP,EAASlI,EAAA,GAAEmI,EAAOnI,EAAA,GACkES,EAAAR,GAAlE7U,IAAAA,SAAe0c,GAAK5U,EAAAA,EAAAA,UAAS4U,GAAIG,OAAO,mBAAgBvP,GAAU,GAApF0P,EAAO3H,EAAA,GAAE4H,EAAK5H,EAAA,GAC6B6H,EAAArI,GAArB7U,IAAAA,UAAe,GAAM,GAA3Cmd,EAAOD,EAAA,GAAEE,EAASF,EAAA,GAEmDG,EAAAxI,GAA1B7U,IAAAA,SAAe2c,GAAW,GAArEW,EAAkBD,EAAA,GAAEE,EAAmBF,EAAA,GACgCG,EAAA3I,GAA1B7U,IAAAA,SAAe2c,GAAW,GAAvEc,EAAmBD,EAAA,GAAEE,EAAoBF,EAAA,GAC1CG,GAAQ7V,EAAAA,EAAAA,YAAW+U,OAAO,cAE1Be,EAAkB,SAACC,EAAuCC,GAC5D,IAAMC,EAAWF,EAAqBG,SACtCvC,EACI,CACIlM,KACIuO,GAAYC,GACNjW,EAAAA,EAAAA,YAAWmW,QAAQ,OAAOC,SAASH,EAAU,OAAOI,IAAI,EAAG,UAC3D7Q,EACVoP,IAAI5U,EAAAA,EAAAA,YAAWsW,MAAM,OACrBC,UAAU,GAEd,CACI1B,WAAYkB,GAGxB,EAsBMS,EAAiB,WApBO,IACpBP,EACAQ,EAEAC,EAiBFf,SAAAA,EAAqBvB,QACrB0B,EAAgBH,IACTA,aAAmB,EAAnBA,EAAqB7c,SAAUyb,KAtBpC0B,EAAWjB,GAAaE,GAAWW,EACnCY,EAASvB,GAAWW,EAEpBa,EAAiB5gB,OAAOkM,OAAO2T,EAAwC,CACzE9T,MAAO,GAAFrG,QAAKwE,EAAAA,EAAAA,UAASiW,GAAUlB,OAAO,eAAc,OAAAvZ,QAAMwE,EAAAA,EAAAA,UAASyW,GAAQ1B,OAAO,kBAGpFpB,EACI,CACIlM,MAAMzH,EAAAA,EAAAA,UAASiW,GAAUE,QAAQ,OAAOE,IAAI,EAAG,KAC/CzB,IAAI5U,EAAAA,EAAAA,UAASyW,GAAQH,MAAM,OAC3BC,UAAU,GAEd,CACI1B,WAAY6B,KAWpBjB,EAAoBE,GACpBL,GAAU,EACd,EAaMqB,EAAa,SAAClgB,EAA8BkR,GAAgB,IAAAiP,EAAAC,EAC9DjB,EAAqB,CAAE9c,MAAOyb,KAElB,SAAR5M,GAAgBsN,EAAgB,QAAT2B,EAACngB,EAAEmd,cAAM,IAAAgD,OAAA,EAARA,EAAU9d,OAC1B,OAAR6O,GAAcwN,EAAc,QAAT0B,EAACpgB,EAAEmd,cAAM,IAAAiD,OAAA,EAARA,EAAU/d,MACtC,EAyBMge,EAAoB,SAACC,GACvBnB,GACIjB,aAAa,EAAbA,EAAexH,MAAK,SAAA2H,GAAK,OAAIiC,GAAejC,EAAMhc,QAAUie,EAAYje,KAAK,MAAKie,EAE1F,EAOA,OACI7e,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKsB,UAAU,2EACXtB,IAAAA,cAAC8e,EAAAA,WAAU,CACPrR,GAAG,oBACH4F,cAAeA,QAAAA,EAAiB,GAChC0L,cAAc,EACd3c,KAAM,WAAF,OAAQpC,IAAAA,cAACkE,EAAAA,KAAI,CAAC9B,KAAK,qBAAqBd,UAAU,eAAgB,EACtE4a,QAbG,WACfwB,EAAqBJ,GACrBF,GAAU,EACd,EAWgB5J,gBAAiBA,EACjB5S,MAAgC,QAA3B2b,EAAEe,aAAkB,EAAlBA,EAAoB3T,aAAK,IAAA4S,EAAAA,EAAI,MAG5Cvc,IAAAA,cAACgf,EAAAA,aAAY,CACTC,kBAAkB,aAClB9S,OAAOoI,EAAAA,EAAAA,UAAS,0BAChB2K,QAAS/B,EACTgC,oBAAkB,EAClBC,QAAS,WAAF,OAAQhC,GAAU,EAAM,EAC/BiC,sBAAsB,OACtBrN,OApDJhS,IAAAA,cAAA,OAAKsB,UAAU,qCACXtB,IAAAA,cAACsf,EAAAA,OAAM,CACHhe,UAAU,4CACVgT,MAAMC,EAAAA,EAAAA,UAAS,UACf2H,QAAS,WAAF,OAAQkB,GAAU,EAAM,EAC/BmC,YAAU,EACVC,WAAS,EACTC,OAAK,IAETzf,IAAAA,cAACsf,EAAAA,OAAM,CACHhe,UAAU,wCACVgT,MAAMC,EAAAA,EAAAA,UAAS,MACf2H,QAASoC,EACTiB,YAAU,EACVG,SAAO,EACPD,OAAK,MAuCTzf,IAAAA,cAAA,OAAKsB,UAAU,4BACXtB,IAAAA,cAAA,OAAKsB,UAAU,yCACVmb,aAAa,EAAbA,EAAetX,KAAI,SAAA6Y,GAAQ,OACxBhe,IAAAA,cAAC+b,GAAW,CACRtO,GAAE,oCAAAnK,OAAsC0a,EAASpd,OACjD6O,IAAKuO,EAASpd,MACdA,MAAOod,EAASpd,MAChB+I,MAAOqU,EAASrU,MAChBqS,eAAgByB,aAAmB,EAAnBA,EAAqB7c,MACrC6a,SAAUmD,GACZ,KAGV5e,IAAAA,cAAA,OAAKsB,UAAU,oCACXtB,IAAAA,cAAC+b,GAAW,CACRtO,GAAI,yCACJnM,UAAU,yCACVV,MAAOyb,GACP1S,OAAO4K,EAAAA,EAAAA,UAAS,UAChByH,eAAgByB,aAAmB,EAAnBA,EAAqB7c,MACrC6a,SAAUmD,IAGd5e,IAAAA,cAAA,OAAKsB,UAAU,+CACXtB,IAAAA,cAAC2f,EAAAA,WAAU,CACPre,UAAU,yDACVse,aAAarL,EAAAA,EAAAA,UAAS,cACtB3T,MAAOkc,QAAAA,EAAa,GACpB+C,SAAU7C,GAAWW,EACrBlC,SAAU,SAACld,GAA4B,OAAKkgB,EAAWlgB,EAAG,OAAO,IAErEyB,IAAAA,cAAC2f,EAAAA,WAAU,CACPre,UAAU,uDACVse,aAAarL,EAAAA,EAAAA,UAAS,YACtB3T,MAAOoc,QAAAA,EAAW,GAClB6C,SAAUlC,EACVmC,SAAUhD,EACVrB,SAAU,SAACld,GAA4B,OAAKkgB,EAAWlgB,EAAG,KAAK,MAI3EyB,IAAAA,cAACsf,EAAAA,OAAM,CACHhe,UAAU,0CACVgT,MAAMC,EAAAA,EAAAA,UAAS,iBACf2H,QAtHA,WAChB,IAAMsC,EAAiB,CACnBR,SAAU,EACVrU,OAAO4K,EAAAA,EAAAA,UAAS,UAEpBqJ,EAAgBY,GAAgB,GAChCjB,EAAoBiB,GACpBd,EAAqBc,GACrBpB,GAAU,EACd,EA8GoBmC,YAAU,EACVQ,UAAQ,EACRN,OAAK,MAM7B,IAGJnD,GAAwB0D,YAAc,0BACtC,YC9OA,SAXiB,SAAHxgB,GAAA,IAAM0c,EAAO1c,EAAP0c,QAAS+D,EAASzgB,EAATygB,UAAWtW,EAAKnK,EAALmK,MAAK,OACzC3J,IAAAA,cAAA,MACIsB,UAAWC,IAAW,CAClB,mDAAoD0e,IAExD/D,QAASA,GAERvS,EACA,ECiBT,SAViB,SAAHnK,GAAA,IAAM0gB,EAAK1gB,EAAL0gB,MAAO3Q,EAAI/P,EAAJ+P,KAAMmN,EAAEld,EAAFkd,GAAE,OAC/B1c,IAAAA,cAAA,MAAIsB,UAAU,yCACT4e,EAAM/a,KAAI,SAAAiL,GACP,IAAQ4N,EAA6B5N,EAA7B4N,SAAUrU,EAAmByG,EAAnBzG,MAAOuS,EAAY9L,EAAZ8L,QACnB+D,EAXD,SAAC1Q,EAAqBmN,EAAYyD,GAC/C,OAAa,IAATA,GACOrY,EAAAA,EAAAA,YAAWsW,MAAM,OAAOgC,SAAW1D,GAAe,OAATnN,EAE7C7N,KAAK2e,KAAK3D,EAAK,OAAShb,KAAK2e,KAAK7e,OAAO+N,GAAQ,SAAW4Q,CACvE,CAM8BG,CAAS/Q,EAAMmN,EAAIsB,GACrC,OAAOhe,IAAAA,cAACugB,GAAQ,CAAC9Q,IAAKuO,EAAUiC,UAAWA,EAAWtW,MAAOA,EAAOuS,QAASA,GACjF,IACC,ECpBT,SAJqB,SAAH1c,GAAA,IAAM0c,EAAO1c,EAAP0c,QAAO,OAC3Blc,IAAAA,cAACkE,EAAAA,KAAI,CAACgY,QAASA,EAAS9Z,KAAK,qBAAqBd,UAAU,cAAc2N,YAAY,oBAAqB,iuCCiB/G,IAAMuR,GAAyBC,KAAyD,CACpFC,OAAQ,WAAF,OAAQ,kKAAuE,EACrFC,QAAS,WAAF,OAAQ,IAAI,EACnBC,OAAM,SAACC,EAAQ/f,GACX,IAAMggB,EAAYD,EAAM,QACxB,OAAO7gB,IAAAA,cAAC8gB,EAAchgB,EAC1B,IAGEigB,IAAoBxhB,EAAAA,EAAAA,WAAS,SAACuB,GAChC,IAAQ2R,GAAO9S,EAAAA,EAAAA,KAAP8S,GACAY,EAAmCZ,EAAnCY,cAAeG,EAAoBf,EAApBe,gBACfiI,EAAuB3a,EAAvB2a,SAAUiB,EAAa5b,EAAb4b,GAAInN,EAASzO,EAATyO,KACdrQ,EAAckC,IAAdlC,UAC0C0V,EAAAC,GAArB7U,IAAAA,UAAe,GAAM,GAA3CghB,EAAOpM,EAAA,GAAEqM,EAASrM,EAAA,GAC6BS,EAAAR,GAArB7U,IAAAA,UAAe,GAAM,GAA/CkhB,EAAS7L,EAAA,GAAE8L,EAAW9L,EAAA,GACtBmG,EA+BL3G,GA/Ba7U,IAAAA,SAAe,CAC1B,CACIY,MAAO,WACP+I,OAAO4K,EAAAA,EAAAA,UAAS,YAChB2H,QAAS,WAAF,OAAQ0B,GAAiB,EAChCI,SAAU,GAEd,CACIpd,MAAO,cACP+I,OAAO4K,EAAAA,EAAAA,UAAS,eAChB2H,QAAS,WAAF,OAAQ0B,EAAgB,EAAE,EACjCI,SAAU,GAEd,CACIpd,MAAO,eACP+I,OAAO4K,EAAAA,EAAAA,UAAS,gBAChB2H,QAAS,WAAF,OAAQ0B,EAAgB,GAAG,EAClCI,SAAU,IAEd,CACIpd,MAAO,eACP+I,OAAO4K,EAAAA,EAAAA,UAAS,gBAChB2H,QAAS,WAAF,OAAQ0B,EAAgB,GAAG,EAClCI,SAAU,IAEd,CACIpd,MAAO,eACP+I,OAAO4K,EAAAA,EAAAA,UAAS,gBAChB2H,QAAS,WAAF,OAAQ0B,EAAgB,GAAG,EAClCI,SAAU,MAEhB,GA/BS,GAiCLoD,EAAcphB,IAAAA,OAA+B,MAI7C4d,EAAkB,SAACG,GACrBsD,IACA5F,EAAS,CACLlM,KAAMwO,GAAWjW,EAAAA,EAAAA,YAAWmW,QAAQ,OAAOC,SAASH,EAAU,OAAOI,IAAI,EAAG,UAAO7Q,EACnFoP,IAAI5U,EAAAA,EAAAA,YAAWsW,MAAM,OACrBC,UAAU,GAElB,EAYMgD,EAAe,WACjBF,GAAY,GACZF,GAAU,EACd,EAEMK,EAAe,SAAC/iB,GACR,SAANA,GACA4iB,GAAY,GAEN,OAAN5iB,GACA0iB,GAAU,EAElB,GAEAM,EAAAA,EAAAA,mBACIH,GACA,SAACI,GACGA,SAAAA,EAAOC,kBACPD,SAAAA,EAAOE,iBACPL,GACJ,IAzCyB,SAACG,GAAiB,IAAAG,EAAA,QAAyB,QAApBA,EAACP,EAAYra,eAAO,IAAA4a,GAAnBA,EAAqBC,SAASJ,EAAM9F,QAAe,IA6CxG,IA5BUmG,EA2CV,OAAI3iB,EAEIc,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKyN,GAAG,+BAA+BnM,UAAU,oCAC7CtB,IAAAA,cAAC8e,EAAAA,WAAU,CACPrR,GAAG,yBACH4F,cAAeA,EACf0L,cAAY,EACZa,aAAarL,EAAAA,EAAAA,UAAS,aACtBnS,KAAM0f,GACN5F,QAAS,WAAF,OAAQoF,EAAa,OAAO,EACnC9N,gBAAiBA,EACjB5S,OAvDVihB,GAAO/Z,EAAAA,EAAAA,UAASyH,GACfA,EAAOsS,EAAKhF,OAAO,gBAAkB,MAwDhC7c,IAAAA,cAAC8e,EAAAA,WAAU,CACPrR,GAAG,uBACH4F,cAAeA,EACf0L,cAAY,EACZa,aAAarL,EAAAA,EAAAA,UAAS,WACtBnS,KAAM0f,GACN5F,QAAS,WAAF,OAAQoF,EAAa,KAAK,EACjC9N,gBAAiBA,EACjB5S,MAvEG,WACnB,IAAMihB,GAAO/Z,EAAAA,EAAAA,UAAS4U,GACtB,OAAiC,KAA1BqF,EAAAA,EAAAA,iBAAgBF,IAActN,EAAAA,EAAAA,UAAS,SAAWsN,EAAKhF,OAAO,eACzE,CAoE2BmF,MAGdhB,GACGhhB,IAAAA,cAAA,OAAKsB,UAAU,qBAAqB2gB,IAAKb,GACrCphB,IAAAA,cAACkiB,GAAQ,CAAC3S,KAAMA,EAAMmN,GAAIA,EAAIwD,MAAO1E,IACrCxb,IAAAA,cAACwgB,GAAsB,CAAC5f,MAAO8b,EAAIjB,SA3CrC,SAACoG,GACfpG,EAAS,CAAEiB,IAAI5U,EAAAA,EAAAA,UAAS+Z,GAAMzD,MAAM,QACxC,EAyC4E+D,iBAlCjD,SAACN,GACxB,OAAOA,EAAKzB,OAAS7Q,GAAQsS,EAAKzB,QAAStY,EAAAA,EAAAA,YAAWsW,MAAM,OAAOgC,MACvE,KAmCac,GACGlhB,IAAAA,cAAA,OAAKsB,UAAU,qBAAqB2gB,IAAKb,GACrCphB,IAAAA,cAACkiB,GAAQ,CAAC3S,KAAMA,EAAMmN,GAAIA,EAAIwD,MAAO1E,IACrCxb,IAAAA,cAACwgB,GAAsB,CACnB5f,MAAO2O,EACPkM,SA/CJ,SAACoG,GACjBpG,EAAS,CAAElM,MAAMzH,EAAAA,EAAAA,UAAS+Z,KAC1BR,GACJ,EA6CwBc,iBAvCK,SAACN,GAAmB,OAAKA,EAAKzB,OAAS1D,CAAE,MAgDlE1c,IAAAA,cAACsc,GAAuBhT,GAAA,CACpBmT,cAAejB,EACfhI,gBAAiBA,EACjBH,cAAeA,GACXvS,GAGhB,IAEAigB,GAAkBf,YAAc,oBAEhC,MC/LA,GD+LehgB,IAAAA,KAAW+gB,IExL1B,IAAMqB,GAAc,SAAH5iB,GAAoE,IAA9D6iB,EAAgB7iB,EAAhB6iB,iBAAkB/gB,EAAS9B,EAAT8B,UAAWghB,EAAY9iB,EAAZ8iB,aAChD,OACItiB,IAAAA,cAAA,OAAKsB,UAAWC,IAAW,gBAAiBD,GAAY,cAAY,2BAC/D+gB,GACGriB,IAAAA,cAAA,OACIsB,UAAWC,IAAW,uBAAwB,CAC1C,kCAAmC+gB,KAGtCD,GAKrB,4CCGa/R,GAAe,SAACC,GAAwC,IAAAgS,EAAAC,EAAAC,EAC3D3c,EAAsE,QAAzDyc,GAAG1f,EAAAA,EAAAA,0BAAyB0N,aAAO,EAAPA,EAAS5N,kBAAoB,IAAA4f,GAC9D,QAD8DC,EAAtDD,EAChBpf,gBAAQ,IAAAqf,OAD8D,EAAtDA,EACN5V,WACX8V,cACL,OAAOhS,EAAAA,EAAAA,2BAA0B5K,GAC3B,CACI8K,UACI5Q,IAAAA,cAACiQ,EAAAA,SAAQ,CACLC,kBAAkB,oHAClB5I,OAAQ,CACJuJ,gBAAqF,QAAtE4R,GAAE/R,EAAAA,EAAAA,2BAA0B5K,UAA0C,IAAA2c,OAAA,EAApEA,EAAsE3R,UAKvGC,EAAAA,EAAAA,iBAAgBvP,OAAO+O,EAAQxO,aACzC,EAEM4gB,IAAcpjB,EAAAA,EAAAA,WAAS,SAAAC,GAAsC,IAAnCsP,EAActP,EAAdsP,eACpB0D,GAAW7S,EAAAA,EAAAA,KAAX6S,OACAoQ,GAAiBC,EAAAA,GAAAA,KAAjBD,aACA5hB,EAA2BwR,EAA3BxR,SAAU8hB,EAAiBtQ,EAAjBsQ,aAEdC,EAYAH,EAZAG,KACAC,EAWAJ,EAXAI,UACAC,EAUAL,EAVAK,QACAtQ,EASAiQ,EATAjQ,MACAhD,EAQAiT,EARAjT,SACA5P,EAOA6iB,EAPA7iB,WACAmjB,EAMAN,EANAM,iBACAC,EAKAP,EALAO,aACAtU,EAIA+T,EAJA/T,kBACAgE,EAGA+P,EAHA/P,QACAuQ,EAEAR,EAFAQ,UACA7R,EACAqR,EADArR,OAEE8R,GAAiBvP,EAAAA,EAAAA,aAAYkP,GAC7BM,GAAexP,EAAAA,EAAAA,aAAYmP,GACzB/jB,EAAckC,IAAdlC,UA6BR,GA3BAc,IAAAA,WAAgB,WASZ,OARA6S,IACArB,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,qBACRkB,UAAW,UACXC,aAAc,mBACd4R,mBAAmBC,EAAAA,EAAAA,YAAWR,EAAW,cAAc,GACvDS,iBAAiBD,EAAAA,EAAAA,YAAWP,EAAS,cAAc,KAEhD,WACHG,GACJ,CAEJ,GAAG,IAEHpjB,IAAAA,WAAgB,gBACWsN,IAAnB+V,QAAiD/V,IAAjBgW,GAChC9R,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,eACRkB,UAAW,UACXC,aAAc,mBACd4R,mBAAmBC,EAAAA,EAAAA,YAAWR,EAAW,cAAc,GACvDS,iBAAiBD,EAAAA,EAAAA,YAAWP,EAAS,cAAc,IAG/D,GAAG,CAACA,EAASD,IAETrQ,EAAO,OAAO3S,IAAAA,cAAA,SAAI2S,GAEtB,IAAM0P,EAAmBriB,IAAAA,cAAC+gB,GAAiB,CAACtF,SAAUyH,EAAkB3T,KAAMyT,EAAWtG,GAAIuG,IAEvF9R,EjBgBmC,SAACnQ,EAAkB0iB,EAAqBxkB,GAAkB,MAAK,CACxG,CACIuQ,IAAK,OACLtD,MAAOjN,GAAYqV,EAAAA,EAAAA,UAAS,QAAU,GACtC+C,UAAW,cACXC,kBAAmB,SAAFoM,GAAiD,IAA5CpT,EAAOoT,EAAPpT,QAClB,OADoCoT,EAAT1iB,WAEhBsT,EAAAA,EAAAA,UAAS,mDAAoD,CAAEqP,WAAYF,IAE/E1jB,IAAAA,cAACyX,EAAmB,CAAChI,IAAKc,EAAQsT,eAAgBxhB,QAASkO,GACtE,GAEJ,CACIpE,OAAOoI,EAAAA,EAAAA,UAAS,WAChB+C,UAAW,kBAEf,CACInL,OAAOoI,EAAAA,EAAAA,UAAS,YAChB+C,UAAW,WACXC,kBAAmB,SAAFuM,GAAc,OAAAA,EAAT7iB,UACN,GAAKjB,IAAAA,cAAC6X,EAAe,CAAC7W,UAAU8W,EAAAA,EAAAA,wBAAuB9W,IAAa,GAExF,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,YAChB+C,UAAW,gBACXC,kBAAmB,SAAFwM,GAAoD,IAA/C3L,EAAU2L,EAAV3L,WAClB,OADuC2L,EAAT9iB,UACR,GACfjB,IAAAA,cAAA,YAAOoY,EAAW,OAC7B,GAEJ,CACIjM,OAAOoI,EAAAA,EAAAA,UAAS,SAChB+C,UAAW,YACXC,kBAAmB,SAAFyM,GAAoD,IAA/C5L,EAAU4L,EAAV5L,WAClB,OADuC4L,EAAT/iB,UACR,GAEfjB,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQqX,EAAYpX,SAAUA,GAChD,GAEJ,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,aAChB+C,UAAW,YACX8C,aAAc,SAAF6J,GAAA,IAAK9X,EAAK8X,EAAL9X,MAAK,OAAqBnM,IAAAA,cAAA,YAAOmM,EAAa,EAC/DoL,kBAAmB,SAAF2M,GAAoD,IAA/C9L,EAAU8L,EAAV9L,WAClB,OADuC8L,EAATjjB,UACR,GACfjB,IAAAA,cAAA,YAAOoY,EAAW,OAC7B,GAEJ,CACIjM,OAAOoI,EAAAA,EAAAA,UAAS,kBAChB+C,UAAW,aACXC,kBAAmB,SAAF4M,GAAoD,IAA/C/L,EAAU+L,EAAV/L,WAClB,OADuC+L,EAATljB,UACR,GAEfjB,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQqX,EAAYpX,SAAUA,GAChD,GAEJ,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,qBAChB+C,UAAW,cACXC,kBAAmB,SAAF6M,GAAA,IAAKhM,EAAUgM,EAAVhM,WAAU,OAC5BpY,IAAAA,cAACqkB,EAAc,CAACzjB,MAAOwX,GACnBpY,IAAAA,cAACyB,EAAAA,MAAK,CAACiX,UAAQ,EAAC3X,OAAQqX,EAAWvX,QAAQ,QAAS,IAAKG,SAAUA,IACtD,GAG5B,CiBlFmDsjB,CAA8BtjB,EAAU+hB,EAAKvc,OAAQtH,GAE/F0I,EAAchK,OAAO2mB,YAAYpT,EAAQhM,KAAI,SAAAkD,GAAM,MAAI,CAACA,EAAOiP,UAAWjP,EAAO,KAoEvF,OACIrI,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACoiB,GAAW,CAACC,iBAAkBA,EAAkB/gB,UAAU,yBAC1DwhB,EACG9iB,IAAAA,cAAC+P,EAAoB,CAAChQ,YAAU,IAEhCC,IAAAA,cAACA,IAAAA,SAAc,KACM,IAAhB+iB,EAAKvc,QAAgBmJ,EAClB3P,IAAAA,cAAC+P,EAAoB,CACjBhQ,WAAYA,EACZ8O,kBAAmBA,EACnBc,SAAUA,EACVD,wBAAyBM,EACzBlB,eAAgBA,EAChBC,mBAAmBwF,EAAAA,EAAAA,UAAS,qCAC5BvF,0BAA0BuF,EAAAA,EAAAA,UACtB,kEAIRvU,IAAAA,cAAA,OAAKsB,UAAU,oBACVpC,EACGc,IAAAA,cAAC8R,EAAAA,UAAS,CACNxQ,UAAU,eACV2Q,YAAa8Q,EACb5R,QAASA,EACTqT,SAAUrB,EACVnR,OAAQT,EACRjB,aAAcA,GACd4B,WAAY,WAAF,OAAQ,EAAE,EACpBC,eAAgBxD,GAEhB3O,IAAAA,cAAC+P,EAAoB,CAAChQ,WAAYA,KAGtCC,IAAAA,cAACmI,EAAAA,SAAQ,CACL7G,UAAU,eACV2Q,YAAa8Q,EACb3Q,YArGgD,SAAH3J,GAA2B,IAArBf,EAAGe,EAAHf,IAAKzG,EAASwH,EAATxH,UAC9E8H,EAAgBrB,aAAG,EAAHA,EAAKqB,cACrB0b,EAA0B1b,EAAgBA,EAAc,GAAG2Z,cAAgB3Z,EAAc2b,MAAM,GAAK,GACpGC,EAAqB5b,EAAgB,kBAAHzF,OAAqByF,EAAcxE,eAAkB,GAE7F,OAAItD,EAEIjB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACVV,IAAKA,EACLW,OAAQT,EAAYhD,YACpB3D,UAAWA,IAEfjB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACV9G,UAAU,8BACVoG,IAAKA,EACLW,OAAQT,EAAYoP,YACpB/V,UAAWA,KAOvBjB,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYhD,cAC7C5E,IAAAA,cAAA,OAAKsB,UAAWC,IAAW,gBAAiBojB,IACxC3kB,IAAAA,cAAA,OAAKsB,UAAWC,IAAW,4BAA6B,GAAF+B,OAAKqhB,EAAkB,mBAC7E3kB,IAAAA,cAAA,QAAMsB,UAAS,GAAAgC,OAAKqhB,EAAkB,YAAYF,KAG1DzkB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYic,iBAC7C7jB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACV9G,UAAU,8BACVoG,IAAKA,EACLW,OAAQT,EAAY5G,YAG5BhB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYe,gBAC7C3I,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACV9G,UAAU,8BACVoG,IAAKA,EACLW,OAAQT,EAAYsO,aAG5BlW,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYgd,YAC7C5kB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACV9G,UAAU,8BACVoG,IAAKA,EACLW,OAAQT,EAAYid,cAG5B7kB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYoP,eAI7D,EAyCgC1G,aAAcA,GACdkU,SAAUrB,EACVnR,OAAQT,EACRc,QAAS,GAETrS,IAAAA,cAAC+P,EAAoB,CAAChQ,WAAYA,OAStE,IAEA,UAAe+b,EAAAA,EAAAA,YAAW6G,ICvN1B,IAAMmC,IAAkBvlB,EAAAA,EAAAA,WAAS,WAC7B,IAAQwlB,GAAclC,EAAAA,GAAAA,KAAdkC,UACAngB,EAA0EmgB,EAA1EngB,YAAaoe,EAA6D+B,EAA7D/B,UAAWC,EAAkD8B,EAAlD9B,QAAS+B,EAAyCD,EAAzCC,mBAAoB9B,EAAqB6B,EAArB7B,iBAEvD+B,EAAc,CAChB,CACI3Q,MAAMC,EAAAA,EAAAA,UAAS,oBACf3T,MAAO,OAEX,CACI0T,MAAMC,EAAAA,EAAAA,UAAS,OACf3T,MAAO,OAEX,CACI0T,MAAMC,EAAAA,EAAAA,UAAS,QACf3T,MAAO,QAEX,CACI0T,MAAMC,EAAAA,EAAAA,UAAS,WACf3T,MAAO,WAEX,CACI0T,MAAMC,EAAAA,EAAAA,UAAS,cACf3T,MAAO,cAEX,CACI0T,MAAMC,EAAAA,EAAAA,UAAS,YACf3T,MAAO,aAIf,OACIZ,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAC+gB,GAAiB,CAACtF,SAAUyH,EAAkB3T,KAAMyT,EAAWtG,GAAIuG,IACpEjjB,IAAAA,cAACklB,EAAAA,eAAc,CACXC,2BAA2B,wCAC3BF,YAAaA,EACbD,mBAAoBA,EACpBI,wBAAyBxgB,IAIzC,IAEA,qPCFA,IAAMygB,GAAmB,SAAH7lB,GAA8D,IAAA8lB,EAAA9lB,EAAxDqE,QAAAA,OAAO,IAAAyhB,EAAG,GAAEA,EAAAC,EAAA/lB,EAAEoF,YAAAA,OAAW,IAAA2gB,EAAG,GAAEA,EAChDC,EAAqB,8BAA8BC,KAAK5hB,EAAQ6hB,MAAM,OAAO,IAC7EC,EAAeH,aAAkB,EAAlBA,EAAqB,GACpCI,EAAwB,8BAA8BH,KAAK5hB,EAAQ6hB,MAAM,OAAO,IAChFG,EAAkBD,aAAqB,EAArBA,EAAwB,GAE5CE,EAAW,CAACjiB,GAEhB,GAAI8hB,GAAgBE,EAAiB,CACjC,IAAME,EAAQliB,EAAQ6hB,MAAM,OAC5BI,EAAWC,EAAM5gB,KAAI,SAACmP,EAAM0R,GACxB,OAAOC,EAAAA,EAAAA,uBAAsBD,IAAUD,EAAMvf,OAAS,EAAI,GAAHlD,OAAMgR,EAAI,MAAOA,EAC5E,GACJ,CAEA,OACItU,IAAAA,cAACiF,EAAAA,KAAI,CAACkX,GAAG,MAAMhY,KAAK,KAAK7C,UAAU,8BAA8B4N,MAAM,UAClE4W,EAAS3gB,KAAI,SAACmP,EAAM0R,GACjB,OACIhmB,IAAAA,cAAA,OAAKyP,IAAK6E,GACLA,EACAuR,GAAmBG,IAAUF,EAAStf,OAAS,GAC5CxG,IAAAA,cAACkmB,EAAAA,UAAS,CAACC,UAAWN,EAAiBO,iBAAiB,QAE3DT,GAAgC,eAAhB/gB,GAAgCohB,IAAUF,EAAStf,OAAS,GACzExG,IAAAA,cAACkmB,EAAAA,UAAS,CAACC,UAAWR,EAAcS,iBAAiB,QAIrE,IAGZ,EAEa9V,GAAe,SAACC,GAAqC,IAAA8V,EAC1D7V,EAAkB,CAAC,EACf5L,EACJ2L,EADI3L,YAAa0hB,EACjB/V,EADiB+V,KAAM7Y,EACvB8C,EADuB9C,GAAI8Y,EAC3BhW,EAD2BgW,QAASrd,EACpCqH,EADoCrH,SAAUP,EAC9C4H,EAD8C5H,cAAehG,EAC7D4N,EAD6D5N,UAAW6jB,EACxEjW,EADwEiW,iBAAkBC,EAC1FlW,EAD0FkW,mBAE9F,GAAIhZ,GAAM,CAAC,MAAO,QAAQ9I,SAASC,GAAc,KAAA2d,EAAAC,EACvC1c,EAAmD,QAAtCyc,GAAG1f,EAAAA,EAAAA,0BAAyBF,UAAU,IAAA4f,GAAU,QAAVC,EAAnCD,EAAqCpf,gBAAQ,IAAAqf,OAAV,EAAnCA,EAA+CE,cAC/DjS,GAA4BC,EAAAA,EAAAA,2BAA0B5K,GACtD4gB,GACFC,EAAAA,EAAAA,mBAAkBhkB,EAAWgG,GAAiB6d,MAC7CI,EAAAA,EAAAA,2BAA0BjkB,IACX,SAAhBiC,IACC2hB,EACL/V,EAASC,EACH,CACI5M,QAAS,GACT+M,UACI5Q,IAAAA,cAACiQ,EAAAA,SAAQ,CACLC,kBAAkB,oHAClB5I,OAAQ,CACJuJ,gBAAiBJ,aAAyB,EAAzBA,EAA2BK,UAK5DC,EAAAA,EAAAA,iBAAgBtD,GAClBiZ,IACAlW,EAAS,CACL3M,QAAS,GACT+M,UAAW5Q,IAAAA,cAACiQ,EAAAA,SAAQ,CAACC,kBAAkB,wDAEnD,KAA2B,eAAhBtL,EAEH4L,EADAiW,GAAsBvd,EACb,CACLrF,QAAS,GAAFP,OAAKmjB,EAAkB,KAAAnjB,OAAI4F,IAG7B,CACLrF,QAASyiB,GAGVA,GAAQ,CAAC,UAAW,WAAY,aAAc,OAAQ,WAAW3hB,SAASC,KACjF4L,EAAS,CACL3M,QAASyiB,IASjB,MAJsB,WAAlBO,GAAOrW,IAA6B,QAAV6V,EAAI7V,SAAM,IAAA6V,GAANA,EAAQxiB,UACtC2M,EAAOI,UAAY5Q,IAAAA,cAACqlB,GAAgB,CAACxhB,QAAS2M,EAAO3M,QAASe,YAAaA,KAGxE4L,CACX,EAEMsW,IAAYvnB,EAAAA,EAAAA,WAAS,SAAAkJ,GAAoC,IAAjCqG,EAAcrG,EAAdqG,eAC1BpP,GAA2BC,EAAAA,EAAAA,KAAnB6S,EAAM9S,EAAN8S,OACAuU,EADcrnB,EAANE,OACRmnB,iBACAhC,GAAclC,EAAAA,GAAAA,KAAdkC,UACA/jB,EAAuCwR,EAAvCxR,SAAU8hB,EAA6BtQ,EAA7BsQ,aAAckE,EAAexU,EAAfwU,WAE5BpiB,EAWAmgB,EAXAngB,YACAme,EAUAgC,EAVAhC,KACAC,EASA+B,EATA/B,UACAC,EAQA8B,EARA9B,QACAtQ,EAOAoS,EAPApS,MACAwQ,EAMA4B,EANA5B,aACAtU,EAKAkW,EALAlW,kBACAc,EAIAoV,EAJApV,SACA5P,EAGAglB,EAHAhlB,WACA8S,EAEAkS,EAFAlS,QACAuQ,EACA2B,EADA3B,UAEE6D,GAAmBnT,EAAAA,EAAAA,aAAYlP,GAC/Bye,GAAiBvP,EAAAA,EAAAA,aAAYkP,GAC7BM,GAAexP,EAAAA,EAAAA,aAAYmP,GACzB/jB,EAAckC,IAAdlC,UA2CR,GAzCAc,IAAAA,WAAgB,WAUZ,OATA6S,IACArB,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,qBACRkB,UAAW,UACXC,aAAc,iBACduV,wBAAyBtiB,EACzB2e,mBAAmBC,EAAAA,EAAAA,YAAWR,EAAW,cAAc,GACvDS,iBAAiBD,EAAAA,EAAAA,YAAWP,EAAS,cAAc,KAEhD,WACHG,GACJ,CAEJ,GAAG,IAEHpjB,IAAAA,WAAgB,WACRinB,GACAzV,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,0BACRkB,UAAW,UACXC,aAAc,iBACduV,wBAAyBtiB,GAIrC,GAAG,CAACA,IAEJ5E,IAAAA,WAAgB,gBACWsN,IAAnB+V,QAAiD/V,IAAjBgW,GAChC9R,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,eACRkB,UAAW,UACXC,aAAc,iBACd4R,mBAAmBC,EAAAA,EAAAA,YAAWR,EAAW,cAAc,GACvDS,iBAAiBD,EAAAA,EAAAA,YAAWP,EAAS,cAAc,IAI/D,GAAG,CAACA,EAASD,IAETrQ,EAAO,OAAO3S,IAAAA,cAAA,SAAI2S,GAEtB,IAAMxB,EnBzJsC,SAACnQ,EAAkB9B,GAAkB,MAAK,CACtF,CACIuQ,IAAK,OACLtD,MAAOjN,GAAYqV,EAAAA,EAAAA,UAAS,QAAU,GACtC+C,UAAW,OACXC,kBAAmB,SAAF/X,GAAmD,IAA9C2nB,EAAW3nB,EAAX2nB,YAAa5W,EAAO/Q,EAAP+Q,QACzBnO,EAAO+kB,EAAYC,QAAQ7W,GAAW,iBAAmB,KAC/D,OAAOvQ,IAAAA,cAACyX,EAAmB,CAACrV,KAAMA,EAAMqN,IAAKc,EAAQsT,eAAgBxhB,QAASkO,GAClF,GAEJ,CACIpE,OAAOoI,EAAAA,EAAAA,UAAS,WAChB+C,UAAW,QACXC,kBAAmB,SAAF9O,GAAkD,IAA7C2P,EAAU3P,EAAV2P,WAAY7H,EAAO9H,EAAP8H,QAC9B,OACIvQ,IAAAA,cAACyD,EAAAA,QAAO,CACJG,UAAW,MACXC,SAAS0Q,EAAAA,EAAAA,UAAS,gDAAiD,CAAE8S,OAAQ9W,EAAQ8W,UAEpFjP,EAGb,GAEJ,CACIjM,OAAOoI,EAAAA,EAAAA,UAAS,YAChB+C,UAAW,WACXC,kBAAmB,WAAF,OAAQvX,IAAAA,cAAC6X,EAAe,CAAC7W,UAAU8W,EAAAA,EAAAA,wBAAuB9W,IAAa,GAE5F,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,oBAChB+C,UAAW,OACXC,kBAAmB,SAAF3B,GAAyC,IAApCwC,EAAUxC,EAAVwC,WAClB,OAAOpY,IAAAA,cAAA,YAAOoY,EAAW,OAC7B,GAEJ,CACI3I,IAAK,OACLtD,OAAOoI,EAAAA,EAAAA,UAAS,eAChB+C,UAAW,cACXC,kBAAmB,SAAFzB,GAAA,IA3DCrG,EA2DI2I,EAAUtC,EAAVsC,WAAY+O,EAAWrR,EAAXqR,YAAa5W,EAAOuF,EAAPvF,QAAO,OAClDvQ,IAAAA,cAACsnB,EAAAA,MAAK,CAACC,MA5DO9X,EA4DgB2I,EA5DAjT,EAAIsK,IAA4BtK,EAAG,UA6D3DgiB,EAAYC,QAAQ7W,KAAYgE,EAAAA,EAAAA,UAAS,WAAchE,EAAQC,OAC7D,GAGhB,CACIrE,OAAOoI,EAAAA,EAAAA,UAAS,gBAChB+C,UAAW,SACXC,kBAAmB,SAAFiQ,GAAA,IAAKpP,EAAUoP,EAAVpP,WAAU,OAC5BpY,IAAAA,cAAA,OAAKsB,UAAS,WAAAgC,OAAa3C,EAAgByX,KACvCpY,IAAAA,cAACyB,EAAAA,MAAK,CAACiX,UAAQ,EAAC3X,OAAQqX,EAAWvX,QAAQ,QAAS,IAAKG,SAAUA,IACjE,GAGd,CACImL,OAAOoI,EAAAA,EAAAA,UAAS,WAChB+C,UAAW,UACXC,kBAAmB,SAAFkQ,GAAA,IAAKrP,EAAUqP,EAAVrP,WAAU,OAC5BpY,IAAAA,cAACyB,EAAAA,MAAK,CAACV,OAAQqX,EAAWvX,QAAQ,QAAS,IAAKG,SAAUA,GAAY,GAGjF,CmB2FsD0mB,CAAiC1mB,EAAU9B,GACxF0I,EAAcuJ,EAAQtK,QAAO,SAAC1B,EAAKiL,GAErC,OADAjL,EAAIiL,EAAKkH,WAA0BlH,EAC5BjL,CACX,GAAG,CAAC,GAyCJ,OACInF,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACoiB,GAAW,CACR9gB,UAAU,2BACV+gB,iBAAkBriB,IAAAA,cAAC8kB,GAAe,MAClCxC,cAAY,EAEZ7S,IAAKsX,IAERjE,EACG9iB,IAAAA,cAAC+P,EAAoB,CAAChQ,YAAU,IAEhCC,IAAAA,cAACA,IAAAA,SAAc,KACO,KAAjB+iB,aAAI,EAAJA,EAAMvc,SAAgBmJ,EACnB3P,IAAAA,cAAC+P,EAAoB,CACjBhQ,WAAYA,EACZ8O,kBAAmBA,EACnBc,SAAUA,EACVD,wBAAyBM,EACzBlB,eAAgBA,EAChBC,mBAAmBwF,EAAAA,EAAAA,UAAS,iCAC5BvF,0BAA0BuF,EAAAA,EAAAA,UACtB,kEAIRvU,IAAAA,cAAA,OAAKsB,UAAU,oBACVpC,EACGc,IAAAA,cAAC8R,EAAAA,UAAS,CACNxQ,UAAU,YACV6P,QAASA,EACTgB,eAAgBxD,EAChBsD,YAAa8Q,EACbzS,aAAcA,GACdkU,SAAUrB,EACVgE,YAAa,CACTC,QAAS,SAAChX,GAAyB,OAAK4W,GAA8B,YAAhB5W,EAAKI,MAAoB,IAGnFxQ,IAAAA,cAAC+P,EAAoB,CAAChQ,WAAYA,KAGtCC,IAAAA,cAACmI,EAAAA,SAAQ,CACL7G,UAAU,YACV2Q,YAAa8Q,EACbzS,aAAcA,GACdkU,SAAUrB,EACV/Q,YAtFN,SAAHwD,GAAA,IACnBlO,EAAGkO,EAAHlO,IACAyf,EAAWvR,EAAXuR,YAAW,OAEXnnB,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACVV,IAAKA,EACLW,OAAQT,EAAYxF,KACpB+kB,YAAaA,IAEjBnnB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACVV,IAAKA,EACLW,OAAQT,EAAYhD,YACpBuiB,YAAaA,KAGrBnnB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAY+f,QAC7C3nB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACV9G,UAAU,8BACVoG,IAAKA,EACLW,OAAQT,EAAY5G,YAG5BhB,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYia,OAC7C7hB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CACV9G,UAAU,8BACVoG,IAAKA,EACLW,OAAQT,EAAY7G,UAG5Bf,IAAAA,cAAA,OAAKsB,UAAU,kBACXtB,IAAAA,cAACmI,EAAAA,SAASC,KAAI,CAACV,IAAKA,EAAKW,OAAQT,EAAYggB,WAEpC,EAmDWvV,QAAS,EACT8U,YAAa,CACTC,QAAS,SAAChX,GAAyB,OAAK4W,GAA8B,YAAhB5W,EAAKI,MAAoB,IAGnFxQ,IAAAA,cAAC+P,EAAoB,CAAChQ,WAAYA,OAStE,IC9LA,MCnHA,IACIwS,cAAAA,EACAoQ,YAAAA,GACAmE,WFgTWhL,EAAAA,EAAAA,YAAWgL,IE/StBe,SDgBYtoB,EAAAA,EAAAA,WAAS,SAAAC,GAA6C,IAAAsoB,EAA1CC,EAAOvoB,EAAPuoB,QAAS7T,EAAQ1U,EAAR0U,SAAU8T,EAAMxoB,EAANwoB,OAC3CtoB,GAA+BC,EAAAA,EAAAA,KAAvB6S,EAAM9S,EAAN8S,OAAQ5S,EAAMF,EAANE,OAAQ6S,EAAE/S,EAAF+S,GAEhBwV,EAAgCzV,EAAhCyV,aAAcC,EAAkB1V,EAAlB0V,cACdC,EAAoCvoB,EAApCuoB,gBAAiBC,EAAmBxoB,EAAnBwoB,eACjBC,EAAmF5V,EAAnF4V,mBAAoBC,EAA+D7V,EAA/D6V,mBAAoBC,EAA2C9V,EAA3C8V,wBAAyBC,EAAkB/V,EAAlB+V,cACjEtpB,EAAckC,IAAdlC,UAERc,IAAAA,WAAgB,WAQZ,OAPAwR,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,OACRkB,UAAW,UACXC,aAAcoW,EAAQ7T,SAASuU,SAAS/C,MAAM,KAAK,GACnDgD,YAAa,iBAEjBF,GAAc,GACP,WACHA,GAAc,GACdhX,EAAAA,UAAUC,WAAW,kBAAmB,CACpCjB,OAAQ,QACRkB,UAAW,UACXC,aAAcuC,EAASuU,SAAS/C,MAAM,KAAK,IAEnD,CAEJ,GAAG,IAEH,IAOMiD,EAAe,WACjB,IAAMC,EAAmB,GAYzB,OAVAZ,EAAO5R,SAAQ,SAAAyS,GACXD,EAAQE,KAAK,CACTpjB,QAASmjB,EAAK,QACdzmB,KAAMymB,EAAME,eACZpf,MAAOkf,EAAMG,WACbpoB,MAAOioB,EAAMjY,UACbqY,KAAMJ,EAAMI,MAEpB,IAEOL,CACX,EAEMM,GAAiBC,EAAAA,EAAAA,kBAAiB,CAAEnB,OAAAA,EAAQS,SAAUvU,EAASuU,WAErE,OAAKR,GAAgBC,EACVloB,IAAAA,cAAC6P,EAAAA,QAAO,CAACuZ,eAAa,IAI7BppB,IAAAA,cAACqpB,EAAAA,YAAW,CAACC,WAAYjB,EAAoB/mB,UAAU,uBAAuBioB,QAAQ,wBAClFvpB,IAAAA,cAAA,OAAKsB,UAAU,WACXtB,IAAAA,cAACwpB,EAAAA,YAAW,CAACC,QAAQlV,EAAAA,EAAAA,UAAS,WAAYmV,aAhCjC,WACjB1U,eAAekC,WAAW,yBAC1BkR,EAAeL,EACnB,EA6BkF4B,YAAaxB,GAC9EjpB,EACGc,IAAAA,cAAC4pB,EAAAA,YAAW,CACRC,aAAW,EACXC,aAAc5V,EAASuU,SACvBsB,WAAS,EACTC,eAAa,EACbC,oBAAqB3B,EACrB4B,mBAAoBhB,EAAc,QAAW,EAAIX,EACjD/M,KAAMmN,MAGV3oB,IAAAA,cAACmqB,EAAAA,kBAAiB,CAAC7oB,UAAU,0BAA0B8oB,cAAc,QACjEpqB,IAAAA,cAAC2b,EAAAA,aAAY,CACTra,UAAU,2BACVsa,WAAY+M,IAAexjB,KAAI,SAAAklB,GAAM,IAAAC,EAAA,MAAK,CACtChW,KAAM+V,EAAO1gB,MACb/I,MAAkB,QAAb0pB,EAAED,EAAOpB,YAAI,IAAAqB,EAAAA,EAAI,GACzB,IACD1pB,MAA0B,QAArBknB,EAAEoB,EAAeD,YAAI,IAAAnB,EAAAA,EAAI,GAC9BjM,0BAA0B,EAC1BJ,SAhDF,SAACld,GAAuC,OAAKwpB,EAAQe,KAAKvqB,EAAEmd,OAAO9a,MAAM,EAiDvE+I,MAAO,GACP4gB,sBAAsB,KAEzBrB,aAAc,EAAdA,EAAgBtY,YACb5Q,IAAAA,cAACkpB,EAAetY,UAAS,CAACmY,eAAgBG,EAAeH,oBAQzF,uDEtHA,OAOC,WACA,aAEA,IAAIyB,EAAS,CAAC,EAAEtgB,eAEhB,SAAS3I,IAGR,IAFA,IAAIkpB,EAAU,GAELnsB,EAAI,EAAGA,EAAIyL,UAAUvD,OAAQlI,IAAK,CAC1C,IAAIosB,EAAM3gB,UAAUzL,GAChBosB,IACHD,EAAUE,EAAYF,EAASG,EAAWF,IAE5C,CAEA,OAAOD,CACR,CAEA,SAASG,EAAYF,GACpB,GAAmB,iBAARA,GAAmC,iBAARA,EACrC,OAAOA,EAGR,GAAmB,iBAARA,EACV,MAAO,GAGR,GAAIpb,MAAMub,QAAQH,GACjB,OAAOnpB,EAAW6I,MAAM,KAAMsgB,GAG/B,GAAIA,EAAI9d,WAAahP,OAAOqM,UAAU2C,WAAa8d,EAAI9d,SAASA,WAAWjI,SAAS,iBACnF,OAAO+lB,EAAI9d,WAGZ,IAAI6d,EAAU,GAEd,IAAK,IAAIhb,KAAOib,EACXF,EAAOrgB,KAAKugB,EAAKjb,IAAQib,EAAIjb,KAChCgb,EAAUE,EAAYF,EAAShb,IAIjC,OAAOgb,CACR,CAEA,SAASE,EAAa/pB,EAAOkqB,GAC5B,OAAKA,EAIDlqB,EACIA,EAAQ,IAAMkqB,EAGflqB,EAAQkqB,EAPPlqB,CAQT,CAEqCmqB,EAAOC,SAC3CzpB,EAAWmE,QAAUnE,EACrBwpB,EAAOC,QAAUzpB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIH,CArEA","sources":["webpack://@deriv/reports/../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js","webpack://@deriv/reports/../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js","webpack://@deriv/reports/../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js","webpack://@deriv/reports/./src/Containers/progress-slider-stream.tsx","webpack://@deriv/reports/./src/Helpers/profit-loss.ts","webpack://@deriv/reports/./src/Components/indicative-cell.tsx","webpack://@deriv/reports/./src/Components/market-symbol-icon-row.tsx","webpack://@deriv/reports/./src/Components/profit-loss-cell.tsx","webpack://@deriv/reports/./src/Components/currency-wrapper.tsx","webpack://@deriv/reports/./src/Constants/data-table-constants.tsx","webpack://@deriv/reports/./src/Constants/contract-types.ts","webpack://@deriv/reports/./src/Containers/mobile-row-renderer.tsx","webpack://@deriv/reports/../../node_modules/react-content-loader/dist/react-content-loader.es.js","webpack://@deriv/reports/./src/Components/Elements/ContentLoader/reports-table-row.tsx","webpack://@deriv/reports/./src/Components/empty-trade-history-message.tsx","webpack://@deriv/reports/./src/_common/components/loading.tsx","webpack://@deriv/reports/./src/Components/placeholder-component.tsx","webpack://@deriv/reports/./src/Containers/open-positions-table.tsx","webpack://@deriv/reports/./src/Containers/open-positions.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/composite-calendar-mobile.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/list-item.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/side-list.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/calendar-icon.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/composite-calendar.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/index.ts","webpack://@deriv/reports/./src/Components/reports-meta.tsx","webpack://@deriv/reports/./src/Containers/profit-table.tsx","webpack://@deriv/reports/./src/Components/filter-component.tsx","webpack://@deriv/reports/./src/Containers/statement.tsx","webpack://@deriv/reports/./src/Containers/reports.tsx","webpack://@deriv/reports/./src/Containers/index.ts","webpack://@deriv/reports/../../node_modules/classnames/index.js"],"sourcesContent":["var u = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction f(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction l(e) {\n  if (e.__esModule) return e;\n  var r = e.default;\n  if (typeof r == \"function\") {\n    var t = function o() {\n      return this instanceof o ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\n    };\n    t.prototype = r.prototype;\n  } else t = {};\n  return Object.defineProperty(t, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(o) {\n    var n = Object.getOwnPropertyDescriptor(e, o);\n    Object.defineProperty(t, o, n.get ? n : {\n      enumerable: !0,\n      get: function() {\n        return e[o];\n      }\n    });\n  }), t;\n}\nexport {\n  l as a,\n  u as c,\n  f as g\n};\n","import { useState as d, useLayoutEffect as m, useEffect as u, useRef as l } from \"react\";\nimport { c as a } from \"./_commonjsHelpers-BkfeUUK-.js\";\nvar v = typeof a == \"object\" && a && a.Object === Object && a, E = typeof self == \"object\" && self && self.Object === Object && self;\nv || E || Function(\"return this\")();\nvar f = typeof window < \"u\" ? m : u;\nfunction L(t, s, o, i) {\n  const c = l(s);\n  f(() => {\n    c.current = s;\n  }, [s]), u(() => {\n    const n = window;\n    if (!(n && n.addEventListener))\n      return;\n    const r = (e) => {\n      c.current(e);\n    };\n    return n.addEventListener(t, r, i), () => {\n      n.removeEventListener(t, r, i);\n    };\n  }, [t, o, i]);\n}\nvar h = typeof window > \"u\";\nfunction O(t, {\n  defaultValue: s = !1,\n  initializeWithValue: o = !0\n} = {}) {\n  const i = (e) => h ? s : window.matchMedia(e).matches, [c, n] = d(() => o ? i(t) : s);\n  function r() {\n    n(i(t));\n  }\n  return f(() => {\n    const e = window.matchMedia(t);\n    return r(), e.addListener ? e.addListener(r) : e.addEventListener(\"change\", r), () => {\n      e.removeListener ? e.removeListener(r) : e.removeEventListener(\"change\", r);\n    };\n  }, [t]), c;\n}\nfunction g(t, s, o = \"mousedown\", i = {}) {\n  L(\n    o,\n    (c) => {\n      const n = c.target;\n      if (!n || !n.isConnected)\n        return;\n      (Array.isArray(t) ? t.filter((e) => !!e.current).every((e) => e.current && !e.current.contains(n)) : t.current && !t.current.contains(n)) && s(c);\n    },\n    void 0,\n    i\n  );\n}\nexport {\n  g as a,\n  O as u\n};\n","import { u as t } from \"../index-EY1gwl5O.js\";\nconst d = () => {\n  const i = t(\"(min-width: 1280px)\"), a = t(\"(max-width: 600px)\"), n = t(\n    \"(min-width: 601px) and (max-width: 1279px)\"\n  ), e = t(\n    \"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"\n  ), o = t(\n    \"(max-width: 1279px) and (orientation: landscape)\"\n  );\n  return {\n    /** returns Larger screen tablets [min-width: 1280px] */\n    isDesktop: i,\n    /**  returns Smaller screen tablets [max-width: 600px] */\n    isMobile: a,\n    /** returns Larger screen phones and smaller screen desktop [min-width: 601px and max-width: 1279px] */\n    isTablet: n,\n    /** returns tablet screen with portrait orientation [min-width: 601px and max-width: 1279px and orientation: portrait] */\n    isTabletPortrait: e,\n    /** returns mobile or medium screens in landscape orientation [max-width: 1279px and orientation: landscape] */\n    isMobileOrTabletLandscape: o\n  };\n};\nexport {\n  d as useDevice\n};\n","import React from 'react';\nimport { ProgressSlider } from '@deriv/components';\nimport { getCurrentTick, TContractInfo, getCardLabels } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TProgressSliderStream = {\n    contract_info: Required<TContractInfo>;\n};\n\nconst ProgressSliderStream = observer(({ contract_info }: TProgressSliderStream) => {\n    const { common, portfolio } = useStore();\n    const { server_time } = common;\n    const { is_loading } = portfolio;\n\n    if (!contract_info) {\n        return <div />;\n    }\n    const current_tick = contract_info.tick_count && getCurrentTick(contract_info);\n\n    if (!server_time) return null;\n\n    return (\n        <ProgressSlider\n            current_tick={current_tick}\n            expiry_time={contract_info.date_expiry}\n            getCardLabels={getCardLabels}\n            is_loading={is_loading}\n            server_time={server_time}\n            start_time={contract_info.date_start}\n            ticks_count={contract_info.tick_count}\n        />\n    );\n});\n\nexport default ProgressSliderStream;\n","export const getProfitOrLoss = (value: string) => (+value.replace(/,/g, '') >= 0 ? 'profit' : 'loss');\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ArrowIndicator, Money, ContractCard } from '@deriv/components';\nimport { getCardLabels, TContractInfo } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TIndicativeCell = {\n    amount: number;\n    contract_info: TContractInfo;\n    currency: string;\n    is_footer: boolean;\n    is_sell_requested: boolean;\n    profit: string;\n    status?: string;\n};\n\nconst IndicativeCell = observer((props: TIndicativeCell) => {\n    const { amount, contract_info, currency, is_footer, is_sell_requested, profit } = props;\n    const { portfolio } = useStore();\n    const { isDesktop } = useDevice();\n    const { onClickSell } = portfolio;\n\n    return (\n        <div className='open-positions__indicative'>\n            <div className='open-positions__indicative--amount'>\n                <div\n                    className={classNames({\n                        'dc-contract-card--profit': Number(profit) > 0,\n                        'dc-contract-card--loss': Number(profit) < 0,\n                    })}\n                    data-testid='dt_amount_container'\n                >\n                    <Money amount={Math.abs(amount)} currency={currency} />\n                </div>\n                <ArrowIndicator value={amount} data-testid='dt_arrow_indicator' />\n            </div>\n            {!is_footer && isDesktop && (\n                <ContractCard.Sell\n                    contract_info={contract_info}\n                    is_sell_requested={is_sell_requested}\n                    getCardLabels={getCardLabels}\n                    onClickSell={contract_id => {\n                        if (contract_id) onClickSell(contract_id);\n                    }}\n                />\n            )}\n        </div>\n    );\n});\n\nexport default IndicativeCell;\n","import React from 'react';\nimport { TContractInfo, extractInfoFromShortcode, getMarketName, getTradeTypeName, isHighLow } from '@deriv/shared';\nimport { Icon, Popover, IconTradeTypes } from '@deriv/components';\nimport classNames from 'classnames';\nimport { formatStatementTransaction } from 'Stores/Modules/Statement/Helpers/format-response';\n\ntype TStatementData = ReturnType<typeof formatStatementTransaction>;\n\ntype TMarketSymbolIconRow = {\n    has_full_contract_title?: boolean;\n    icon?: string | null;\n    payload: Partial<TContractInfo | TStatementData>;\n    should_show_multiplier?: boolean;\n    should_show_accumulator?: boolean;\n};\n\nconst MarketSymbolIconRow = ({\n    has_full_contract_title,\n    icon,\n    payload,\n    should_show_accumulator = true,\n    should_show_multiplier = true,\n}: TMarketSymbolIconRow) => {\n    const should_show_category_icon = typeof (payload as TContractInfo).shortcode === 'string';\n    const info_from_shortcode = extractInfoFromShortcode((payload as TContractInfo).shortcode ?? '');\n    const is_high_low = isHighLow({ shortcode_info: info_from_shortcode });\n    const category_label = getTradeTypeName(info_from_shortcode.category, {\n        isHighLow: is_high_low,\n        showButtonName: has_full_contract_title,\n    });\n    const hover_message = `${getTradeTypeName(info_from_shortcode.category, {\n        isHighLow: is_high_low,\n        showMainTitle: true,\n    })} ${category_label}`.trim();\n\n    if (should_show_category_icon && info_from_shortcode) {\n        return (\n            <div\n                className={classNames('market-symbol-icon', {\n                    'market-symbol-icon__full-title': has_full_contract_title,\n                })}\n            >\n                <div className='market-symbol-icon-name'>\n                    <Popover\n                        classNameTarget='market-symbol-icon__popover'\n                        classNameBubble='market-symbol-icon__popover-bubble'\n                        alignment='top'\n                        message={getMarketName(info_from_shortcode.underlying as string)}\n                        is_bubble_hover_enabled\n                        disable_target_icon\n                    >\n                        <Icon\n                            icon={\n                                info_from_shortcode.underlying\n                                    ? `IcUnderlying${info_from_shortcode.underlying}`\n                                    : 'IcUnknown'\n                            }\n                            size={32}\n                        />\n                    </Popover>\n                    {has_full_contract_title && (payload as TContractInfo).display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Popover\n                        classNameTarget='category-type-icon__popover'\n                        classNameBubble='category-type-icon__popover-bubble'\n                        alignment='top'\n                        message={hover_message}\n                        is_bubble_hover_enabled\n                        disable_target_icon\n                    >\n                        <IconTradeTypes\n                            type={\n                                is_high_low\n                                    ? `${(info_from_shortcode.category as string).toLowerCase()}_barrier`\n                                    : (info_from_shortcode.category as string).toLowerCase()\n                            }\n                            color='brand'\n                        />\n                    </Popover>\n                    {has_full_contract_title && category_label}\n                </div>\n                {should_show_multiplier && info_from_shortcode.multiplier && (\n                    <div className='market-symbol-icon__multiplier'>x{info_from_shortcode.multiplier}</div>\n                )}\n                {should_show_accumulator && info_from_shortcode.growth_rate && (\n                    <div className='market-symbol-icon__multiplier'>{+info_from_shortcode.growth_rate * 100}%</div>\n                )}\n            </div>\n        );\n    } else if (\n        'action_type' in payload &&\n        ['deposit', 'hold', 'release', 'withdrawal', 'transfer'].includes(payload.action_type ?? '')\n    ) {\n        return (\n            <div className='market-symbol-icon'>\n                {payload.action_type === 'deposit' && <Icon icon={icon || 'IcCashierDeposit'} size={32} />}\n                {payload.action_type === 'withdrawal' && <Icon icon='IcCashierWithdrawal' size={32} />}\n                {payload.action_type === 'transfer' && <Icon icon='IcAccountTransferColored' size={32} />}\n                {(payload.action_type === 'hold' || payload.action_type === 'release') && (\n                    <Icon icon='IcCashierDp2p' size={32} />\n                )}\n            </div>\n        );\n    } else if (['adjustment'].includes((payload as TStatementData).action_type ?? '')) {\n        return (\n            <div className='market-symbol-icon'>\n                <Icon icon='IcAdjustment' size={32} />\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon' data-testid='dt_unknown_icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nexport default MarketSymbolIconRow;\n","import React from 'react';\nimport { getProfitOrLoss } from '../Helpers/profit-loss';\n\ntype TProfitLossCell = {\n    value: string;\n    children: React.ReactNode;\n};\n\nconst ProfitLossCell = ({ value, children }: TProfitLossCell) => {\n    const status = getProfitOrLoss(value);\n\n    return <span className={`amount--${status}`}>{children}</span>;\n};\n\nexport default ProfitLossCell;\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\ntype TCurrencyWrapper = {\n    currency: string;\n};\n\nconst CurrencyWrapper = ({ currency }: TCurrencyWrapper) => (\n    <div className='currency__wrapper'>\n        <Text color='colored-background' weight='bold' size='xxxs'>\n            {currency}\n        </Text>\n    </div>\n);\n\nexport default CurrencyWrapper;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ArrowIndicator, Label, Money, ContractCard, ContractCardSell, Popover } from '@deriv/components';\nimport { getCurrencyDisplayCode, getTotalProfit, getGrowthRatePercentage, getCardLabels } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport ProgressSliderStream from '../Containers/progress-slider-stream';\nimport { TCellContentProps, THeaderProps } from 'Types';\nimport { getProfitOrLoss } from '../Helpers/profit-loss';\nimport IndicativeCell from '../Components/indicative-cell';\nimport MarketSymbolIconRow from '../Components/market-symbol-icon-row';\nimport ProfitLossCell from '../Components/profit-loss-cell';\nimport CurrencyWrapper from '../Components/currency-wrapper';\nimport { useStore } from '@deriv/stores';\nimport moment from 'moment';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\n\nconst map = {\n    buy: 'success',\n    deposit: 'success',\n    hold: 'warn',\n    release: 'success',\n    sell: 'danger',\n    withdrawal: 'info',\n    default: 'default',\n    adjustment: 'adjustment',\n    transfer: 'transfer',\n} as const;\n\nexport type TKeys = string;\n\nconst getModeFromValue = (key: string) => map[key as keyof typeof map] || map.default;\n\ntype TAccumulatorOpenPositionstemplateProps = Omit<\n    TMultiplierOpenPositionstemplateProps,\n    'onClickCancel' | 'server_time'\n> & {\n    isDesktop: boolean;\n};\n\ntype TMultiplierOpenPositionstemplateProps = Pick<\n    TPortfolioStore,\n    'getPositionById' | 'onClickCancel' | 'onClickSell'\n> & {\n    currency: string;\n    server_time: moment.Moment;\n    isDesktop: boolean;\n};\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency: string, isDesktop: boolean) => [\n    {\n        key: 'icon',\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'icon',\n        renderCellContent: ({ passthrough, row_obj }: TCellContentProps) => {\n            const icon = passthrough.isTopUp(row_obj) ? 'icCashierTopUp' : null;\n            return <MarketSymbolIconRow icon={icon} key={row_obj.transaction_id} payload={row_obj} />;\n        },\n    },\n    {\n        title: localize('Ref. ID'),\n        col_index: 'refid',\n        renderCellContent: ({ cell_value, row_obj }: TCellContentProps) => {\n            return (\n                <Popover\n                    alignment={'top'}\n                    message={localize('Transaction performed by (App ID: {{app_id}})', { app_id: row_obj.app_id })}\n                >\n                    {cell_value}\n                </Popover>\n            );\n        },\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: () => <CurrencyWrapper currency={getCurrencyDisplayCode(currency)} />,\n    },\n    {\n        title: localize('Transaction time'),\n        col_index: 'date',\n        renderCellContent: ({ cell_value }: TCellContentProps) => {\n            return <span>{cell_value} GMT</span>;\n        },\n    },\n    {\n        key: 'mode',\n        title: localize('Transaction'),\n        col_index: 'action_type',\n        renderCellContent: ({ cell_value, passthrough, row_obj }: TCellContentProps) => (\n            <Label mode={getModeFromValue(cell_value)}>\n                {(passthrough.isTopUp(row_obj) && localize('Top up')) || row_obj.action}\n            </Label>\n        ),\n    },\n    {\n        title: localize('Credit/Debit'),\n        col_index: 'amount',\n        renderCellContent: ({ cell_value }: TCellContentProps) => (\n            <div className={`amount--${getProfitOrLoss(cell_value)}`}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </div>\n        ),\n    },\n    {\n        title: localize('Balance'),\n        col_index: 'balance',\n        renderCellContent: ({ cell_value }: TCellContentProps) => (\n            <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n        ),\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency: string, items_count: number, isDesktop: boolean) => [\n    {\n        key: 'icon',\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'action_type',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return localize('Profit/loss on the last {{item_count}} contracts', { item_count: items_count });\n            }\n            return <MarketSymbolIconRow key={row_obj.transaction_id} payload={row_obj} />;\n        },\n    },\n    {\n        title: localize('Ref. ID'),\n        col_index: 'transaction_id',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ is_footer }: TCellContentProps) =>\n            is_footer ? '' : <CurrencyWrapper currency={getCurrencyDisplayCode(currency)} />,\n    },\n    {\n        title: localize('Buy time'),\n        col_index: 'purchase_time',\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n            return <span>{cell_value} GMT</span>;\n        },\n    },\n    {\n        title: localize('Stake'),\n        col_index: 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    },\n    {\n        title: localize('Sell time'),\n        col_index: 'sell_time',\n        renderHeader: ({ title }: THeaderProps) => <span>{title}</span>,\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n            return <span>{cell_value} GMT</span>;\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    },\n    {\n        title: localize('Total profit/loss'),\n        col_index: 'profit_loss',\n        renderCellContent: ({ cell_value }: TCellContentProps) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency: string, isDesktop: boolean) => [\n    {\n        key: 'icon',\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'type',\n        renderCellContent: ({ row_obj, is_footer, is_vanilla, is_turbos }: TCellContentProps) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                    has_full_contract_title={is_vanilla || is_turbos}\n                />\n            );\n        },\n    },\n    {\n        title: localize('Ref. ID'),\n        col_index: 'reference',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <CurrencyWrapper currency={getCurrencyDisplayCode(row_obj.contract_info?.currency)} />\n        ),\n    },\n    {\n        title: localize('Stake'),\n        col_index: 'purchase',\n        renderCellContent: ({ cell_value }: TCellContentProps) => <Money amount={cell_value} currency={currency} />,\n    },\n    {\n        title: localize('Potential payout'),\n        col_index: 'payout',\n        renderHeader: ({ title, is_vanilla }: THeaderProps) => <span>{is_vanilla ? localize('Strike') : title}</span>,\n        renderCellContent: ({ cell_value, row_obj, is_vanilla }: TCellContentProps) => {\n            const non_vanilla_payout = cell_value ? <Money amount={cell_value} currency={currency} /> : <span>-</span>;\n            return is_vanilla ? row_obj.barrier?.toFixed(2) : non_vanilla_payout;\n        },\n    },\n    {\n        title: localize('Total profit/loss'),\n        col_index: 'profit',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            const { profit_loss, contract_info } = row_obj ?? {};\n            if (!profit_loss && profit_loss !== 0 && !contract_info?.profit && contract_info?.profit !== 0) return;\n            const profit = profit_loss ?? contract_info.profit;\n            // eslint-disable-next-line consistent-return\n            return (\n                <div\n                    className={classNames('open-positions__profit-loss', {\n                        'open-positions__profit-loss--negative': profit < 0,\n                        'open-positions__profit-loss--positive': profit > 0,\n                    })}\n                >\n                    <Money amount={Math.abs(profit)} currency={currency} />\n                    <ArrowIndicator className='open-positions__profit-loss--movement' value={profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'indicative',\n        renderCellContent: ({ cell_value, row_obj, is_footer }: TCellContentProps) => {\n            const { profit_loss, contract_info } = row_obj ?? {};\n            const profit = profit_loss ?? contract_info.profit;\n\n            return (\n                <IndicativeCell\n                    amount={+cell_value}\n                    currency={currency}\n                    contract_info={row_obj.contract_info}\n                    is_sell_requested={row_obj.is_sell_requested}\n                    is_footer={is_footer}\n                    profit={profit}\n                />\n            );\n        },\n    },\n    {\n        title: localize('Remaining time'),\n        col_index: 'id',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <ProgressSliderStream contract_info={row_obj.contract_info} />\n        ),\n    },\n];\n\nexport const getMultiplierOpenPositionsColumnsTemplate = ({\n    currency,\n    onClickCancel,\n    onClickSell,\n    getPositionById,\n    server_time,\n    isDesktop,\n}: TMultiplierOpenPositionstemplateProps) => [\n    {\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'type',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow key={row_obj.id} payload={row_obj.contract_info} should_show_multiplier={false} />\n            );\n        },\n    },\n    {\n        title: localize('Multiplier'),\n        col_index: 'multiplier',\n        renderCellContent: ({ row_obj }: TCellContentProps) =>\n            row_obj.contract_info && row_obj.contract_info.multiplier ? `x${row_obj.contract_info.multiplier}` : '',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <CurrencyWrapper currency={getCurrencyDisplayCode(row_obj.contract_info?.currency)} />\n        ),\n    },\n    {\n        title: localize('Contract cost'),\n        col_index: 'buy_price',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (row_obj.contract_info) {\n                const { ask_price: cancellation_price = 0 } = row_obj.contract_info.cancellation || {};\n                return <Money amount={row_obj.contract_info.buy_price - cancellation_price} currency={currency} />;\n            }\n            return '';\n        },\n    },\n    {\n        title: localize('Deal cancel. fee'),\n        col_index: 'cancellation',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.underlying) return '-';\n            if (row_obj.contract_info.cancellation) {\n                return <Money amount={row_obj.contract_info.cancellation.ask_price} currency={currency} />;\n            }\n            return '-';\n        },\n    },\n    {\n        title: <Localize i18n_default_text='Stake' />,\n        col_index: 'purchase',\n        renderCellContent: ({ cell_value }: TCellContentProps) => <Money amount={cell_value} currency={currency} />,\n    },\n    {\n        title: <Localize i18n_default_text='Take profit<0 />Stop loss' components={[<br key={0} />]} />,\n        col_index: 'limit_order',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return '';\n            }\n\n            const { take_profit, stop_loss } = row_obj.contract_info?.limit_order || {};\n            return (\n                <React.Fragment>\n                    <div>\n                        {take_profit?.order_amount ? (\n                            <Money has_sign amount={take_profit.order_amount} currency={currency} />\n                        ) : (\n                            '-'\n                        )}\n                    </div>\n                    <div>\n                        {stop_loss?.order_amount ? (\n                            <Money has_sign amount={stop_loss.order_amount} currency={currency} />\n                        ) : (\n                            '-'\n                        )}\n                    </div>\n                </React.Fragment>\n            );\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'bid_price',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return '';\n            }\n\n            if (!row_obj.contract_info || !row_obj.contract_info.bid_price) return '-';\n\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            return (\n                <div\n                    className={classNames('open-positions__bid_price', {\n                        'open-positions__bid_price--negative': total_profit < 0,\n                        'open-positions__bid_price--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={row_obj.contract_info.bid_price} currency={currency} />\n                    <ArrowIndicator className='open-positions__bid_price--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: isDesktop ? (\n            <Localize i18n_default_text='Total<0 />profit/loss' components={[<br key={0} />]} />\n        ) : (\n            <Localize i18n_default_text='Total profit/loss' />\n        ),\n        col_index: 'profit',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return null;\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            // eslint-disable-next-line consistent-return\n            return (\n                <div\n                    className={classNames('open-positions__profit-loss', {\n                        'open-positions__profit-loss--negative': total_profit < 0,\n                        'open-positions__profit-loss--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={Math.abs(total_profit)} currency={currency} />\n                    <ArrowIndicator className='open-positions__profit-loss--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Action'),\n        col_index: 'action',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return <div className='open-positions__row-action' />;\n            }\n\n            const { contract_info } = row_obj;\n            const position = getPositionById(contract_info.contract_id);\n            const { is_sell_requested } = position || {};\n\n            return (\n                <div className='open-positions__row-action'>\n                    <ContractCard.MultiplierCloseActions\n                        contract_info={contract_info}\n                        getCardLabels={getCardLabels}\n                        is_sell_requested={is_sell_requested}\n                        onClickCancel={onClickCancel}\n                        onClickSell={onClickSell}\n                        server_time={server_time}\n                    />\n                </div>\n            );\n        },\n    },\n];\n\nexport const getAccumulatorOpenPositionsColumnsTemplate = ({\n    currency,\n    onClickSell,\n    getPositionById,\n    isDesktop,\n}: TAccumulatorOpenPositionstemplateProps) => [\n    {\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'type',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                    should_show_multiplier={false}\n                    should_show_accumulator={false}\n                />\n            );\n        },\n    },\n    {\n        title: localize('Growth rate'),\n        col_index: 'growth_rate',\n        renderCellContent: ({ row_obj }: TCellContentProps) =>\n            row_obj.contract_info && row_obj.contract_info.growth_rate\n                ? `${getGrowthRatePercentage(row_obj.contract_info.growth_rate)}%`\n                : '',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <CurrencyWrapper currency={getCurrencyDisplayCode(row_obj.contract_info?.currency)} />\n        ),\n    },\n    {\n        title: localize('Stake'),\n        col_index: isDesktop ? 'buy_price' : 'purchase',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (row_obj.contract_info) {\n                return <Money amount={row_obj.contract_info.buy_price} currency={currency} />;\n            }\n            return '';\n        },\n    },\n    {\n        title: localize('Take profit'),\n        col_index: 'limit_order',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            const { take_profit } = row_obj.contract_info?.limit_order || {};\n            return (\n                <div>\n                    {take_profit?.order_amount ? (\n                        <Money has_sign amount={take_profit.order_amount} currency={currency} />\n                    ) : (\n                        '-'\n                    )}\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'bid_price',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.bid_price) return '-';\n\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            return (\n                <div\n                    className={classNames('open-positions__bid_price', {\n                        'open-positions__bid_price--negative': total_profit < 0,\n                        'open-positions__bid_price--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={row_obj.contract_info.bid_price} currency={currency} />\n                    <ArrowIndicator className='open-positions__bid_price--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Total profit/loss'),\n        col_index: 'profit',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return null;\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            // eslint-disable-next-line consistent-return\n            return (\n                <div\n                    className={classNames('open-positions__profit-loss', {\n                        'open-positions__profit-loss--negative': total_profit < 0,\n                        'open-positions__profit-loss--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={Math.abs(total_profit)} currency={currency} />\n                    <ArrowIndicator className='open-positions__profit-loss--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Action'),\n        col_index: 'action',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return <div className='open-positions__row-action' />;\n            }\n\n            const { contract_info } = row_obj;\n            const position = getPositionById(contract_info.contract_id);\n            const { is_sell_requested } = position || {};\n\n            return (\n                <div className='open-positions__row-action'>\n                    <ContractCardSell\n                        contract_info={contract_info}\n                        is_sell_requested={is_sell_requested}\n                        getCardLabels={getCardLabels}\n                        onClickSell={onClickSell}\n                    />\n                </div>\n            );\n        },\n    },\n];\n","import { CONTRACT_STORAGE_VALUES, isAccumulatorContract, isMultiplierContract } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\n\nconst isValidContractType = (\n    value: string | null\n): value is (typeof CONTRACT_STORAGE_VALUES)[keyof typeof CONTRACT_STORAGE_VALUES] => {\n    return value !== null && Object.values(CONTRACT_STORAGE_VALUES).includes(value);\n};\n\nconst getContractCategory = (contract_type: string) => {\n    if (isMultiplierContract(contract_type)) {\n        return CONTRACT_STORAGE_VALUES.MULTIPLIERS;\n    } else if (isAccumulatorContract(contract_type)) {\n        return CONTRACT_STORAGE_VALUES.ACCUMULATORS;\n    }\n    return CONTRACT_STORAGE_VALUES.OPTIONS;\n};\n\nexport const getLatestContractType = (\n    positions: TPortfolioStore['active_positions'],\n    currentCategory?: (typeof CONTRACT_STORAGE_VALUES)[keyof typeof CONTRACT_STORAGE_VALUES]\n): string => {\n    // If there are positions, first check if we have any of the current category\n    if (positions.length > 0) {\n        // Keep current category if there are open positions with the same type\n        if (\n            currentCategory &&\n            positions.some(pos => {\n                const type = pos.contract_info?.contract_type;\n                if (!type) return false;\n                return getContractCategory(type) === currentCategory;\n            })\n        ) {\n            return currentCategory;\n        }\n\n        // If current category has no positions, find the latest contract and use its type\n        const latest_contract = positions.reduce((latest, current) => {\n            const current_date_start = current.contract_info?.date_start || 0;\n            const latest_date_start = latest.contract_info?.date_start || 0;\n            return current_date_start > latest_date_start ? current : latest;\n        });\n\n        const contract_type = latest_contract.contract_info?.contract_type;\n        if (contract_type) {\n            const category = getContractCategory(contract_type);\n            // Update localStorage to ensure consistency\n            localStorage.setItem('contract_type_value', category);\n            return category;\n        }\n    }\n\n    // If no positions or no valid contract type, fall back to stored or default\n    const stored_value = localStorage.getItem('contract_type_value');\n    return isValidContractType(stored_value) ? stored_value : CONTRACT_STORAGE_VALUES.OPTIONS;\n};\n","import React from 'react';\nimport { ProgressBar, ProgressSliderMobile, DataList, ContractCard, PositionsDrawerCard } from '@deriv/components';\nimport {\n    isAccumulatorContract,\n    isMultiplierContract,\n    isVanillaContract,\n    isTurbosContract,\n    getContractDurationType,\n    getTimePercentage,\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationUnitText,\n    getCardLabels,\n    toMoment,\n} from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { TColIndex } from 'Types';\nimport moment from 'moment';\n\ntype TRangeFloatZeroToOne = React.ComponentProps<typeof ProgressBar>['value'];\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\ntype TDataList = React.ComponentProps<typeof DataList>;\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\ntype TUiStore = Pick<\n    ReturnType<typeof useStore>['ui'],\n    | 'addToast'\n    | 'current_focus'\n    | 'removeToast'\n    | 'setCurrentFocus'\n    | 'should_show_cancellation_warning'\n    | 'toggleCancellationWarning'\n>;\n\nexport type TMobileRowRenderer = TUiStore & {\n    row?: TDataList['data_source'][0];\n    is_footer?: boolean;\n    columns_map: Record<TColIndex, TDataListCell['column']>;\n    getContractById: ReturnType<typeof useStore>['contract_trade']['getContractById'];\n    server_time: moment.Moment;\n    onClickCancel: (contract_id?: number) => void;\n    onClickRemove: TPortfolioStore['removePositionById'];\n    onClickSell: (contract_id?: number) => void;\n    measure?: () => void;\n};\n\nexport const MobileRowRenderer = ({\n    row = {},\n    is_footer,\n    columns_map = {},\n    server_time = toMoment(),\n    onClickCancel,\n    onClickSell,\n    measure,\n    ...props\n}: TMobileRowRenderer) => {\n    React.useEffect(() => {\n        if (!is_footer) {\n            measure?.();\n        }\n    }, [row.contract_info?.underlying, measure, is_footer]);\n\n    if (is_footer) {\n        return (\n            <div className='open-positions__data-list-footer--content'>\n                <div>\n                    <DataList.Cell row={row} column={columns_map.purchase} />\n                    <DataList.Cell row={row} column={columns_map.payout} />\n                </div>\n                <div>\n                    <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.indicative} />\n                    <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.profit} />\n                </div>\n            </div>\n        );\n    }\n\n    const { contract_info, contract_update, type, is_sell_requested } = row as TPortfolioStore['active_positions'][0];\n    const { currency, date_expiry, date_start, tick_count, purchase_time } = contract_info;\n    const current_tick = tick_count ? getCurrentTick(contract_info) : null;\n    const turbos_duration_unit = tick_count ? 'ticks' : getDurationUnitText(getDurationPeriod(contract_info), true);\n    const duration_type = getContractDurationType(\n        (isTurbosContract(contract_info.contract_type) ? turbos_duration_unit : contract_info.longcode) || ''\n    );\n    const progress_value = (getTimePercentage(server_time, date_start ?? 0, date_expiry ?? 0) /\n        100) as TRangeFloatZeroToOne;\n\n    if (isMultiplierContract(type) || isAccumulatorContract(type)) {\n        return (\n            <PositionsDrawerCard\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency ?? ''}\n                is_link_disabled\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time}\n                {...props}\n            />\n        );\n    }\n\n    return (\n        <>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.type} />\n                {isVanillaContract(type) || (isTurbosContract(type) && !tick_count) ? (\n                    <ProgressSliderMobile\n                        current_tick={current_tick}\n                        className='data-list__row--timer'\n                        expiry_time={date_expiry}\n                        getCardLabels={getCardLabels}\n                        is_loading={false}\n                        server_time={server_time}\n                        start_time={purchase_time}\n                        ticks_count={tick_count}\n                    />\n                ) : (\n                    <ProgressBar label={duration_type ?? ''} value={progress_value} />\n                )}\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.reference} />\n                <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.currency} />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.purchase} />\n                <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.indicative} />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.payout} />\n                <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.profit} />\n            </div>\n            <div className='data-list__row-divider' />\n            <div className='data-list__row'>\n                <ContractCard.Sell\n                    contract_info={contract_info}\n                    is_sell_requested={is_sell_requested}\n                    getCardLabels={getCardLabels}\n                    onClickSell={onClickSell}\n                />\n            </div>\n        </>\n    );\n};\n","import { createElement, isValidElement } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar uid = (function () {\r\n    return Math.random()\r\n        .toString(36)\r\n        .substring(6);\r\n});\n\nvar SVG = function (_a) {\r\n    var _b = _a.animate, animate = _b === void 0 ? true : _b, animateBegin = _a.animateBegin, _c = _a.backgroundColor, backgroundColor = _c === void 0 ? '#f5f6f7' : _c, _d = _a.backgroundOpacity, backgroundOpacity = _d === void 0 ? 1 : _d, _e = _a.baseUrl, baseUrl = _e === void 0 ? '' : _e, children = _a.children, _f = _a.foregroundColor, foregroundColor = _f === void 0 ? '#eee' : _f, _g = _a.foregroundOpacity, foregroundOpacity = _g === void 0 ? 1 : _g, _h = _a.gradientRatio, gradientRatio = _h === void 0 ? 2 : _h, _j = _a.gradientDirection, gradientDirection = _j === void 0 ? 'left-right' : _j, uniqueKey = _a.uniqueKey, _k = _a.interval, interval = _k === void 0 ? 0.25 : _k, _l = _a.rtl, rtl = _l === void 0 ? false : _l, _m = _a.speed, speed = _m === void 0 ? 1.2 : _m, _o = _a.style, style = _o === void 0 ? {} : _o, _p = _a.title, title = _p === void 0 ? 'Loading...' : _p, _q = _a.beforeMask, beforeMask = _q === void 0 ? null : _q, props = __rest(_a, [\"animate\", \"animateBegin\", \"backgroundColor\", \"backgroundOpacity\", \"baseUrl\", \"children\", \"foregroundColor\", \"foregroundOpacity\", \"gradientRatio\", \"gradientDirection\", \"uniqueKey\", \"interval\", \"rtl\", \"speed\", \"style\", \"title\", \"beforeMask\"]);\r\n    var fixedId = uniqueKey || uid();\r\n    var idClip = fixedId + \"-diff\";\r\n    var idGradient = fixedId + \"-animated-diff\";\r\n    var idAria = fixedId + \"-aria\";\r\n    var rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null;\r\n    var keyTimes = \"0; \" + interval + \"; 1\";\r\n    var dur = speed + \"s\";\r\n    var gradientTransform = gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined;\r\n    return (createElement(\"svg\", __assign({ \"aria-labelledby\": idAria, role: \"img\", style: __assign(__assign({}, style), rtlStyle) }, props),\r\n        title ? createElement(\"title\", { id: idAria }, title) : null,\r\n        beforeMask && isValidElement(beforeMask) ? beforeMask : null,\r\n        createElement(\"rect\", { role: \"presentation\", x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", clipPath: \"url(\" + baseUrl + \"#\" + idClip + \")\", style: { fill: \"url(\" + baseUrl + \"#\" + idGradient + \")\" } }),\r\n        createElement(\"defs\", null,\r\n            createElement(\"clipPath\", { id: idClip }, children),\r\n            createElement(\"linearGradient\", { id: idGradient, gradientTransform: gradientTransform },\r\n                createElement(\"stop\", { offset: \"0%\", stopColor: backgroundColor, stopOpacity: backgroundOpacity }, animate && (createElement(\"animate\", { attributeName: \"offset\", values: -gradientRatio + \"; \" + -gradientRatio + \"; 1\", keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\", begin: animateBegin }))),\r\n                createElement(\"stop\", { offset: \"50%\", stopColor: foregroundColor, stopOpacity: foregroundOpacity }, animate && (createElement(\"animate\", { attributeName: \"offset\", values: -gradientRatio / 2 + \"; \" + -gradientRatio / 2 + \"; \" + (1 +\r\n                        gradientRatio / 2), keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\", begin: animateBegin }))),\r\n                createElement(\"stop\", { offset: \"100%\", stopColor: backgroundColor, stopOpacity: backgroundOpacity }, animate && (createElement(\"animate\", { attributeName: \"offset\", values: \"0; 0; \" + (1 + gradientRatio), keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\", begin: animateBegin })))))));\r\n};\n\nvar ContentLoader = function (props) {\r\n    return props.children ? createElement(SVG, __assign({}, props)) : createElement(ReactContentLoaderFacebook, __assign({}, props));\r\n};\n\nvar ReactContentLoaderFacebook = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 476 124\" }, props),\r\n    createElement(\"rect\", { x: \"48\", y: \"8\", width: \"88\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"48\", y: \"26\", width: \"52\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"56\", width: \"410\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"72\", width: \"380\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"88\", width: \"178\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"circle\", { cx: \"20\", cy: \"20\", r: \"20\" }))); };\n\nvar ReactContentLoaderInstagram = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 400 460\" }, props),\r\n    createElement(\"circle\", { cx: \"31\", cy: \"31\", r: \"15\" }),\r\n    createElement(\"rect\", { x: \"58\", y: \"18\", rx: \"2\", ry: \"2\", width: \"140\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"58\", y: \"34\", rx: \"2\", ry: \"2\", width: \"140\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"60\", rx: \"2\", ry: \"2\", width: \"400\", height: \"400\" }))); };\n\nvar ReactContentLoaderCode = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 340 84\" }, props),\r\n    createElement(\"rect\", { x: \"0\", y: \"0\", width: \"67\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"76\", y: \"0\", width: \"140\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"127\", y: \"48\", width: \"53\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"187\", y: \"48\", width: \"72\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"18\", y: \"48\", width: \"100\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"71\", width: \"37\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"18\", y: \"23\", width: \"140\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"166\", y: \"23\", width: \"173\", height: \"11\", rx: \"3\" }))); };\n\nvar ReactContentLoaderListStyle = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 400 110\" }, props),\r\n    createElement(\"rect\", { x: \"0\", y: \"0\", rx: \"3\", ry: \"3\", width: \"250\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"20\", rx: \"3\", ry: \"3\", width: \"220\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"40\", rx: \"3\", ry: \"3\", width: \"170\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"60\", rx: \"3\", ry: \"3\", width: \"250\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"80\", rx: \"3\", ry: \"3\", width: \"200\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"100\", rx: \"3\", ry: \"3\", width: \"80\", height: \"10\" }))); };\n\nvar ReactContentLoaderBulletList = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 245 125\" }, props),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"20\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"15\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"50\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"45\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"80\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"75\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"110\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"105\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }))); };\n\nexport default ContentLoader;\nexport { ReactContentLoaderBulletList as BulletList, ReactContentLoaderCode as Code, ReactContentLoaderFacebook as Facebook, ReactContentLoaderInstagram as Instagram, ReactContentLoaderListStyle as List };\n//# sourceMappingURL=react-content-loader.es.js.map\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\ntype TReportsTableRowLoader = {\n    speed?: number;\n};\n\nconst ReportsTableRowLoader = ({ speed }: TReportsTableRowLoader) => (\n    <ContentLoader\n        height={64}\n        width={992}\n        speed={speed}\n        backgroundColor={'var(--general-hover)'}\n        foregroundColor={'var(--general-active)'}\n    >\n        <rect x='16' y='16' rx='4' ry='4' width='32' height='32' />\n        <rect x='52' y='16' rx='4' ry='4' width='32' height='32' />\n        <rect x='132' y='28' rx='4' ry='4' width='101' height='8' />\n        <rect x='273' y='28' rx='4' ry='4' width='120' height='8' />\n        <rect x='460' y='28' rx='4' ry='4' width='46' height='8' />\n        <rect x='593' y='28' rx='4' ry='4' width='46' height='8' />\n        <rect x='726' y='28' rx='4' ry='4' width='64' height='8' />\n        <rect x='906' y='28' rx='4' ry='4' width='64' height='8' />\n    </ContentLoader>\n);\n\nexport { ReportsTableRowLoader };\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype TEmptyTradeHistoryMessage = {\n    component_icon: string;\n    has_selected_date: boolean;\n    localized_message: React.ReactNode;\n    localized_period_message: React.ReactNode;\n};\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}: TEmptyTradeHistoryMessage) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon\n                data_testid='dt_empty_trade_history_icon'\n                icon={component_icon}\n                className='empty-trade-history__icon'\n                color='disabled'\n                size={96}\n            />\n            <Text size='xs' align='center' color='disabled' className='empty-trade-history__text'>\n                {!has_selected_date ? localized_message : localized_period_message}\n            </Text>\n        </div>\n    </React.Fragment>\n);\n\nexport default EmptyTradeHistoryMessage;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TLoading = {\n    className?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n    data_testid?: string;\n};\n\nconst Loading = ({ className, is_invisible, theme, id, data_testid }: TLoading) => (\n    <div\n        id={id}\n        data-testid={data_testid}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport Loading from '_common/components/loading';\n\ntype TPlaceholderComponent = {\n    component_icon?: string;\n    empty_message_component?: React.ElementType;\n    has_selected_date?: boolean;\n    is_empty?: boolean;\n    is_loading?: boolean;\n    localized_message?: React.ReactNode;\n    localized_period_message?: React.ReactNode;\n};\n\nconst PlaceholderComponent = ({\n    component_icon,\n    empty_message_component,\n    has_selected_date,\n    is_empty,\n    is_loading,\n    localized_message,\n    localized_period_message,\n}: TPlaceholderComponent) => {\n    const EmptyMessageComponent = empty_message_component;\n    return (\n        <React.Fragment>\n            {is_empty && EmptyMessageComponent && (\n                <EmptyMessageComponent\n                    component_icon={component_icon}\n                    has_selected_date={has_selected_date}\n                    localized_message={localized_message}\n                    localized_period_message={localized_period_message}\n                />\n            )}\n            {is_loading && <Loading data_testid='dt_loading_component' />}\n        </React.Fragment>\n    );\n};\n\nexport default PlaceholderComponent;\n","import React from 'react';\nimport { DataList, DataTable } from '@deriv/components';\nimport { getUnsupportedContracts, getContractPath, hasContractStarted } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { ReportsTableRowLoader } from '../Components/Elements/ContentLoader';\nimport EmptyTradeHistoryMessage from '../Components/empty-trade-history-message';\nimport PlaceholderComponent from '../Components/placeholder-component';\nimport { TUnsupportedContractType } from 'Types';\nimport { TMobileRowRenderer } from './mobile-row-renderer';\nimport { TTotals } from './open-positions';\nimport { TPortfolioPosition } from '@deriv/stores/types';\n\ntype TEmptyPlaceholderWrapper = React.PropsWithChildren<{\n    is_empty: boolean;\n    component_icon: string;\n}>;\n\ntype TOpenPositionsTable = {\n    accumulator_rate: string;\n    active_positions: TPortfolioPosition[];\n    className: string;\n    columns: Record<string, unknown>[];\n    component_icon: string;\n    contract_type_value: string;\n    currency: string;\n    is_empty: boolean;\n    is_loading: boolean;\n    mobileRowRenderer: React.ComponentProps<typeof DataList>['rowRenderer'];\n    row_size: number;\n    totals: TTotals;\n};\n\nconst EmptyPlaceholderWrapper = ({ is_empty, component_icon, children }: TEmptyPlaceholderWrapper) => (\n    <React.Fragment>\n        {is_empty ? (\n            <PlaceholderComponent\n                is_empty={is_empty}\n                empty_message_component={EmptyTradeHistoryMessage}\n                component_icon={component_icon}\n                localized_message={<Localize i18n_default_text='You have no open positions yet.' />}\n            />\n        ) : (\n            children\n        )}\n    </React.Fragment>\n);\n\n/*\n * purchase property in contract positions object can be NaN or undefined in the first few responses.\n * So we set it to true in these case to show a preloader for the data-table-row until the correct value is set.\n */\nexport const isPurchaseMissing = (item: { purchase?: number }) => isNaN(Number(item.purchase)) || !item.purchase;\n\nexport const getRowAction = (row_obj: NonNullable<TMobileRowRenderer['row']> = {}) => {\n    let action: string | { component?: React.ReactElement } = {};\n    const unsupportedContractConfig = getUnsupportedContracts()[row_obj.type as TUnsupportedContractType];\n\n    if (row_obj.contract_info && !hasContractStarted(row_obj.contract_info)) {\n        action = {\n            component: <Localize i18n_default_text=\"You'll see these details once the contract starts.\" />,\n        };\n    } else if (unsupportedContractConfig || row_obj.id) {\n        action = unsupportedContractConfig\n            ? {\n                  component: (\n                      <Localize\n                          i18n_default_text=\"The {{trade_type_name}} contract details aren't currently available. We're working on making them available soon.\"\n                          values={{\n                              trade_type_name: unsupportedContractConfig?.name,\n                          }}\n                      />\n                  ),\n              }\n            : getContractPath(row_obj.id);\n    }\n\n    return action;\n};\n\nexport const OpenPositionsTable = ({\n    accumulator_rate,\n    active_positions,\n    className,\n    columns,\n    component_icon,\n    contract_type_value,\n    currency,\n    is_empty,\n    is_loading,\n    mobileRowRenderer,\n    row_size,\n    totals,\n}: TOpenPositionsTable) => {\n    const { isDesktop } = useDevice();\n    React.useEffect(() => {\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'choose_report_type',\n            form_name: 'default',\n            subform_name: 'open_positions_form',\n            trade_type_filter: contract_type_value,\n            growth_type_filter: accumulator_rate,\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <React.Fragment>\n            {is_loading ? (\n                <PlaceholderComponent\n                    is_loading={is_loading}\n                    empty_message_component={EmptyTradeHistoryMessage}\n                    component_icon={component_icon}\n                    localized_message={<Localize i18n_default_text='You have no open positions yet.' />}\n                />\n            ) : (\n                currency && (\n                    <div className='reports__content'>\n                        <EmptyPlaceholderWrapper component_icon={component_icon} is_empty={is_empty}>\n                            {isDesktop ? (\n                                <DataTable\n                                    className={className}\n                                    columns={columns}\n                                    preloaderCheck={isPurchaseMissing}\n                                    footer={totals}\n                                    data_source={active_positions}\n                                    getRowAction={getRowAction}\n                                    getRowSize={() => row_size}\n                                    content_loader={ReportsTableRowLoader}\n                                >\n                                    <PlaceholderComponent />\n                                </DataTable>\n                            ) : (\n                                <DataList\n                                    className={className}\n                                    data_source={active_positions}\n                                    footer={totals}\n                                    rowRenderer={mobileRowRenderer}\n                                    getRowAction={getRowAction}\n                                    row_gap={8}\n                                    keyMapper={item => item?.id}\n                                >\n                                    <PlaceholderComponent />\n                                </DataList>\n                            )}\n                        </EmptyPlaceholderWrapper>\n                    </div>\n                )\n            )}\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { DataList, Dropdown, SelectNative, usePrevious } from '@deriv/components';\nimport {\n    CONTRACT_STORAGE_VALUES,\n    getGrowthRatePercentage,\n    getTotalProfit,\n    isAccumulatorContract,\n    isMultiplierContract,\n    toMoment,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\n\nimport {\n    getAccumulatorOpenPositionsColumnsTemplate,\n    getMultiplierOpenPositionsColumnsTemplate,\n    getOpenPositionsColumnsTemplate,\n} from 'Constants/data-table-constants';\nimport { TColIndex } from 'Types';\n\nimport { getLatestContractType } from '../Constants/contract-types';\n\nimport { MobileRowRenderer } from './mobile-row-renderer';\nimport { OpenPositionsTable } from './open-positions-table';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\ntype TRowRenderer = React.ComponentProps<typeof DataList>['rowRenderer'];\n\nexport type TTotals = {\n    contract_info?: {\n        profit?: number;\n        buy_price?: number;\n        bid_price?: number;\n        cancellation?: {\n            ask_price?: number;\n        };\n        limit_order?: {\n            take_profit?: {\n                order_amount?: number | null;\n            };\n        };\n    };\n    indicative?: number;\n    purchase?: number;\n    profit_loss?: number;\n    payout?: number | null;\n};\n\ntype TOpenPositions = RouteComponentProps & {\n    component_icon: string;\n};\n\nconst getOpenPositionsTotals = (\n    active_positions_filtered: TPortfolioStore['active_positions'],\n    is_multiplier_selected: boolean,\n    is_accumulator_selected: boolean\n) => {\n    let totals: TTotals;\n\n    if (is_multiplier_selected) {\n        let ask_price = 0;\n        let profit = 0;\n        let buy_price = 0;\n        let bid_price = 0;\n        let purchase = 0;\n\n        active_positions_filtered.forEach(portfolio_pos => {\n            buy_price += Number(portfolio_pos.contract_info.buy_price);\n            bid_price += Number(portfolio_pos.contract_info.bid_price);\n            purchase += Number(portfolio_pos.purchase);\n            if (portfolio_pos.contract_info) {\n                const prices = {\n                    bid_price: portfolio_pos.contract_info.bid_price ?? 0,\n                    buy_price: portfolio_pos.contract_info.buy_price ?? 0,\n                };\n                profit += getTotalProfit(prices);\n\n                if (portfolio_pos.contract_info.cancellation) {\n                    ask_price += portfolio_pos.contract_info.cancellation.ask_price || 0;\n                }\n            }\n        });\n        totals = {\n            contract_info: {\n                profit,\n                buy_price,\n                bid_price,\n            },\n            purchase,\n        };\n\n        if (ask_price > 0) {\n            if (totals.contract_info)\n                totals.contract_info.cancellation = {\n                    ask_price,\n                };\n        }\n    } else if (is_accumulator_selected) {\n        let buy_price = 0;\n        let bid_price = 0;\n        let take_profit = 0;\n        let profit = 0;\n\n        active_positions_filtered?.forEach(({ contract_info }) => {\n            buy_price += Number(contract_info.buy_price);\n            bid_price += Number(contract_info.bid_price);\n            if (contract_info.limit_order?.take_profit?.order_amount)\n                take_profit += contract_info.limit_order.take_profit.order_amount;\n            if (contract_info) {\n                profit += getTotalProfit(contract_info);\n            }\n        });\n        totals = {\n            contract_info: {\n                buy_price,\n                bid_price,\n                profit,\n                limit_order: {\n                    take_profit: {\n                        order_amount: take_profit,\n                    },\n                },\n            },\n            purchase: buy_price,\n        };\n    } else {\n        let indicative = 0;\n        let purchase = 0;\n        let profit_loss = 0;\n        let payout = 0;\n\n        active_positions_filtered?.forEach(portfolio_pos => {\n            indicative += +portfolio_pos.indicative;\n            purchase += Number(portfolio_pos.purchase);\n            profit_loss += Number(portfolio_pos.profit_loss);\n            payout += Number(portfolio_pos.payout);\n        });\n        totals = {\n            indicative,\n            purchase,\n            profit_loss,\n            payout,\n        };\n    }\n    return totals;\n};\n\nconst OpenPositions = observer(({ component_icon, ...props }: TOpenPositions) => {\n    const { portfolio, client, ui, common, contract_trade } = useStore();\n    const {\n        active_positions,\n        error,\n        getPositionById,\n        is_loading,\n        onClickCancel,\n        onClickSell,\n        onMount,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const { currency, is_eu: hide_accu_in_dropdown } = client;\n    const {\n        notification_messages_ui: NotificationMessages,\n        addToast,\n        current_focus,\n        is_mobile,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n    } = ui;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n\n    const store_props = {\n        onClickRemove,\n        NotificationMessages,\n        addToast,\n        current_focus,\n        is_mobile,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n        getContractById,\n    };\n\n    const { isDesktop } = useDevice();\n    const previous_active_positions = usePrevious(active_positions);\n\n    const generateContractTypes = () => {\n        const queryParams = new URLSearchParams(location.search);\n        const contract_type_bot = queryParams.get('contract_type_bots');\n        const default_contract_type = getLatestContractType(active_positions);\n\n        if (!contract_type_bot) {\n            return [\n                {\n                    text: localize('Options'),\n                    value: CONTRACT_STORAGE_VALUES.OPTIONS,\n                    is_default: default_contract_type === CONTRACT_STORAGE_VALUES.OPTIONS,\n                },\n                {\n                    text: localize('Multipliers'),\n                    value: CONTRACT_STORAGE_VALUES.MULTIPLIERS,\n                    is_default: default_contract_type === CONTRACT_STORAGE_VALUES.MULTIPLIERS,\n                },\n                {\n                    text: localize('Accumulators'),\n                    value: CONTRACT_STORAGE_VALUES.ACCUMULATORS,\n                    is_default: default_contract_type === CONTRACT_STORAGE_VALUES.ACCUMULATORS,\n                },\n            ];\n        }\n\n        const is_multiplier_bot = contract_type_bot === 'trade_definition_multiplier';\n        const is_accumulator_bot = contract_type_bot === 'trade_definition_accumulator';\n\n        const contract_types = [\n            {\n                text: localize('Options'),\n                value: CONTRACT_STORAGE_VALUES.OPTIONS,\n                is_default: !is_multiplier_bot && !is_accumulator_bot,\n            },\n            {\n                text: localize('Multipliers'),\n                value: CONTRACT_STORAGE_VALUES.MULTIPLIERS,\n                is_default: is_multiplier_bot,\n            },\n            {\n                text: localize('Accumulators'),\n                value: CONTRACT_STORAGE_VALUES.ACCUMULATORS,\n                is_default: is_accumulator_bot,\n            },\n        ];\n        return contract_types;\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const contract_types = React.useMemo(() => generateContractTypes(), [previous_active_positions]);\n\n    // Get the initial contract type value from localStorage (user selection) or fallback to contract_types\n    const [contract_type_value, setContractTypeValue] = React.useState(() => {\n        // First check if user has made a selection on the open positions page\n        const user_selection = sessionStorage.getItem('open_positions_filter');\n        if (user_selection && Object.values(CONTRACT_STORAGE_VALUES).includes(user_selection)) {\n            return user_selection;\n        }\n\n        // Otherwise use the default from contract_types\n        return contract_types.find(type => type.is_default)?.value || 'options';\n    });\n    const prev_contract_type_value = usePrevious(contract_type_value);\n    const accumulator_rates = [\n        { text: localize('All growth rates'), value: 'all growth rates' },\n        { text: '1%', value: '1%' },\n        { text: '2%', value: '2%' },\n        { text: '3%', value: '3%' },\n        { text: '4%', value: '4%' },\n        { text: '5%', value: '5%' },\n    ];\n    const [accumulator_rate, setAccumulatorRate] = React.useState(accumulator_rates[0].value);\n    const prev_accumulator_rate = usePrevious(accumulator_rate);\n    const is_accumulator_selected = contract_type_value === contract_types[2].value;\n    const is_multiplier_selected = contract_type_value === contract_types[1].value;\n    const contract_types_list = contract_types\n        .filter(contract_type => contract_type.value !== 'accumulators' || !hide_accu_in_dropdown)\n        .map(({ text, value }) => ({ text, value }));\n    const active_positions_filtered = active_positions?.filter(({ contract_info }) => {\n        if (contract_info) {\n            if (is_multiplier_selected) return isMultiplierContract(contract_info.contract_type || '');\n            if (is_accumulator_selected)\n                return (\n                    isAccumulatorContract(contract_info.contract_type) &&\n                    (`${getGrowthRatePercentage(Number(contract_info.growth_rate))}%` === accumulator_rate ||\n                        !accumulator_rate.includes('%'))\n                );\n            return (\n                !isMultiplierContract(contract_info.contract_type || '') &&\n                !isAccumulatorContract(contract_info.contract_type)\n            );\n        }\n        return true;\n    });\n    const active_positions_filtered_totals = getOpenPositionsTotals(\n        active_positions_filtered,\n        is_multiplier_selected,\n        is_accumulator_selected\n    );\n\n    React.useEffect(() => {\n        /*\n         * For mobile, we show portfolio stepper in header even for reports pages.\n         * `onMount` in portfolio store will be invoked from portfolio stepper component in `trade-header-extensions.jsx`\n         */\n\n        onMount();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const user_selection = sessionStorage.getItem('open_positions_filter');\n\n        // Check if positions have actually changed (contracts closed/sold)\n        const positionsChanged =\n            previous_active_positions && previous_active_positions.length > active_positions.length;\n\n        // If positions changed and user had a selection, clear it to allow auto-switching\n        if (positionsChanged && user_selection) {\n            sessionStorage.removeItem('open_positions_filter');\n        }\n\n        // If there's no user selection (or we just cleared it), use getLatestContractType logic\n        const current_user_selection = sessionStorage.getItem('open_positions_filter');\n        if (!current_user_selection || !Object.values(CONTRACT_STORAGE_VALUES).includes(current_user_selection)) {\n            const contract_type = getLatestContractType(active_positions, contract_type_value);\n            if (contract_type !== contract_type_value) {\n                setContractTypeValue(contract_type);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [previous_active_positions, active_positions, active_positions_filtered.length]);\n\n    React.useEffect(() => {\n        if (prev_contract_type_value) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_trade_type',\n                form_name: 'default',\n                subform_name: 'open_positions_form',\n                trade_type_filter: contract_type_value,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [contract_type_value]);\n\n    React.useEffect(() => {\n        if (prev_accumulator_rate) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_growth_rate',\n                form_name: 'default',\n                subform_name: 'open_positions_form',\n                growth_type_filter: accumulator_rate,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [accumulator_rate]);\n\n    // Handle contract type selection\n    const handleContractTypeChange = (value: string) => {\n        setContractTypeValue(value);\n        sessionStorage.setItem('open_positions_filter', value);\n    };\n\n    if (error) return <p>{error}</p>;\n\n    const getColumns = () => {\n        if (is_multiplier_selected && server_time) {\n            return getMultiplierOpenPositionsColumnsTemplate({\n                currency,\n                onClickCancel,\n                onClickSell,\n                getPositionById,\n                server_time,\n                isDesktop,\n            });\n        }\n        if (is_accumulator_selected) {\n            return getAccumulatorOpenPositionsColumnsTemplate({\n                currency,\n                onClickSell,\n                getPositionById,\n                isDesktop,\n            });\n        }\n        return getOpenPositionsColumnsTemplate(currency, isDesktop);\n    };\n\n    const columns = getColumns();\n\n    const columns_map = {} as Record<TColIndex, TDataListCell['column']>;\n    columns.forEach(e => {\n        columns_map[e.col_index as TColIndex] = e as TDataListCell['column'];\n    });\n\n    const mobileRowRenderer: TRowRenderer = args => (\n        <MobileRowRenderer\n            {...args}\n            columns_map={columns_map}\n            server_time={server_time || toMoment()}\n            onClickCancel={onClickCancel}\n            onClickSell={onClickSell}\n            {...props}\n            {...store_props}\n        />\n    );\n\n    const shared_props = {\n        accumulator_rate,\n        active_positions: active_positions_filtered,\n        component_icon,\n        contract_type_value,\n        currency,\n        is_loading,\n        mobileRowRenderer,\n        totals: active_positions_filtered_totals,\n    };\n\n    const getOpenPositionsTable = () => {\n        let classname = 'open-positions';\n        let row_size = isDesktop ? 63 : 5;\n\n        if (is_accumulator_selected) {\n            classname = 'open-positions-accumulator open-positions';\n            row_size = isDesktop ? 68 : 3;\n        } else if (is_multiplier_selected) {\n            classname = 'open-positions-multiplier open-positions';\n            row_size = isDesktop ? 68 : 3;\n        }\n\n        return (\n            <OpenPositionsTable\n                className={classname}\n                columns={columns}\n                is_empty={active_positions_filtered.length === 0}\n                row_size={row_size}\n                {...shared_props}\n            />\n        );\n    };\n\n    return (\n        <React.Fragment>\n            <NotificationMessages />\n            {active_positions.length !== 0 &&\n                (isDesktop ? (\n                    <div\n                        className={\n                            is_accumulator_selected\n                                ? 'open-positions__accumulator-container'\n                                : 'open-positions__contract-types-selector-container'\n                        }\n                    >\n                        <div className='open-positions__accumulator-container__contract-dropdown'>\n                            <Dropdown\n                                is_align_text_left\n                                name='contract_types'\n                                list={contract_types_list}\n                                value={contract_type_value}\n                                onChange={e => handleContractTypeChange(e.target.value)}\n                            />\n                        </div>\n                        {is_accumulator_selected && !hide_accu_in_dropdown && (\n                            <div className='open-positions__accumulator-container__rates-dropdown'>\n                                <Dropdown\n                                    is_align_text_left\n                                    name='accumulator_rates'\n                                    list={accumulator_rates}\n                                    value={accumulator_rate}\n                                    onChange={e => setAccumulatorRate(e.target.value)}\n                                />\n                            </div>\n                        )}\n                    </div>\n                ) : (\n                    <div\n                        className={\n                            is_accumulator_selected\n                                ? 'open-positions__accumulator-container--mobile'\n                                : 'open-positions__contract-types-selector-container--mobile'\n                        }\n                    >\n                        <SelectNative\n                            className='open-positions__accumulator-container-mobile__contract-dropdown'\n                            list_items={contract_types_list}\n                            value={contract_type_value}\n                            should_show_empty_option={false}\n                            onChange={(e: React.ChangeEvent<HTMLSelectElement> & { target: { value: string } }) =>\n                                handleContractTypeChange(e.target.value)\n                            }\n                        />\n                        {is_accumulator_selected && !hide_accu_in_dropdown && (\n                            <SelectNative\n                                className='open-positions__accumulator-container--mobile__rates-dropdown'\n                                list_items={accumulator_rates}\n                                value={accumulator_rate}\n                                should_show_empty_option={false}\n                                onChange={(e: React.ChangeEvent<HTMLSelectElement> & { target: { value: string } }) =>\n                                    setAccumulatorRate(e.target.value)\n                                }\n                            />\n                        )}\n                    </div>\n                ))}\n            {getOpenPositionsTable()}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(OpenPositions);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, DatePicker, Icon, InputField, MobileDialog, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { toMoment } from '@deriv/shared';\nimport { TInputDateRange } from 'Types';\n\ntype TDatePickerOnChangeParams = Parameters<React.ComponentProps<typeof DatePicker>['onChange']>[0];\n\ntype TRadioButton = {\n    id: string;\n    className?: string;\n    selected_value?: string;\n    value?: string;\n    label?: string;\n    onChange: (value: { label?: string; value?: string }) => void;\n};\n\nexport const RadioButton = ({ id, className, selected_value, value, label, onChange }: TRadioButton) => {\n    return (\n        <label\n            htmlFor={id}\n            className={classNames('composite-calendar-modal__radio', className, {\n                'composite-calendar-modal__radio--selected': selected_value === value,\n            })}\n            onClick={() => onChange({ label, value })}\n        >\n            <input className='composite-calendar-modal__radio-input' id={id} type='radio' value={value} />\n            <span\n                className={classNames('composite-calendar-modal__radio-circle', {\n                    'composite-calendar-modal__radio-circle--selected': selected_value === value,\n                })}\n            />\n            <Text\n                as='p'\n                color='prominent'\n                size='xs'\n                line_height='unset'\n                weight={selected_value === value ? 'bold' : 'normal'}\n            >\n                {label}\n            </Text>\n        </label>\n    );\n};\nconst CUSTOM_KEY = 'custom';\n\ntype TCompositeCalendarMobile = {\n    input_date_range?: TInputDateRange;\n    current_focus?: string | null;\n    duration_list?: Array<TInputDateRange>;\n    onChange: (\n        value: { from?: moment.Moment; to?: moment.Moment; is_batch?: boolean },\n        extra_data?: { date_range: TInputDateRange }\n    ) => void;\n    setCurrentFocus: (focus: string | null) => void;\n    from: number;\n    to: number;\n};\n\nconst CompositeCalendarMobile = React.memo(\n    ({\n        input_date_range,\n        current_focus,\n        duration_list,\n        onChange,\n        setCurrentFocus,\n        from,\n        to,\n    }: TCompositeCalendarMobile) => {\n        const date_range = input_date_range || duration_list?.find(range => range.value === 'all_time');\n\n        const [from_date, setFrom] = React.useState(from ? toMoment(from).format('YYYY-MM-DD') : undefined);\n        const [to_date, setTo] = React.useState(to ? toMoment(to).format('YYYY-MM-DD') : undefined);\n        const [is_open, setIsOpen] = React.useState(false);\n\n        const [applied_date_range, setAppliedDateRange] = React.useState(date_range);\n        const [selected_date_range, setSelectedDateRange] = React.useState(date_range);\n        const today = toMoment().format('YYYY-MM-DD');\n\n        const selectDateRange = (_selected_date_range: TInputDateRange, is_today?: boolean) => {\n            const new_from = _selected_date_range.duration;\n            onChange(\n                {\n                    from:\n                        is_today || new_from\n                            ? toMoment().startOf('day').subtract(new_from, 'day').add(1, 's')\n                            : undefined,\n                    to: toMoment().endOf('day'),\n                    is_batch: true,\n                },\n                {\n                    date_range: _selected_date_range,\n                }\n            );\n        };\n\n        const selectCustomDateRange = () => {\n            const new_from = from_date || to_date || today;\n            const new_to = to_date || today;\n\n            const new_date_range = Object.assign(selected_date_range as TInputDateRange, {\n                label: `${toMoment(new_from).format('DD MMM YYYY')} - ${toMoment(new_to).format('DD MMM YYYY')}`,\n            });\n\n            onChange(\n                {\n                    from: toMoment(new_from).startOf('day').add(1, 's'),\n                    to: toMoment(new_to).endOf('day'),\n                    is_batch: true,\n                },\n                {\n                    date_range: new_date_range,\n                }\n            );\n        };\n\n        const applyDateRange = () => {\n            if (selected_date_range?.onClick) {\n                selectDateRange(selected_date_range);\n            } else if (selected_date_range?.value === CUSTOM_KEY) {\n                selectCustomDateRange();\n            }\n            setAppliedDateRange(selected_date_range);\n            setIsOpen(false);\n        };\n\n        const selectToday = () => {\n            const new_date_range = {\n                duration: 0,\n                label: localize('Today'),\n            };\n            selectDateRange(new_date_range, true);\n            setAppliedDateRange(new_date_range);\n            setSelectedDateRange(new_date_range);\n            setIsOpen(false);\n        };\n\n        const selectDate = (e: TDatePickerOnChangeParams, key: string) => {\n            setSelectedDateRange({ value: CUSTOM_KEY });\n\n            if (key === 'from') setFrom(e.target?.value as string);\n            if (key === 'to') setTo(e.target?.value as string);\n        };\n\n        const getMobileFooter = () => {\n            return (\n                <div className='composite-calendar-modal__actions'>\n                    <Button\n                        className='composite-calendar-modal__actions__cancel'\n                        text={localize('Cancel')}\n                        onClick={() => setIsOpen(false)}\n                        has_effect\n                        secondary\n                        large\n                    />\n                    <Button\n                        className='composite-calendar-modal__actions__ok'\n                        text={localize('OK')}\n                        onClick={applyDateRange}\n                        has_effect\n                        primary\n                        large\n                    />\n                </div>\n            );\n        };\n\n        const onDateRangeChange = (_date_range: TInputDateRange) => {\n            setSelectedDateRange(\n                duration_list?.find(range => _date_range && range.value === _date_range.value) || _date_range\n            );\n        };\n\n        const openDialog = () => {\n            setSelectedDateRange(applied_date_range);\n            setIsOpen(true);\n        };\n\n        return (\n            <React.Fragment>\n                <div className='composite-calendar__input-fields composite-calendar__input-fields--fill'>\n                    <InputField\n                        id='dt_calendar_input'\n                        current_focus={current_focus ?? ''}\n                        is_read_only={true}\n                        icon={() => <Icon icon='IcCalendarDatefrom' className='inline-icon' />}\n                        onClick={openDialog}\n                        setCurrentFocus={setCurrentFocus}\n                        value={applied_date_range?.label ?? ''}\n                    />\n                </div>\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={localize('Please select duration')}\n                    visible={is_open}\n                    has_content_scroll\n                    onClose={() => setIsOpen(false)}\n                    content_height_offset='94px'\n                    footer={getMobileFooter()}\n                >\n                    <div className='composite-calendar-modal'>\n                        <div className='composite-calendar-modal__radio-group'>\n                            {duration_list?.map(duration => (\n                                <RadioButton\n                                    id={`composite-calendar-modal__radio__${duration.value}`}\n                                    key={duration.value}\n                                    value={duration.value}\n                                    label={duration.label}\n                                    selected_value={selected_date_range?.value}\n                                    onChange={onDateRangeChange}\n                                />\n                            ))}\n                        </div>\n                        <div className='composite-calendar-modal__custom'>\n                            <RadioButton\n                                id={'composite-calendar-modal__custom-radio'}\n                                className='composite-calendar-modal__custom-radio'\n                                value={CUSTOM_KEY}\n                                label={localize('Custom')}\n                                selected_value={selected_date_range?.value}\n                                onChange={onDateRangeChange}\n                            />\n\n                            <div className='composite-calendar-modal__custom-date-range'>\n                                <DatePicker\n                                    className='composite-calendar-modal__custom-date-range-start-date'\n                                    placeholder={localize('Start date')}\n                                    value={from_date ?? ''}\n                                    max_date={to_date || today}\n                                    onChange={(e: TDatePickerOnChangeParams) => selectDate(e, 'from')}\n                                />\n                                <DatePicker\n                                    className='composite-calendar-modal__custom-date-range-end-date'\n                                    placeholder={localize('End date')}\n                                    value={to_date ?? ''}\n                                    max_date={today}\n                                    min_date={from_date}\n                                    onChange={(e: TDatePickerOnChangeParams) => selectDate(e, 'to')}\n                                />\n                            </div>\n                        </div>\n                        <Button\n                            className='composite-calendar-modal__actions-today'\n                            text={localize('Back to today')}\n                            onClick={selectToday}\n                            has_effect\n                            tertiary\n                            large\n                        />\n                    </div>\n                </MobileDialog>\n            </React.Fragment>\n        );\n    }\n);\n\nCompositeCalendarMobile.displayName = 'CompositeCalendarMobile';\nexport default CompositeCalendarMobile;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TListItem = {\n    label: string | React.ReactElement | Array<string>;\n    is_active: boolean;\n    onClick: () => void;\n};\n\nconst ListItem = ({ onClick, is_active, label }: TListItem) => (\n    <li\n        className={classNames({\n            'composite-calendar__prepopulated-list--is-active': is_active,\n        })}\n        onClick={onClick}\n    >\n        {label}\n    </li>\n);\n\nexport default ListItem;\n","import React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport ListItem from './list-item';\n\ntype TItem = {\n    value: string;\n    label: string;\n    onClick: () => void;\n    duration: number;\n};\n\ntype TSideList = {\n    from: number | null;\n    items: Array<TItem>;\n    to: number;\n};\n\nconst isActive = (from: number | null, to: number, flag: number) => {\n    if (flag === 0) {\n        return toMoment().endOf('day').unix() === to && from === null;\n    }\n    return Math.ceil(to / 86400) - Math.ceil(Number(from) / 86400) === flag;\n};\n\nconst SideList = ({ items, from, to }: TSideList) => (\n    <ul className='composite-calendar__prepopulated-list'>\n        {items.map(item => {\n            const { duration, label, onClick } = item;\n            const is_active = isActive(from, to, duration);\n            return <ListItem key={duration} is_active={is_active} label={label} onClick={onClick} />;\n        })}\n    </ul>\n);\n\nexport default SideList;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TCalendarIcon = {\n    onClick: () => void;\n};\n\nconst CalendarIcon = ({ onClick }: TCalendarIcon) => (\n    <Icon onClick={onClick} icon='IcCalendarDatefrom' className='inline-icon' data_testid='dt_calendar_icon' />\n);\n\nexport default CalendarIcon;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { useDevice } from '@deriv-com/ui';\nimport { InputField, useOnClickOutside } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { daysFromTodayTo, toMoment } from '@deriv/shared';\nimport CompositeCalendarMobile from './composite-calendar-mobile';\nimport SideList from './side-list';\nimport CalendarIcon from './calendar-icon';\nimport TwoMonthPicker from './two-month-picker';\nimport moment from 'moment';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TCompositeCalendar = {\n    onChange: (values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean }) => void;\n    to: number;\n    from: number;\n};\n\ntype TTwoMonthPickerLoadable = {\n    onChange: (date: moment.Moment) => void;\n    isPeriodDisabled: (date: moment.Moment) => boolean;\n    value: number;\n};\n\nconst TwoMonthPickerLoadable = Loadable<TTwoMonthPickerLoadable, typeof TwoMonthPicker>({\n    loader: () => import(/* webpackChunkName: \"two-month-picker\" */ './two-month-picker'),\n    loading: () => null,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst CompositeCalendar = observer((props: TCompositeCalendar) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const { onChange, to, from } = props;\n    const { isDesktop } = useDevice();\n    const [show_to, setShowTo] = React.useState(false);\n    const [show_from, setShowFrom] = React.useState(false);\n    const [list] = React.useState([\n        {\n            value: 'all_time',\n            label: localize('All time'),\n            onClick: () => selectDateRange(),\n            duration: 0,\n        },\n        {\n            value: 'last_7_days',\n            label: localize('Last 7 days'),\n            onClick: () => selectDateRange(7),\n            duration: 7,\n        },\n        {\n            value: 'last_30_days',\n            label: localize('Last 30 days'),\n            onClick: () => selectDateRange(30),\n            duration: 30,\n        },\n        {\n            value: 'last_60_days',\n            label: localize('Last 60 days'),\n            onClick: () => selectDateRange(60),\n            duration: 60,\n        },\n        {\n            value: 'last_quarter',\n            label: localize('Last quarter'),\n            onClick: () => selectDateRange(90),\n            duration: 90,\n        },\n    ]);\n\n    const wrapper_ref = React.useRef<HTMLInputElement>(null);\n\n    const validateClickOutside = (event: MouseEvent) => !wrapper_ref.current?.contains(event.target as Node);\n\n    const selectDateRange = (new_from?: number) => {\n        hideCalendar();\n        onChange({\n            from: new_from ? toMoment().startOf('day').subtract(new_from, 'day').add(1, 's') : undefined,\n            to: toMoment().endOf('day'),\n            is_batch: true,\n        });\n    };\n\n    const getToDateLabel = () => {\n        const date = toMoment(to);\n        return daysFromTodayTo(date) === 0 ? localize('Today') : date.format('MMM, DD YYYY');\n    };\n\n    const getFromDateLabel = () => {\n        const date = toMoment(from);\n        return from ? date.format('MMM, DD YYYY') : '';\n    };\n\n    const hideCalendar = () => {\n        setShowFrom(false);\n        setShowTo(false);\n    };\n\n    const showCalendar = (e: string) => {\n        if (e === 'from') {\n            setShowFrom(true);\n        }\n        if (e === 'to') {\n            setShowTo(true);\n        }\n    };\n\n    useOnClickOutside(\n        wrapper_ref,\n        (event: React.MouseEvent) => {\n            event?.stopPropagation();\n            event?.preventDefault();\n            hideCalendar();\n        },\n        validateClickOutside\n    );\n\n    const setToDate = (date: moment.Moment) => {\n        onChange({ to: toMoment(date).endOf('day') });\n    };\n\n    const setFromDate = (date: moment.Moment) => {\n        onChange({ from: toMoment(date) });\n        hideCalendar();\n    };\n\n    const isPeriodDisabledTo = (date: moment.Moment) => {\n        return date.unix() < from || date.unix() > toMoment().endOf('day').unix();\n    };\n\n    const isPeriodDisabledFrom = (date: moment.Moment) => date.unix() > to;\n\n    if (isDesktop) {\n        return (\n            <React.Fragment>\n                <div id='dt_composite_calendar_inputs' className='composite-calendar__input-fields'>\n                    <InputField\n                        id='dt_calendar_input_from'\n                        current_focus={current_focus}\n                        is_read_only\n                        placeholder={localize('Date from')}\n                        icon={CalendarIcon}\n                        onClick={() => showCalendar('from')}\n                        setCurrentFocus={setCurrentFocus}\n                        value={getFromDateLabel()}\n                    />\n                    <InputField\n                        id='dt_calendar_input_to'\n                        current_focus={current_focus}\n                        is_read_only\n                        placeholder={localize('Date to')}\n                        icon={CalendarIcon}\n                        onClick={() => showCalendar('to')}\n                        setCurrentFocus={setCurrentFocus}\n                        value={getToDateLabel()}\n                    />\n                </div>\n                {show_to && (\n                    <div className='composite-calendar' ref={wrapper_ref}>\n                        <SideList from={from} to={to} items={list} />\n                        <TwoMonthPickerLoadable value={to} onChange={setToDate} isPeriodDisabled={isPeriodDisabledTo} />\n                    </div>\n                )}\n                {show_from && (\n                    <div className='composite-calendar' ref={wrapper_ref}>\n                        <SideList from={from} to={to} items={list} />\n                        <TwoMonthPickerLoadable\n                            value={from}\n                            onChange={setFromDate}\n                            isPeriodDisabled={isPeriodDisabledFrom}\n                        />\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <CompositeCalendarMobile\n            duration_list={list}\n            setCurrentFocus={setCurrentFocus}\n            current_focus={current_focus}\n            {...props}\n        />\n    );\n});\n\nCompositeCalendar.displayName = 'CompositeCalendar';\n\nexport default React.memo(CompositeCalendar);\n","import CompositeCalendar from './composite-calendar';\n\nexport default CompositeCalendar;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TReportsMeta = {\n    filter_component: React.ReactNode;\n    className?: string;\n    is_statement?: boolean;\n};\n\nconst ReportsMeta = ({ filter_component, className, is_statement }: TReportsMeta) => {\n    return (\n        <div className={classNames('reports__meta', className)} data-testid='dt_reports_meta_wrapper'>\n            {filter_component && (\n                <div\n                    className={classNames('reports__meta-filter', {\n                        'reports__meta-filter--statement': is_statement,\n                    })}\n                >\n                    {filter_component}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport { ReportsMeta };\n","import classNames from 'classnames';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { DataList, DataTable, usePrevious } from '@deriv/components';\nimport { extractInfoFromShortcode, formatDate, getContractPath, getUnsupportedContracts } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { ReportsTableRowLoader } from '../Components/Elements/ContentLoader';\nimport CompositeCalendar from '../Components/Form/CompositeCalendar';\nimport { TUnsupportedContractType } from 'Types';\nimport EmptyTradeHistoryMessage from '../Components/empty-trade-history-message';\nimport PlaceholderComponent from '../Components/placeholder-component';\nimport { ReportsMeta } from '../Components/reports-meta';\nimport { getProfitTableColumnsTemplate } from 'Constants/data-table-constants';\nimport { observer, useStore } from '@deriv/stores';\nimport { useReportsStore } from 'Stores/useReportsStores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TProfitTable = {\n    component_icon: string;\n};\n\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\n\ntype TGetProfitTableColumnsTemplate = ReturnType<typeof getProfitTableColumnsTemplate>;\n\nexport const getRowAction = (row_obj: { [key: string]: unknown }) => {\n    const contract_type = extractInfoFromShortcode(row_obj?.shortcode as string)\n        ?.category?.toString()\n        .toUpperCase();\n    return getUnsupportedContracts()[contract_type as TUnsupportedContractType]\n        ? {\n              component: (\n                  <Localize\n                      i18n_default_text=\"The {{trade_type_name}} contract details aren't currently available. We're working on making them available soon.\"\n                      values={{\n                          trade_type_name: getUnsupportedContracts()[contract_type as TUnsupportedContractType]?.name,\n                      }}\n                  />\n              ),\n          }\n        : getContractPath(Number(row_obj.contract_id));\n};\n\nconst ProfitTable = observer(({ component_icon }: TProfitTable) => {\n    const { client } = useStore();\n    const { profit_table } = useReportsStore();\n    const { currency, is_switching } = client;\n    const {\n        data,\n        date_from,\n        date_to,\n        error,\n        is_empty,\n        is_loading,\n        handleDateChange,\n        handleScroll,\n        has_selected_date,\n        onMount,\n        onUnmount,\n        totals,\n    } = profit_table;\n    const prev_date_from = usePrevious(date_from);\n    const prev_date_to = usePrevious(date_to);\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        onMount();\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'choose_report_type',\n            form_name: 'default',\n            subform_name: 'trade_table_form',\n            start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n            end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n        });\n        return () => {\n            onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (prev_date_from !== undefined && prev_date_to !== undefined) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_dates',\n                form_name: 'default',\n                subform_name: 'trade_table_form',\n                start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n                end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n            });\n        }\n    }, [date_to, date_from]);\n\n    if (error) return <p>{error}</p>;\n\n    const filter_component = <CompositeCalendar onChange={handleDateChange} from={date_from} to={date_to} />;\n\n    const columns: TGetProfitTableColumnsTemplate = getProfitTableColumnsTemplate(currency, data.length, isDesktop);\n\n    const columns_map = Object.fromEntries(columns.map(column => [column.col_index, column])) as Record<\n        TGetProfitTableColumnsTemplate[number]['col_index'],\n        TGetProfitTableColumnsTemplate[number]\n    >;\n\n    const mobileRowRenderer: React.ComponentProps<typeof DataList>['rowRenderer'] = ({ row, is_footer }) => {\n        const duration_type = row?.duration_type;\n        const formatted_duration_type = duration_type ? duration_type[0].toUpperCase() + duration_type.slice(1) : '';\n        const duration_classname = duration_type ? `duration-type__${duration_type.toLowerCase()}` : '';\n\n        if (is_footer) {\n            return (\n                <div className='data-list__row'>\n                    <DataList.Cell\n                        row={row}\n                        column={columns_map.action_type as TDataListCell['column']}\n                        is_footer={is_footer}\n                    />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.profit_loss as TDataListCell['column']}\n                        is_footer={is_footer}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.action_type as TDataListCell['column']} />\n                    <div className={classNames('duration-type', duration_classname)}>\n                        <div className={classNames('duration-type__background', `${duration_classname}__background`)} />\n                        <span className={`${duration_classname}__label`}>{formatted_duration_type}</span>\n                    </div>\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.transaction_id as TDataListCell['column']} />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.currency as TDataListCell['column']}\n                    />\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.purchase_time as TDataListCell['column']} />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.buy_price as TDataListCell['column']}\n                    />\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.sell_time as TDataListCell['column']} />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.sell_price as TDataListCell['column']}\n                    />\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.profit_loss as TDataListCell['column']} />\n                </div>\n            </>\n        );\n    };\n\n    return (\n        <React.Fragment>\n            <ReportsMeta filter_component={filter_component} className='profit-table__filter' />\n            {is_switching ? (\n                <PlaceholderComponent is_loading />\n            ) : (\n                <React.Fragment>\n                    {data.length === 0 || is_empty ? (\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                            has_selected_date={has_selected_date}\n                            is_empty={is_empty}\n                            empty_message_component={EmptyTradeHistoryMessage}\n                            component_icon={component_icon}\n                            localized_message={localize('You have no trading activity yet.')}\n                            localized_period_message={localize(\n                                \"You've made no transactions of this type during this period.\"\n                            )}\n                        />\n                    ) : (\n                        <div className='reports__content'>\n                            {isDesktop ? (\n                                <DataTable\n                                    className='profit-table'\n                                    data_source={data}\n                                    columns={columns}\n                                    onScroll={handleScroll}\n                                    footer={totals}\n                                    getRowAction={getRowAction}\n                                    getRowSize={() => 63}\n                                    content_loader={ReportsTableRowLoader}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataTable>\n                            ) : (\n                                <DataList\n                                    className='profit-table'\n                                    data_source={data}\n                                    rowRenderer={mobileRowRenderer}\n                                    getRowAction={getRowAction}\n                                    onScroll={handleScroll}\n                                    footer={totals}\n                                    row_gap={8}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataList>\n                            )}\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(ProfitTable);\n","import React from 'react';\nimport { FilterDropdown } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport CompositeCalendar from './Form/CompositeCalendar';\nimport { observer } from '@deriv/stores';\nimport { useReportsStore } from 'Stores/useReportsStores';\n\nconst FilterComponent = observer(() => {\n    const { statement } = useReportsStore();\n    const { action_type, date_from, date_to, handleFilterChange, handleDateChange } = statement;\n\n    const filter_list = [\n        {\n            text: localize('All transactions'),\n            value: 'all',\n        },\n        {\n            text: localize('Buy'),\n            value: 'buy',\n        },\n        {\n            text: localize('Sell'),\n            value: 'sell',\n        },\n        {\n            text: localize('Deposit'),\n            value: 'deposit',\n        },\n        {\n            text: localize('Withdrawal'),\n            value: 'withdrawal',\n        },\n        {\n            text: localize('Transfer'),\n            value: 'transfer',\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <CompositeCalendar onChange={handleDateChange} from={date_from} to={date_to} />\n            <FilterDropdown\n                dropdown_display_className='dc-dropdown__display--has-suffix-icon'\n                filter_list={filter_list}\n                handleFilterChange={handleFilterChange}\n                initial_selected_filter={action_type}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default FilterComponent;\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { DataList, DataTable, Text, Clipboard, usePrevious } from '@deriv/components';\nimport {\n    capitalizeFirstLetter,\n    extractInfoFromShortcode,\n    formatDate,\n    getContractPath,\n    getUnsupportedContracts,\n    isForwardStarting,\n    hasForwardContractStarted,\n} from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { ReportsTableRowLoader } from '../Components/Elements/ContentLoader';\nimport { getStatementTableColumnsTemplate } from '../Constants/data-table-constants';\nimport PlaceholderComponent from '../Components/placeholder-component';\nimport FilterComponent from '../Components/filter-component';\nimport { ReportsMeta } from '../Components/reports-meta';\nimport EmptyTradeHistoryMessage from '../Components/empty-trade-history-message';\nimport { observer, useStore } from '@deriv/stores';\nimport { useReportsStore } from 'Stores/useReportsStores';\nimport { TUnsupportedContractType } from 'Types';\nimport { TSource } from '@deriv/components/src/components/data-table/table-row';\nimport { TRow } from '@deriv/components/src/components/types/common.types';\n\ntype TGetStatementTableColumnsTemplate = ReturnType<typeof getStatementTableColumnsTemplate>;\ntype TColIndex = 'icon' | 'refid' | 'currency' | 'date' | 'action_type' | 'amount' | 'balance';\n\ntype TAction =\n    | {\n          message?: string;\n          component?: React.ReactElement;\n      }\n    | string;\n\ntype TStatement = RouteComponentProps & {\n    component_icon: string;\n};\n\ntype TDetailsComponent = {\n    message: string;\n    action_type: string;\n};\n\ntype TDataList = React.ComponentProps<typeof DataList>;\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\n\nconst DetailsComponent = ({ message = '', action_type = '' }: TDetailsComponent) => {\n    const address_hash_match = /:\\s([0-9a-zA-Z]+.{25,28})/gm.exec(message.split(/,\\s/)[0]);\n    const address_hash = address_hash_match?.[1];\n    const blockchain_hash_match = /:\\s([0-9a-zA-Z]+.{25,34})/gm.exec(message.split(/,\\s/)[1]);\n    const blockchain_hash = blockchain_hash_match?.[1];\n\n    let messages = [message];\n\n    if (address_hash || blockchain_hash) {\n        const lines = message.split(/,\\s/);\n        messages = lines.map((text, index) => {\n            return capitalizeFirstLetter(index !== lines.length - 1 ? `${text}, ` : text);\n        });\n    }\n\n    return (\n        <Text as='div' size='xs' className='statement__row--detail-text' align='center'>\n            {messages.map((text, index) => {\n                return (\n                    <div key={text}>\n                        {text}\n                        {blockchain_hash && index === messages.length - 1 && (\n                            <Clipboard text_copy={blockchain_hash} popoverAlignment='top' />\n                        )}\n                        {address_hash && action_type === 'withdrawal' && index === messages.length - 1 && (\n                            <Clipboard text_copy={address_hash} popoverAlignment='top' />\n                        )}\n                    </div>\n                );\n            })}\n        </Text>\n    );\n};\n\nexport const getRowAction = (row_obj: TSource | TRow): TAction => {\n    let action: TAction = {};\n    const { action_type, desc, id, is_sold, longcode, purchase_time, shortcode, transaction_time, withdrawal_details } =\n        row_obj;\n    if (id && ['buy', 'sell'].includes(action_type)) {\n        const contract_type = extractInfoFromShortcode(shortcode)?.category?.toUpperCase();\n        const unsupportedContractConfig = getUnsupportedContracts()[contract_type as TUnsupportedContractType];\n        const shouldShowForwardStartingNotification =\n            isForwardStarting(shortcode, purchase_time || transaction_time) &&\n            !hasForwardContractStarted(shortcode) &&\n            action_type !== 'sell' &&\n            !is_sold;\n        action = unsupportedContractConfig\n            ? {\n                  message: '',\n                  component: (\n                      <Localize\n                          i18n_default_text=\"The {{trade_type_name}} contract details aren't currently available. We're working on making them available soon.\"\n                          values={{\n                              trade_type_name: unsupportedContractConfig?.name,\n                          }}\n                      />\n                  ),\n              }\n            : getContractPath(id);\n        if (shouldShowForwardStartingNotification)\n            action = {\n                message: '',\n                component: <Localize i18n_default_text=\"You'll see these details once the contract starts.\" />,\n            };\n    } else if (action_type === 'withdrawal') {\n        if (withdrawal_details && longcode) {\n            action = {\n                message: `${withdrawal_details} ${longcode}`,\n            };\n        } else {\n            action = {\n                message: desc,\n            };\n        }\n    } else if (desc && ['deposit', 'transfer', 'adjustment', 'hold', 'release'].includes(action_type)) {\n        action = {\n            message: desc,\n        };\n    }\n\n    // add typeof check because action can be object or string\n    if (typeof action === 'object' && action?.message) {\n        action.component = <DetailsComponent message={action.message} action_type={action_type} />;\n    }\n\n    return action;\n};\n\nconst Statement = observer(({ component_icon }: TStatement) => {\n    const { client, common } = useStore();\n    const { current_language } = common;\n    const { statement } = useReportsStore();\n    const { currency, is_switching, is_virtual } = client;\n    const {\n        action_type,\n        data,\n        date_from,\n        date_to,\n        error,\n        handleScroll,\n        has_selected_date,\n        is_empty,\n        is_loading,\n        onMount,\n        onUnmount,\n    } = statement;\n    const prev_action_type = usePrevious(action_type);\n    const prev_date_from = usePrevious(date_from);\n    const prev_date_to = usePrevious(date_to);\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        onMount();\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'choose_report_type',\n            form_name: 'default',\n            subform_name: 'statement_form',\n            transaction_type_filter: action_type,\n            start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n            end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n        });\n        return () => {\n            onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (prev_action_type) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_transaction_type',\n                form_name: 'default',\n                subform_name: 'statement_form',\n                transaction_type_filter: action_type,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [action_type]);\n\n    React.useEffect(() => {\n        if (prev_date_from !== undefined && prev_date_to !== undefined) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_dates',\n                form_name: 'default',\n                subform_name: 'statement_form',\n                start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n                end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [date_to, date_from]);\n\n    if (error) return <p>{error}</p>;\n\n    const columns: TGetStatementTableColumnsTemplate = getStatementTableColumnsTemplate(currency, isDesktop);\n    const columns_map = columns.reduce((map, item) => {\n        map[item.col_index as TColIndex] = item;\n        return map;\n    }, {} as Record<TColIndex, typeof columns[number]>);\n\n    const mobileRowRenderer = ({\n        row,\n        passthrough,\n    }: Pick<Parameters<TDataList['rowRenderer']>[0], 'row' | 'passthrough'>) => (\n        <React.Fragment>\n            <div className='data-list__row'>\n                <DataList.Cell\n                    row={row}\n                    column={columns_map.icon as TDataListCell['column']}\n                    passthrough={passthrough}\n                />\n                <DataList.Cell\n                    row={row}\n                    column={columns_map.action_type as TDataListCell['column']}\n                    passthrough={passthrough}\n                />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.refid as TDataListCell['column']} />\n                <DataList.Cell\n                    className='data-list__row-cell--amount'\n                    row={row}\n                    column={columns_map.currency as TDataListCell['column']}\n                />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.date as TDataListCell['column']} />\n                <DataList.Cell\n                    className='data-list__row-cell--amount'\n                    row={row}\n                    column={columns_map.amount as TDataListCell['column']}\n                />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.balance as TDataListCell['column']} />\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n            <ReportsMeta\n                className='reports__meta--statement'\n                filter_component={<FilterComponent />}\n                is_statement\n                // key param is needed to force rerendering of the ReportsMeta component on language change\n                key={current_language}\n            />\n            {is_switching ? (\n                <PlaceholderComponent is_loading />\n            ) : (\n                <React.Fragment>\n                    {data?.length === 0 || is_empty ? (\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                            has_selected_date={has_selected_date}\n                            is_empty={is_empty}\n                            empty_message_component={EmptyTradeHistoryMessage}\n                            component_icon={component_icon}\n                            localized_message={localize('You have no transactions yet.')}\n                            localized_period_message={localize(\n                                \"You've made no transactions of this type during this period.\"\n                            )}\n                        />\n                    ) : (\n                        <div className='reports__content'>\n                            {isDesktop ? (\n                                <DataTable\n                                    className='statement'\n                                    columns={columns}\n                                    content_loader={ReportsTableRowLoader}\n                                    data_source={data}\n                                    getRowAction={getRowAction}\n                                    onScroll={handleScroll}\n                                    passthrough={{\n                                        isTopUp: (item: { action?: string }) => is_virtual && item.action === 'Deposit',\n                                    }}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataTable>\n                            ) : (\n                                <DataList\n                                    className='statement'\n                                    data_source={data}\n                                    getRowAction={getRowAction}\n                                    onScroll={handleScroll}\n                                    rowRenderer={mobileRowRenderer}\n                                    row_gap={8}\n                                    passthrough={{\n                                        isTopUp: (item: { action?: string }) => is_virtual && item.action === 'Deposit',\n                                    }}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataList>\n                            )}\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(Statement);\n","import React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport { Div100vhContainer, FadeWrapper, Loading, PageOverlay, SelectNative, VerticalTab } from '@deriv/components';\nimport { getSelectedRoute } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { TRoute } from 'Types';\nimport 'Sass/app/modules/reports.scss';\n\ntype TList = {\n    value: React.ComponentType | typeof Redirect;\n    default?: boolean;\n    label: string;\n    icon?: string;\n    path?: string;\n};\n\ntype TReports = {\n    history: RouteComponentProps['history'];\n    location: RouteComponentProps['location'];\n    routes: TRoute[];\n};\n\nconst Reports = observer(({ history, location, routes }: TReports) => {\n    const { client, common, ui } = useStore();\n\n    const { is_logged_in, is_logging_in } = client;\n    const { is_from_derivgo, routeBackInApp } = common;\n    const { is_reports_visible, setReportsTabIndex, reports_route_tab_index, toggleReports } = ui;\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'open',\n            form_name: 'default',\n            subform_name: history.location.pathname.split('/')[2],\n            form_source: 'deriv_trader',\n        });\n        toggleReports(true);\n        return () => {\n            toggleReports(false);\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'close',\n                form_name: 'default',\n                subform_name: location.pathname.split('/')[2],\n            });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onClickClose = () => {\n        sessionStorage.removeItem('open_positions_filter');\n        routeBackInApp(history);\n    };\n\n    const handleRouteChange = (e: React.ChangeEvent<HTMLSelectElement>) => history.push(e.target.value);\n\n    const menu_options = () => {\n        const options: TList[] = [];\n\n        routes.forEach(route => {\n            options.push({\n                default: route.default,\n                icon: route.icon_component,\n                label: route.getTitle(),\n                value: route.component,\n                path: route.path,\n            });\n        });\n\n        return options;\n    };\n\n    const selected_route = getSelectedRoute({ routes, pathname: location.pathname });\n\n    if (!is_logged_in && is_logging_in) {\n        return <Loading is_fullscreen />;\n    }\n\n    return (\n        <FadeWrapper is_visible={is_reports_visible} className='reports-page-wrapper' keyname='reports-page-wrapper'>\n            <div className='reports'>\n                <PageOverlay header={localize('Reports')} onClickClose={onClickClose} is_from_app={is_from_derivgo}>\n                    {isDesktop ? (\n                        <VerticalTab\n                            is_floating\n                            current_path={location.pathname}\n                            is_routed\n                            is_full_width\n                            setVerticalTabIndex={setReportsTabIndex}\n                            vertical_tab_index={selected_route.default ? 0 : reports_route_tab_index}\n                            list={menu_options()}\n                        />\n                    ) : (\n                        <Div100vhContainer className='reports__mobile-wrapper' height_offset='80px'>\n                            <SelectNative\n                                className='reports__route-selection'\n                                list_items={menu_options().map(option => ({\n                                    text: option.label,\n                                    value: option.path ?? '',\n                                }))}\n                                value={selected_route.path ?? ''}\n                                should_show_empty_option={false}\n                                onChange={handleRouteChange}\n                                label={''}\n                                hide_top_placeholder={false}\n                            />\n                            {selected_route?.component && (\n                                <selected_route.component icon_component={selected_route.icon_component} />\n                            )}\n                        </Div100vhContainer>\n                    )}\n                </PageOverlay>\n            </div>\n        </FadeWrapper>\n    );\n});\n\nexport default Reports;\n","import OpenPositions from './open-positions';\nimport ProfitTable from './profit-table';\nimport Statement from './statement';\nimport Reports from './reports';\n\nexport default {\n    OpenPositions,\n    ProfitTable,\n    Statement,\n    Reports,\n};\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["globalThis","window","global","self","v","Object","E","Function","h","O","t","defaultValue","s","initializeWithValue","o","i","e","matchMedia","matches","c","n","r","addListener","addEventListener","removeListener","removeEventListener","d","isDesktop","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape","observer","_ref","contract_info","_useStore","useStore","common","portfolio","server_time","is_loading","React","current_tick","tick_count","getCurrentTick","ProgressSlider","expiry_time","date_expiry","getCardLabels","start_time","date_start","ticks_count","getProfitOrLoss","value","replace","props","amount","currency","is_footer","is_sell_requested","profit","useDevice","onClickSell","className","classNames","Number","Money","Math","abs","ArrowIndicator","ContractCard","Sell","contract_id","_shortcode","_payload$action_type","_action_type","has_full_contract_title","icon","payload","_ref$should_show_accu","should_show_accumulator","_ref$should_show_mult","should_show_multiplier","should_show_category_icon","shortcode","info_from_shortcode","extractInfoFromShortcode","is_high_low","isHighLow","shortcode_info","category_label","getTradeTypeName","category","showButtonName","hover_message","concat","showMainTitle","trim","Popover","classNameTarget","classNameBubble","alignment","message","getMarketName","underlying","is_bubble_hover_enabled","disable_target_icon","Icon","size","display_name","IconTradeTypes","type","toLowerCase","color","multiplier","growth_rate","includes","action_type","width","height","children","status","Text","weight","map","buy","deposit","hold","release","sell","withdrawal","default","adjustment","transfer","getContractCategory","contract_type","isMultiplierContract","CONTRACT_STORAGE_VALUES","MULTIPLIERS","isAccumulatorContract","ACCUMULATORS","OPTIONS","getLatestContractType","positions","currentCategory","length","_latest_contract$cont","some","pos","_pos$contract_info","reduce","latest","current","_current$contract_inf","_latest$contract_info","localStorage","setItem","stored_value","getItem","values","MobileRowRenderer","_row$contract_info","_ref$row","row","_ref$columns_map","columns_map","_ref$server_time","toMoment","onClickCancel","measure","_objectWithoutProperties","_excluded","DataList","Cell","column","purchase","payout","indicative","_ref2","contract_update","purchase_time","turbos_duration_unit","getDurationUnitText","getDurationPeriod","duration_type","getContractDurationType","isTurbosContract","longcode","progress_value","getTimePercentage","PositionsDrawerCard","_extends","is_link_disabled","isVanillaContract","ProgressSliderMobile","ProgressBar","label","reference","__assign","assign","arguments","p","prototype","hasOwnProperty","call","apply","this","SVG","_a","_b","animate","animateBegin","_c","backgroundColor","_d","backgroundOpacity","_e","baseUrl","_f","foregroundColor","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","speed","_o","style","_p","title","_q","beforeMask","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","fixedId","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","role","id","isValidElement","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","repeatCount","begin","ContentLoader","ReactContentLoaderFacebook","viewBox","rx","cx","cy","ReportsTableRowLoader","ry","has_selected_date","component_icon","localized_message","localized_period_message","data_testid","align","is_invisible","theme","invisible","Array","from","inx","key","empty_message_component","is_empty","EmptyMessageComponent","Loading","EmptyPlaceholderWrapper","PlaceholderComponent","EmptyTradeHistoryMessage","Localize","i18n_default_text","isPurchaseMissing","item","isNaN","getRowAction","row_obj","action","unsupportedContractConfig","getUnsupportedContracts","hasContractStarted","component","trade_type_name","name","getContractPath","OpenPositionsTable","accumulator_rate","active_positions","columns","contract_type_value","mobileRowRenderer","row_size","totals","Analytics","trackEvent","form_name","subform_name","trade_type_filter","growth_type_filter","DataTable","preloaderCheck","footer","data_source","getRowSize","content_loader","rowRenderer","row_gap","keyMapper","OpenPositions","client","ui","contract_trade","error","getPositionById","onMount","onClickRemove","removePositionById","hide_accu_in_dropdown","is_eu","NotificationMessages","notification_messages_ui","addToast","current_focus","is_mobile","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","store_props","getContractById","previous_active_positions","usePrevious","contract_types","contract_type_bot","URLSearchParams","location","search","get","default_contract_type","text","localize","is_default","is_multiplier_bot","is_accumulator_bot","generateContractTypes","_React$useState2","_slicedToArray","_contract_types$find","user_selection","sessionStorage","find","setContractTypeValue","prev_contract_type_value","accumulator_rates","_React$useState4","setAccumulatorRate","prev_accumulator_rate","is_accumulator_selected","is_multiplier_selected","contract_types_list","filter","_ref3","active_positions_filtered","_ref4","getGrowthRatePercentage","active_positions_filtered_totals","ask_price","buy_price","bid_price","forEach","portfolio_pos","_portfolio_pos$contra","_portfolio_pos$contra2","prices","getTotalProfit","cancellation","take_profit","_contract_info$limit_","_contract_info$limit_2","limit_order","order_amount","profit_loss","getOpenPositionsTotals","removeItem","current_user_selection","handleContractTypeChange","_ref25","col_index","renderCellContent","_ref26","MarketSymbolIconRow","_ref27","_ref28","_row_obj$contract_inf2","CurrencyWrapper","getCurrencyDisplayCode","_ref29","_ref30$ask_price","cancellation_price","_ref31","_ref32","cell_value","components","_ref33","_row_obj$contract_inf3","_ref34","stop_loss","has_sign","_ref35","total_profit","_ref36","_ref37","MultiplierCloseActions","getMultiplierOpenPositionsColumnsTemplate","_ref39","_ref40","_ref41","_ref42","_row_obj$contract_inf4","_ref43","_ref44","_row_obj$contract_inf5","_ref46","_ref47","_ref48","ContractCardSell","getAccumulatorOpenPositionsColumnsTemplate","_ref15","is_vanilla","is_turbos","_ref16","_row_obj$contract_inf","_ref17","renderHeader","_ref18","_ref19","_row_obj$barrier","non_vanilla_payout","barrier","toFixed","_ref20","_ref21","_ref22","_ref23","IndicativeCell","_ref24","ProgressSliderStream","getOpenPositionsColumnsTemplate","classname","shared_props","args","Dropdown","is_align_text_left","list","onChange","target","SelectNative","list_items","should_show_empty_option","withRouter","RadioButton","selected_value","htmlFor","onClick","as","line_height","CUSTOM_KEY","CompositeCalendarMobile","_applied_date_range$l","input_date_range","duration_list","to","date_range","range","format","from_date","setFrom","to_date","setTo","_React$useState6","is_open","setIsOpen","_React$useState8","applied_date_range","setAppliedDateRange","_React$useState10","selected_date_range","setSelectedDateRange","today","selectDateRange","_selected_date_range","is_today","new_from","duration","startOf","subtract","add","endOf","is_batch","applyDateRange","new_to","new_date_range","selectDate","_e$target","_e$target2","onDateRangeChange","_date_range","InputField","is_read_only","MobileDialog","portal_element_id","visible","has_content_scroll","onClose","content_height_offset","Button","has_effect","secondary","large","primary","DatePicker","placeholder","max_date","min_date","tertiary","displayName","is_active","items","flag","unix","ceil","isActive","ListItem","TwoMonthPickerLoadable","Loadable","loader","loading","render","loaded","Component","CompositeCalendar","show_to","setShowTo","show_from","setShowFrom","wrapper_ref","hideCalendar","showCalendar","useOnClickOutside","event","stopPropagation","preventDefault","_wrapper_ref$current","contains","date","CalendarIcon","daysFromTodayTo","getToDateLabel","ref","SideList","isPeriodDisabled","ReportsMeta","filter_component","is_statement","_extractInfoFromShort","_extractInfoFromShort2","_getUnsupportedContra","toUpperCase","ProfitTable","profit_table","useReportsStore","is_switching","data","date_from","date_to","handleDateChange","handleScroll","onUnmount","prev_date_from","prev_date_to","start_date_filter","formatDate","end_date_filter","items_count","_ref7","item_count","transaction_id","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","ProfitLossCell","getProfitTableColumnsTemplate","fromEntries","onScroll","formatted_duration_type","slice","duration_classname","sell_time","sell_price","FilterComponent","statement","handleFilterChange","filter_list","FilterDropdown","dropdown_display_className","initial_selected_filter","DetailsComponent","_ref$message","_ref$action_type","address_hash_match","exec","split","address_hash","blockchain_hash_match","blockchain_hash","messages","lines","index","capitalizeFirstLetter","Clipboard","text_copy","popoverAlignment","_action","desc","is_sold","transaction_time","withdrawal_details","shouldShowForwardStartingNotification","isForwardStarting","hasForwardContractStarted","_typeof","Statement","current_language","is_virtual","prev_action_type","transaction_type_filter","passthrough","isTopUp","app_id","Label","mode","_ref5","_ref6","getStatementTableColumnsTemplate","refid","balance","Reports","_selected_route$path","history","routes","is_logged_in","is_logging_in","is_from_derivgo","routeBackInApp","is_reports_visible","setReportsTabIndex","reports_route_tab_index","toggleReports","pathname","form_source","menu_options","options","route","push","icon_component","getTitle","path","selected_route","getSelectedRoute","is_fullscreen","FadeWrapper","is_visible","keyname","PageOverlay","header","onClickClose","is_from_app","VerticalTab","is_floating","current_path","is_routed","is_full_width","setVerticalTabIndex","vertical_tab_index","Div100vhContainer","height_offset","option","_option$path","hide_top_placeholder","hasOwn","classes","arg","appendClass","parseValue","isArray","newClass","module","exports"],"sourceRoot":""}