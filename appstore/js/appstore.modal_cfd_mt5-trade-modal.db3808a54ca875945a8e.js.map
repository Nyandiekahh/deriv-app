{"version":3,"file":"appstore/js/appstore.modal_cfd_mt5-trade-modal.db3808a54ca875945a8e.js","mappings":";4MAMMA,EAAiB,SAAHC,GAA6C,IAAvCC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAC5B,OACIC,IAAAA,cAAA,OAAKD,UAAWA,EAAW,cAAY,6BACnCC,IAAAA,cAACC,EAAAA,UAAS,CACNC,UAAWJ,EACXK,cAAcC,EAAAA,EAAAA,YAAa,IAAKC,EAAAA,EAAAA,UAAS,QACzCC,iBAAiBD,EAAAA,EAAAA,UAAS,WAC1BE,kBAAkBH,EAAAA,EAAAA,YAAa,OAAS,WAIxD,ECSA,QAbgB,SAAHP,GAAA,IAAMW,EAAKX,EAALW,MAAOC,EAAOZ,EAAPY,QAASC,EAASb,EAATa,UAAS,OACxCV,IAAAA,cAAA,OAAKD,UAAU,8BACXC,IAAAA,cAACW,EAAAA,KAAI,CACDC,KAAK,KACLC,OAAQJ,EAAU,OAAS,GAC3BV,UAAWe,IAAW,6BAA8B,CAAE,oCAAqCJ,KAE1FF,GAELR,IAAAA,cAACJ,EAAc,CAACE,KAAMU,EAAOT,UAAU,+BACrC,6HCPJgB,EAAY,WACd,OACIf,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKD,UAAU,4BACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,kBAEfjB,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,QACPZ,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,2JAKhD,EA2EaC,GAA4BC,EAAAA,EAAAA,WAAS,SAACC,GAA2C,IAAAC,EAAAC,EAC1FC,EAA0CH,EAAlCI,UAAAA,OAAS,IAAAD,GAAQA,EAAEE,EAAeL,EAAfK,WAErBC,EAAqB,WACvB,IAAMC,EAAqB,gBAG3B,IADgCC,EAAAA,EAAQC,IAAIF,GAC5C,CAKAC,EAAAA,EAAQE,IAAIH,EAHoB,OAGyB,CACrDI,OAAQ,aACRC,QAJ6B,KAHE,CASvC,EAEMC,GAAkBC,EAAAA,EAAAA,cAExBC,EAAAA,EAAAA,YAAU,WACNF,GAAmBP,GACvB,GAAG,CAACO,IAOJ,OACInC,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKD,UAAU,oBACXC,IAAAA,cAAA,OAAKD,UAAU,oCACXC,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,8BAA8BlB,UAAU,aAI1D2B,GACG1B,IAAAA,cAAA,OAAKD,UAAU,2BACXC,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KAAKzB,OAAO,OAAO0B,MAAM,UAC9BvC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,yCAKxCnB,IAAAA,cAAA,OAAKD,UAAU,8DACXC,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACE,OAAO,OAAO2B,MAAM,sBAAqB,MAInDxC,IAAAA,cAAA,OAAKD,UAAU,kCACXC,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KACLtC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,wEAC3BgB,GACGnC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,qDAM3CgB,GACGnC,IAAAA,cAAA,OAAKD,UAAU,gCACXC,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,2BAA2BwB,OAAQ,IAAKC,MAAO,QAKtE1C,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACE,OAAO,OAAO2B,MAAM,sBAAqB,MAInDxC,IAAAA,cAAA,OAAKD,UAAU,kCACXC,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KACLtC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,wFAM5CnB,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAAA,OAAKD,UAAU,sCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,gCAA+BM,EAAAA,EAAAA,UAAS,WACxDL,IAAAA,cAAC2C,EAAAA,EAAO,CAAClC,SAAO,EAACD,MAA4B,QAAvBe,EAAEI,EAAWiB,kBAAU,IAAArB,EAAAA,EAAI,MAErDvB,IAAAA,cAAA,OAAKD,UAAU,sCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,gCAA+BM,EAAAA,EAAAA,UAAS,gBACxDL,IAAAA,cAAC2C,EAAAA,EAAO,CAAClC,SAAO,EAACD,MAAyB,QAApBgB,EAAEG,EAAWkB,eAAO,IAAArB,EAAAA,EAAI,MAElDxB,IAAAA,cAACe,EAAS,OAGdf,IAAAA,cAAA,OAAKD,UAAU,kCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,OACNP,EAAAA,EAAAA,UAAS,cAAe,IACzBL,IAAAA,cAAA,KAAG8C,KAAK,wCAAwCC,OAAO,SAASC,IAAI,eAC/D3C,EAAAA,EAAAA,UAAS,wBAKxB8B,GACEnC,IAAAA,cAAA,OAAKD,UAAS,kEACVC,IAAAA,cAACiD,EAAAA,OAAM,CAACC,KAAK,SAASC,QApFf,WACnBvB,IACAwB,OAAOC,KAAK,4BAA6B,SAC7C,EAiF+DC,SAAO,EAACC,OAAK,GACxDvD,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,mCAMpD,IACA,QA7L2B,SAACG,GACxB,OACItB,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKD,UAAU,oBACXC,IAAAA,cAAA,OAAKD,UAAU,oCACXC,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,0BAA0BL,KAAM,OAInDZ,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,IAAI1B,KAAK,KACdZ,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,2DAIpCnB,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KAAKzB,OAAO,OAAOD,KAAK,KAC7BZ,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,uCAGhCnB,IAAAA,cAAA,OAAKD,UAAU,2BACXC,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACE,OAAO,OAAO2B,MAAM,sBAAqB,MAInDxC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MACPZ,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,4DAIpCnB,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACE,OAAO,OAAO2B,MAAM,sBAAqB,MAInDxC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MACPZ,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,uDAGpCnB,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACE,OAAO,OAAO2B,MAAM,sBAAqB,MAInDxC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MACPZ,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,wDAMhDnB,IAAAA,cAAA,OAAKD,UAAS,4BAAAyD,SAA+BpB,EAAAA,EAAAA,cAAe,qCACxDpC,IAAAA,cAACiD,EAAAA,OAAM,CAACC,KAAK,SAASC,QAAS7B,EAAMmC,cAAeH,SAAO,EAACC,OAAK,GAC7DvD,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,WAKhD,oLCjFA,QARoB,SAAHtB,GAAA,IAAMsD,EAAOtD,EAAPsD,QAAO,OAC1BnD,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACiD,EAAAA,OAAM,CAAClD,UAAU,mCAAmC2D,aAAW,EAACP,QAASA,GACtEnD,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,sBAE9B,0BCUGwC,EAAqB,SAACC,EAA6BV,GAC5D,OAAQU,GACJ,KAAKC,EAAAA,GAAcC,QACf,OAAOC,EAAAA,EAAAA,IAA+Bb,GAC1C,KAAKW,EAAAA,GAAcG,QACf,OAAOC,EAAAA,EAAAA,IAA+Bf,GAC1C,QACI,OAAOa,EAAAA,EAAAA,IAA+Bb,GAElD,EAyCagB,EAA2B,SAAHrE,GAMJ,IAL7B+D,EAAQ/D,EAAR+D,SACAO,EAActE,EAAdsE,eACAC,EAAcvE,EAAduE,eACAC,EAAgBxE,EAAhBwE,iBACAC,EAAOzE,EAAPyE,QAkBA,OACItE,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACiD,EAAAA,OAAM,CACHlD,UAAU,mCACVoD,QAAS,WACDS,IAAaC,EAAAA,GAAcG,QAC3BK,EAAiBE,EAAAA,GAAaD,EAAU,OAAS,QAEjDlB,OAAOC,KAxBW,WAClC,OAAQO,GACJ,KAAKC,EAAAA,GAAcG,QACf,OAAOQ,EAAAA,EAAAA,IACHJ,GAAkBA,EAAeE,EAAUG,EAAAA,GAASC,KAAOD,EAAAA,GAASE,OAE5E,KAAKd,EAAAA,GAAcC,QACf,OAAOc,EAAAA,EAAAA,IACHN,EAAUG,EAAAA,GAASC,KAAOD,EAAAA,GAASE,KACnCR,EAAeG,EAAUG,EAAAA,GAASC,KAAOD,EAAAA,GAASE,OAE1D,QACI,MAAO,GAEnB,CAUgCE,GAEpB,GAEA7E,IAAAA,cAAA,OAAKD,UAAU,yCACXC,IAAAA,cAACW,EAAAA,KAAI,CAAC6B,MAAM,UAAU5B,KAAK,MAAMC,OAAO,QACpCb,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,oBAMpD,ECuTA,SAAeE,EAAAA,EAAAA,WA5ViB,SAAHxB,GAUL,IAAAiF,EAAAC,EAAAC,EDvDUC,EACxBC,EC6CNC,EAA4BtF,EAA5BsF,6BACAC,EAAUvF,EAAVuF,WACAC,EAAiBxF,EAAjBwF,kBACAC,EAAWzF,EAAXyF,YACAnB,EAActE,EAAdsE,eACAC,EAAcvE,EAAduE,eACAE,EAAOzE,EAAPyE,QACAV,EAAQ/D,EAAR+D,SACA2B,EAAS1F,EAAT0F,UAEQnD,GAAcoD,EAAAA,EAAAA,KAAdpD,UACRqD,GAMIC,EAAAA,EAAAA,KALAC,EAAEF,EAAFE,GACAC,EAAMH,EAANG,OACAC,EAAMJ,EAANI,OACAC,EAAWL,EAAXK,YACWC,EAAGN,EAAdO,QAAWD,IAGPE,EAA8FL,EAA9FK,sBAAuBC,EAAuEN,EAAvEM,4CAA6CC,EAA0BP,EAA1BO,sBACpEC,EAAqFL,EAArFK,eAAgBC,EAAqEN,EAArEM,oBAAqBC,EAAgDP,EAAhDO,yBAA0BC,EAAsBR,EAAtBQ,kBAC/DC,EAAwBX,EAAxBW,oBACAC,EAAoCd,EAApCc,gCACAC,EAAoFZ,EAApFY,sBAAuBC,EAA6Db,EAA7Da,cAAeC,EAA8Cd,EAA9Cc,QAASC,EAAqCf,EAArCe,qBAAsBC,EAAehB,EAAfgB,WAEvEC,EAAU,CACZC,OACIhH,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KAAK1B,KAAK,KAAKC,OAAO,OAAOd,UAAU,6CAC3CM,EAAAA,EAAAA,UAAS,wBAGlB4G,QACIjH,IAAAA,cAAA,MAAID,UAAU,kDACVC,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KAAK1B,KAAK,MAAMsG,YAAY,IAAInH,UAAU,8CAC9CM,EAAAA,EAAAA,UAAS,oEAEdL,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KAAK1B,KAAK,MAAMsG,YAAY,IAAInH,UAAU,6CAC/CC,IAAAA,cAACkB,EAAAA,SAAQ,CACLC,kBAAkB,0KAClBgG,OAAQ,CACJC,UAAyD,QAAhDtC,EAAEoB,EAA4C,UAAE,IAAApB,OAAA,EAA9CA,EAAgDsC,cAIvEpH,IAAAA,cAAA,MAAID,UAAU,qDACTsH,EAAAA,EAAAA,MAA0BC,KAAI,SAAAC,GAAI,OAC/BvH,IAAAA,cAACW,EAAAA,KAAI,CACD6G,IAAKD,EACLjF,GAAG,KACH1B,KAAK,MACLsG,YAAY,IACZnH,UAAU,8CAETM,EAAAA,EAAAA,UAASkH,GACP,IAEXvH,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,KAAK1B,KAAK,MAAMsG,YAAY,IAAInH,UAAU,6CAC/CC,IAAAA,cAACkB,EAAAA,SAAQ,CACLC,kBAAkB,kRAClBsG,WAAY,CAACzH,IAAAA,cAAA,QAAMwH,IAAK,EAAGzH,UAAU,0DAmE7D,OACIC,IAAAA,cAAA,OAAKD,UAAU,6BACXC,IAAAA,cAAA,OAAKD,UAAU,mBArKU,SACjC6D,EACAU,EACAa,GAEA,OACInF,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAI,eAAAuC,OAAiBI,EAAS8D,OAAO,GAAGC,eAAanE,OAAGI,EAASgE,MAAM,GAAE,aAAahH,KAAM,KAClGZ,IAAAA,cAAA,OAAKD,UAAU,yBACXC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,KAAKsG,YAAY,IAAIrG,OAAO,OAAOd,UAAU,iCACpDC,IAAAA,cAACkB,EAAAA,SAAQ,CACLC,kBAAkB,wCAClBgG,OAAQ,CACJvD,UAAUiE,EAAAA,EAAAA,IAAcjE,GACxBU,QAASA,EAAU,OAAS,IAEhCmD,WAAY,CACRzH,IAAAA,cAAA,QACIwH,IAAK,EACLzH,UAAW6D,IAAaC,EAAAA,GAAcG,SAAWM,EAAU,uBAAyB,UAKjGa,aAA4B,EAA5BA,EAA2D2C,gBAC1DlE,IAAaC,EAAAA,GAAcC,SAC1BF,IAAaC,EAAAA,GAAcG,SAAWM,GACnCtE,IAAAA,cAACW,EAAAA,KAAI,CAAC6B,MAAM,iBAAiB5B,KAAK,OAAOsG,YAAY,QAC/C/B,aAA4B,EAA5BA,EAA2D2C,gBAMzF,CAoIiBC,CAA6BnE,EAAUU,EAASa,IAChDA,aAA4B,EAA5BA,EAA8B6C,kBAC3BhI,IAAAA,cAAA,OAAKD,UAAU,4BACV6D,IAAaC,EAAAA,GAAcG,SAAW4C,GACnC5G,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAM2B,MAAM,UAClBlC,EAAAA,EAAAA,UAAS,mBAGlBL,IAAAA,cAACW,EAAAA,KAAI,CACDC,KAAK,IACL4B,MAAOoB,IAAaC,EAAAA,GAAcG,QAAU,iBAAmB,YAC/DjE,UAAU,gCACVc,OAAO,QAEPb,IAAAA,cAACiI,EAAAA,MAAK,CACFC,OACItB,GAAWhD,IAAaC,EAAAA,GAAcG,QAChCmC,EACAhB,EAA6B6C,gBAEvCG,SAAUhD,EAA6BgD,SACvCC,WACMjD,EAA6BkD,SAAWlD,EAA6BkD,QAAU,EAErFC,eAAa,OAMjCtI,IAAAA,cAAA,OAAKD,UAAU,gCACV6D,IAAaC,EAAAA,GAAcC,SACxB9D,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,+BAA8BM,EAAAA,EAAAA,UAAS,aACvDL,IAAAA,cAAC2C,EAAAA,EAAO,CACJlC,SAAO,EACPD,MAAQ2E,aAA4B,EAA5BA,EAA2DoD,SAG3EvI,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,+BAA8BM,EAAAA,EAAAA,UAAS,aACvDL,IAAAA,cAAA,OAAKD,UAAU,8BACXC,IAAAA,cAACwI,EAAW,CACR5E,SAAS,UACTT,QAAS,WACL,IAAMsF,GAAeC,EAAAA,EAAAA,kBAAiB,CAClCC,YAAaxD,EAA6BwD,YAC1CC,iBAAkBzD,EAA6ByD,iBAC/ChF,SAAUC,EAAAA,GAAcgF,IACxBC,UAAW3D,EAA6B4D,wBAE5C1D,EACIF,aAA4B,EAA5BA,EAA8BoD,OAC9BS,EAAAA,EAAAA,IAAS7D,EAA6BwD,YAAavD,GACnDD,EAA6BsD,aAC7BA,EACAtD,aAA4B,EAA5BA,EAA8B8D,QAElC3D,GACJ,OAOnB1B,IAAaC,EAAAA,GAAcG,SAAW4C,GACnC5G,IAAAA,cAACA,IAAAA,SAAc,KACViG,EACIiD,QAAO,SAAAC,GAAoB,MAA0C,SAAtCA,EAAqBV,YAAuB,IAC3EnB,KAAI,SAAA8B,GACD,OACIpJ,IAAAA,cAAA,OAAKwH,IAAK4B,EAAgBb,MAAOxI,UAAU,qCACvCC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAMwI,EAAgBb,OACjCvI,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,KAAKC,OAAO,QACnBb,IAAAA,cAACiI,EAAAA,MAAK,CACFC,OAAQkB,EAAgBf,QACxBF,SAAUiB,EAAgBjB,SAC1BC,WAAYgB,EAAgBf,SAAWe,EAAgBf,QAAU,EACjEC,eAAa,KAKjC,KAC6D,QAAhEvD,EAA+C,QAA/CC,EAACkB,EAA4C,UAAE,IAAAlB,OAAA,EAA9CA,EAAgDqE,uBAAe,IAAAtE,EAAAA,EAAI,GAAK,GACtE/E,IAAAA,cAAA,OAAKD,UAAU,sCACXC,IAAAA,cAACiD,EAAAA,OAAM,CACHE,QAAS,WACLkD,IACMQ,IAAwBF,IAAkBC,GAG5CR,EAAe,CACXkD,SAAU5C,EACVxD,KAAM,QAEVsD,EAAoB3C,EAAAA,GAAcG,SAClC8C,KAPAL,GASR,EACA/C,aAAW,EACX6F,WAAYjD,GAEZtG,IAAAA,cAACgB,EAAAA,KAAI,CACDC,KAAM,4BACNL,KAAM,GACNb,UAAU,6CAEdC,IAAAA,cAAA,OAAKD,UAAU,+CACXC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAM,cAAY,QACxBP,EAAAA,EAAAA,UAAS,mCAO9BL,IAAAA,cAAA,OAAKD,UAAU,oCACXC,IAAAA,cAACwJ,EAAAA,eAAc,CAACzC,QAASA,MAKrC/G,IAAAA,cAAA,OAAKD,UAAU,gCACXC,IAAAA,cAACgB,EAAAA,KAAI,CACDC,KAAK,iBACLL,KAAOwB,EAAiB,GAAL,GACnBrC,UAAU,sCAEdC,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,OAAOb,UAAU,qCACvB6D,IAAaC,EAAAA,GAAcC,SACxB9D,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,4IAE/ByC,IAAaC,EAAAA,GAAcgF,KACxB7I,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,yJAE/ByC,IAAaC,EAAAA,GAAcG,SACxBhE,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,mJAMhDnB,IAAAA,cAAA,OAAKD,UAAU,wCAjLS,SAAC0J,GAC7B,IAAIC,EAAY,GAChB,GAAID,IAAkB5F,EAAAA,GAAcC,QAChC4F,GAAYrJ,EAAAA,EAAAA,UAAS,mCAClB,IAAsB,YAAlBoJ,GAAgClE,EAEpC,OACI,KAFPmE,GAAYrJ,EAAAA,EAAAA,UAAS,8BAKzB,CAEA,OACIL,IAAAA,cAAA,OAAKD,UAAU,gDACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,oDAAoDa,KAAK,MACpE8I,GAEL1J,IAAAA,cAACkE,EAAwB,CACrBN,SAAUA,EACVU,QAASA,EACTH,eAAgBA,EAChBC,eAAgBA,EAChBC,iBAAkBkC,IAIlC,CAuJ+DoD,CAAwB/F,IAC9EA,IAAaC,EAAAA,GAAcG,SACxBhE,IAAAA,cAACA,IAAAA,SAAc,MACTuF,GACEvF,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKD,UAAU,iDACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,gBAAgBL,KAAM,KACjCZ,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,qDAAqDa,KAAK,OACrEP,EAAAA,EAAAA,UAAS,wBAEdL,IAAAA,cAAA,KACID,UAAU,4DACVmD,KAAK,SACLJ,KAAM8G,EAAAA,GACN7G,OAAO,SACPC,IAAI,uBAEJhD,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAMC,OAAO,OAAO2B,MAAM,cAChCnC,EAAAA,EAAAA,UAAS,eAItBL,IAAAA,cAAA,OAAKD,UAAU,+CACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,cAAcL,KAAM,KAC/BZ,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,mDAAmDa,KAAK,OACnEP,EAAAA,EAAAA,UAAS,sBAEdL,IAAAA,cAAA,KACID,UAAU,0DACVmD,KAAK,SACLJ,KAAM+G,EAAAA,GACN9G,OAAO,SACPC,IAAI,uBAEJhD,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAMC,OAAO,OAAO2B,MAAM,cAChCnC,EAAAA,EAAAA,UAAS,iBAQtCL,IAAAA,cAAA,OAAKD,UAAU,gDA3PW,WAC9B,OAAQ6D,GACJ,IAAK,UACD,OACI5D,IAAAA,cAACW,EAAAA,KAAI,CACD4B,MAAM,SACND,GAAG,IACHvC,UAAU,wCACVa,KAAOwB,EAAqB,MAAT,OACnBvB,OAAO,SAENR,EAAAA,EAAAA,UAAS,qEAGtB,IAAK,UACD,OACIL,IAAAA,cAACW,EAAAA,KAAI,CACD4B,MAAM,SACND,GAAG,IACHvC,UAAU,wCACVa,KAAOwB,EAAqB,MAAT,OACnBvB,OAAO,SAENR,EAAAA,EAAAA,UAAS,2EAGtB,QACI,MAAO,GAEnB,CA8NuEyJ,IAE/D9J,IAAAA,cAAA,OAAKD,UAAU,4CACXC,IAAAA,cAAA,OAAKD,UAAU,0DACXC,IAAAA,cAAA,OAAKD,UAAU,iEACXC,IAAAA,cAAA,KAAG8C,KAAMa,EAAmBC,EAAU,OAAQb,OAAO,SAASC,IAAI,uBAC9DhD,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,sBAAsByB,MAAQN,EAAoB,MAAR,MAAeK,OAAQ,OAGpFzC,IAAAA,cAAA,KAAG8C,KAAMa,EAAmBC,EAAU,WAAYb,OAAO,SAASC,IAAI,uBAClEhD,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,uBAAuByB,MAAO,IAAKD,OAAQ,MAGzDmB,IAAaC,EAAAA,GAAcG,SACxBhE,IAAAA,cAAA,KAAG8C,KAAMa,EAAmBC,EAAU,UAAWb,OAAO,SAASC,IAAI,uBACjEhD,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,uBAAuByB,MAAO,IAAKD,OAAQ,OAIjEL,GACGpC,IAAAA,cAAA,OAAKD,UAAU,qDDhYDkF,ECiYSrB,EDhYjCsB,GAAiB9E,EAAAA,EAAAA,YAAa,OAAS,MAczCJ,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAC+J,EAAAA,EAAM,CACHvJ,MAdQ,WAChB,OAAQyE,GACJ,KAAKpB,EAAAA,GAAcC,QACf,MAAO,4BACX,KAAKD,EAAAA,GAAcG,QACf,MAAO,4BACX,QACI,MAAO,4BAEnB,CAKmBgG,GACPpJ,KAAM,EACNqJ,MAAO,CAAExH,OAAQ,OAAQyH,SAAU,OAAQxH,MAAOwC,KAEtDlF,IAAAA,cAACW,EAAAA,KAAI,CAAC4B,MAAM,SAAS3B,KAAK,OACtBZ,IAAAA,cAACkB,EAAAA,SAAQ,CACLC,kBAAkB,qDAClBgG,OAAQ,CAAEvD,UAAUiE,EAAAA,EAAAA,IAAc5C,WC+WtD,4BCpaA,gBAA8B,QC0E9B,QA/DiC,SAAHpF,GAA6E,IAAvEsK,EAAatK,EAAbsK,cAAeC,EAAiBvK,EAAjBuK,kBACzCC,GAAyBC,EAAAA,EAAAA,IAA0B,CAAEF,kBAAAA,IACrDG,GAAwBC,EAAAA,EAAAA,IAAyB,CAAEJ,kBAAAA,IAEzD,OACIpK,IAAAA,cAACyK,EAAAA,SAAQ,KACLzK,IAAAA,cAAA,OAAKD,UAAU,wCACVsK,EAAuB/C,KAAI,SAAAoD,GAAM,OAC9B1K,IAAAA,cAAA,OAAKwH,IAAKkD,EAAOzJ,KAAMlB,UAAU,gDAC7BC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAMyJ,EAAOzJ,KAAML,KAAM,KAC/BZ,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,oDAAoDa,KAAK,MACpE8J,EAAO5K,MAEZE,IAAAA,cAAA,KACID,UAAU,oDACVmD,KAAK,SACLJ,KAAM4H,EAAO5H,KACbC,OAAO,SACPC,IAAI,uBAEJhD,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAMC,OAAO,OAAO2B,MAAM,aAChCkI,EAAOC,cAGd,KAGd3K,IAAAA,cAACW,EAAAA,KAAI,CAAC4B,MAAM,SAASD,GAAG,MAAMvC,UAAU,wCAAwCa,KAAK,MAAMC,OAAO,SAC7FR,EAAAA,EAAAA,UACG,+FACA,CACIuD,UAAUgH,EAAAA,EAAAA,qBAAoB/G,EAAAA,cAAcgF,KAC5CgC,QAASV,KAIrBnK,IAAAA,cAAA,OAAKD,UAAU,4CACXC,IAAAA,cAAA,OAAKD,UAAU,0DACVwK,EAAsBjD,KAAI,SAAAwD,GAAA,IAAGhI,EAAIgI,EAAJhI,KAAM7B,EAAI6J,EAAJ7J,KAAI,OACpCjB,IAAAA,cAAA,KAAGwH,IAAKvG,EAAM6B,KAAMA,EAAMC,OAAO,SAASC,IAAI,uBAC1ChD,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAMA,EAAMyB,MAAO,IAAKD,OAAQ,KACtC,KAIZzC,IAAAA,cAAA,OAAKD,UAAU,oDACXC,IAAAA,cAAA,OACI+K,IAAI,kBACJC,KAAKC,EAAAA,EAAAA,YAAW,0CAChBvI,MAAO,GACPD,OAAQ,KAEZzC,IAAAA,cAACW,EAAAA,KAAI,CAAC4B,MAAM,SAAS3B,KAAK,QACrBP,EAAAA,EAAAA,UAAS,+CAAgD,CACtDuD,UAAUsH,EAAAA,EAAAA,qBAAoBrH,EAAAA,cAAcgF,KAAKsC,UAO7E,qPCzEAC,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA/K,KAAA,EAAAsL,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAhB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAA7K,MAAA+K,EAAAgB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAnB,EAAAD,EAAA,KAAAiB,EAAA,aAAAhB,GAAAgB,EAAA,SAAAhB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAmB,EAAApB,EAAAD,EAAAE,EAAAG,GAAA,IAAAI,EAAAT,GAAAA,EAAAI,qBAAAkB,EAAAtB,EAAAsB,EAAAX,EAAAR,OAAAoB,OAAAd,EAAAL,WAAAS,EAAA,IAAAW,EAAAnB,GAAA,WAAAE,EAAAI,EAAA,WAAAxL,MAAAsM,EAAAxB,EAAAC,EAAAW,KAAAF,CAAA,UAAAe,EAAAzB,EAAAD,EAAAE,GAAA,WAAArI,KAAA,SAAA8J,IAAA1B,EAAA2B,KAAA5B,EAAAE,GAAA,OAAAD,GAAA,OAAApI,KAAA,QAAA8J,IAAA1B,EAAA,EAAAD,EAAAqB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAnB,EAAAmB,EAAAzB,GAAA,8BAAA0B,EAAAlC,OAAAmC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAvG,EAAA,MAAAyG,GAAAA,IAAArC,GAAAG,EAAAuB,KAAAW,EAAA5B,KAAAyB,EAAAG,GAAA,IAAAC,EAAAL,EAAA/B,UAAAkB,EAAAlB,UAAAD,OAAAoB,OAAAa,GAAA,SAAAK,EAAAxC,GAAA,0BAAAyC,SAAA,SAAA1C,GAAAiB,EAAAhB,EAAAD,GAAA,SAAAC,GAAA,YAAA0C,QAAA3C,EAAAC,EAAA,gBAAA2C,EAAA3C,EAAAD,GAAA,SAAA6C,EAAA3C,EAAAK,EAAAE,EAAAE,GAAA,IAAAE,EAAAa,EAAAzB,EAAAC,GAAAD,EAAAM,GAAA,aAAAM,EAAAhJ,KAAA,KAAAkJ,EAAAF,EAAAc,IAAAE,EAAAd,EAAA5L,MAAA,OAAA0M,GAAA,UAAAiB,EAAAjB,IAAAxB,EAAAuB,KAAAC,EAAA,WAAA7B,EAAA+C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAAhD,GAAA4C,EAAA,OAAA5C,EAAAQ,EAAAE,EAAA,aAAAV,GAAA4C,EAAA,QAAA5C,EAAAQ,EAAAE,EAAA,IAAAX,EAAA+C,QAAAlB,GAAAoB,MAAA,SAAAhD,GAAAc,EAAA5L,MAAA8K,EAAAQ,EAAAM,EAAA,aAAAd,GAAA,OAAA4C,EAAA,QAAA5C,EAAAQ,EAAAE,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAAzB,EAAAK,EAAA,gBAAApL,MAAA,SAAA8K,EAAAI,GAAA,SAAA6C,IAAA,WAAAlD,GAAA,SAAAA,EAAAE,GAAA2C,EAAA5C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA+C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAzB,EAAAE,EAAAG,GAAA,IAAAE,EAAAsB,EAAA,gBAAApB,EAAAE,GAAA,GAAAJ,IAAAwB,EAAA,MAAAoB,MAAA,mCAAA5C,IAAAyB,EAAA,cAAAvB,EAAA,MAAAE,EAAA,OAAAxL,MAAA8K,EAAAmD,MAAA,OAAA/C,EAAAgD,OAAA5C,EAAAJ,EAAAsB,IAAAhB,IAAA,KAAAE,EAAAR,EAAAiD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAkB,EAAA,gBAAAlB,CAAA,cAAAV,EAAAgD,OAAAhD,EAAAmD,KAAAnD,EAAAoD,MAAApD,EAAAsB,SAAA,aAAAtB,EAAAgD,OAAA,IAAA9C,IAAAsB,EAAA,MAAAtB,EAAAyB,EAAA3B,EAAAsB,IAAAtB,EAAAqD,kBAAArD,EAAAsB,IAAA,gBAAAtB,EAAAgD,QAAAhD,EAAAsD,OAAA,SAAAtD,EAAAsB,KAAApB,EAAAwB,EAAA,IAAAK,EAAAV,EAAA1B,EAAAE,EAAAG,GAAA,cAAA+B,EAAAvK,KAAA,IAAA0I,EAAAF,EAAA+C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA9M,MAAAiN,EAAAT,IAAAyB,KAAA/C,EAAA+C,KAAA,WAAAhB,EAAAvK,OAAA0I,EAAAyB,EAAA3B,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAAS,EAAAT,IAAA,YAAA4B,EAAAvD,EAAAE,GAAA,IAAAG,EAAAH,EAAAmD,OAAA9C,EAAAP,EAAAY,SAAAP,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAoD,SAAA,eAAAjD,GAAAL,EAAAY,SAAA,SAAAV,EAAAmD,OAAA,SAAAnD,EAAAyB,IAAA1B,EAAAsD,EAAAvD,EAAAE,GAAA,UAAAA,EAAAmD,SAAA,WAAAhD,IAAAH,EAAAmD,OAAA,QAAAnD,EAAAyB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAA,aAAA4B,EAAA,IAAAxB,EAAAiB,EAAAnB,EAAAP,EAAAY,SAAAV,EAAAyB,KAAA,aAAAlB,EAAA5I,KAAA,OAAAqI,EAAAmD,OAAA,QAAAnD,EAAAyB,IAAAlB,EAAAkB,IAAAzB,EAAAoD,SAAA,KAAArB,EAAA,IAAAtB,EAAAF,EAAAkB,IAAA,OAAAhB,EAAAA,EAAAyC,MAAAlD,EAAAF,EAAA6D,YAAAlD,EAAAxL,MAAA+K,EAAA4D,KAAA9D,EAAA+D,QAAA,WAAA7D,EAAAmD,SAAAnD,EAAAmD,OAAA,OAAAnD,EAAAyB,IAAA1B,GAAAC,EAAAoD,SAAA,KAAArB,GAAAtB,GAAAT,EAAAmD,OAAA,QAAAnD,EAAAyB,IAAA,IAAAiC,UAAA,oCAAA1D,EAAAoD,SAAA,KAAArB,EAAA,UAAA+B,EAAA/D,GAAA,IAAAD,EAAA,CAAAiE,OAAAhE,EAAA,SAAAA,IAAAD,EAAAkE,SAAAjE,EAAA,SAAAA,IAAAD,EAAAmE,WAAAlE,EAAA,GAAAD,EAAAoE,SAAAnE,EAAA,SAAAoE,WAAAC,KAAAtE,EAAA,UAAAuE,EAAAtE,GAAA,IAAAD,EAAAC,EAAAuE,YAAA,GAAAxE,EAAAnI,KAAA,gBAAAmI,EAAA2B,IAAA1B,EAAAuE,WAAAxE,CAAA,UAAAwB,EAAAvB,GAAA,KAAAoE,WAAA,EAAAJ,OAAA,SAAAhE,EAAAyC,QAAAsB,EAAA,WAAAS,OAAA,YAAA3I,EAAAkE,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAW,GAAA,GAAAT,EAAA,OAAAA,EAAA0B,KAAA5B,GAAA,sBAAAA,EAAA8D,KAAA,OAAA9D,EAAA,IAAA0E,MAAA1E,EAAA2E,QAAA,KAAApE,GAAA,EAAAE,EAAA,SAAAqD,IAAA,OAAAvD,EAAAP,EAAA2E,QAAA,GAAAtE,EAAAuB,KAAA5B,EAAAO,GAAA,OAAAuD,EAAA3O,MAAA6K,EAAAO,GAAAuD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA3O,MAAA8K,EAAA6D,EAAAV,MAAA,EAAAU,CAAA,SAAArD,EAAAqD,KAAArD,CAAA,YAAAmD,UAAAd,EAAA9C,GAAA,2BAAAkC,EAAA9B,UAAA+B,EAAA5B,EAAAiC,EAAA,eAAArN,MAAAgN,EAAAhB,cAAA,IAAAZ,EAAA4B,EAAA,eAAAhN,MAAA+M,EAAAf,cAAA,IAAAe,EAAA0C,YAAA3D,EAAAkB,EAAApB,EAAA,qBAAAf,EAAA6E,oBAAA,SAAA5E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA6E,YAAA,QAAA9E,IAAAA,IAAAkC,GAAA,uBAAAlC,EAAA4E,aAAA5E,EAAAF,MAAA,EAAAE,EAAA+E,KAAA,SAAA9E,GAAA,OAAAE,OAAA6E,eAAA7E,OAAA6E,eAAA/E,EAAAkC,IAAAlC,EAAAgF,UAAA9C,EAAAlB,EAAAhB,EAAAc,EAAA,sBAAAd,EAAAG,UAAAD,OAAAoB,OAAAiB,GAAAvC,CAAA,EAAAD,EAAAkF,MAAA,SAAAjF,GAAA,OAAA+C,QAAA/C,EAAA,EAAAwC,EAAAG,EAAAxC,WAAAa,EAAA2B,EAAAxC,UAAAS,GAAA,0BAAAb,EAAA4C,cAAAA,EAAA5C,EAAAmF,MAAA,SAAAlF,EAAAC,EAAAG,EAAAE,EAAAE,QAAA,IAAAA,IAAAA,EAAA2E,SAAA,IAAAzE,EAAA,IAAAiC,EAAAvB,EAAApB,EAAAC,EAAAG,EAAAE,GAAAE,GAAA,OAAAT,EAAA6E,oBAAA3E,GAAAS,EAAAA,EAAAmD,OAAAb,MAAA,SAAAhD,GAAA,OAAAA,EAAAmD,KAAAnD,EAAA9K,MAAAwL,EAAAmD,MAAA,KAAArB,EAAAD,GAAAvB,EAAAuB,EAAAzB,EAAA,aAAAE,EAAAuB,EAAA7B,GAAA,0BAAAM,EAAAuB,EAAA,qDAAAxC,EAAAqF,KAAA,SAAApF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAoE,KAAAjE,GAAA,OAAAH,EAAAoF,UAAA,SAAAxB,IAAA,KAAA5D,EAAAyE,QAAA,KAAA1E,EAAAC,EAAAqF,MAAA,GAAAtF,KAAAD,EAAA,OAAA8D,EAAA3O,MAAA8K,EAAA6D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA9D,EAAAlE,OAAAA,EAAA0F,EAAApB,UAAA,CAAA0E,YAAAtD,EAAAiD,MAAA,SAAAzE,GAAA,QAAAwF,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAAxD,EAAA,KAAAmD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAA1B,EAAA,KAAAoE,WAAA3B,QAAA6B,IAAAvE,EAAA,QAAAE,KAAA,WAAAA,EAAA7D,OAAA,IAAAgE,EAAAuB,KAAA,KAAA1B,KAAAwE,OAAAxE,EAAA3D,MAAA,WAAA2D,GAAAD,EAAA,EAAAwF,KAAA,gBAAArC,MAAA,MAAAnD,EAAA,KAAAoE,WAAA,GAAAG,WAAA,aAAAvE,EAAApI,KAAA,MAAAoI,EAAA0B,IAAA,YAAA+D,IAAA,EAAAhC,kBAAA,SAAA1D,GAAA,QAAAoD,KAAA,MAAApD,EAAA,IAAAE,EAAA,cAAAyF,EAAAtF,EAAAE,GAAA,OAAAI,EAAA9I,KAAA,QAAA8I,EAAAgB,IAAA3B,EAAAE,EAAA4D,KAAAzD,EAAAE,IAAAL,EAAAmD,OAAA,OAAAnD,EAAAyB,IAAA1B,KAAAM,CAAA,SAAAA,EAAA,KAAA8D,WAAAM,OAAA,EAAApE,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAA4D,WAAA9D,GAAAI,EAAAF,EAAA+D,WAAA,YAAA/D,EAAAwD,OAAA,OAAA0B,EAAA,UAAAlF,EAAAwD,QAAA,KAAAuB,KAAA,KAAA3E,EAAAR,EAAAuB,KAAAnB,EAAA,YAAAM,EAAAV,EAAAuB,KAAAnB,EAAA,iBAAAI,GAAAE,EAAA,SAAAyE,KAAA/E,EAAAyD,SAAA,OAAAyB,EAAAlF,EAAAyD,UAAA,WAAAsB,KAAA/E,EAAA0D,WAAA,OAAAwB,EAAAlF,EAAA0D,WAAA,SAAAtD,GAAA,QAAA2E,KAAA/E,EAAAyD,SAAA,OAAAyB,EAAAlF,EAAAyD,UAAA,YAAAnD,EAAA,MAAAoC,MAAA,kDAAAqC,KAAA/E,EAAA0D,WAAA,OAAAwB,EAAAlF,EAAA0D,WAAA,KAAAR,OAAA,SAAA1D,EAAAD,GAAA,QAAAE,EAAA,KAAAmE,WAAAM,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA8D,WAAAnE,GAAA,GAAAK,EAAA0D,QAAA,KAAAuB,MAAAnF,EAAAuB,KAAArB,EAAA,oBAAAiF,KAAAjF,EAAA4D,WAAA,KAAA1D,EAAAF,EAAA,OAAAE,IAAA,UAAAR,GAAA,aAAAA,IAAAQ,EAAAwD,QAAAjE,GAAAA,GAAAS,EAAA0D,aAAA1D,EAAA,UAAAE,EAAAF,EAAAA,EAAA+D,WAAA,UAAA7D,EAAA9I,KAAAoI,EAAAU,EAAAgB,IAAA3B,EAAAS,GAAA,KAAA4C,OAAA,YAAAS,KAAArD,EAAA0D,WAAAlC,GAAA,KAAA2D,SAAAjF,EAAA,EAAAiF,SAAA,SAAA3F,EAAAD,GAAA,aAAAC,EAAApI,KAAA,MAAAoI,EAAA0B,IAAA,gBAAA1B,EAAApI,MAAA,aAAAoI,EAAApI,KAAA,KAAAiM,KAAA7D,EAAA0B,IAAA,WAAA1B,EAAApI,MAAA,KAAA6N,KAAA,KAAA/D,IAAA1B,EAAA0B,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA7D,EAAApI,MAAAmI,IAAA,KAAA8D,KAAA9D,GAAAiC,CAAA,EAAA4D,OAAA,SAAA5F,GAAA,QAAAD,EAAA,KAAAqE,WAAAM,OAAA,EAAA3E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAmE,WAAArE,GAAA,GAAAE,EAAAiE,aAAAlE,EAAA,YAAA2F,SAAA1F,EAAAsE,WAAAtE,EAAAkE,UAAAG,EAAArE,GAAA+B,CAAA,kBAAAhC,GAAA,QAAAD,EAAA,KAAAqE,WAAAM,OAAA,EAAA3E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAmE,WAAArE,GAAA,GAAAE,EAAA+D,SAAAhE,EAAA,KAAAI,EAAAH,EAAAsE,WAAA,aAAAnE,EAAAxI,KAAA,KAAA0I,EAAAF,EAAAsB,IAAA4C,EAAArE,EAAA,QAAAK,CAAA,QAAA4C,MAAA,0BAAA2C,cAAA,SAAA9F,EAAAE,EAAAG,GAAA,YAAAiD,SAAA,CAAA1C,SAAA9E,EAAAkE,GAAA6D,WAAA3D,EAAA6D,QAAA1D,GAAA,cAAAgD,SAAA,KAAA1B,IAAA1B,GAAAgC,CAAA,GAAAjC,CAAA,UAAA+F,EAAA1F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAI,EAAAE,GAAA,QAAAJ,EAAAJ,EAAAM,GAAAE,GAAAE,EAAAN,EAAAtL,KAAA,OAAAkL,GAAA,YAAAL,EAAAK,EAAA,CAAAI,EAAA2C,KAAAnD,EAAAc,GAAAqE,QAAArC,QAAAhC,GAAAkC,KAAA/C,EAAAK,EAAA,CAmEA,QA7DgC,SAAH/L,GAA8E,IAAxEuK,EAAiBvK,EAAjBuK,kBACzBiH,EAAY,eAPtB3F,EAOsBZ,GAPtBY,EAOsBN,IAAAgF,MAAG,SAAAkB,IAAA,IAAAC,EAAAC,EAAA,OAAApG,IAAAsB,MAAA,SAAA+E,GAAA,cAAAA,EAAAZ,KAAAY,EAAAtC,MAAA,OAC8C,OAA/D/L,OAAOsO,SAASC,SAAQC,EAAAA,EAAAA,IAAe,CAAExH,kBAAAA,KAAsBqH,EAAAtC,KAAA,GACpC0C,EAAAA,EAAAA,IAAyB,CAAEzH,kBAAAA,IAAoB,OAApEmH,EAAYE,EAAA5C,KAEZ2C,EAAUM,YAAW,WACvBP,GAAgBnO,OAAOsO,SAASC,QAAQJ,EAC5C,GAAG,KAEHQ,SAASC,iBAAiB,oBAAoB,WACtCD,SAASE,QACTC,aAAaV,GAIbpO,OAAO+O,SACPD,aAAaV,GACRO,SAASE,QACVV,GAAgBnO,OAAOsO,SAASC,QAAQJ,GAGpD,IAAG,wBAAAE,EAAAX,OAAA,GAAAQ,EAAA,IA3BX,eAAAhG,EAAA,KAAAD,EAAA+G,UAAA,WAAA3B,SAAA,SAAAlF,EAAAK,GAAA,IAAAI,EAAAN,EAAA2G,MAAA/G,EAAAD,GAAA,SAAAiH,EAAA5G,GAAA0F,EAAApF,EAAAT,EAAAK,EAAA0G,EAAAC,EAAA,OAAA7G,EAAA,UAAA6G,EAAA7G,GAAA0F,EAAApF,EAAAT,EAAAK,EAAA0G,EAAAC,EAAA,QAAA7G,EAAA,CAAA4G,OAAA,QA4BK,kBArBiB,OAAAxH,EAAAuH,MAAA,KAAAD,UAAA,KAuBlB,OACIpS,IAAAA,cAAA,OAAKD,UAAU,0BACXC,IAAAA,cAAA,KACID,UAAU,iCACV+C,MAAM0P,EAAAA,EAAAA,GAAgB,CAAEpI,kBAAAA,IACxBrH,OAAO,SACPC,IAAI,uBAEJhD,IAAAA,cAAA,OAAKD,UAAU,YACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,mBAAmBL,KAAM,KACpCZ,IAAAA,cAACW,EAAAA,KAAI,CAAC4B,MAAM,OAAO3B,KAAK,MAAMC,OAAO,OAAOd,UAAU,SAClDC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAmB,8BAEjCnB,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,iBAAiBL,KAAM,OAG1CZ,IAAAA,cAAA,UAAQD,UAAU,sCAAsCoD,QAASkO,GAC7DrR,IAAAA,cAAA,OAAKD,UAAU,YACXC,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,kBAAkBL,KAAM,KACnCZ,IAAAA,cAACW,EAAAA,KAAI,CAAC4B,MAAM,OAAO3B,KAAK,MAAMC,OAAO,OAAOd,UAAU,SAClDC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAmB,+BAEjCnB,IAAAA,cAACgB,EAAAA,KAAI,CAACC,KAAK,sBAAsBL,KAAM,OAI/CZ,IAAAA,cAACW,EAAAA,KAAI,CAAC2B,GAAG,IAAI1B,KAAK,SACdZ,IAAAA,cAACkB,EAAAA,SAAQ,CACLC,kBAAkB,uLAElBsG,WAAY,CAACzH,IAAAA,cAAA,UAAQwH,IAAK,QAK9C,yBCwKA,SAnMuBnG,EAAAA,EAAAA,WACnB,SAAAxB,GAO2B,IAAA4S,EANvBrI,EAAiBvK,EAAjBuK,kBACAsI,EAAuB7S,EAAvB6S,wBACArN,EAAiBxF,EAAjBwF,kBACAC,EAAWzF,EAAXyF,YACAqN,EAAO9S,EAAP8S,QACArO,EAAOzE,EAAPyE,QAEQlC,GAAcoD,EAAAA,EAAAA,KAAdpD,UAERwQ,GADmBlN,EAAAA,EAAAA,KAAXE,OACAiN,eACFC,SADgB,IAAAF,EAAuB,CAAC,EAACA,GAArBG,eACK3I,EAAkB4I,qBAE3CC,EAAkB,WACpB,OAAQ7I,EAAkBuI,SACtB,KAAKO,EAAAA,QAAQC,SACT,MAAO,WACX,KAAKD,EAAAA,QAAQE,SACT,MAAO,YACX,KAAKF,EAAAA,QAAQG,WACT,MAAO,cACX,KAAKH,EAAAA,QAAQI,IACT,MAAO,gBACX,KAAKJ,EAAAA,QAAQK,KACT,MAAO,OACX,QACI,OAAOb,EAA0B,OAAS,YAEtD,EAaAc,GAA+CC,EAAAA,EAAAA,GAAwBrJ,aAAiB,EAAjBA,EAAmBsJ,QAA5EC,EAAUH,EAAhB1T,KAAwB8T,EAAUJ,EAAhBvS,KACpB4S,EAAuB,CACzBC,EAAAA,mBAAmBC,uBACnBD,EAAAA,mBAAmBE,2BACrBC,SAAS7J,aAAiB,EAAjBA,EAAmBsJ,QACxBQ,EAAe,WACjB,OAAQ9J,EAAkBrB,uBACtB,KAAKoL,EAAAA,aAAaC,IACd,MAAO,MACX,KAAKD,EAAAA,aAAaE,IACd,MAAO,MACX,KAAKF,EAAAA,aAAaG,QACd,MAAO,UACX,KAAKH,EAAAA,aAAaI,UACd,MAAO,MACX,QACI,OAAO,KAEnB,EACMC,EAA2B,aAAfC,EAAAA,EAAAA,YAClB,OACIzU,IAAAA,cAAA,OAAKD,UAAU,6BACXC,IAAAA,cAAA,OAAKD,UAAU,mBACXC,IAAAA,cAAC0U,EAAAA,EAAmB,CAACzT,KAjCzByR,GAA2BC,IAAYO,EAAAA,QAAQyB,UAAkB,OAC5DvK,EAAkBzB,cAAgBiM,EAAAA,GAAYC,UAAkB,WAChEzK,EAAkBzB,cAAgBiM,EAAAA,GAAYE,KAAOnC,IAAYO,EAAAA,QAAQE,SACvE,WACFhJ,EAAkBzB,cAAgBiM,EAAAA,GAAYE,KAAOnC,IAAYO,EAAAA,QAAQG,WACvE,aACFjJ,EAAkBzB,cAAgBiM,EAAAA,GAAYD,WAAahC,IAAYO,EAAAA,QAAQK,KAAa,OAC9F,YA0B+C3S,KAAM,KACpDZ,IAAAA,cAAA,OAAKD,UAAU,yBACXC,IAAAA,cAAA,OAAKD,UAAU,iCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,KAAKsG,YAAY,KACvB+L,KAEH3O,EAOEtE,IAAAA,cAACW,EAAAA,KAAI,CACDC,KAAK,MACLsG,YAAY,IACZrG,OAAO,OACPd,UAAU,wCAETM,EAAAA,EAAAA,UAAS,SAZd6T,KACIlU,IAAAA,cAACW,EAAAA,KAAI,CAACC,KAAK,MAAMsG,YAAY,IAAInH,UAAU,uCACtCmU,OAcf9J,aAAiB,EAAjBA,EAAgDtC,gBAC9C9H,IAAAA,cAACW,EAAAA,KAAI,CAAC6B,MAAM,iBAAiB5B,KAAK,OAAOsG,YAAY,QAC/CkD,aAAiB,EAAjBA,EAAgDtC,gBAI9D9H,IAAAA,cAAA,OAAKD,UAAU,gCACVqK,aAAiB,EAAjBA,EAAmBpC,kBAChBhI,IAAAA,cAACW,EAAAA,KAAI,CACDC,KAAK,KACL4B,MAAM,iBACNzC,UAAU,gCACVc,OAAO,QAEPb,IAAAA,cAACiI,EAAAA,MAAK,CACFC,OAAQkC,EAAkBpC,gBAC1BG,SAAUiC,EAAkBjC,SAC5BC,WAAYgC,EAAkB/B,SAAW+B,EAAkB/B,QAAU,EACrEC,eAAa,KAIxBuL,GACG7T,IAAAA,cAAC+U,EAAAA,YAAW,CACRhV,UAAU,qCACV8S,eAAgBzI,EAAkBsJ,OAClCzS,KAAM2S,EACN9T,KAAM6T,MAKtB3T,IAAAA,cAAA,OAAKD,UAAU,gCACXC,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,+BAA8BM,EAAAA,EAAAA,UAAS,WACvDL,IAAAA,cAAC2C,EAAAA,EAAO,CAAClC,SAAO,EAACC,WAAS,EAACF,MAAO4J,aAAiB,EAAjBA,EAAmB4K,mBAEzDhV,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,+BAA8BM,EAAAA,EAAAA,UAAS,WACvDL,IAAAA,cAAC2C,EAAAA,EAAO,CACJlC,SAAO,EACPD,MAAQ4J,SAAqE,QAApDqI,EAAjBrI,EAA0D6K,mBAAW,IAAAxC,OAAA,EAAtEA,EAAwEyC,eAGvFlV,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,+BAA8BM,EAAAA,EAAAA,UAAS,aACvDL,IAAAA,cAAC2C,EAAAA,EAAO,CAAClC,SAAO,EAACD,MAAQ4J,aAAiB,EAAjBA,EAAgDtC,iBAE7E9H,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACW,EAAAA,KAAI,CAACZ,UAAU,+BAA8BM,EAAAA,EAAAA,UAAS,aACvDL,IAAAA,cAAA,OAAKD,UAAU,8BACXC,IAAAA,cAACwI,EAAW,CACR5E,SAAS,MACTT,QAAS,WAAM,IAAAgS,EAAAC,EACL3M,GAAeC,EAAAA,EAAAA,kBAAiB,CAClCC,YAAayB,EAAkBzB,YAC/BC,iBAAkBwB,EAAkBxB,iBACpChF,SAAUC,EAAAA,GAAcgF,IACxBC,UAAWsB,EAAkBrB,sBAC7B4J,QAAAA,IAEJtN,EACI+E,aAAiB,EAAjBA,EAAmB7B,MA3J1C,SAACI,EAAqB+J,GAEnC,OADIA,IAAyBrS,EAAAA,EAAAA,UAAS,YAC/BsI,CACX,CAyJwCK,CAAsC,QAA9BmM,EAAC/K,EAAkBzB,mBAAW,IAAAwM,EAAAA,EAAI,GAAIzC,GAChB,QADwC0C,EACtEhL,EAAkB3B,oBAAY,IAAA2M,EAAAA,EAAI,GAClC3M,EACC2B,aAAiB,EAAjBA,EAA0DnB,QAE/D3D,GACJ,MAIZtF,IAAAA,cAAA,OAAKD,UAAU,gCACXC,IAAAA,cAACgB,EAAAA,KAAI,CACDC,KAAK,iBACLL,KAAOwB,EAAiB,GAAL,GACnBrC,UAAU,sCAEdC,IAAAA,cAAA,OAAKD,UAAU,qCACXC,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,2JAGnCiB,GAAaoS,GAAapK,EAAkBuI,UAAYO,EAAAA,QAAQK,MAC7DvT,IAAAA,cAACqV,EAAAA,kBAAiB,CACdC,iBAAkBtV,IAAAA,cAACuV,EAAAA,EAA8B,CAACC,KAAK,UAAUC,SAAS,OAC1EC,MAAO1V,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,2BACnCwU,YACI3V,IAAAA,cAACkB,EAAAA,SAAQ,CAACC,kBAAkB,8DAEhCyU,cAAe5V,IAAAA,cAAC6V,EAAAA,EAAiC,CAACL,KAAK,UAAUC,SAAS,OAC1EK,KAAK,4DAIhBhD,GAA0B9S,IAAAA,cAAC+V,EAAe,CAACC,gBAAc,IAExD5T,EAGEpC,IAAAA,cAACiW,EAAwB,CAAC9L,cAAe8I,IAAmB7I,kBAAmBA,IAF/EpK,IAAAA,cAACkW,EAAuB,CAAC9L,kBAAmBA,IAM5D,IClHJ,SAxFsB/I,EAAAA,EAAAA,WAClB,SAAAxB,GAA2F,IAAxFuF,EAAUvF,EAAVuF,WAAY+Q,EAAOtW,EAAPsW,QAAS9Q,EAAiBxF,EAAjBwF,kBAAmBC,EAAWzF,EAAXyF,YAAahB,EAAOzE,EAAPyE,QAC5ClC,GAAcoD,EAAAA,EAAAA,KAAdpD,UACRqD,GAIIC,EAAAA,EAAAA,KAHAI,EAAWL,EAAXK,YACAD,EAAMJ,EAANI,OAGIuQ,EAFU3Q,EAAdO,QAAWD,IAEPqQ,yBAEA1D,EAAuD5M,EAAvD4M,wBAAyB2D,EAA8BvQ,EAA9BuQ,0BACzBzS,EAAaiC,EAAbjC,SAER0S,GAAuEC,EAAAA,EAAAA,KAA/DnM,EAAiBkM,EAAjBlM,kBAAmBjG,EAAcmS,EAAdnS,eAAgBC,EAAckS,EAAdlS,eAAgBuO,EAAO2D,EAAP3D,QAErD6D,EAAaH,EAA0BnN,QACzC,SAAA2B,GAAO,MAAwB,aAApBA,EAAQ8H,SAAkD,QAAxB9H,EAAQ4L,WAAqB,IAG9EC,GAAsCC,EAAAA,EAAAA,GAAmBH,GAAjDI,EAAgBF,EAAhBE,iBAAkB/T,EAAO6T,EAAP7T,QAEpBgU,EAAgB,WAClB,MAAiB,QAAbjT,EAEI5D,IAAAA,cAAC8W,EAAc,CACX1M,kBAAmBA,EACnBsI,wBAAyBA,EACzBrN,kBAAmBA,EACnBC,YAAaA,EACbqN,QAASA,EACTrO,QAASA,IAKjBtE,IAAAA,cAAC+W,EAAuB,CACpB5R,6BAA8BiF,EAC9BhF,WAAYA,EACZC,kBAAmBA,EACnBC,YAAaA,EACbhB,QAASA,EACTV,SAAUA,EACVQ,eAAgBA,EAChBD,eAAgBA,EAChBoB,WAAYnD,GAGxB,EAEA,OACIpC,IAAAA,cAACA,IAAAA,SAAc,CAACgX,SAAUhX,IAAAA,cAACiX,EAAAA,SAAQ,OAC9B7U,EACGpC,IAAAA,cAACkX,EAAAA,MAAK,CACFf,QAASA,EACTT,MAAOU,GAA2B/V,EAAAA,EAAAA,UAAS,iBAAkBA,EAAAA,EAAAA,UAAS,SACtEiF,YAAaA,EACb6R,0BAA0B,EAC1BzU,MAAO0T,EAA2B,QAAU,QAC5CgB,eAAe,0BAEdhB,EACGpW,IAAAA,cAACoB,EAAAA,EAAyB,CAACO,WAAY,CAAEkB,QAAAA,EAASD,WAAYgU,KAE9D5W,IAAAA,cAAC6W,EAAa,OAItB7W,IAAAA,cAACqX,EAAAA,YAAW,CACRlB,QAASA,EACTmB,UAAU,YACVtQ,OAAQoP,EAA2B,eAAiB,QACpDmB,aAAcjS,EACdkS,iBAAiB,iCAEjBxX,IAAAA,cAACyX,EAAAA,kBAAiB,CAAC1X,UAAU,uCAAuC2X,cAAc,QAC7EtB,EACGpW,IAAAA,cAACoB,EAAAA,EAAyB,CAACO,WAAY,CAAEkB,QAAAA,EAASD,WAAYgU,KAE9D5W,IAAAA,cAAC6W,EAAa,QAO1C","sources":["webpack://@deriv/appstore/../cfd/src/Components/cfd-account-copy.tsx","webpack://@deriv/appstore/../cfd/src/Components/specbox.tsx","webpack://@deriv/appstore/../cfd/src/Containers/account-nakala-modal/account-nakala-modal.tsx","webpack://@deriv/appstore/../cfd/src/Components/passwordbox.tsx","webpack://@deriv/appstore/../cfd/src/Helpers/config.tsx","webpack://@deriv/appstore/../cfd/src/Containers/ctrader-derivx-trade-modal.tsx","webpack://@deriv/appstore/../cfd/src/Containers/migration-banner/index.ts","webpack://@deriv/appstore/../cfd/src/Containers/mt5-desktop-redirect-option.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-mobile-redirect-option.tsx","webpack://@deriv/appstore/../cfd/src/Containers/dmt5-trade-modal.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-trade-modal.tsx"],"sourcesContent":["import React from 'react';\nimport { Clipboard } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile } from '@deriv/shared';\nimport { TCFDAccountCopy } from './props.types';\n\nconst CFDAccountCopy = ({ text, className }: TCFDAccountCopy) => {\n    return (\n        <div className={className} data-testid='cfd_account_copy_main_div'>\n            <Clipboard\n                text_copy={text}\n                info_message={isMobile() ? '' : localize('copy')}\n                success_message={localize('copied!')}\n                popoverAlignment={isMobile() ? 'left' : 'bottom'}\n            />\n        </div>\n    );\n};\n\nexport { CFDAccountCopy };\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from '@deriv/components';\n\nimport { CFDAccountCopy } from './cfd-account-copy';\n\nexport type TSpecBoxProps = {\n    value?: string;\n    is_bold?: boolean;\n    is_broker?: boolean;\n};\n\nconst SpecBox = ({ value, is_bold, is_broker }: TSpecBoxProps) => (\n    <div className='cfd-trade-modal__spec-box '>\n        <Text\n            size='xs'\n            weight={is_bold ? 'bold' : ''}\n            className={classNames('cfd-trade-modal__spec-text', { 'cfd-trade-modal__spec-text-broker': is_broker })}\n        >\n            {value}\n        </Text>\n        <CFDAccountCopy text={value} className='cfd-trade-modal__spec-copy' />\n    </div>\n);\n\nexport default SpecBox;\n","import React, { useEffect } from 'react';\nimport Cookies from 'js-cookie';\n\nimport { Button, Icon, Text } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\n\nimport SpecBox from '../../Components/specbox';\n\nimport './account-nakala-modal.scss';\n\ninterface CFDDerivNakalaModalProps {\n    onclickAction: () => void;\n}\n\nconst ModalInfo = () => {\n    return (\n        <React.Fragment>\n            <div className='nakala-modal-maintenance'>\n                <div className='nakala-modal-maintenance_icon'>\n                    <Icon icon='IcInfoYellow' />\n                </div>\n                <Text size='xxxs'>\n                    <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                </Text>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CFDDerivNakalaInfo = (props: CFDDerivNakalaModalProps) => {\n    return (\n        <React.Fragment>\n            <div className='cfd-nakala-modal'>\n                <div className='cfd-nakala-modal__logo-container'>\n                    <div className='cfd-nakala-modal__logo'>\n                        <Icon icon='IcRebrandingDerivNakala' size={64} />\n                    </div>\n                </div>\n\n                <div className='cfd-nakala-modal__description'>\n                    <Text as='p' size='s'>\n                        <Localize i18n_default_text='Follow top global traders and copy their strategies.' />\n                    </Text>\n                </div>\n\n                <div className='cfd-nakala-modal__getting-started'>\n                    <Text as='h3' weight='bold' size='s'>\n                        <Localize i18n_default_text='Getting started with Deriv Nakala' />\n                    </Text>\n\n                    <div className='cfd-nakala-modal__steps'>\n                        <div className='cfd-nakala-modal__step'>\n                            <div className='cfd-nakala-modal__step-number'>\n                                <Text weight='bold' color='colored-background'>\n                                    1\n                                </Text>\n                            </div>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Open an MT5 Standard account on our trading platform.' />\n                            </Text>\n                        </div>\n\n                        <div className='cfd-nakala-modal__step'>\n                            <div className='cfd-nakala-modal__step-number'>\n                                <Text weight='bold' color='colored-background'>\n                                    2\n                                </Text>\n                            </div>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Download the Nakala app and create your account.' />\n                            </Text>\n                        </div>\n                        <div className='cfd-nakala-modal__step'>\n                            <div className='cfd-nakala-modal__step-number'>\n                                <Text weight='bold' color='colored-background'>\n                                    3\n                                </Text>\n                            </div>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Link your MT5 account in the Deriv Nakala app.' />\n                            </Text>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={`cfd-nakala-modal__footer ${!isDesktop() && 'cfd-nakala-modal__footer--mobile'}`}>\n                <Button type='button' onClick={props.onclickAction} primary large>\n                    <Localize i18n_default_text='Next' />\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n};\n\ninterface TCFDDerivNakalaLinkAccountProps {\n    isSuccess?: boolean;\n    nakalaInfo: {\n        loginId: string | null;\n        serverName: string | null;\n    };\n}\n\nexport const CFDDerivNakalaLinkAccount = observer((props: TCFDDerivNakalaLinkAccountProps) => {\n    const { isSuccess = false, nakalaInfo } = props;\n\n    const manageNakalaCookie = () => {\n        const nakalaLinkedCookie = 'nakala_linked';\n\n        const nakalaLinkedCookieExist = Cookies.get(nakalaLinkedCookie);\n        if (nakalaLinkedCookieExist) return;\n\n        const nakalaLinkedCookieValue = 'true';\n        const nakalaLinkedCookieExpiry = 365; // days\n\n        Cookies.set(nakalaLinkedCookie, nakalaLinkedCookieValue, {\n            domain: '.deriv.com',\n            expires: nakalaLinkedCookieExpiry,\n        });\n    };\n\n    const isDesktopDevice = isDesktop();\n\n    useEffect(() => {\n        isDesktopDevice && manageNakalaCookie();\n    }, [isDesktopDevice]);\n\n    const onClickOpenApp = () => {\n        manageNakalaCookie();\n        window.open('https://onelink.to/uuuxmw', '_blank');\n    };\n\n    return (\n        <React.Fragment>\n            <div className='cfd-nakala-modal'>\n                <div className='cfd-nakala-modal__logo-container'>\n                    <div className='cfd-nakala-modal__logo'>\n                        <Icon icon='IcRebrandingNakalaMt5Linked' className='linked' />\n                    </div>\n                </div>\n\n                {isSuccess && (\n                    <div className='cfd-nakala-modal__title'>\n                        <Text as='h3' weight='bold' align='center'>\n                            <Localize i18n_default_text='Your MT5 Standard account is ready' />\n                        </Text>\n                    </div>\n                )}\n\n                <div className='cfd-nakala-modal__steps cfd-nakala-modal__steps--with-line'>\n                    <div className='cfd-nakala-modal__step'>\n                        <div className='cfd-nakala-modal__step-number'>\n                            <Text weight='bold' color='colored-background'>\n                                1\n                            </Text>\n                        </div>\n                        <div className='cfd-nakala-modal__step-content'>\n                            <Text as='p'>\n                                <Localize i18n_default_text='To copy trade, create your Deriv Nakala account in the mobile app. ' />\n                                {isDesktopDevice && (\n                                    <Localize i18n_default_text='Scan the below QR to download the mobile app.' />\n                                )}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {isDesktopDevice && (\n                        <div className='cfd-nakala-modal__qr-section'>\n                            <div className='cfd-nakala-modal__qr-section-code'>\n                                <Icon icon='IcRebrandingNakalaQrCode' height={120} width={120} />\n                            </div>\n                        </div>\n                    )}\n\n                    <div className='cfd-nakala-modal__step'>\n                        <div className='cfd-nakala-modal__step-number'>\n                            <Text weight='bold' color='colored-background'>\n                                2\n                            </Text>\n                        </div>\n                        <div className='cfd-nakala-modal__step-content'>\n                            <Text as='p'>\n                                <Localize i18n_default_text='Then, link your MT5 Standard account using these details and your MT5 password:' />\n                            </Text>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='cfd-nakala-modal__login-specs'>\n                    <div className='cfd-nakala-modal__login-specs-item'>\n                        <Text className='cfd-nakala-modal--paragraph'>{localize('Server')}</Text>\n                        <SpecBox is_bold value={nakalaInfo.serverName ?? ''} />\n                    </div>\n                    <div className='cfd-nakala-modal__login-specs-item'>\n                        <Text className='cfd-nakala-modal--paragraph'>{localize('Account no.')}</Text>\n                        <SpecBox is_bold value={nakalaInfo.loginId ?? ''} />\n                    </div>\n                    <ModalInfo />\n                </div>\n\n                <div className='cfd-nakala-modal__help-section'>\n                    <Text size='xs'>\n                        {localize('Need help?')}{' '}\n                        <a href='https://deriv.copytrade-resource.com/' target='_blank' rel='noreferrer'>\n                            {localize('Check the guide')}\n                        </a>\n                    </Text>\n                </div>\n            </div>\n            {!isDesktopDevice && (\n                <div className={`cfd-nakala-modal__footer cfd-nakala-modal__footer--info-mobile`}>\n                    <Button type='button' onClick={onClickOpenApp} primary large>\n                        <Localize i18n_default_text='Open Deriv Nakala mobile app' />\n                    </Button>\n                </div>\n            )}\n        </React.Fragment>\n    );\n});\nexport default CFDDerivNakalaInfo;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { TPasswordBoxProps } from './props.types';\nimport { Localize } from '@deriv/translations';\n\nconst PasswordBox = ({ onClick }: TPasswordBoxProps) => (\n    <div className='cfd-trade-modal__password-box'>\n        <Button className='cfd-trade-modal__password-action' transparent onClick={onClick}>\n            <Localize i18n_default_text='Forgot password?' />\n        </Button>\n    </div>\n);\n\nexport default PasswordBox;\n","import React from 'react';\nimport { QRCode } from 'react-qrcode';\n\nimport { Icon, Text, Button } from '@deriv/components';\nimport { TCFDsPlatformType, TMobilePlatforms } from 'Components/props.types';\nimport {\n    getPlatformDXTradeDownloadLink,\n    getPlatformCTraderDownloadLink,\n    getDXTradeWebTerminalLink,\n    getCTraderWebTerminalLink,\n    platformsIcons,\n    platformsText,\n    CTRADER_URL,\n} from './constants';\nimport { isMobile } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nimport { TCFDDashboardContainer } from 'Containers/props.types';\nimport { CATEGORY, CFD_PLATFORMS } from './cfd-config';\n\nexport const mobileDownloadLink = (platform: TCFDsPlatformType, type: TMobilePlatforms) => {\n    switch (platform) {\n        case CFD_PLATFORMS.DXTRADE:\n            return getPlatformDXTradeDownloadLink(type);\n        case CFD_PLATFORMS.CTRADER:\n            return getPlatformCTraderDownloadLink(type);\n        default:\n            return getPlatformDXTradeDownloadLink(type);\n    }\n};\n\nexport const getPlatformQRCode = (acc_type: TCFDsPlatformType) => {\n    const qr_code_mobile = isMobile() ? '100%' : '80%';\n\n    const QRCodeLinks = () => {\n        switch (acc_type) {\n            case CFD_PLATFORMS.DXTRADE:\n                return 'https://onelink.to/grmtyx';\n            case CFD_PLATFORMS.CTRADER:\n                return 'https://onelink.to/5jgj8z';\n            default:\n                return 'https://onelink.to/grmtyx';\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <QRCode\n                value={QRCodeLinks()}\n                size={5}\n                style={{ height: 'auto', maxWidth: '100%', width: qr_code_mobile }}\n            />\n            <Text align='center' size='xxs'>\n                <Localize\n                    i18n_default_text='Scan the QR code to download Deriv {{ platform }}.'\n                    values={{ platform: platformsText(acc_type) }}\n                />\n            </Text>\n        </React.Fragment>\n    );\n};\n\ntype TPlatformsDesktopDownload = {\n    platform: TCFDsPlatformType;\n    dxtrade_tokens: TCFDDashboardContainer['dxtrade_tokens'];\n    ctrader_tokens: TCFDDashboardContainer['ctrader_tokens'];\n    is_demo: string;\n    ctraderTokenCall: (url: string, account_type: 'real' | 'demo') => void;\n};\n\nexport const PlatformsDesktopDownload = ({\n    platform,\n    dxtrade_tokens,\n    ctrader_tokens,\n    ctraderTokenCall,\n    is_demo,\n}: TPlatformsDesktopDownload) => {\n    const PlatformsDesktopDownloadLinks = () => {\n        switch (platform) {\n            case CFD_PLATFORMS.CTRADER:\n                return getCTraderWebTerminalLink(\n                    ctrader_tokens && ctrader_tokens[is_demo ? CATEGORY.DEMO : CATEGORY.REAL]\n                );\n            case CFD_PLATFORMS.DXTRADE:\n                return getDXTradeWebTerminalLink(\n                    is_demo ? CATEGORY.DEMO : CATEGORY.REAL,\n                    dxtrade_tokens[is_demo ? CATEGORY.DEMO : CATEGORY.REAL]\n                );\n            default:\n                return '';\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                className='cfd-trade-modal__platform-button'\n                onClick={() => {\n                    if (platform === CFD_PLATFORMS.CTRADER) {\n                        ctraderTokenCall(CTRADER_URL, is_demo ? 'demo' : 'real');\n                    } else {\n                        window.open(PlatformsDesktopDownloadLinks());\n                    }\n                }}\n            >\n                <div className='cfd-trade-modal__platform-button-text'>\n                    <Text color='general' size='xxs' weight='bold'>\n                        <Localize i18n_default_text='Web terminal' />\n                    </Text>\n                </div>\n            </Button>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { getCFDAccountKey } from '@deriv/shared';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport { Icon, Money, Text, ExpansionPanel, Button } from '@deriv/components';\nimport SpecBox from '../Components/specbox';\nimport { CFD_PLATFORMS } from '../Helpers/cfd-config';\nimport PasswordBox from '../Components/passwordbox';\nimport { getPlatformQRCode, mobileDownloadLink, PlatformsDesktopDownload } from '../Helpers/config';\nimport { TCFDDashboardContainer, TCFDsPlatformType, TTradingPlatformAccounts } from 'Components/props.types';\nimport {\n    CTRADER_DESKTOP_MAC_DOWNLOAD,\n    CTRADER_DESKTOP_WINDOWS_DOWNLOAD,\n    getTitle,\n    platformsText,\n    STRATEGY_PROVIDER_NOTES,\n} from '../Helpers/constants';\n\nimport { TCFDPasswordReset } from './props.types';\n\ntype TTradeModalProps = {\n    ctrader_derivx_trade_account: Required<DetailsOfEachMT5Loginid>;\n    is_eu_user: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    dxtrade_tokens: TCFDDashboardContainer['dxtrade_tokens'];\n    ctrader_tokens: TCFDDashboardContainer['ctrader_tokens'];\n    is_demo: string;\n    platform: TCFDsPlatformType;\n    is_mobile?: boolean;\n};\n\nconst PlatformIconsAndDescriptions = (\n    platform: TCFDsPlatformType,\n    is_demo: string,\n    ctrader_derivx_trade_account: Required<DetailsOfEachMT5Loginid>\n) => {\n    return (\n        <React.Fragment>\n            <Icon icon={`IcRebranding${platform.charAt(0).toUpperCase()}${platform.slice(1)}Dashboard`} size={24} />\n            <div className='cfd-trade-modal__desc'>\n                <Text size='xs' line_height='l' weight='bold' className='cfd-trade-modal__desc-heading'>\n                    <Localize\n                        i18n_default_text='Deriv {{platform}} <0>{{is_demo}}</0>'\n                        values={{\n                            platform: platformsText(platform),\n                            is_demo: is_demo ? 'Demo' : '',\n                        }}\n                        components={[\n                            <span\n                                key={0}\n                                className={platform === CFD_PLATFORMS.CTRADER && is_demo ? 'cfd-trade-modal--tag' : ''}\n                            />,\n                        ]}\n                    />\n                </Text>\n                {((ctrader_derivx_trade_account as TTradingPlatformAccounts)?.display_login &&\n                    platform === CFD_PLATFORMS.DXTRADE) ||\n                    (platform === CFD_PLATFORMS.CTRADER && is_demo && (\n                        <Text color='less-prominent' size='xxxs' line_height='xxxs'>\n                            {(ctrader_derivx_trade_account as TTradingPlatformAccounts)?.display_login}\n                        </Text>\n                    ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CTraderDerivXTradeModal = ({\n    ctrader_derivx_trade_account,\n    is_eu_user,\n    onPasswordManager,\n    toggleModal,\n    dxtrade_tokens,\n    ctrader_tokens,\n    is_demo,\n    platform,\n    is_mobile,\n}: TTradeModalProps) => {\n    const { isDesktop } = useDevice();\n    const {\n        ui,\n        client,\n        common,\n        traders_hub,\n        modules: { cfd },\n    } = useStore();\n\n    const { ctrader_accounts_list, ctrader_trading_platform_available_accounts, ctrader_total_balance } = client;\n    const { setAccountType, toggleMT5TradeModal, is_account_being_created, loadCTraderTokens } = cfd;\n    const { setAppstorePlatform } = common;\n    const { openDerivRealAccountNeededModal } = ui;\n    const { selected_account_type, no_CR_account, is_real, has_any_real_account, getAccount } = traders_hub;\n\n    const message = {\n        header: (\n            <Text as='h2' size='xs' weight='bold' className='cfd-trade-modal__expansion-panel--header'>\n                {localize('See important notes')}\n            </Text>\n        ),\n        content: (\n            <ol className='cfd-trade-modal__expansion-panel--ordered-list'>\n                <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                    {localize('Use your Deriv account email and password to log in to cTrader.')}\n                </Text>\n                <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                    <Localize\n                        i18n_default_text='Manage up to {{max_count}} Deriv cTrader accounts. While you can convert any of your Deriv cTrader accounts into a strategy account, please take note of the following:'\n                        values={{\n                            max_count: ctrader_trading_platform_available_accounts[0]?.max_count,\n                        }}\n                    />\n                </Text>\n                <ul className='cfd-trade-modal__expansion-panel--unordered-list'>\n                    {STRATEGY_PROVIDER_NOTES().map(note => (\n                        <Text\n                            key={note}\n                            as='li'\n                            size='xxs'\n                            line_height='l'\n                            className='cfd-trade-modal__expansion-panel--content'\n                        >\n                            {localize(note)}\n                        </Text>\n                    ))}\n                    <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                        <Localize\n                            i18n_default_text='To ensure you can always create and manage strategies with fees, <0>keep at least one account free from being a strategy provider.</0> This way, you’ll always have an account ready for collecting fees, allowing you to have up to four strategies where you may impose fees.'\n                            components={[<span key={0} className='cfd-trade-modal__expansion-panel--content-bold' />]}\n                        />\n                    </Text>\n                </ul>\n            </ol>\n        ),\n    };\n\n    const downloadCenterDescription = () => {\n        switch (platform) {\n            case 'dxtrade':\n                return (\n                    <Text\n                        align='center'\n                        as='p'\n                        className='cfd-trade-modal__download-center-text'\n                        size={!isDesktop ? 'xxxs' : 'xxs'}\n                        weight='bold'\n                    >\n                        {localize('Download Deriv X on your phone to trade with the Deriv X account')}\n                    </Text>\n                );\n            case 'ctrader':\n                return (\n                    <Text\n                        align='center'\n                        as='p'\n                        className='cfd-trade-modal__download-center-text'\n                        size={!isDesktop ? 'xxxs' : 'xxs'}\n                        weight='bold'\n                    >\n                        {localize('Download cTrader on your phone to trade with the Deriv cTrader account')}\n                    </Text>\n                );\n            default:\n                return '';\n        }\n    };\n\n    const downloadCenterAppOption = (platform_type: TCFDsPlatformType) => {\n        let app_title = '';\n        if (platform_type === CFD_PLATFORMS.DXTRADE) {\n            app_title = localize('Run Deriv X on your browser');\n        } else if (platform_type === 'ctrader' && !is_mobile) {\n            app_title = localize('Run cTrader on your browser');\n        } else if (platform_type === 'ctrader' && is_mobile) {\n            return null;\n        } else {\n            return null;\n        }\n\n        return (\n            <div className='cfd-trade-modal__download-center-app--option'>\n                <Text className='cfd-trade-modal__download-center-app--option-item' size='xs'>\n                    {app_title}\n                </Text>\n                <PlatformsDesktopDownload\n                    platform={platform}\n                    is_demo={is_demo}\n                    dxtrade_tokens={dxtrade_tokens}\n                    ctrader_tokens={ctrader_tokens}\n                    ctraderTokenCall={loadCTraderTokens}\n                />\n            </div>\n        );\n    };\n\n    return (\n        <div className='cfd-trade-modal-container'>\n            <div className='cfd-trade-modal'>\n                {PlatformIconsAndDescriptions(platform, is_demo, ctrader_derivx_trade_account)}\n                {ctrader_derivx_trade_account?.display_balance && (\n                    <div className='cfd-trade-modal__balance'>\n                        {platform === CFD_PLATFORMS.CTRADER && is_real && (\n                            <Text size='xxs' align='right'>\n                                {localize('Total balance:')}\n                            </Text>\n                        )}\n                        <Text\n                            size='s'\n                            color={platform !== CFD_PLATFORMS.CTRADER ? 'profit-success' : 'prominent'}\n                            className='cfd-trade-modal__desc-balance'\n                            weight='bold'\n                        >\n                            <Money\n                                amount={\n                                    is_real && platform === CFD_PLATFORMS.CTRADER\n                                        ? ctrader_total_balance\n                                        : ctrader_derivx_trade_account.display_balance\n                                }\n                                currency={ctrader_derivx_trade_account.currency}\n                                has_sign={\n                                    !!ctrader_derivx_trade_account.balance && ctrader_derivx_trade_account.balance < 0\n                                }\n                                show_currency\n                            />\n                        </Text>\n                    </div>\n                )}\n            </div>\n            <div className='cfd-trade-modal__login-specs'>\n                {platform === CFD_PLATFORMS.DXTRADE && (\n                    <React.Fragment>\n                        <div className='cfd-trade-modal__login-specs-item'>\n                            <Text className='cfd-trade-modal--paragraph'>{localize('Username')}</Text>\n                            <SpecBox\n                                is_bold\n                                value={(ctrader_derivx_trade_account as TTradingPlatformAccounts)?.login}\n                            />\n                        </div>\n                        <div className='cfd-trade-modal__login-specs-item'>\n                            <Text className='cfd-trade-modal--paragraph'>{localize('Password')}</Text>\n                            <div className='cfd-trade-modal--paragraph'>\n                                <PasswordBox\n                                    platform='dxtrade'\n                                    onClick={() => {\n                                        const account_type = getCFDAccountKey({\n                                            market_type: ctrader_derivx_trade_account.market_type,\n                                            sub_account_type: ctrader_derivx_trade_account.sub_account_type,\n                                            platform: CFD_PLATFORMS.MT5,\n                                            shortcode: ctrader_derivx_trade_account.landing_company_short,\n                                        });\n                                        onPasswordManager(\n                                            ctrader_derivx_trade_account?.login,\n                                            getTitle(ctrader_derivx_trade_account.market_type, is_eu_user),\n                                            ctrader_derivx_trade_account.account_type,\n                                            account_type,\n                                            ctrader_derivx_trade_account?.server\n                                        );\n                                        toggleModal();\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </React.Fragment>\n                )}\n\n                {platform === CFD_PLATFORMS.CTRADER && is_real && (\n                    <React.Fragment>\n                        {ctrader_accounts_list\n                            .filter(all_ctrader_accounts => all_ctrader_accounts.account_type === 'real')\n                            .map(ctrader_account => {\n                                return (\n                                    <div key={ctrader_account.login} className='cfd-trade-modal__list-of-accounts'>\n                                        <Text size='xs'>{ctrader_account.login}</Text>\n                                        <Text size='xs' weight='bold'>\n                                            <Money\n                                                amount={ctrader_account.balance}\n                                                currency={ctrader_account.currency}\n                                                has_sign={!!ctrader_account.balance && ctrader_account.balance < 0}\n                                                show_currency\n                                            />\n                                        </Text>\n                                    </div>\n                                );\n                            })}\n                        {(ctrader_trading_platform_available_accounts[0]?.available_count ?? 1) > 0 && (\n                            <div className='cfd-trade-modal__get-more-accounts'>\n                                <Button\n                                    onClick={() => {\n                                        toggleMT5TradeModal();\n                                        if ((!has_any_real_account || no_CR_account) && is_real) {\n                                            openDerivRealAccountNeededModal();\n                                        } else {\n                                            setAccountType({\n                                                category: selected_account_type,\n                                                type: 'all',\n                                            });\n                                            setAppstorePlatform(CFD_PLATFORMS.CTRADER);\n                                            getAccount();\n                                        }\n                                    }}\n                                    transparent\n                                    disabled={!!is_account_being_created}\n                                >\n                                    <Icon\n                                        icon={'IcAppstoreGetMoreAccounts'}\n                                        size={24}\n                                        className='cfd-trade-modal__get-more-accounts--icon'\n                                    />\n                                    <div className='cfd-trade-modal__get-more-accounts--details'>\n                                        <Text size='xxs' line-height='xxs'>\n                                            {localize('Get another cTrader account')}\n                                        </Text>\n                                    </div>\n                                </Button>\n                            </div>\n                        )}\n\n                        <div className='cfd-trade-modal__expansion-panel'>\n                            <ExpansionPanel message={message} />\n                        </div>\n                    </React.Fragment>\n                )}\n\n                <div className='cfd-trade-modal__maintenance'>\n                    <Icon\n                        icon='IcAlertWarning'\n                        size={!isDesktop ? 28 : 24}\n                        className='cfd-trade-modal__maintenance-icon'\n                    />\n                    <div className='cfd-trade-modal__maintenance-text'>\n                        <Text size='xxxs' className='cfd-trade-modal__maintenance-text'>\n                            {platform === CFD_PLATFORMS.DXTRADE && (\n                                <Localize i18n_default_text='Server maintenance starts at 06:00 GMT every Sunday and may last up to 2 hours. You may experience service disruption during this time.' />\n                            )}\n                            {platform === CFD_PLATFORMS.MT5 && (\n                                <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                            )}\n                            {platform === CFD_PLATFORMS.CTRADER && (\n                                <Localize i18n_default_text='Server maintenance occurs every first Saturday of the month from 7 to 10 GMT time. You may experience service disruption during this time.' />\n                            )}\n                        </Text>\n                    </div>\n                </div>\n            </div>\n            <div className='cfd-trade-modal__download-center-app'>{downloadCenterAppOption(platform)}</div>\n            {platform === CFD_PLATFORMS.CTRADER && (\n                <React.Fragment>\n                    {!is_mobile && (\n                        <React.Fragment>\n                            <div className='cfd-trade-modal__download-center-app--windows'>\n                                <Icon icon='IcWindowsLogo' size={32} />\n                                <Text className='cfd-trade-modal__download-center-app--windows-item' size='xs'>\n                                    {localize('cTrader Windows app')}\n                                </Text>\n                                <a\n                                    className='dc-btn cfd-trade-modal__download-center-app--windows-link'\n                                    type='button'\n                                    href={CTRADER_DESKTOP_WINDOWS_DOWNLOAD}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <Text size='xxs' weight='bold' color='prominent'>\n                                        {localize('Download')}\n                                    </Text>\n                                </a>\n                            </div>\n                            <div className='cfd-trade-modal__download-center-app--macos'>\n                                <Icon icon='IcMacosLogo' size={32} />\n                                <Text className='cfd-trade-modal__download-center-app--macos-item' size='xs'>\n                                    {localize('cTrader MacOS app')}\n                                </Text>\n                                <a\n                                    className='dc-btn cfd-trade-modal__download-center-app--macos-link'\n                                    type='button'\n                                    href={CTRADER_DESKTOP_MAC_DOWNLOAD}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <Text size='xxs' weight='bold' color='prominent'>\n                                        {localize('Download')}\n                                    </Text>\n                                </a>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </React.Fragment>\n            )}\n            <div className='cfd-trade-modal__download-center-description'>{downloadCenterDescription()}</div>\n\n            <div className='cfd-trade-modal__download-center-options'>\n                <div className='cfd-trade-modal__download-center-options--mobile-links'>\n                    <div className='cfd-trade-modal__download-center-options--mobile-links--apple'>\n                        <a href={mobileDownloadLink(platform, 'ios')} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon='IcInstallationApple' width={!isDesktop ? '160' : '130'} height={40} />\n                        </a>\n                    </div>\n                    <a href={mobileDownloadLink(platform, 'android')} target='_blank' rel='noopener noreferrer'>\n                        <Icon icon='IcInstallationGoogle' width={135} height={40} />\n                    </a>\n                    {/* all platforms are on ios/android and huawei except ctrader is not on Huawei*/}\n                    {platform !== CFD_PLATFORMS.CTRADER && (\n                        <a href={mobileDownloadLink(platform, 'huawei')} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon='IcInstallationHuawei' width={135} height={40} />\n                        </a>\n                    )}\n                </div>\n                {isDesktop && (\n                    <div className='cfd-trade-modal__download-center-options--qrcode'>\n                        {getPlatformQRCode(platform)}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default observer(CTraderDerivXTradeModal);\n","import MigrationBanner from './migration-banner';\n\nexport default MigrationBanner;\n","import React, { Fragment } from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getDesktopDownloadOptions, getMobileDownloadOptions } from '../Helpers/constants';\nimport { CFD_PLATFORMS, getCFDPlatformLabel, getPlatformSettings, getUrlBase } from '@deriv/shared';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport './mt5-mobile-redirect-option.scss';\n\ntype TMT5DesktopRedirectOptionProps = {\n    account_title: string;\n    mt5_trade_account: DetailsOfEachMT5Loginid;\n};\n\nconst MT5DesktopRedirectOption = ({ account_title, mt5_trade_account }: TMT5DesktopRedirectOptionProps) => {\n    const desktopDownloadOptions = getDesktopDownloadOptions({ mt5_trade_account });\n    const mobileDownloadOptions = getMobileDownloadOptions({ mt5_trade_account });\n\n    return (\n        <Fragment>\n            <div className='cfd-trade-modal__download-center-app'>\n                {desktopDownloadOptions.map(option => (\n                    <div key={option.icon} className='cfd-trade-modal__download-center-app--option'>\n                        <Icon icon={option.icon} size={32} />\n                        <Text className='cfd-trade-modal__download-center-app--option-item' size='xs'>\n                            {option.text}\n                        </Text>\n                        <a\n                            className='cfd-trade-modal__download-center-app--option-link'\n                            type='button'\n                            href={option.href as string}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <Text size='xxs' weight='bold' color='prominent'>\n                                {option.button_text}\n                            </Text>\n                        </a>\n                    </div>\n                ))}\n            </div>\n            <Text align='center' as='div' className='cfd-trade-modal__download-center-text' size='xxs' weight='bold'>\n                {localize(\n                    'Download {{ platform }} on your phone to trade with the {{ platform }} {{ account }} account',\n                    {\n                        platform: getCFDPlatformLabel(CFD_PLATFORMS.MT5),\n                        account: account_title,\n                    }\n                )}\n            </Text>\n            <div className='cfd-trade-modal__download-center-options'>\n                <div className='cfd-trade-modal__download-center-options--mobile-links'>\n                    {mobileDownloadOptions.map(({ href, icon }) => (\n                        <a key={icon} href={href} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon={icon} width={135} height={40} />\n                        </a>\n                    ))}\n                </div>\n\n                <div className='cfd-trade-modal__download-center-options--qrcode'>\n                    <img\n                        alt='mt5 download qr'\n                        src={getUrlBase('/public/images/common/mt5_download.png')}\n                        width={80}\n                        height={80}\n                    />\n                    <Text align='center' size='xxs'>\n                        {localize('Scan the QR code to download {{ platform }}.', {\n                            platform: getPlatformSettings(CFD_PLATFORMS.MT5).name,\n                        })}\n                    </Text>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default MT5DesktopRedirectOption;\n","import React from 'react';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport { Icon, Text } from '@deriv/components';\nimport { getDeeplinkUrl, getMobileAppInstallerUrl, getWebtraderUrl } from '../Helpers/constants';\nimport './mt5-mobile-redirect-option.scss';\nimport { Localize } from '@deriv/translations';\n\nconst MT5MobileRedirectOption = ({ mt5_trade_account }: { mt5_trade_account: DetailsOfEachMT5Loginid }) => {\n    const mobileURLSet = async () => {\n        window.location.replace(getDeeplinkUrl({ mt5_trade_account }));\n        const mobileAppURL = await getMobileAppInstallerUrl({ mt5_trade_account });\n\n        const timeout = setTimeout(() => {\n            mobileAppURL && window.location.replace(mobileAppURL);\n        }, 4000);\n\n        document.addEventListener('visibilitychange', function () {\n            if (document.hidden) {\n                clearTimeout(timeout);\n            }\n\n            // iOS (17+) and certain browsers (edge) may have popups before redirecting\n            if (window.onblur) {\n                clearTimeout(timeout); // installer wont open but will redirect to MetaTrader5\n                if (!document.hidden) {\n                    mobileAppURL && window.location.replace(mobileAppURL); // if it is not redirecting then open installer\n                }\n            }\n        });\n    };\n\n    return (\n        <div className='mt5-download-container'>\n            <a\n                className='mt5-download-container--option'\n                href={getWebtraderUrl({ mt5_trade_account })}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <div className='full-row'>\n                    <Icon icon='IcDesktopOutline' size={16} />\n                    <Text align='left' size='xxs' weight='bold' className='title'>\n                        <Localize i18n_default_text={'MetaTrader5 web terminal'} />\n                    </Text>\n                    <Icon icon='IcChevronRight' size={16} />\n                </div>\n            </a>\n            <button className='mt5-download-container--option blue' onClick={mobileURLSet}>\n                <div className='full-row'>\n                    <Icon icon='IcMobileOutline' size={16} />\n                    <Text align='left' size='xxs' weight='bold' className='title'>\n                        <Localize i18n_default_text={'Trade with MT5 mobile app'} />\n                    </Text>\n                    <Icon icon='IcChevronRightLight' size={16} />\n                </div>\n            </button>\n\n            <Text as='p' size='xxxxs'>\n                <Localize\n                    i18n_default_text=\"Note: Don't have the MT5 app? Tap the <0>Trade with MT5 mobile app</0> button to download. Once you have\n                installed the app, return to this screen and hit the same button to log in.\"\n                    components={[<strong key={0} />]}\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default MT5MobileRedirectOption;\n","import React from 'react';\nimport { TAdditionalDetailsOfEachMT5Loginid } from '@deriv/stores/types';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text, Icon, Money, StatusBadge, InformationBanner } from '@deriv/components';\nimport getMT5StatusBadgeConfig from '@deriv/account/src/Configs/get-mt5-status-badge-config';\nimport { getCFDAccountKey, MT5_ACCOUNT_STATUS, PRODUCT, Jurisdiction, OSDetect } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { CFD_PLATFORMS, MARKET_TYPE } from '../Helpers/cfd-config';\nimport TradingPlatformIcon from '../Assets/svgs/trading-platform';\nimport MigrationBanner from './migration-banner';\nimport MT5DesktopRedirectOption from './mt5-desktop-redirect-option';\nimport MT5MobileRedirectOption from './mt5-mobile-redirect-option';\nimport PasswordBox from '../Components/passwordbox';\nimport SpecBox from '../Components/specbox';\nimport { TCFDPasswordReset } from './props.types';\nimport { TProducts, TTradingPlatformAccounts } from '../Components/props.types';\nimport { StandaloneChartAreaRegularIcon, StandaloneArrowUpRightRegularIcon } from '@deriv/quill-icons';\n\ntype TMT5TradeModalProps = {\n    mt5_trade_account: TAdditionalDetailsOfEachMT5Loginid;\n    show_eu_related_content: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    product?: TProducts;\n    is_demo: string;\n};\n\nconst getTitle = (market_type: string, show_eu_related_content: boolean) => {\n    if (show_eu_related_content) localize('MT5 CFDs');\n    return market_type;\n};\n\nconst DMT5TradeModal = observer(\n    ({\n        mt5_trade_account,\n        show_eu_related_content,\n        onPasswordManager,\n        toggleModal,\n        product,\n        is_demo,\n    }: TMT5TradeModalProps) => {\n        const { isDesktop } = useDevice();\n        const { client } = useStore();\n        const { account_status: { authentication } = {} } = client;\n        const is_eligible_to_migrate = mt5_trade_account.eligible_to_migrate;\n\n        const getAccountTitle = () => {\n            switch (mt5_trade_account.product) {\n                case PRODUCT.STANDARD:\n                    return 'Standard';\n                case PRODUCT.SWAPFREE:\n                    return 'Swap-Free';\n                case PRODUCT.ZEROSPREAD:\n                    return 'Zero Spread';\n                case PRODUCT.STP:\n                    return 'Financial STP';\n                case PRODUCT.GOLD:\n                    return 'Gold';\n                default:\n                    return show_eu_related_content ? 'CFDs' : 'Financial';\n            }\n        };\n\n        const getAccountIcons = () => {\n            if (show_eu_related_content && product === PRODUCT.FINANCIAL) return 'CFDs';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.SYNTHETIC) return 'Standard';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.ALL && product === PRODUCT.SWAPFREE)\n                return 'SwapFree';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.ALL && product === PRODUCT.ZEROSPREAD)\n                return 'ZeroSpread';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.FINANCIAL && product === PRODUCT.GOLD) return 'Gold';\n            return 'Financial';\n        };\n\n        const { text: badge_text, icon: badge_icon } = getMT5StatusBadgeConfig(mt5_trade_account?.status);\n        const has_migration_status = [\n            MT5_ACCOUNT_STATUS.MIGRATED_WITH_POSITION,\n            MT5_ACCOUNT_STATUS.MIGRATED_WITHOUT_POSITION,\n        ].includes(mt5_trade_account?.status);\n        const getShortcode = () => {\n            switch (mt5_trade_account.landing_company_short) {\n                case Jurisdiction.SVG:\n                    return 'SVG';\n                case Jurisdiction.BVI:\n                    return 'BVI';\n                case Jurisdiction.VANUATU:\n                    return 'Vanuatu';\n                case Jurisdiction.MAURITIUS:\n                    return 'DML';\n                default:\n                    return null;\n            }\n        };\n        const is_window = OSDetect() === 'windows';\n        return (\n            <div className='cfd-trade-modal-container'>\n                <div className='cfd-trade-modal'>\n                    <TradingPlatformIcon icon={getAccountIcons()} size={24} />\n                    <div className='cfd-trade-modal__desc'>\n                        <div className='cfd-trade-modal__desc-heading'>\n                            <Text size='xs' line_height='l'>\n                                {getAccountTitle()}\n                            </Text>\n                            {!is_demo ? (\n                                getShortcode() && (\n                                    <Text size='xxs' line_height='l' className='cfd-trade-modal__desc-heading--real'>\n                                        {getShortcode()}\n                                    </Text>\n                                )\n                            ) : (\n                                <Text\n                                    size='xxs'\n                                    line_height='l'\n                                    weight='bold'\n                                    className='cfd-trade-modal__desc-heading--demo'\n                                >\n                                    {localize('Demo')}\n                                </Text>\n                            )}\n                        </div>\n                        {(mt5_trade_account as TTradingPlatformAccounts)?.display_login && (\n                            <Text color='less-prominent' size='xxxs' line_height='xxxs'>\n                                {(mt5_trade_account as TTradingPlatformAccounts)?.display_login}\n                            </Text>\n                        )}\n                    </div>\n                    <div className='cfd-trade-modal__acc_status'>\n                        {mt5_trade_account?.display_balance && (\n                            <Text\n                                size='xs'\n                                color='profit-success'\n                                className='cfd-trade-modal__desc-balance'\n                                weight='bold'\n                            >\n                                <Money\n                                    amount={mt5_trade_account.display_balance}\n                                    currency={mt5_trade_account.currency}\n                                    has_sign={!!mt5_trade_account.balance && mt5_trade_account.balance < 0}\n                                    show_currency\n                                />\n                            </Text>\n                        )}\n                        {has_migration_status && (\n                            <StatusBadge\n                                className='trading-app-card__acc_status_badge'\n                                account_status={mt5_trade_account.status}\n                                icon={badge_icon}\n                                text={badge_text}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className='cfd-trade-modal__login-specs'>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Broker')}</Text>\n                        <SpecBox is_bold is_broker value={mt5_trade_account?.landing_company} />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Server')}</Text>\n                        <SpecBox\n                            is_bold\n                            value={(mt5_trade_account as TAdditionalDetailsOfEachMT5Loginid)?.server_info?.environment}\n                        />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Login ID')}</Text>\n                        <SpecBox is_bold value={(mt5_trade_account as TTradingPlatformAccounts)?.display_login} />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Password')}</Text>\n                        <div className='cfd-trade-modal--paragraph'>\n                            <PasswordBox\n                                platform='mt5'\n                                onClick={() => {\n                                    const account_type = getCFDAccountKey({\n                                        market_type: mt5_trade_account.market_type,\n                                        sub_account_type: mt5_trade_account.sub_account_type,\n                                        platform: CFD_PLATFORMS.MT5,\n                                        shortcode: mt5_trade_account.landing_company_short,\n                                        product,\n                                    });\n                                    onPasswordManager(\n                                        mt5_trade_account?.login,\n                                        getTitle(mt5_trade_account.market_type ?? '', show_eu_related_content),\n                                        mt5_trade_account.account_type ?? '',\n                                        account_type,\n                                        (mt5_trade_account as TAdditionalDetailsOfEachMT5Loginid)?.server\n                                    );\n                                    toggleModal();\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className='cfd-trade-modal__maintenance'>\n                        <Icon\n                            icon='IcAlertWarning'\n                            size={!isDesktop ? 28 : 20}\n                            className='cfd-trade-modal__maintenance-icon'\n                        />\n                        <div className='cfd-trade-modal__maintenance-text'>\n                            <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                        </div>\n                    </div>\n                    {isDesktop && is_window && mt5_trade_account.product !== PRODUCT.GOLD && (\n                        <InformationBanner\n                            information_icon={<StandaloneChartAreaRegularIcon fill='#095A66' iconSize='sm' />}\n                            title={<Localize i18n_default_text='Alpha Generation guide' />}\n                            description={\n                                <Localize i18n_default_text='Tailor your indicators with expert-driven trend analysis.' />\n                            }\n                            redirect_icon={<StandaloneArrowUpRightRegularIcon fill='#000000' iconSize='sm' />}\n                            link='https://docs.deriv.com/misc/alpha_generation_guide.pdf'\n                        />\n                    )}\n                </div>\n                {is_eligible_to_migrate && <MigrationBanner is_trade_modal />}\n\n                {!isDesktop ? (\n                    <MT5MobileRedirectOption mt5_trade_account={mt5_trade_account} />\n                ) : (\n                    <MT5DesktopRedirectOption account_title={getAccountTitle()} mt5_trade_account={mt5_trade_account} />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default DMT5TradeModal;\n","import React from 'react';\n\nimport { Div100vhContainer, Modal, PageOverlay, UILoader } from '@deriv/components';\nimport { useIsEnabledNakala } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { useCfdStore } from '../Stores/Modules/CFD/Helpers/useCfdStores';\n\nimport { CFDDerivNakalaLinkAccount } from './account-nakala-modal/account-nakala-modal';\nimport CTraderDerivXTradeModal from './ctrader-derivx-trade-modal';\nimport DMT5TradeModal from './dmt5-trade-modal';\nimport { TCFDPasswordReset } from './props.types';\n\ntype TMT5TradeModalProps = {\n    is_eu_user: boolean;\n    is_open: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    is_demo: string;\n};\n\nconst MT5TradeModal = observer(\n    ({ is_eu_user, is_open, onPasswordManager, toggleModal, is_demo }: TMT5TradeModalProps) => {\n        const { isDesktop } = useDevice();\n        const {\n            traders_hub,\n            common,\n            modules: { cfd },\n        } = useStore();\n        const { is_nakala_banner_visible } = cfd;\n\n        const { show_eu_related_content, combined_cfd_mt5_accounts } = traders_hub;\n        const { platform } = common;\n\n        const { mt5_trade_account, dxtrade_tokens, ctrader_tokens, product } = useCfdStore();\n\n        const mt5Account = combined_cfd_mt5_accounts.filter(\n            account => account.product === 'standard' && account.action_type !== 'get'\n        );\n\n        const { nakalaServerInfo, loginId } = useIsEnabledNakala(mt5Account);\n\n        const CFDTradeModal = () => {\n            if (platform === 'mt5') {\n                return (\n                    <DMT5TradeModal\n                        mt5_trade_account={mt5_trade_account}\n                        show_eu_related_content={show_eu_related_content}\n                        onPasswordManager={onPasswordManager}\n                        toggleModal={toggleModal}\n                        product={product}\n                        is_demo={is_demo}\n                    />\n                );\n            }\n            return (\n                <CTraderDerivXTradeModal\n                    ctrader_derivx_trade_account={mt5_trade_account}\n                    is_eu_user={is_eu_user}\n                    onPasswordManager={onPasswordManager}\n                    toggleModal={toggleModal}\n                    is_demo={is_demo}\n                    platform={platform}\n                    ctrader_tokens={ctrader_tokens}\n                    dxtrade_tokens={dxtrade_tokens}\n                    is_mobile={!isDesktop}\n                />\n            );\n        };\n\n        return (\n            <React.Suspense fallback={<UILoader />}>\n                {isDesktop ? (\n                    <Modal\n                        is_open={is_open}\n                        title={is_nakala_banner_visible ? localize('Deriv Nakala') : localize('Trade')}\n                        toggleModal={toggleModal}\n                        should_header_stick_body={false}\n                        width={is_nakala_banner_visible ? '485px' : '600px'}\n                        exit_classname='cfd-modal--custom-exit'\n                    >\n                        {is_nakala_banner_visible ? (\n                            <CFDDerivNakalaLinkAccount nakalaInfo={{ loginId, serverName: nakalaServerInfo }} />\n                        ) : (\n                            <CFDTradeModal />\n                        )}\n                    </Modal>\n                ) : (\n                    <PageOverlay\n                        is_open={is_open}\n                        portal_id='deriv_app'\n                        header={is_nakala_banner_visible ? 'Deriv Nakala' : 'Trade'}\n                        onClickClose={toggleModal}\n                        header_classname='cfd-trade-modal__mobile-title'\n                    >\n                        <Div100vhContainer className='cfd-trade-modal__mobile-view-wrapper' height_offset='80px'>\n                            {is_nakala_banner_visible ? (\n                                <CFDDerivNakalaLinkAccount nakalaInfo={{ loginId, serverName: nakalaServerInfo }} />\n                            ) : (\n                                <CFDTradeModal />\n                            )}\n                        </Div100vhContainer>\n                    </PageOverlay>\n                )}\n            </React.Suspense>\n        );\n    }\n);\n\nexport default MT5TradeModal;\n"],"names":["CFDAccountCopy","_ref","text","className","React","Clipboard","text_copy","info_message","isMobile","localize","success_message","popoverAlignment","value","is_bold","is_broker","Text","size","weight","classNames","ModalInfo","Icon","icon","Localize","i18n_default_text","CFDDerivNakalaLinkAccount","observer","props","_nakalaInfo$serverNam","_nakalaInfo$loginId","_props$isSuccess","isSuccess","nakalaInfo","manageNakalaCookie","nakalaLinkedCookie","Cookies","get","set","domain","expires","isDesktopDevice","isDesktop","useEffect","as","align","color","height","width","SpecBox","serverName","loginId","href","target","rel","Button","type","onClick","window","open","primary","large","concat","onclickAction","transparent","mobileDownloadLink","platform","CFD_PLATFORMS","DXTRADE","getPlatformDXTradeDownloadLink","CTRADER","getPlatformCTraderDownloadLink","PlatformsDesktopDownload","dxtrade_tokens","ctrader_tokens","ctraderTokenCall","is_demo","CTRADER_URL","getCTraderWebTerminalLink","CATEGORY","DEMO","REAL","getDXTradeWebTerminalLink","PlatformsDesktopDownloadLinks","_ctrader_trading_plat","_ctrader_trading_plat2","_ctrader_trading_plat3","acc_type","qr_code_mobile","ctrader_derivx_trade_account","is_eu_user","onPasswordManager","toggleModal","is_mobile","useDevice","_useStore","useStore","ui","client","common","traders_hub","cfd","modules","ctrader_accounts_list","ctrader_trading_platform_available_accounts","ctrader_total_balance","setAccountType","toggleMT5TradeModal","is_account_being_created","loadCTraderTokens","setAppstorePlatform","openDerivRealAccountNeededModal","selected_account_type","no_CR_account","is_real","has_any_real_account","getAccount","message","header","content","line_height","values","max_count","STRATEGY_PROVIDER_NOTES","map","note","key","components","charAt","toUpperCase","slice","platformsText","display_login","PlatformIconsAndDescriptions","display_balance","Money","amount","currency","has_sign","balance","show_currency","login","PasswordBox","account_type","getCFDAccountKey","market_type","sub_account_type","MT5","shortcode","landing_company_short","getTitle","server","filter","all_ctrader_accounts","ctrader_account","available_count","category","disabled","ExpansionPanel","platform_type","app_title","downloadCenterAppOption","CTRADER_DESKTOP_WINDOWS_DOWNLOAD","CTRADER_DESKTOP_MAC_DOWNLOAD","downloadCenterDescription","QRCode","QRCodeLinks","style","maxWidth","account_title","mt5_trade_account","desktopDownloadOptions","getDesktopDownloadOptions","mobileDownloadOptions","getMobileDownloadOptions","Fragment","option","button_text","getCFDPlatformLabel","account","_ref2","alt","src","getUrlBase","getPlatformSettings","name","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","mobileURLSet","_callee","mobileAppURL","timeout","_context","location","replace","getDeeplinkUrl","getMobileAppInstallerUrl","setTimeout","document","addEventListener","hidden","clearTimeout","onblur","arguments","apply","_next","_throw","getWebtraderUrl","_server_info","show_eu_related_content","product","_client$account_statu","account_status","is_eligible_to_migrate","authentication","eligible_to_migrate","getAccountTitle","PRODUCT","STANDARD","SWAPFREE","ZEROSPREAD","STP","GOLD","_getMT5StatusBadgeCon","getMT5StatusBadgeConfig","status","badge_text","badge_icon","has_migration_status","MT5_ACCOUNT_STATUS","MIGRATED_WITH_POSITION","MIGRATED_WITHOUT_POSITION","includes","getShortcode","Jurisdiction","SVG","BVI","VANUATU","MAURITIUS","is_window","OSDetect","TradingPlatformIcon","FINANCIAL","MARKET_TYPE","SYNTHETIC","ALL","StatusBadge","landing_company","server_info","environment","_mt5_trade_account$ma","_mt5_trade_account$ac","InformationBanner","information_icon","StandaloneChartAreaRegularIcon","fill","iconSize","title","description","redirect_icon","StandaloneArrowUpRightRegularIcon","link","MigrationBanner","is_trade_modal","MT5DesktopRedirectOption","MT5MobileRedirectOption","is_open","is_nakala_banner_visible","combined_cfd_mt5_accounts","_useCfdStore","useCfdStore","mt5Account","action_type","_useIsEnabledNakala","useIsEnabledNakala","nakalaServerInfo","CFDTradeModal","DMT5TradeModal","CTraderDerivXTradeModal","fallback","UILoader","Modal","should_header_stick_body","exit_classname","PageOverlay","portal_id","onClickClose","header_classname","Div100vhContainer","height_offset"],"sourceRoot":""}