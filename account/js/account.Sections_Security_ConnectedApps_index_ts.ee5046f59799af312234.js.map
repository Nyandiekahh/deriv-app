{"version":3,"file":"account/js/account.Sections_Security_ConnectedApps_index_ts.ee5046f59799af312234.js","mappings":"6WAaA,MCVA,EDUgBA,EAAGC,QAAOC,eAAcC,mBAAkBC,gBACtD,MAAMC,EAA4BH,GAAcI,OAAS,EACnDC,EAA2D,IAAzBL,GAAcI,OAEtD,OACIE,EAAAA,EAAAA,MAAA,WAASJ,WAAWK,EAAAA,EAAAA,GAAK,aAAcL,GAAWM,SAAA,EAC9CC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,GAAG,KAAKC,MAAM,YAAYC,YAAY,IAAIC,KAAK,KAAKC,OAAO,OAAOb,UAAU,qBAAoBM,SACjGT,IAEJI,IACGM,EAAAA,EAAAA,KAACO,EAAAA,SAAQ,CAAAR,SACJH,GACGI,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,GAAG,IAAIG,KAAK,MAAMD,YAAY,IAAGL,SAClCR,EAAa,MAGlBS,EAAAA,EAAAA,KAAA,MAAIP,UAAU,mBAAkBM,SAC3BR,EAAaiB,KAAI,CAACC,EAAaC,KAC5BV,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,MAAMD,YAAY,KAAIL,SAC5BU,KAFAC,SAU5BlB,IACGK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,yBAAyBkB,QAASnB,EAAiBO,SAAA,EAC9DC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,MAAMF,MAAM,cAAcC,YAAY,IAAGL,UAChDC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,kBAEhCb,EAAAA,EAAAA,KAACc,EAAAA,KAAI,CAACC,KAAK,iBAAiBtB,UAAU,8BAA8BU,MAAM,aAG5E,C,iZE9ClB,MAAMa,EAAyBA,KAC3BC,OAAOC,KACH,6GACA,SACA,WACH,EAgBL,EAb8BC,KAC1BnB,EAAAA,EAAAA,KAACX,EAAAA,EAAO,CACJC,OAAOU,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,kCACnCtB,aAAc,EACVS,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAELC,kBAAkB,iGADb,IAIbrB,iBAAkBwB,I,oDClBnB,MAAMI,EAA8B,CACvC,CACIC,IAAK,EACLC,MACItB,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,8MAGpC,CACIQ,IAAK,EACLC,MACItB,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,qKAGpC,CACIQ,IAAK,EACLC,MACItB,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,uHCMxC,EAdiCU,EAAGC,aAAYC,iBAC5C,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KAEhBC,EAAYF,EAAY,MAAQ,OAEtC,OACI1B,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,GAAG,KAAKG,KAAMuB,EAAWzB,MAAOsB,EAAYhC,WAAWK,EAAAA,EAAAA,GAAK,gCAAiC0B,GAAYzB,SAC1GqB,EAA4BZ,KAAIqB,IAC7B7B,EAAAA,EAAAA,KAAA,MAAAD,SAAsB8B,EAAOP,MAApBO,EAAOR,QAEjB,ECQf,GArB0BS,EAAAA,EAAAA,WAAS,KAC/B,MAAM,UAAEJ,IAAcC,EAAAA,EAAAA,KAEhBC,EAAYF,EAAY,MAAQ,OAEtC,OACI1B,EAAAA,EAAAA,KAAC+B,EAAAA,cAAa,CACVC,KAAK,cACL3B,KAAK,KACL4B,SACIpC,EAAAA,EAAAA,MAACU,EAAAA,SAAQ,CAAAR,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,GAAG,KAAKI,OAAO,OAAOD,KAAMuB,EAAU7B,UACxCC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,gCAEhCb,EAAAA,EAAAA,KAACuB,EAAwB,CAACC,WAAW,2CAG/C,ICrBJU,EAAsBA,KACxBjB,OAAOC,KAAK,yBAA0B,SAAU,WAAW,EAgB/D,EAb8BiB,KAC1BnC,EAAAA,EAAAA,KAACX,EAAAA,EAAO,CACJC,OAAOU,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,6BACnCtB,aAAc,EACVS,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAELC,kBAAkB,kHADb,IAIbrB,iBAAkB0C,ICI1B,EAf2BE,KACvB,MAAM,UAAEV,IAAcC,EAAAA,EAAAA,KAEhBC,EAAYF,EAAY,KAAO,MAErC,OACI7B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iCAAgCM,SAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAMuB,EAAWS,MAAM,SAAS/B,OAAO,OAAMP,UAC/CC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,8FAEhCb,EAAAA,EAAAA,KAACuB,EAAwB,CAACE,WAAW,UAAUD,WAAW,4CACxD,ECCd,EAT8Bc,EAAGhD,QAAOiD,cACpC1C,EAAAA,EAAAA,MAACU,EAAAA,SAAQ,CAAAR,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,MAAMC,OAAO,OAAMP,SACzBT,KAELU,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,MAAKN,SAAEwC,OCQbC,EAAyBA,CAACC,EAA4B,KAC/DA,EAAgBjC,KAAIkC,IATI,CACxBC,MAAMC,EAAAA,EAAAA,UAAS,QACfC,OAAOD,EAAAA,EAAAA,UAAS,SAChBE,qBAAqBF,EAAAA,EAAAA,UAAS,uBAC9BG,UAAUH,EAAAA,EAAAA,UAAS,YACnBI,OAAOJ,EAAAA,EAAAA,UAAS,UAIwCF,MAAaO,KAAK,MCuB9E,EApCyBC,EAAGC,iBAAgBC,wBACxCpD,EAAAA,EAAAA,KAAA,OAAKP,UAAU,gCAA+BM,SACzCoD,EAAe3C,KAAI6C,IAChBxD,EAAAA,EAAAA,MAAA,OAAgCJ,UAAU,iCAAgCM,SAAA,EACtEF,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BM,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,6BAA4BM,UACvCC,EAAAA,EAAAA,KAACsC,EAAqB,CAClBhD,OAAOU,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,SACnC0B,QAASc,EAAcC,UAG/BtD,EAAAA,EAAAA,KAAA,OAAKP,UAAU,mCAAkCM,UAC7CC,EAAAA,EAAAA,KAACsC,EAAqB,CAClBhD,OAAOU,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,eACnC0B,SAASgB,EAAAA,EAAAA,UAASF,EAAcG,WAAWC,OAAO,+BAI9D5D,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BM,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,mCAAkCM,UAC7CC,EAAAA,EAAAA,KAACsC,EAAqB,CAClBhD,OAAOU,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,eACnC0B,QAASC,EAAuBa,EAAcK,aAGtD1D,EAAAA,EAAAA,KAAA,OAAKP,UAAU,+BAA8BM,UACzCC,EAAAA,EAAAA,KAAC2D,EAAAA,OAAM,CAACC,OAAK,EAACC,WAAS,EAAClD,QAASA,IAAMyC,EAAkBC,EAAcS,QAAQ/D,UAC3EC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,2BAxBlCwC,EAAcS,YCiCpC,EAnC0BC,EAAGZ,iBAAgBC,wBACzCvD,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,mCAAkCM,SAAA,CFTJ,EAC7CC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAYC,kBAAkB,QAAzB,SACdb,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAkBC,kBAAkB,cAA/B,eACdb,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAkBC,kBAAkB,cAA/B,eACdb,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAcC,kBAAkB,UAA3B,WEMqBL,KAAI,CAACwD,EAAaC,KAC7CjE,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CACDI,KAAK,KACLC,OAAO,OAEPb,WAAWK,EAAAA,EAAAA,GAAK,gEAAiE,CAC7E,6CAAwD,IAAVmE,IAC/ClE,SAEFiE,GALIA,EAAY3C,OAQxB8B,EAAe3C,KAAI6C,IAChBxD,EAAAA,EAAAA,MAACU,EAAAA,SAAQ,CAAAR,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,KAAKZ,UAAU,2EAA0EM,SAC/FsD,EAAcC,QAEnBtD,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,KAAKZ,UAAU,gCAA+BM,SACpDyC,EAAuBa,EAAcK,WAE1C1D,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACI,KAAK,KAAKZ,UAAU,gCAA+BM,UACpDwD,EAAAA,EAAAA,UAASF,EAAcG,WAAWC,OAAO,0BAE9CzD,EAAAA,EAAAA,KAAA,QAAMP,UAAU,gCAA+BM,UAC3CC,EAAAA,EAAAA,KAAC2D,EAAAA,OAAM,CAACC,OAAK,EAACC,WAAS,EAAClD,QAASA,IAAMyC,EAAkBC,EAAcS,QAAQ/D,UAC3EC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,wBAZzBwC,EAAcS,aCWzC,EA3BiCI,EAC7BC,qBACAf,oBACAgB,oBAEApE,EAAAA,EAAAA,KAACqE,EAAAA,MAAK,CAACC,QAASF,EAAe3E,UAAU,iBAAiB8E,MAAM,QAAOxE,UACnEC,EAAAA,EAAAA,KAACqE,EAAAA,MAAMG,KAAI,CAAAzE,UACPF,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gCAA+BM,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,6BAA4BM,SAAA,EACvCC,EAAAA,EAAAA,KAACc,EAAAA,KAAI,CAACC,KAAK,oBAAoBV,KAAM,OACrCL,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,GAAG,IAAIC,MAAM,YAAYG,OAAO,OAAMP,UACxCC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,iCAGpChB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gCAA+BM,SAAA,EAC1CC,EAAAA,EAAAA,KAAC2D,EAAAA,OAAM,CAACc,OAAK,EAACZ,WAAS,EAAClD,QAASA,IAAMyC,IAAoBrD,UACvDC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,YAEhCb,EAAAA,EAAAA,KAAC2D,EAAAA,OAAM,CAACc,OAAK,EAACC,SAAO,EAAC/D,QAASwD,EAAmBpE,UAC9CC,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,kBAAkB,wBCZ9C8D,GAAgB7C,EAAAA,EAAAA,WAAS,KAC3B,MAAM,UAAEJ,IAAcC,EAAAA,EAAAA,MACfiD,EAAYC,IAAcC,EAAAA,EAAAA,WAAS,IACnCV,EAAeW,IAAkBD,EAAAA,EAAAA,WAAS,IAC1CE,EAAiBC,IAAoBH,EAAAA,EAAAA,UAAwB,OAC7DI,EAAUC,IAAYL,EAAAA,EAAAA,WAAS,IAC/B3B,EAAgBiC,IAAoBN,EAAAA,EAAAA,UAAoB,KAE/DO,EAAAA,EAAAA,YAAU,KAENC,IAAqBC,OAAMC,GAASC,QAAQD,MAAM,UAAWA,IAAO,GACrE,IAEH,MAAMF,EAAqBI,UACvB,MAAMC,QAAgCC,EAAAA,GAAGC,WAAWC,KAAK,CAAEC,WAAY,IAElEJ,EAAwBH,QACzBX,GAAW,GACXO,EAAiBO,EAAwBI,YAC7C,EAGE3C,GAAoB4C,EAAAA,EAAAA,cAAY,CAAClC,EAAwB,QAC3DiB,GAAeX,IAAkBA,IACjCa,EAAiBnB,EAAO,GACzB,IAEGmC,GAAqBD,EAAAA,EAAAA,cAAYN,UACnCb,GAAW,UACYe,EAAAA,GAAGC,WAAWC,KAAK,CAAEI,iBAAkBpC,KAChD0B,OAIVX,GAAW,GACXM,GAAS,IAHTG,IAAqBC,OAAMC,GAASC,QAAQD,MAAM,UAAWA,IAIjE,GACD,IAEGrB,GAAqB6B,EAAAA,EAAAA,cAAY,KACnCjB,GAAe,GACfkB,EAAmBjB,EAAgB,GACpC,CAACiB,EAAoBjB,IAExB,OAAOJ,GACH5E,EAAAA,EAAAA,KAACmG,EAAAA,QAAO,CAACC,eAAe,KAExBvG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBM,SAAA,EACpCF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,CACKmF,IAAYlF,EAAAA,EAAAA,KAACqG,EAAAA,EAAc,IAC3BlD,EAAexD,QACZE,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,mCAAkCM,SAAA,EAC7CC,EAAAA,EAAAA,KAACsG,EAAiB,IAChB5E,GAGE1B,EAAAA,EAAAA,KAAC+D,EAAiB,CAACZ,eAAgBA,EAAgBC,kBAAmBA,KAFtEpD,EAAAA,EAAAA,KAACkD,EAAgB,CAACC,eAAgBA,EAAgBC,kBAAmBA,QAM7EpD,EAAAA,EAAAA,KAACoC,EAAkB,QAG3BvC,EAAAA,EAAAA,MAAA,WAASJ,UAAU,oCAAmCM,SAAA,EAClDC,EAAAA,EAAAA,KAACmB,EAAqB,KACtBnB,EAAAA,EAAAA,KAACmC,EAAqB,QAE1BnC,EAAAA,EAAAA,KAACkE,EAAwB,CACrBC,mBAAoBA,EACpBf,kBAAmBA,EACnBgB,cAAeA,MAG1B,ICvFL,ED0FA,C","sources":["webpack://@deriv/account/./Components/article/article.tsx","webpack://@deriv/account/./Components/article/index.ts","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-know-more.tsx","webpack://@deriv/account/./Constants/connected-apps-config.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-info-bullets.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-info.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-earn-more.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-empty.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/data-list-template-entry.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/template-helper.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/data-list-template.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/data-table-template.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps-revoke-modal.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/connected-apps.tsx","webpack://@deriv/account/./Sections/Security/ConnectedApps/index.ts"],"sourcesContent":["import { ReactNode, Fragment } from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport './article.scss';\nimport clsx from 'clsx';\n\nexport type TArticle = {\n    title: JSX.Element | string;\n    descriptions: Array<ReactNode>;\n    onClickLearnMore?: () => void;\n    className?: string;\n};\n\nconst Article = ({ title, descriptions, onClickLearnMore, className }: TArticle) => {\n    const has_descriptions: boolean = descriptions?.length > 0;\n    const has_single_description: boolean = descriptions?.length === 1;\n\n    return (\n        <article className={clsx('da-article', className)}>\n            <Text as='h4' color='prominent' line_height='m' size='xs' weight='bold' className='da-article__header'>\n                {title}\n            </Text>\n            {has_descriptions && (\n                <Fragment>\n                    {has_single_description ? (\n                        <Text as='p' size='xxs' line_height='m'>\n                            {descriptions[0]}\n                        </Text>\n                    ) : (\n                        <ul className='da-article__list'>\n                            {descriptions.map((description, idx) => (\n                                <li key={idx}>\n                                    <Text size='xxs' line_height='xs'>\n                                        {description}\n                                    </Text>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </Fragment>\n            )}\n            {onClickLearnMore && (\n                <div className='da-article__learn-more' onClick={onClickLearnMore}>\n                    <Text size='xxs' color='loss-danger' line_height='s'>\n                        <Localize i18n_default_text='Learn more' />\n                    </Text>\n                    <Icon icon='IcChevronRight' className='da-article__learn-more-icon' color='red' />\n                </div>\n            )}\n        </article>\n    );\n};\n\nexport default Article;\n","import AccountArticle from './article';\nimport './article.scss';\n\nexport default AccountArticle;\n","import { Localize } from '@deriv-com/translations';\nimport Article from '../../../Components/article';\n\nconst openAPIManagingWebsite = () => {\n    window.open(\n        'https://community.deriv.com/t/api-tokens-managing-access-on-third-party-applications-and-mobile-apps/29159',\n        '_blank',\n        'noopener'\n    );\n};\n\nconst ConnectedAppsKnowMore = () => (\n    <Article\n        title={<Localize i18n_default_text='Want to know more about APIs?' />}\n        descriptions={[\n            <Localize\n                key={0}\n                i18n_default_text='Go to our Deriv community and learn about APIs, API tokens, ways to use Deriv APIs, and more.'\n            />,\n        ]}\n        onClickLearnMore={openAPIManagingWebsite}\n    />\n);\n\nexport default ConnectedAppsKnowMore;\n","import { Localize } from '@deriv-com/translations';\n\nexport const CONNECTED_APPS_INFO_BULLETS = [\n    {\n        key: 1,\n        text: (\n            <Localize i18n_default_text='Connected apps are authorised applications associated with your account through your API token or the OAuth authorisation process. They can act on your behalf within the limitations that you have set.' />\n        ),\n    },\n    {\n        key: 2,\n        text: (\n            <Localize i18n_default_text='As a user, you are responsible for sharing access and for actions that occur in your account (even if they were initiated by a third-party app on your behalf).' />\n        ),\n    },\n    {\n        key: 3,\n        text: (\n            <Localize i18n_default_text='Please note that only third-party apps will be displayed on this page. Official Deriv apps will not appear here.' />\n        ),\n    },\n];\n","import clsx from 'clsx';\nimport { Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { CONNECTED_APPS_INFO_BULLETS } from '../../../Constants/connected-apps-config';\n\ntype TConnectedAppsInfoBulletsProps = {\n    class_name: string;\n    text_color?: string;\n};\n\nconst ConnectedAppsInfoBullets = ({ class_name, text_color }: TConnectedAppsInfoBulletsProps) => {\n    const { isDesktop } = useDevice();\n\n    const text_size = isDesktop ? 'xxs' : 'xxxs';\n\n    return (\n        <Text as='ol' size={text_size} color={text_color} className={clsx('connected-apps__bullets--list', class_name)}>\n            {CONNECTED_APPS_INFO_BULLETS.map(bullet => (\n                <li key={bullet.key}>{bullet.text}</li>\n            ))}\n        </Text>\n    );\n};\n\nexport default ConnectedAppsInfoBullets;\n","import { Fragment } from 'react';\nimport { InlineMessage, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport ConnectedAppsInfoBullets from './connected-apps-info-bullets';\n\nconst ConnectedAppsInfo = observer(() => {\n    const { isDesktop } = useDevice();\n\n    const text_size = isDesktop ? 'xxs' : 'xxxs';\n\n    return (\n        <InlineMessage\n            type='information'\n            size='md'\n            message={\n                <Fragment>\n                    <Text as='h4' weight='bold' size={text_size}>\n                        <Localize i18n_default_text='What are connected apps?' />\n                    </Text>\n                    <ConnectedAppsInfoBullets class_name='connected-apps__bullets--with-apps' />\n                </Fragment>\n            }\n        />\n    );\n});\n\nexport default ConnectedAppsInfo;\n","import { Localize } from '@deriv-com/translations';\nimport Article from '../../../Components/article';\n\nconst openDerivAPIWebsite = () => {\n    window.open('https://api.deriv.com/', '_blank', 'noopener');\n};\n\nconst ConnectedAppsEarnMore = () => (\n    <Article\n        title={<Localize i18n_default_text='Earn more with Deriv API' />}\n        descriptions={[\n            <Localize\n                key={0}\n                i18n_default_text='Use our powerful, flexible, and free API to build a custom trading platform for yourself or for your business.'\n            />,\n        ]}\n        onClickLearnMore={openDerivAPIWebsite}\n    />\n);\n\nexport default ConnectedAppsEarnMore;\n","import { Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport ConnectedAppsInfoBullets from './connected-apps-info-bullets';\n\nconst ConnectedAppsEmpty = () => {\n    const { isDesktop } = useDevice();\n\n    const text_size = isDesktop ? 'xs' : 'xxs';\n\n    return (\n        <div className='connected-apps__empty--wrapper'>\n            <Text size={text_size} align='center' weight='bold'>\n                <Localize i18n_default_text=\"You currently don't have any third-party authorised apps associated with your account.\" />\n            </Text>\n            <ConnectedAppsInfoBullets text_color='primary' class_name='connected-apps__bullets--without-apps' />\n        </div>\n    );\n};\n\nexport default ConnectedAppsEmpty;\n","import { Fragment } from 'react';\nimport { Text } from '@deriv/components';\n\ntype TDataListTemplateEntry = {\n    title: JSX.Element | string;\n    content: JSX.Element | string;\n};\n\nconst DataListTemplateEntry = ({ title, content }: TDataListTemplateEntry) => (\n    <Fragment>\n        <Text size='xxs' weight='bold'>\n            {title}\n        </Text>\n        <Text size='xxs'>{content}</Text>\n    </Fragment>\n);\n\nexport default DataListTemplateEntry;\n","import { Localize, localize } from '@deriv-com/translations';\n\nexport const getConnectedAppsColumnNames = () => [\n    <Localize key='name' i18n_default_text='Name' />,\n    <Localize key='permission' i18n_default_text='Permission' />,\n    <Localize key='last_login' i18n_default_text='Last login' />,\n    <Localize key='action' i18n_default_text='Action' />,\n];\n\ntype Permissions = {\n    [key: string]: string;\n};\n\nconst generatePermissions = (): Permissions => ({\n    read: localize('Read'),\n    trade: localize('Trade'),\n    trading_information: localize('Trading information'),\n    payments: localize('Payments'),\n    admin: localize('Admin'),\n});\n\nexport const getConnectedAppsScopes = (permission_list: string[] = []) =>\n    permission_list.map(permission => generatePermissions()[permission]).join(', ');\n","import { OauthApps } from '@deriv/api-types';\nimport { Button } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv-com/translations';\nimport DataListTemplateEntry from './data-list-template-entry';\nimport { getConnectedAppsScopes } from './template-helper';\n\ntype TDataListTemplate = { connected_apps: OauthApps; handleToggleModal: (app_id: number) => void };\n\nconst DataListTemplate = ({ connected_apps, handleToggleModal }: TDataListTemplate) => (\n    <div className='connected-apps__list--wrapper'>\n        {connected_apps.map(connected_app => (\n            <div key={connected_app.app_id} className='connected-apps__list--template'>\n                <div className='connected-apps__list--row'>\n                    <div className='connected-apps__list--name'>\n                        <DataListTemplateEntry\n                            title={<Localize i18n_default_text='Name' />}\n                            content={connected_app.name}\n                        />\n                    </div>\n                    <div className='connected-apps__list--last-login'>\n                        <DataListTemplateEntry\n                            title={<Localize i18n_default_text='Last login' />}\n                            content={toMoment(connected_app.last_used).format('YYYY-MM-DD HH:mm:ss')}\n                        />\n                    </div>\n                </div>\n                <div className='connected-apps__list--row'>\n                    <div className='connected-apps__list--permission'>\n                        <DataListTemplateEntry\n                            title={<Localize i18n_default_text='Permission' />}\n                            content={getConnectedAppsScopes(connected_app.scopes)}\n                        />\n                    </div>\n                    <div className='connected-apps__list--revoke'>\n                        <Button small secondary onClick={() => handleToggleModal(connected_app.app_id)}>\n                            <Localize i18n_default_text='Revoke access' />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        ))}\n    </div>\n);\n\nexport default DataListTemplate;\n","import { Fragment } from 'react';\nimport clsx from 'clsx';\nimport { OauthApps } from '@deriv/api-types';\nimport { Button, Text } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv-com/translations';\nimport { getConnectedAppsColumnNames, getConnectedAppsScopes } from './template-helper';\n\ntype TDataTableTemplate = { connected_apps: OauthApps; handleToggleModal: (app_id: number) => void };\n\nconst DataTableTemplate = ({ connected_apps, handleToggleModal }: TDataTableTemplate) => (\n    <div className='connected-apps__tabular--wrapper'>\n        {getConnectedAppsColumnNames().map((column_name, index) => (\n            <Text\n                size='xs'\n                weight='bold'\n                key={column_name.key}\n                className={clsx('connected-apps__tabular--cell connected-apps__tabular--header', {\n                    'connected-apps__tabular--skip-left-padding': index === 0,\n                })}\n            >\n                {column_name}\n            </Text>\n        ))}\n        {connected_apps.map(connected_app => (\n            <Fragment key={connected_app.app_id}>\n                <Text size='xs' className='connected-apps__tabular--cell connected-apps__tabular--skip-left-padding'>\n                    {connected_app.name}\n                </Text>\n                <Text size='xs' className='connected-apps__tabular--cell'>\n                    {getConnectedAppsScopes(connected_app.scopes)}\n                </Text>\n                <Text size='xs' className='connected-apps__tabular--cell'>\n                    {toMoment(connected_app.last_used).format('YYYY-MM-DD HH:mm:ss')}\n                </Text>\n                <span className='connected-apps__tabular--cell'>\n                    <Button small secondary onClick={() => handleToggleModal(connected_app.app_id)}>\n                        <Localize i18n_default_text='Revoke access' />\n                    </Button>\n                </span>\n            </Fragment>\n        ))}\n    </div>\n);\n\nexport default DataTableTemplate;\n","import { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\n\ntype TConnectedAppsRevokeModalProps = {\n    handleRevokeAccess: () => void;\n    handleToggleModal: (app_id?: number | null) => void;\n    is_modal_open: boolean;\n};\n\nconst ConnectedAppsRevokeModal = ({\n    handleRevokeAccess,\n    handleToggleModal,\n    is_modal_open,\n}: TConnectedAppsRevokeModalProps) => (\n    <Modal is_open={is_modal_open} className='connected-apps' width='44rem'>\n        <Modal.Body>\n            <div className='connected-apps-modal--wrapper'>\n                <div className='connected-apps-modal--icon'>\n                    <Icon icon='IcAccountTrashCan' size={128} />\n                    <Text as='p' color='prominent' weight='bold'>\n                        <Localize i18n_default_text='Confirm revoke access?' />\n                    </Text>\n                </div>\n                <div className='connected-apps-modal--buttons'>\n                    <Button large secondary onClick={() => handleToggleModal()}>\n                        <Localize i18n_default_text='Back' />\n                    </Button>\n                    <Button large primary onClick={handleRevokeAccess}>\n                        <Localize i18n_default_text='Confirm' />\n                    </Button>\n                </div>\n            </div>\n        </Modal.Body>\n    </Modal>\n);\n\nexport default ConnectedAppsRevokeModal;\n","import { useState, useEffect, useCallback } from 'react';\nimport { OauthApps } from '@deriv/api-types';\nimport { Loading } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { WS } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport ErrorComponent from '../../../Components/error-component';\nimport ConnectedAppsKnowMore from './connected-apps-know-more';\nimport ConnectedAppsInfo from './connected-apps-info';\nimport ConnectedAppsEarnMore from './connected-apps-earn-more';\nimport ConnectedAppsEmpty from './connected-apps-empty';\nimport DataListTemplate from './data-list-template';\nimport DataTableTemplate from './data-table-template';\nimport ConnectedAppsRevokeModal from './connected-apps-revoke-modal';\nimport './connected-apps.scss';\n\nconst ConnectedApps = observer(() => {\n    const { isDesktop } = useDevice();\n    const [is_loading, setLoading] = useState(true);\n    const [is_modal_open, setIsModalOpen] = useState(false);\n    const [selected_app_id, setSelectedAppId] = useState<number | null>(null);\n    const [is_error, setError] = useState(false);\n    const [connected_apps, setConnectedApps] = useState<OauthApps>([]);\n\n    useEffect(() => {\n        /* eslint-disable no-console */\n        fetchConnectedApps().catch(error => console.error('error: ', error));\n    }, []);\n\n    const fetchConnectedApps = async () => {\n        const response_connected_apps = await WS.authorized.send({ oauth_apps: 1 });\n\n        if (!response_connected_apps.error) {\n            setLoading(false);\n            setConnectedApps(response_connected_apps.oauth_apps);\n        }\n    };\n\n    const handleToggleModal = useCallback((app_id: number | null = null) => {\n        setIsModalOpen(is_modal_open => !is_modal_open);\n        setSelectedAppId(app_id);\n    }, []);\n\n    const revokeConnectedApp = useCallback(async (app_id: number | null) => {\n        setLoading(true);\n        const response = await WS.authorized.send({ revoke_oauth_app: app_id });\n        if (!response.error) {\n            /* eslint-disable no-console */\n            fetchConnectedApps().catch(error => console.error('error: ', error));\n        } else {\n            setLoading(false);\n            setError(true);\n        }\n    }, []);\n\n    const handleRevokeAccess = useCallback(() => {\n        setIsModalOpen(false);\n        revokeConnectedApp(selected_app_id);\n    }, [revokeConnectedApp, selected_app_id]);\n\n    return is_loading ? (\n        <Loading is_fullscreen={false} />\n    ) : (\n        <div className='connected-apps__wrapper'>\n            <section>\n                {is_error && <ErrorComponent />}\n                {connected_apps.length ? (\n                    <div className='connected-apps__content--wrapper'>\n                        <ConnectedAppsInfo />\n                        {!isDesktop ? (\n                            <DataListTemplate connected_apps={connected_apps} handleToggleModal={handleToggleModal} />\n                        ) : (\n                            <DataTableTemplate connected_apps={connected_apps} handleToggleModal={handleToggleModal} />\n                        )}\n                    </div>\n                ) : (\n                    <ConnectedAppsEmpty />\n                )}\n            </section>\n            <section className='connected-apps__articles--wrapper'>\n                <ConnectedAppsKnowMore />\n                <ConnectedAppsEarnMore />\n            </section>\n            <ConnectedAppsRevokeModal\n                handleRevokeAccess={handleRevokeAccess}\n                handleToggleModal={handleToggleModal}\n                is_modal_open={is_modal_open}\n            />\n        </div>\n    );\n});\n\nexport default ConnectedApps;\n","import ConnectedApps from './connected-apps';\n\nexport default ConnectedApps;\n"],"names":["Article","title","descriptions","onClickLearnMore","className","has_descriptions","length","has_single_description","_jsxs","clsx","children","_jsx","Text","as","color","line_height","size","weight","Fragment","map","description","idx","onClick","Localize","i18n_default_text","Icon","icon","openAPIManagingWebsite","window","open","ConnectedAppsKnowMore","CONNECTED_APPS_INFO_BULLETS","key","text","ConnectedAppsInfoBullets","class_name","text_color","isDesktop","useDevice","text_size","bullet","observer","InlineMessage","type","message","openDerivAPIWebsite","ConnectedAppsEarnMore","ConnectedAppsEmpty","align","DataListTemplateEntry","content","getConnectedAppsScopes","permission_list","permission","read","localize","trade","trading_information","payments","admin","join","DataListTemplate","connected_apps","handleToggleModal","connected_app","name","toMoment","last_used","format","scopes","Button","small","secondary","app_id","DataTableTemplate","column_name","index","ConnectedAppsRevokeModal","handleRevokeAccess","is_modal_open","Modal","is_open","width","Body","large","primary","ConnectedApps","is_loading","setLoading","useState","setIsModalOpen","selected_app_id","setSelectedAppId","is_error","setError","setConnectedApps","useEffect","fetchConnectedApps","catch","error","console","async","response_connected_apps","WS","authorized","send","oauth_apps","useCallback","revokeConnectedApp","revoke_oauth_app","Loading","is_fullscreen","ErrorComponent","ConnectedAppsInfo"],"sourceRoot":""}