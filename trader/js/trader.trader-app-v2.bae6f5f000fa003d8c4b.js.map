{"version":3,"file":"trader/js/trader.trader-app-v2.bae6f5f000fa003d8c4b.js","mappings":";8oDAKA,IAAMA,EAAY,SAACC,GACf,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,QAAQ,OAAOC,OACxC,OAAIJ,GAAWC,EAAQD,EACZA,GAEJK,EAAAA,EAAAA,eAAcJ,GAAOK,IAAI,EAAG,KAAKC,SAAS,EAAG,KAAKH,MAC7D,EAEMI,EAAc,SAChBC,EACAC,EACAC,EACAX,GAEA,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,QAAQ,OAAOC,OACxC,OAAIJ,GAAWC,EAAQD,EACZW,EAEJF,GAAyBC,EAAqBA,EAAqBC,CAC9E,EA4BA,QAb0B,SACtBA,EACAX,EACAU,GAAqC,IACrCD,EAAqBG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAQ,OAAAG,EAAAA,EAAA,GAjBN,SACvBJ,EACAF,EACAC,EACAV,GAEA,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,QAAQ,OAAOC,OACxC,OAAIJ,GAAWC,EAAQD,IACVW,GAAaF,EAEnBA,EAAwBC,GAAsBC,IAAcA,IAAa,CACpF,CASQK,CAAmBL,EAAWF,EAAuBC,EAAoBV,IAAY,CACrFW,UAAWH,EAAYC,EAAuBC,EAAoBC,EAAWX,MAE5EA,GAAWS,IAA0B,CAAET,QAASD,EAAUC,IAAU,28CChD7EiB,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,EAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8F,EAAAhG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,EAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,EAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,gBAAAE,EAAAzG,EAAAE,GAAA,IAAAD,EAAAE,OAAAqF,KAAAxF,GAAA,GAAAG,OAAAuG,sBAAA,KAAAnG,EAAAJ,OAAAuG,sBAAA1G,GAAAE,IAAAK,EAAAA,EAAAoG,QAAA,SAAAzG,GAAA,OAAAC,OAAAyG,yBAAA5G,EAAAE,GAAAiB,UAAA,KAAAlB,EAAAwE,KAAA6B,MAAArG,EAAAM,EAAA,QAAAN,CAAA,UAAAJ,EAAAG,GAAA,QAAAE,EAAA,EAAAA,EAAAR,UAAAC,OAAAO,IAAA,KAAAD,EAAA,MAAAP,UAAAQ,GAAAR,UAAAQ,GAAA,GAAAA,EAAA,EAAAuG,EAAAtG,OAAAF,IAAA,GAAA4C,SAAA,SAAA3C,GAAA2G,EAAA7G,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAA2G,0BAAA3G,OAAA4G,iBAAA/G,EAAAG,OAAA2G,0BAAA7G,IAAAwG,EAAAtG,OAAAF,IAAA4C,SAAA,SAAA3C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAAyG,yBAAA3G,EAAAC,GAAA,WAAAF,CAAA,UAAA6G,EAAA7G,EAAAE,EAAAD,GAAA,OAAAC,EAAA8G,EAAA9G,MAAAF,EAAAG,OAAAK,eAAAR,EAAAE,EAAA,CAAAO,MAAAR,EAAAkB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAArB,EAAAE,GAAAD,EAAAD,CAAA,UAAAiH,EAAAjH,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAP,OAAAM,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAY,WAAAZ,EAAAY,aAAA,EAAAZ,EAAAa,cAAA,YAAAb,IAAAA,EAAAc,UAAA,GAAAlB,OAAAK,eAAAR,EAAAgH,EAAAzG,EAAA2G,KAAA3G,EAAA,WAAAyG,EAAA/G,GAAA,IAAAS,EAAA,SAAAT,EAAAC,GAAA,aAAA+C,EAAAhD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAAwG,aAAA,YAAAnH,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA+C,EAAAvC,GAAA,OAAAA,EAAA,UAAAqD,UAAA,kEAAA7D,EAAAkH,OAAAC,QAAApH,EAAA,CAAAqH,CAAArH,EAAA,0BAAAgD,EAAAvC,GAAAA,EAAAA,EAAA,GAGA,IAKqB6G,EAAS,WA8C1B,SAAAA,IAA0B,IAAAC,EAAA,KAAdC,EAAO/H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAtD3B,SAAAkB,EAAAP,GAAA,KAAAO,aAAAP,GAAA,UAAA0D,UAAA,qCAsD4B2D,CAAA,KAAAH,GAAA,KArCxBI,kBAAoB,CAAC,EAAC,KAEtBC,iBAAmB,CAAC,EAAC,KAErBC,yBAA2B,KAAI,KAC/BC,4BAA8B,KAAI,KAElCC,sBAAwB,KAAI,KAC5BC,wBAA0B,KAAI,KAE9BC,eAAiB,KAAI,KACrBC,gBAAkB,KAAI,KAEtBC,mBAAqB,KAAI,KACzBC,qBAAuB,KAAI,KAE3BC,4BAA8B,KAAI,KAClCC,+BAAiC,KAAI,KAErCC,oBAAsB,KAAI,KAC1BC,sBAAwB,KAAI,KAE5BC,+BAAiC,KAAI,KACrCC,mCAAqC,KAAI,KAEzClJ,mBAAqB,GAajBmJ,EAAAA,EAAAA,gBAAeC,KAAM,CACjBjB,kBAAmBkB,EAAAA,WACnBjB,iBAAkBiB,EAAAA,WAClBrJ,mBAAoBqJ,EAAAA,WACpBC,oBAAqBC,EAAAA,OACrBC,2BAA4BD,EAAAA,OAC5BE,mBAAoBF,EAAAA,OACpBG,QAASH,EAAAA,OACTI,iBAAkBJ,EAAAA,OAClBK,sBAAuBL,EAAAA,OACvBM,gBAAiBN,EAAAA,OAAOO,MACxBC,mBAAoBR,EAAAA,OAAOO,MAC3BE,SAAUT,EAAAA,OAAOO,MACjBG,aAAcV,EAAAA,OAAOO,MACrBI,sBAAuBX,EAAAA,OAAOO,MAC9BK,cAAeZ,EAAAA,OAAOO,MACtBM,uBAAwBb,EAAAA,OAAOO,MAC/BO,wBAAyBd,EAAAA,OAAOO,MAChCQ,qBAAsBf,EAAAA,OAAOO,MAC7BS,cAAehB,EAAAA,OAAOO,MACtBU,kBAAmBjB,EAAAA,OAAOO,MAC1BW,2BAA4BlB,EAAAA,OAAOO,MACnCY,mBAAoBnB,EAAAA,OAAOO,MAC3Ba,4BAA6BpB,EAAAA,OAAOO,MACpCc,UAAWrB,EAAAA,OAAOO,MAClBe,oBAAqBtB,EAAAA,OAAOO,QAGhC,IAAQgB,EACJ7C,EADI6C,WAAYC,EAChB9C,EADgB8C,yBAA0BC,EAC1C/C,EAD0C+C,2BAA4B5C,EACtEH,EADsEG,iBAAkB6C,EACxFhD,EADwFgD,WAoB5F,GAjBAtK,OAAOK,eAAeoI,KAAM,aAAc,CACtCzH,YAAY,EACZE,UAAU,IAEdlB,OAAOK,eAAeoI,KAAM,2BAA4B,CACpDzH,YAAY,EACZE,UAAU,IAEdlB,OAAOK,eAAeoI,KAAM,6BAA8B,CACtDzH,YAAY,EACZE,UAAU,IAITkJ,GAA4BA,EAAyB5K,QACrD6K,GAA8BA,EAA2B7K,OAE5B,CAC9B,IAAK8K,EACD,MAAM,IAAInH,MAAM,oDAGpBnD,OAAOK,eAAeoI,KAAM,aAAc,CACtCnI,MAAOgK,EACPtJ,YAAY,EACZE,UAAU,GAElB,CAEAuH,KAAK0B,WAAaA,EAClB1B,KAAK2B,yBAA2BA,GAA4B,GAC5D3B,KAAK4B,2BAA6BA,GAA8B,GAEhEE,YAAW,WACPlD,EAAKyB,mBAAmBrB,GAExBJ,EAAKmD,+BACLnD,EAAKoD,iCACLpD,EAAKsB,qBACT,GAAG,EACP,CAEA,OAhIJ9I,EAgIIuH,EAhIJrH,EAgII,EAAAgH,IAAA,cAAAzG,MAOA,SAAYoK,GACR,IAAIC,GAAWC,EAAAA,EAAAA,MAAKnC,MAUpB,OARKoC,EAAAA,EAAAA,eAAcpC,KAAK0B,cACpBQ,EAASR,WAAa1B,KAAK0B,YAG3BO,GAAcA,EAAWlL,SACzBmL,EAAWD,EAAWI,QAAO,SAACC,EAAQ5I,GAAC,OAAKnC,OAAOgL,OAAOD,EAAMrE,EAAA,GAAKvE,EAAIwI,EAASxI,IAAK,GAAE,CAAC,IAGvFwI,CACX,GAEA,CAAA5D,IAAA,+BAAAzG,MAKA,WAA+B,IAAA2K,EAAA,KACvBxC,KAAK2B,yBAAyB5K,SAC9B0L,EAAAA,EAAAA,WACI,kBAAMD,EAAKb,yBAAyBe,KAAI,SAAA5K,GAAC,OAAI0K,EAAK1K,EAAE,GAAC,IACrD,kBAAM0K,EAAKG,cAAcH,EAAKb,yBAA0BhD,EAAUiE,SAASC,cAAc,GAGrG,GAEA,CAAAvE,IAAA,iCAAAzG,MAKA,WAAiC,IAAAiL,EAAA,KACzB9C,KAAK4B,2BAA2B7K,SAChC0L,EAAAA,EAAAA,WACI,kBAAMK,EAAKlB,2BAA2Bc,KAAI,SAAA5K,GAAC,OAAIgL,EAAKhL,EAAE,GAAC,IACvD,kBAAMgL,EAAKH,cAAcG,EAAKlB,2BAA4BjD,EAAUiE,SAASG,gBAAgB,GAGzG,GAEA,CAAAzE,IAAA,gBAAAzG,MAOA,SAAcoK,EAAYe,GACtB,IAAMd,EAAWe,KAAKC,UAAUlD,KAAKmD,YAAYlB,IAAa,SAAC3D,EAAKzG,GAChE,GAAc,OAAVA,EAAgB,OAAOA,CAE/B,IAEImL,IAAYrE,EAAUiE,SAASC,cAC/BO,aAAaC,QAAQrD,KAAK6B,WAAYK,GAC/Bc,IAAYrE,EAAUiE,SAASG,iBACtCO,eAAeD,QAAQrD,KAAK6B,WAAYK,EAEhD,GAEA,CAAA5D,IAAA,sBAAAzG,MAIA,WAAsB,IAAA0L,EAAA,KACZC,EAAyBP,KAAKQ,MAAML,aAAaM,QAAQ1D,KAAK6B,WAAY,CAAC,IAC3E8B,EAA2BV,KAAKQ,MAAMH,eAAeI,QAAQ1D,KAAK6B,WAAY,CAAC,IAE/EK,EAAQjL,EAAAA,EAAA,GAAQuM,GAA2BG,GAEjDpM,OAAOqF,KAAKsF,GAAUjI,SAAQ,SAAA2J,GAAC,OAAKL,EAAKK,GAAK1B,EAAS0B,EAAE,GAC7D,GAEA,CAAAtF,IAAA,6BAAAzG,MAOA,SAA2BgM,EAAcC,GAAU,IAAAC,EAAA,KAK1C/D,KAAKjB,kBAAkB8E,KAHtBE,EAAKhF,kBAAkB8E,GACpB9F,QAAO,SAAAiG,GAAC,OAAKF,EAASG,SAASD,EAAE,IACjCE,OAAOJ,EAAS/F,QAAO,SAAAiG,GAAC,OAAKD,EAAKhF,kBAAkB8E,GAAcI,SAASD,EAAE,KAAGjN,SAErFiJ,KAAKjB,kBAAkB8E,GAAgBC,EAE/C,GAEA,CAAAxF,IAAA,qBAAAzG,MAMA,WAA+B,IAAAsM,EAAA,KAAZC,EAAKtN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxBS,OAAOqF,KAAKwH,GAAOnK,SAAQ,SAAAqE,GACvB6F,EAAK7D,QAAQhC,EAAK8F,EAAM9F,GAC5B,GACJ,GAEA,CAAAA,IAAA,UAAAzG,MAOA,SAAQwM,EAAUD,GAAO,IAAAE,EAAA,KACrBtE,KAAKhB,iBAAiBqF,GAAYD,GAElCG,EAAAA,EAAAA,WAAUvE,KAAMqE,GAAU,SAAAG,GAEtB,OADAF,EAAK/D,iBAAiB8D,EAAUG,EAAOC,UAChCD,CACX,GACJ,GAEA,CAAAlG,IAAA,mBAAAzG,MAOA,SAAiBwM,EAAUxM,GAAO,IAAA6M,EAAA,KACxBC,EAAU3E,KAAKhB,iBAAiBqF,GAAUM,QAC1CC,EAAM3G,EAAA,GAAMoG,OAAqBrN,IAAVa,EAAsBA,EAAQmI,KAAKqE,IAC1DrF,EAAgBf,EAAA,GAAMoG,EAAWrE,KAAKhB,iBAAiBqF,GAAUD,OAAS,IAE1EO,GAAWpN,OAAOG,eAAewB,KAAK8G,KAAM2E,KAC9CC,EAAOD,GAAW3E,KAAK2E,GACvB3F,EAAiB2F,GAAW3E,KAAKhB,iBAAiB2F,GAASP,OAAS,IAGxE,IAAMS,EAAY,IAAIC,EAAAA,UAAUF,EAAQ5F,EAAkBgB,MAE1D6E,EAAUE,WAEVxN,OAAOqF,KAAKgI,GAAQ3K,SAAQ,SAAAqE,GACxBoG,EAAKtE,2BAA2B9B,EAAKuG,EAAUG,OAAOC,IAAI3G,GAC9D,GACJ,GAEA,CAAAA,IAAA,wBAAAzG,MAIA,WAAwB,IAAAqN,EAAA,KACdlG,EAAmBzH,OAAOqF,KAAKoD,KAAKhB,kBACpCD,EAAoBxH,OAAOqF,KAAKoD,KAAKjB,mBAE3CC,EAAiB/E,SAAQ,SAAAP,GACrBwL,EAAK3E,iBAAiB7G,EAAGwL,EAAKxL,GAClC,IAGAqF,EAAkB9E,SAAQ,SAAAkL,GACjBnG,EAAiBiF,SAASkB,WACpBD,EAAKnG,kBAAkBoG,EAEtC,GACJ,GAAC,CAAA7G,IAAA,kBAAAzG,MAED,SAAgBuN,GAAU,IAAAC,EAAA,KAClBD,IACApF,KAAKZ,wBAA0BgG,EAE/BpF,KAAKb,uBAAwBmG,EAAAA,EAAAA,OACzB,kBAAMD,EAAK3D,WAAW6D,OAAOC,gBAAgB,IAC7C,WACI,IACI,IAAMlD,EAAS+C,EAAKjG,0BACpB,IAAIkD,IAAUA,EAAO9H,MAA+B,mBAAhB8H,EAAO9H,KAMvC,MAAM,IAAIE,MAAM,iEALhB4H,EAAO9H,MAAK,WACR6K,EAAK3D,WAAW6D,OAAOE,kBACvBJ,EAAK5E,gBAAgB4E,EAAKjG,wBAC9B,GAIR,CAAE,MAAO+F,IAGAO,EAAAA,EAAAA,iBACDC,QAAQR,MAAMA,EAEtB,CACJ,IAGZ,GAAC,CAAA7G,IAAA,qBAAAzG,MAED,SAAmBuN,GAAU,IAAAQ,EAAA,KACrBR,IACApF,KAAKd,4BAA8BkG,EACnCpF,KAAKf,0BAA2BqG,EAAAA,EAAAA,OAC5B,kBAAMM,EAAKlE,WAAW6D,OAAOM,oBAAoB,IACjD,WACI,IAAI,IAAAC,EACMxD,EAAyC,QAAnCwD,EAAGF,EAAK1G,mCAA2B,IAAA4G,OAAA,EAAhCA,EAAA5M,KAAA0M,GACf,IAAItD,IAAUA,EAAO9H,MAA+B,mBAAhB8H,EAAO9H,KAMvC,MAAM,IAAIE,MAAM,kEALhB4H,EAAO9H,MAAK,WACRoL,EAAKlE,WAAW6D,OAAOQ,qBAAoB,GAC3CH,EAAKjF,mBAAmBiF,EAAK1G,4BACjC,GAIR,CAAE,MAAOiG,IAGAO,EAAAA,EAAAA,iBACDC,QAAQR,MAAMA,EAEtB,CACJ,IAGZ,GAAC,CAAA7G,IAAA,WAAAzG,MAED,SAASuN,GAAU,IAAAY,EAAA,KACfhG,KAAKX,gBAAiBiG,EAAAA,EAAAA,OAClB,kBAAMU,EAAKtE,WAAW6D,OAAOU,cAAc,GAAAxI,EAAAtG,IAAAmF,MAC3C,SAAA4J,IAAA,IAAA5D,EAAA,OAAAnL,IAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,OAE6C,GAF7C8K,EAAApJ,KAAA,IAEcuF,EAAS0D,EAAK1G,qBACNgD,EAAO9H,MAA+B,mBAAhB8H,EAAO9H,KAAmB,CAAA2L,EAAA9K,KAAA,QAC1DiH,EAAO9H,MAAK,WACRwL,EAAKtE,WAAW6D,OAAOa,WAAU,GACjCJ,EAAKpF,SAASoF,EAAK1G,gBACvB,IAAG6G,EAAA9K,KAAA,qBAEG,IAAIX,MAAM,sDAAqD,OAAAyL,EAAA9K,KAAA,gBAAA8K,EAAApJ,KAAA,EAAAoJ,EAAAE,GAAAF,EAAA,UAKpET,EAAAA,EAAAA,iBACDC,QAAQR,MAAKgB,EAAAE,IAChB,yBAAAF,EAAAjJ,OAAA,GAAAgJ,EAAA,mBAIblG,KAAKV,gBAAkB8F,CAC3B,GAAC,CAAA9G,IAAA,eAAAzG,MAED,SAAauN,GAAU,IAAAkB,EAAA,KACnBtG,KAAKT,oBAAqB+F,EAAAA,EAAAA,OACtB,kBAAMgB,EAAK5E,WAAW6D,OAAOgB,qBAAqB,GAAA9I,EAAAtG,IAAAmF,MAClD,SAAAkK,IAAA,IAAAlE,EAAA,OAAAnL,IAAAuB,MAAA,SAAA+N,GAAA,cAAAA,EAAA1J,KAAA0J,EAAApL,MAAA,OAEkD,GAFlDoL,EAAA1J,KAAA,IAEcuF,EAASgE,EAAK9G,0BACN8C,EAAO9H,MAA+B,mBAAhB8H,EAAO9H,KAAmB,CAAAiM,EAAApL,KAAA,QAC1DiH,EAAO9H,MAAK,WACR8L,EAAK5E,WAAW6D,OAAOmB,gBAAe,GACtCJ,EAAKzF,aAAayF,EAAK9G,qBAC3B,IAAGiH,EAAApL,KAAA,qBAEG,IAAIX,MAAM,2DAA0D,OAAA+L,EAAApL,KAAA,gBAAAoL,EAAA1J,KAAA,EAAA0J,EAAAJ,GAAAI,EAAA,UAKzEf,EAAAA,EAAAA,iBACDC,QAAQR,MAAKsB,EAAAJ,IAChB,yBAAAI,EAAAvJ,OAAA,GAAAsJ,EAAA,mBAIbxG,KAAKR,qBAAuB4F,CAChC,GAAC,CAAA9G,IAAA,wBAAAzG,MAED,SAAsBuN,GAAU,IAAAuB,EAAA,KAC5B3G,KAAKP,6BAA8BgD,EAAAA,EAAAA,WAC/B,kBAAMkE,EAAKjF,WAAWkF,OAAOC,iBAAiB,IAC9C,SAAAC,GACI,IACIH,EAAKjH,+BAA+BoH,EACxC,CAAE,MAAO3B,IAGAO,EAAAA,EAAAA,iBACDC,QAAQR,MAAMA,EAEtB,CACJ,IAGJnF,KAAKN,+BAAiC0F,CAC1C,GAAC,CAAA9G,IAAA,gBAAAzG,MAED,SAAcuN,GAAU,IAAA2B,EAAA,KACpB/G,KAAKL,qBAAsB8C,EAAAA,EAAAA,WACvB,kBAAMsE,EAAKrF,WAAWsF,GAAGC,eAAe,IACxC,SAAAA,GACI,IACIF,EAAKnH,sBAAsBqH,EAC/B,CAAE,MAAO9B,IAGAO,EAAAA,EAAAA,iBACDC,QAAQR,MAAMA,EAEtB,CACJ,IAGJnF,KAAKJ,sBAAwBwF,CACjC,GAAC,CAAA9G,IAAA,yBAAAzG,MAED,SAAuBuN,GAAU,IAAA8B,EAAA,KAC7BlH,KAAKH,gCAAiCyF,EAAAA,EAAAA,OAClC,kBAAM4B,EAAKxF,WAAWsF,GAAGG,6BAA6B,IACtD,WACI,IACI,IAAM7E,EAAS4E,EAAKpH,qCACpB,IAAIwC,IAAUA,EAAO9H,MAA+B,mBAAhB8H,EAAO9H,KAMvC,MAAM,IAAIE,MAAM,mEALhB4H,EAAO9H,MAAK,WACR0M,EAAKxF,WAAWsF,GAAGI,yBAAwB,GAC3CF,EAAKlG,uBAAuBkG,EAAKpH,mCACrC,GAIR,CAAE,MAAOqF,IAGAO,EAAAA,EAAAA,iBACDC,QAAQR,MAAMA,EAEtB,CACJ,IAGJnF,KAAKF,mCAAqCsF,CAC9C,GAAC,CAAA9G,IAAA,0BAAAzG,MAED,WACiD,mBAAlCmI,KAAKf,0BACZe,KAAKf,2BAETe,KAAKd,4BAA8B,IACvC,GAAC,CAAAZ,IAAA,uBAAAzG,MAED,WAC8C,mBAA/BmI,KAAKb,uBACZa,KAAKb,wBAETa,KAAKZ,wBAA0B,IACnC,GAAC,CAAAd,IAAA,gBAAAzG,MAED,WACuC,mBAAxBmI,KAAKX,gBACZW,KAAKX,iBAETW,KAAKV,gBAAkB,IAC3B,GAAC,CAAAhB,IAAA,oBAAAzG,MAED,WAC2C,mBAA5BmI,KAAKT,oBACZS,KAAKT,qBAETS,KAAKR,qBAAuB,IAChC,GAAC,CAAAlB,IAAA,6BAAAzG,MAED,WACoD,mBAArCmI,KAAKP,6BACZO,KAAKP,8BAETO,KAAKN,+BAAiC,IAC1C,GAAC,CAAApB,IAAA,qBAAAzG,MAED,WAC4C,mBAA7BmI,KAAKL,qBACZK,KAAKL,sBAETK,KAAKJ,sBAAwB,IACjC,GAAC,CAAAtB,IAAA,8BAAAzG,MAED,WACuD,mBAAxCmI,KAAKH,gCACZG,KAAKH,iCAETG,KAAKF,mCAAqC,IAC9C,GAAC,CAAAxB,IAAA,YAAAzG,MAED,WACImI,KAAKiB,0BACLjB,KAAKkB,uBACLlB,KAAKmB,gBACLnB,KAAKoB,oBACLpB,KAAKqB,6BACLrB,KAAKsB,qBACLtB,KAAKuB,6BACT,GAAC,CAAAjD,IAAA,sBAAAzG,MAED,SAAoBwP,GAEhB,GAAIrH,KAAK0B,WAAW6D,OAAO8B,UAAYA,EAAS,SAAAC,EAAAxQ,UAAAC,OAFpBwQ,EAAS,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,EAAA,GAAA3Q,UAAA2Q,GAGjCF,EAAUtN,SAAQ,SAAAyN,GAAG,OAAIA,GAAK,IAC9B1H,KAAKpJ,oBAAqB,CAC9B,CACJ,IA5hBJU,GAAA+G,EAAAjH,EAAAI,UAAAF,GAAAD,GAAAgH,EAAAjH,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAqB,UAAA,IAAArB,EAAA,IAAAA,EAAAE,EAAAD,CA4hBK,CAphByB,o9BCR9BF,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAyG,EAAAzG,EAAAE,GAAA,IAAAD,EAAAE,OAAAqF,KAAAxF,GAAA,GAAAG,OAAAuG,sBAAA,KAAAnG,EAAAJ,OAAAuG,sBAAA1G,GAAAE,IAAAK,EAAAA,EAAAoG,QAAA,SAAAzG,GAAA,OAAAC,OAAAyG,yBAAA5G,EAAAE,GAAAiB,UAAA,KAAAlB,EAAAwE,KAAA6B,MAAArG,EAAAM,EAAA,QAAAN,CAAA,UAAAJ,EAAAG,GAAA,QAAAE,EAAA,EAAAA,EAAAR,UAAAC,OAAAO,IAAA,KAAAD,EAAA,MAAAP,UAAAQ,GAAAR,UAAAQ,GAAA,GAAAA,EAAA,EAAAuG,EAAAtG,OAAAF,IAAA,GAAA4C,SAAA,SAAA3C,GAAA2G,EAAA7G,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAA2G,0BAAA3G,OAAA4G,iBAAA/G,EAAAG,OAAA2G,0BAAA7G,IAAAwG,EAAAtG,OAAAF,IAAA4C,SAAA,SAAA3C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAAyG,yBAAA3G,EAAAC,GAAA,WAAAF,CAAA,UAAA6G,EAAA7G,EAAAE,EAAAD,GAAA,OAAAC,EAAA8G,EAAA9G,MAAAF,EAAAG,OAAAK,eAAAR,EAAAE,EAAA,CAAAO,MAAAR,EAAAkB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAArB,EAAAE,GAAAD,EAAAD,CAAA,UAAAoG,EAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8F,EAAAhG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,EAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,EAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,gBAAAU,EAAAjH,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAP,OAAAM,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAY,WAAAZ,EAAAY,aAAA,EAAAZ,EAAAa,cAAA,YAAAb,IAAAA,EAAAc,UAAA,GAAAlB,OAAAK,eAAAR,EAAAgH,EAAAzG,EAAA2G,KAAA3G,EAAA,WAAAyG,EAAA/G,GAAA,IAAAS,EAAA,SAAAT,EAAAC,GAAA,aAAA+C,EAAAhD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAAwG,aAAA,YAAAnH,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA+C,EAAAvC,GAAA,OAAAA,EAAA,UAAAqD,UAAA,kEAAA7D,EAAAkH,OAAAC,QAAApH,EAAA,CAAAqH,CAAArH,EAAA,0BAAAgD,EAAAvC,GAAAA,EAAAA,EAAA,YAAA6P,EAAAtQ,EAAAM,EAAAP,GAAA,OAAAO,EAAAiQ,EAAAjQ,GAAA,SAAAN,EAAAD,GAAA,GAAAA,IAAA,UAAAiD,EAAAjD,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA+D,UAAA,4EAAA/D,GAAA,YAAAA,EAAA,UAAAyQ,eAAA,oEAAAzQ,CAAA,CAAA0Q,CAAAzQ,EAAA,CAAA0Q,CAAA1Q,EAAA2Q,IAAAC,QAAAC,UAAAvQ,EAAAP,GAAA,GAAAwQ,EAAAvQ,GAAA+E,aAAAzE,EAAA+F,MAAArG,EAAAD,GAAA,UAAA4Q,IAAA,QAAA3Q,GAAA8Q,QAAA3Q,UAAA4Q,QAAAlP,KAAA+O,QAAAC,UAAAC,QAAA,0BAAA9Q,GAAA,QAAA2Q,EAAA,mBAAA3Q,CAAA,cAAAuQ,EAAAvQ,GAAA,OAAAuQ,EAAArQ,OAAAgF,eAAAhF,OAAAqC,eAAAyO,OAAA,SAAAhR,GAAA,OAAAA,EAAAmF,WAAAjF,OAAAqC,eAAAvC,EAAA,EAAAuQ,EAAAvQ,EAAA,UAAAiR,EAAAjR,EAAAD,GAAA,OAAAkR,EAAA/Q,OAAAgF,eAAAhF,OAAAgF,eAAA8L,OAAA,SAAAhR,EAAAD,GAAA,OAAAC,EAAAmF,UAAApF,EAAAC,CAAA,EAAAiR,EAAAjR,EAAAD,EAAA,CDQqBuH,EAIViE,SAAWrL,OAAOgR,OAAO,CAC5B1F,cAAe9K,OAAO,iBACtBgL,gBAAiBhL,OAAO,qBCPhC,IAGqByQ,EAAgB,SAAAC,GAajC,SAAAD,EAAAE,GAA4B,IAAA9J,EAAd8C,EAAUgH,EAAVhH,WA0BP,OAjDX,SAAA1J,EAAAP,GAAA,KAAAO,aAAAP,GAAA,UAAA0D,UAAA,qCAuB4B2D,CAAA,KAAA0J,IAEpB5J,EAAA+I,EAAA,KAAAa,EAAA,CAAM,CAAE9G,WAAAA,MAdZiH,KAAO,GAAE/J,EACT/H,UAAY,KAAI+H,EAChB1I,SAAUE,EAAAA,EAAAA,YAAWC,QAAQ,OAAOG,IAAI,EAAG,KAAKC,SAAS,EAAG,KAAKH,OAAMsI,EACvEuG,MAAQ,GAAEvG,EACVgK,gBAAiB,EAAKhK,EACtBiK,YAAa,EAAIjK,EACjBkK,yBAAmB,EAGnBlK,EACAmK,eAAiB,GAAEnK,EAqFnBoK,cAAgBC,KAAS,SAACC,EAAMC,GACxBD,EAAO,MACPtK,EAAKwK,eAAeD,EAE5B,GAtGyB,MAmBrBpJ,EAAAA,EAAAA,gBAAcnB,EAAO,CACjB+J,KAAM1I,EAAAA,WACNpJ,UAAWoJ,EAAAA,WACX/J,QAAS+J,EAAAA,WACTkF,MAAOlF,EAAAA,WACP2I,eAAgB3I,EAAAA,WAChB4I,WAAY5I,EAAAA,WACZ6I,oBAAqB7I,EAAAA,WACrB8I,eAAgB9I,EAAAA,WAChBoJ,SAAUC,EAAAA,SACVC,kBAAmBD,EAAAA,SACnBF,eAAgBjJ,EAAAA,OAAOO,MACvB8I,2BAA4BrJ,EAAAA,OAAOO,MACnC+I,aAActJ,EAAAA,OAAOO,MACrBgJ,4BAA6BvJ,EAAAA,OAAOO,MACpCiJ,QAASxJ,EAAAA,OAAOO,MAChBc,UAAWoI,EAAAA,SACXC,OAAQP,EAAAA,SACRQ,wBAAyB3J,EAAAA,OAAOO,MAChCqJ,WAAY5J,EAAAA,OAAOO,MACnBsJ,gBAAiB7J,EAAAA,OAAOO,MACxBuJ,iBAAkB9J,EAAAA,OAAOO,QAC1B9B,CACP,CAAC,OAlDL,SAAAvH,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA+D,UAAA,sDAAA9D,EAAAG,UAAAD,OAAAqB,OAAAxB,GAAAA,EAAAI,UAAA,CAAA4E,YAAA,CAAAvE,MAAAR,EAAAoB,UAAA,EAAAD,cAAA,KAAAjB,OAAAK,eAAAP,EAAA,aAAAoB,UAAA,IAAArB,GAAAkR,EAAAjR,EAAAD,EAAA,CAkDK8S,CAAA1B,EAAAC,GAlDLrR,EAkDKoR,EAlDLlR,EAkDK,EAAAgH,IAAA,WAAA2G,IAED,WACI,OAAQjF,KAAK6I,YAAmC,IAArB7I,KAAK2I,KAAK5R,MACzC,GAAC,CAAAuH,IAAA,oBAAA2G,IAED,WACI,SAAUjF,KAAKnJ,YAAamJ,KAAK9J,QACrC,GAAC,CAAAoI,IAAA,uBAAAzG,MAED,SAAqBsS,GACjB,QAASA,IAAiBnK,KAAK4I,iBAAmB5I,KAAK6I,UAC3D,GAAC,CAAAvK,IAAA,iBAAAzG,OAAAuS,EAAA3M,EAAAtG,IAAAmF,MAED,SAAA4J,EAAqBiD,EAA2BkB,GAAU,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvT,IAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,UACjD2E,KAAK2K,qBAAqBN,GAAa,CAAFlE,EAAA9K,KAAA,eAAA8K,EAAAjL,OAAA,iBAa1B,OAZhB8E,KAAK6I,YAAa,EACZ2B,EAAaI,EAAkB5K,KAAKnJ,UAAWmJ,KAAK9J,QAAS,GAAG,GAChEuU,EAAStB,EAAyBlS,EAAAA,EAAA,GAE3B2T,EACkC,QADjBN,EAChBtK,KAAK0B,WAAWmJ,QAAQC,iBAAS,IAAAR,OAAA,EAAjCA,EAAmCS,SACF,QADUR,EAC3CvK,KAAK0B,WAAWmJ,QAAQC,iBAAS,IAAAP,OAAA,EAAjCA,EAAmCS,OACnC,GACA,IACH,IACDC,cAAejL,KAAK0B,WAAWmJ,QAAQC,UAAUI,wBAErDV,EAAUrE,EAAA9K,KAAA,EAEO8P,EAAAA,GAAGC,YAzEf,GAyEuCpL,KAAK2I,KAAK5R,OAAQ0T,GAAO,OAArEC,EAAQvE,EAAApL,KAEdiF,KAAKwJ,2BAA2BkB,GAAU,wBAAAvE,EAAAjJ,OAAA,GAAAgJ,EAAA,UAC7C,SAnBmBmF,EAAAC,GAAA,OAAAlB,EAAA1M,MAAC,KAAD5G,UAAA,KAAAwH,IAAA,6BAAAzG,MAqBpB,SAA2B6S,GAAU,IAAAlI,EAAA,KACjC,GAAI,UAAWkI,EACX1K,KAAKmF,MAAQuF,EAASvF,MAAMoG,YADhC,CAKA,IAAMC,EAAyBd,EAASe,aAAaC,aAChDhJ,KAAI,SAAAiJ,GAAW,OCxFiB,SACzCA,EACAC,GAEC,IAAAC,EAAAC,EAAAC,EAAAC,EADDC,EAA6BnV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE1BoV,EAAgB,uBAChBC,EACFR,EAAYQ,eAAiB,GAAJjI,QAAO9N,EAAAA,EAAAA,UAASqI,OAAOkN,EAAYQ,gBAAgBC,OAAOF,IACjFG,EAAqBV,EAAYQ,cACjCG,EAAYX,EAAYW,WAAa,GAAJpI,QAAO9N,EAAAA,EAAAA,UAASqI,OAAOkN,EAAYW,YAAYF,OAAOF,IACvFK,EAA2B,QAArBV,EAAGF,EAAYY,cAAM,IAAAV,EAAAA,EAAIW,IAC/BC,EAAmC,QAAzBX,EAAGH,EAAYc,kBAAU,IAAAX,EAAAA,EAAIU,IACvCE,EAAiC,QAAxBX,EAAGJ,EAAYe,iBAAS,IAAAX,EAAAA,EAAIS,IACrCG,GAAcC,EAAAA,EAAAA,aAAYhB,EAAUnN,OAAOgO,EAAaC,IAAY,GACpEG,GAAeC,EAAAA,EAAAA,sBACjBb,GACAc,EAAAA,EAAAA,sBAA0C,QAAtBf,EAACL,EAAYqB,iBAAS,IAAAhB,EAAAA,EAAI,IAAIiB,YAGtD,OAAAhW,EAAAA,EAAA,GACO0U,GACA,CACCY,OAAAA,EACAE,WAAAA,EACAC,UAAAA,EACAC,YAAAA,EACAL,UAAAA,EACAH,cAAAA,EACAU,aAAAA,EACAR,mBAAAA,GAGZ,CDyDgBa,CACIvB,EACAnJ,EAAKd,WAAW6D,OAAOqG,SACvBpJ,EAAKd,WAAWuK,eAAeA,eAClC,IAEJlO,OAAOoP,EAAAA,yBAEZnN,KAAK2I,KAAO,GAAHzE,OAAAkJ,EAAOpN,KAAK2I,MAAIyE,EAAK5B,IAC9BxL,KAAK4I,eAAiB4C,EAAuBzU,OA/FlC,GAgGXiJ,KAAK6I,YAAa,CAdlB,CAeJ,GAAC,CAAAvK,IAAA,eAAAzG,MAQD,SAAawV,EAAOlE,GAChB,IAAAmE,EAAkDD,EAAME,OAAhDC,EAASF,EAATE,UACFC,EADyBH,EAAZI,cACoBF,EADMF,EAAZK,cAEjC3N,KAAKgJ,cAAcyE,EAAgBtE,EACvC,GAAC,CAAA7K,IAAA,8BAAAzG,MAED,SAA4BiP,GACxB9G,KAAK6I,WAAa7I,KAAK6I,aAAe/B,CAC1C,GAAC,CAAAxI,IAAA,UAAAzG,OAAA+V,EAAAnQ,EAAAtG,IAAAmF,MAED,SAAAkK,EAAc2C,GAAyB,OAAAhS,IAAAuB,MAAA,SAAA+N,GAAA,cAAAA,EAAA1J,KAAA0J,EAAApL,MAAA,OAI0B,OAH7D2E,KAAKyB,oBAAoBzB,KAAK+I,eAAgB/I,KAAKgK,gBAAiBmB,EAAAA,GAAG0C,UAAUxF,KAAK,KAAM,aAC5FrI,KAAK+I,eAAiB/I,KAAK0B,WAAW6D,OAAO8B,QAC7CrH,KAAKS,gBAAgBT,KAAK8J,yBAC1B9J,KAAKc,sBAAsBd,KAAK0J,6BAA6BjD,EAAApL,KAAA,EACvD8P,EAAAA,GAAG2C,KAAK,aAAY,OAM1B9N,KAAKoJ,eAAeD,GAA2B,GAAM,wBAAA1C,EAAAvJ,OAAA,GAAAsJ,EAAA,UACxD,SAZYuH,GAAA,OAAAH,EAAAlQ,MAAC,KAAD5G,UAAA,IAcb,CAAAwH,IAAA,YAAAzG,MAEA,WACImI,KAAKkB,uBACLiK,EAAAA,GAAG0C,UAAU,WACjB,GAAC,CAAAvP,IAAA,SAAA2G,IAED,WACI,IAAI0H,EAAc,EAKlB,OAHA3M,KAAK2I,KAAK1O,SAAQ,SAAA0R,GACdgB,GAAeqB,WAAWrC,EAAYgB,YAAYsB,QAAQ,KAAM,IACpE,IACO,CACHtB,YAAaA,EAAYuB,WAEjC,GAAC,CAAA5P,IAAA,0BAAAzG,MAED,WAA0B,IAAAiL,EAAA,KACtB,OAAO,IAAInG,SAAQ,SAAArC,GAGf,OAFAwI,EAAKiH,aACLjH,EAAKkH,kBACE1P,EAAQwI,EAAKsG,iBACxB,GACJ,GAAC,CAAA9K,IAAA,aAAAzG,MAED,WACImI,KAAK2I,KAAO,GACZ3I,KAAK4I,gBAAiB,EACtB5I,KAAK6I,YAAa,CACtB,GAAC,CAAAvK,IAAA,kBAAAzG,MAED,WACImI,KAAKnJ,UAAY,KACjBmJ,KAAK9J,SAAUE,EAAAA,EAAAA,YAAWC,QAAQ,OAAOG,IAAI,EAAG,KAAKC,SAAS,EAAG,KAAKH,MAC1E,GAAC,CAAAgI,IAAA,mBAAAzG,MAED,SAAiBsW,GAA6D,IAAAC,EAAAtX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAA3CuX,EAAUD,EAAVC,WAAYlF,EAAyBiF,EAAzBjF,0BAChCmF,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,GAAIC,EAAaL,EAAbK,SAElBxO,KAAK8I,oBAAsBuF,EAEvBC,EACAtO,KAAKnJ,WAAYT,EAAAA,EAAAA,UAASkY,GAAMhY,OACzBkY,IACPxO,KAAKnJ,UAAY,MAGjB0X,IAAIvO,KAAK9J,SAAUE,EAAAA,EAAAA,UAASmY,GAAIjY,QAEhC6S,IACAnJ,KAAK0B,WAAWmJ,QAAQC,UAAU2D,YAAYzO,KAAKnJ,WACnDmJ,KAAK0B,WAAWmJ,QAAQC,UAAU4D,UAAU1O,KAAK9J,UAGrD8J,KAAK+J,aACL/J,KAAKoJ,eAAeD,EACxB,IAjMJ7R,GAAA+G,EAAAjH,EAAAI,UAAAF,GAAAD,GAAAgH,EAAAjH,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAqB,UAAA,IAAArB,EAAA,IAAAA,EAAAE,EAAAD,EAwHKuW,EA1DAxD,CAmIA,CAvLgC,CAASzL,m5BEPvC,IAAMgQ,GAA6B,SACtChD,EACAC,GAEC,IAAAC,EAAA+C,EAAAC,EADD5C,EAA6BnV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAExBgY,EAAkFnD,EAAlFmD,YAAaC,EAAqEpD,EAArEoD,OAAQC,EAA6DrD,EAA7DqD,YAAaC,EAAgDtD,EAAhDsD,SAAU9C,EAAsCR,EAAtCQ,cAAe+C,EAAuBvD,EAAvBuD,mBAE7DC,GAAmB/Y,EAAAA,EAAAA,UAASuV,EAAYwD,kBAAkB/C,OAD1C,wBAEhBG,EAA2B,QAArBV,EAAGF,EAAYY,cAAM,IAAAV,EAAAA,EAAIW,IAC/B4C,EAA2B,QAArBR,EAAGjD,EAAYyD,cAAM,IAAAR,EAAAA,EAAIpC,IAC/B6C,EAAmC,QAA5BR,EAAGlD,EAAY2D,qBAAa,IAAAT,EAAAA,EAAIrC,IACvC+C,GAA0B,EAC1BvC,EAAY,CAAC,MAAO,QAAQ/I,SAAS6K,QAAAA,EAAe,IAAMnD,EAAYqB,UAAY,KAClFH,EAAeG,GACfF,EAAAA,EAAAA,sBAAqBb,GAAgBc,EAAAA,EAAAA,sBAAqBC,GAAWC,YACrE,GAEN,sWAAAhW,CAAA,CACIkJ,QAAQqP,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,aAAYX,QAAAA,EAAe,KAC5CY,KAAMP,EACNtC,aAAAA,EACA8C,MAAOhE,EAAYiE,eACnBrD,OAAQtQ,MAAMsQ,GAAU,KAAMK,EAAAA,EAAAA,aAAYhB,EAAUW,EAAQgD,GAC5DH,OAAQnT,MAAMmT,GAAU,KAAMxC,EAAAA,EAAAA,aAAYhB,EAAUwD,EAAQG,GAC5DF,QAASpT,MAAMoT,GAAW,KAAMzC,EAAAA,EAAAA,aAAYhB,EAAUyD,EAASE,GAC/DM,KAAMZ,aAAQ,EAARA,EAAUhB,QAAQ,MAAO,UAC/B6B,GAAId,EACJD,OAAAA,EACA/B,UAAAA,EACA8B,YAAAA,EACA3C,cAAAA,EACAgD,iBAAkBxD,EAAYwD,kBAC1BD,GAAsB,CACtBA,mBAAAA,EACAD,SAAAA,GAGZ,49BCxCA9X,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,GAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,GAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,GAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8F,GAAAhG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,gBAAAU,GAAAjH,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAP,OAAAM,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAY,WAAAZ,EAAAY,aAAA,EAAAZ,EAAAa,cAAA,YAAAb,IAAAA,EAAAc,UAAA,GAAAlB,OAAAK,eAAAR,EAAAgH,GAAAzG,EAAA2G,KAAA3G,EAAA,WAAAyG,GAAA/G,GAAA,IAAAS,EAAA,SAAAT,EAAAC,GAAA,aAAA+C,GAAAhD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAAwG,aAAA,YAAAnH,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA+C,GAAAvC,GAAA,OAAAA,EAAA,UAAAqD,UAAA,kEAAA7D,EAAAkH,OAAAC,QAAApH,EAAA,CAAAqH,CAAArH,EAAA,0BAAAgD,GAAAvC,GAAAA,EAAAA,EAAA,YAAA6P,GAAAtQ,EAAAM,EAAAP,GAAA,OAAAO,EAAAiQ,GAAAjQ,GAAA,SAAAN,EAAAD,GAAA,GAAAA,IAAA,UAAAiD,GAAAjD,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA+D,UAAA,4EAAA/D,GAAA,YAAAA,EAAA,UAAAyQ,eAAA,oEAAAzQ,CAAA,CAAA0Q,CAAAzQ,EAAA,CAAA0Q,CAAA1Q,EAAA2Q,KAAAC,QAAAC,UAAAvQ,EAAAP,GAAA,GAAAwQ,GAAAvQ,GAAA+E,aAAAzE,EAAA+F,MAAArG,EAAAD,GAAA,UAAA4Q,KAAA,QAAA3Q,GAAA8Q,QAAA3Q,UAAA4Q,QAAAlP,KAAA+O,QAAAC,UAAAC,QAAA,0BAAA9Q,GAAA,QAAA2Q,GAAA,mBAAA3Q,CAAA,cAAAuQ,GAAAvQ,GAAA,OAAAuQ,GAAArQ,OAAAgF,eAAAhF,OAAAqC,eAAAyO,OAAA,SAAAhR,GAAA,OAAAA,EAAAmF,WAAAjF,OAAAqC,eAAAvC,EAAA,EAAAuQ,GAAAvQ,EAAA,UAAAiR,GAAAjR,EAAAD,GAAA,OAAAkR,GAAA/Q,OAAAgF,eAAAhF,OAAAgF,eAAA8L,OAAA,SAAAhR,EAAAD,GAAA,OAAAC,EAAAmF,UAAApF,EAAAC,CAAA,EAAAiR,GAAAjR,EAAAD,EAAA,CAOA,IAGqB2Y,GAAc,SAAAtH,GAgB/B,SAAAsH,EAAArH,GAA4B,IAAA9J,EAAd8C,EAAUgH,EAAVhH,WA4BP,OAtDX,SAAA1J,EAAAP,GAAA,KAAAO,aAAAP,GAAA,UAAA0D,UAAA,qCA0B4B2D,CAAA,KAAAiR,IAEpBnR,EAAA+I,GAAA,KAAAoI,EAAA,CAAM,CAAErO,WAAAA,MAjBZiH,KAAO,GAAE/J,EACTiK,YAAa,EAAIjK,EACjBgK,gBAAiB,EAAKhK,EACtB/H,UAAY,KAAI+H,EAChB1I,SAAUE,EAAAA,EAAAA,YAAWC,QAAQ,OAAOG,IAAI,EAAG,KAAKC,SAAS,EAAG,KAAKH,OAAMsI,EACvEuG,MAAQ,GAAEvG,EACVkQ,YAAc,MAAKlQ,EACnBkK,yBAAmB,EAGnBlK,EACAmK,eAAiB,GAAEnK,EAEnBoR,mBAAqB,CAAC,EAACpR,EAsIvBoK,cAAgBC,KAAS,SAAAC,GACjBA,EAAO,MACPtK,EAAKwK,gBAEb,GA1JyB,MAsBrBrJ,EAAAA,EAAAA,gBAAcnB,EAAO,CACjB+J,KAAM1I,EAAAA,WACN4I,WAAY5I,EAAAA,WACZ2I,eAAgB3I,EAAAA,WAChBpJ,UAAWoJ,EAAAA,WACX/J,QAAS+J,EAAAA,WACTkF,MAAOlF,EAAAA,WACP6O,YAAa7O,EAAAA,WACb6I,oBAAqB7I,EAAAA,WACrB8I,eAAgB9I,EAAAA,WAChB+P,mBAAoB/P,EAAAA,WACpBoJ,SAAUC,EAAAA,SACVC,kBAAmBD,EAAAA,SACnBS,WAAY5J,EAAAA,OAAOO,MACnBsJ,gBAAiB7J,EAAAA,OAAOO,MACxB0I,eAAgBjJ,EAAAA,OAAOO,MACvBuP,iBAAkB9P,EAAAA,OAAOO,MACzBuJ,iBAAkB9J,EAAAA,OAAOO,MACzBwP,mBAAoB/P,EAAAA,OAAOO,MAC3B+I,aAActJ,EAAAA,OAAOO,MACrBoJ,wBAAyB3J,EAAAA,OAAOO,MAChCgJ,4BAA6BvJ,EAAAA,OAAOO,MACpCiJ,QAASxJ,EAAAA,OAAOO,MAChBc,UAAWoI,EAAAA,WACZhL,CACP,CAAC,OAvDL,SAAAvH,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA+D,UAAA,sDAAA9D,EAAAG,UAAAD,OAAAqB,OAAAxB,GAAAA,EAAAI,UAAA,CAAA4E,YAAA,CAAAvE,MAAAR,EAAAoB,UAAA,EAAAD,cAAA,KAAAjB,OAAAK,eAAAP,EAAA,aAAAoB,UAAA,IAAArB,GAAAkR,GAAAjR,EAAAD,EAAA,CAuDK8S,CAAA6F,EAAAtH,GAvDLrR,EAuDK2Y,EAvDLzY,EAuDK,EAAAgH,IAAA,WAAA2G,IAED,WACI,OAAQjF,KAAK6I,YAAmC,IAArB7I,KAAK2I,KAAK5R,MACzC,GAAC,CAAAuH,IAAA,oBAAA2G,IAED,WACI,SAAUjF,KAAKnJ,YAAamJ,KAAK9J,QACrC,GAAC,CAAAoI,IAAA,aAAAzG,MAED,WACImI,KAAK2I,KAAO,GACZ3I,KAAK4I,gBAAiB,EACtB5I,KAAK6I,YAAa,CACtB,GAAC,CAAAvK,IAAA,kBAAAzG,MAED,WACImI,KAAKnJ,UAAY,KACjBmJ,KAAK9J,SAAUE,EAAAA,EAAAA,YAAWC,QAAQ,OAAOG,IAAI,EAAG,KAAKC,SAAS,EAAG,KAAKH,OACtE0J,KAAKpJ,mBAAqB,CAC9B,GAAC,CAAA0H,IAAA,uBAAAzG,MAED,SAAqBlB,GACjB,IAAKA,IAA0BqJ,KAAK4I,gBAAkB5I,KAAK6I,YAAa,OAAO,EAC/E,IAAM1S,GAAQC,EAAAA,EAAAA,YAAWC,QAAQ,OAAOG,IAAI,EAAG,KAAKC,SAAS,EAAG,KAAKH,OACrE,QAAI0J,KAAK9J,QAAUC,KAAeQ,GAAyBqJ,KAAKpJ,kBAEpE,GAAC,CAAA0H,IAAA,iBAAAzG,OAAAuS,EAAA3M,GAAAtG,KAAAmF,MAED,SAAA4J,IAAA,IAAAvP,EAAAwZ,EAAAzF,EAAA0F,EAAAtZ,UAAA,OAAAK,KAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,OAAkD,GAA7B1E,EAAqByZ,EAAArZ,OAAA,QAAAC,IAAAoZ,EAAA,IAAAA,EAAA,GACjCpQ,KAAK2K,qBAAqBhU,GAAwB,CAAFwP,EAAA9K,KAAA,eAAA8K,EAAAjL,OAAA,iBAYpD,OAXD8E,KAAK6I,YAAa,EAEZsH,EAAqBvF,EACvB5K,KAAKnJ,UACLmJ,KAAK9J,QACL8J,KAAKpJ,mBACLD,GAGqB,QAArBqJ,KAAK8O,cACLqB,EAAmBrB,YAAc9O,KAAK8O,aACzC3I,EAAA9K,KAAA,EAEsB8P,EAAAA,GAAGkF,UA5Ff,IA8FN1Z,OAA2CK,EAAnBgJ,KAAK2I,KAAK5R,OACnCoZ,GACH,OAJKzF,EAAQvE,EAAApL,KAKdiF,KAAKiQ,iBAAiBvF,EAAU/T,GAAuB,yBAAAwP,EAAAjJ,OAAA,GAAAgJ,EAAA,UAC1D,WArBmB,OAAAkE,EAAA1M,MAAC,KAAD5G,UAAA,KAAAwH,IAAA,mBAAAzG,MAuBpB,SAAiB6S,EAAU/T,GAAuB,IAAA6L,EAAA,KAC9C,GAAI,UAAWkI,EACX1K,KAAKmF,MAAQuF,EAASvF,MAAMoG,YADhC,CAKA,IAAMC,EAAyBd,EAAS2F,UAAU3E,aAC7ChJ,KAAI,SAAAiJ,GAAW,OACZgD,GACIhD,EACAnJ,EAAKd,WAAW6D,OAAOqG,SACvBpJ,EAAKd,WAAWuK,eAAeA,eAClC,IAEJlO,OAAOoP,EAAAA,yBAGRnN,KAAK2I,KADLhS,EACY,GAAHuN,OAAAkJ,GAAO5B,GAAsB4B,GAAKpN,KAAK2I,OAEpC,GAAHzE,OAAAkJ,GAAOpN,KAAK2I,MAAIyE,GAAK5B,IAElCxL,KAAK4I,gBAAkBjS,GAAyB6U,EAAuBzU,OAzH5D,IA0HXiJ,KAAK6I,YAAa,EACd2C,EAAuBzU,OAAS,IAChCiJ,KAAKpJ,oBAAqBR,EAAAA,EAAAA,YAAWE,OApBzC,CAsBJ,GAAC,CAAAgI,IAAA,mBAAAzG,MAED,SAAiBsW,GAAkC,IAAnBE,GAAmBvX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAhBuX,WACpBC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,GAAIC,EAAaL,EAAbK,SAElBxO,KAAK8I,oBAAsBuF,EAEvBC,EACAtO,KAAKnJ,WAAYT,EAAAA,EAAAA,UAASkY,GAAMhY,OACzBkY,IACPxO,KAAKnJ,UAAY,MAGjB0X,IAAIvO,KAAK9J,SAAUE,EAAAA,EAAAA,UAASmY,GAAIjY,QAEpC0J,KAAK+J,aACL/J,KAAKoJ,gBACT,GAAC,CAAA9K,IAAA,qBAAAzG,MAED,WAAqC,IAAlByY,EAAWxZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9BkJ,KAAK8O,YAAcwB,EACnBtQ,KAAK+J,aACL/J,KAAKoJ,gBACT,GAAC,CAAA9K,IAAA,eAAAzG,MAQD,SAAawV,GACT,IAAAC,EAAkDD,EAAME,OAAhDC,EAASF,EAATE,UACFC,EADyBH,EAAZI,cACoBF,EADMF,EAAZK,cAGjC3N,KAAKgJ,cAAcyE,EACvB,GAAC,CAAAnP,IAAA,0BAAAzG,MAED,WAA0B,IAAAiL,EAAA,KACtB,OAAO,IAAInG,SAAQ,SAAArC,GAGf,OAFAwI,EAAKiH,aACLjH,EAAKkH,kBACE1P,EAAQwI,EAAKsG,iBACxB,GACJ,GAAC,CAAA9K,IAAA,8BAAAzG,MAED,SAA4BiP,GACxB9G,KAAK6I,WAAa7I,KAAK6I,aAAe/B,CAC1C,GAAC,CAAAxI,IAAA,UAAAzG,OAAA+V,EAAAnQ,GAAAtG,KAAAmF,MAED,SAAAkK,IAAA,OAAArP,KAAAuB,MAAA,SAAA+N,GAAA,cAAAA,EAAA1J,KAAA0J,EAAApL,MAAA,OASiE,OAR7D2E,KAAKyB,oBACDzB,KAAK+I,eACL/I,KAAKgK,gBACLhK,KAAK+I,eAAiB/I,KAAK+J,WAAa,kBAAM,IAAI,EAClDoB,EAAAA,GAAG0C,UAAUxF,KAAK,KAAM,aAE5BrI,KAAK+I,eAAiB/I,KAAK0B,WAAW6D,OAAO8B,QAC7CrH,KAAKS,gBAAgBT,KAAK8J,yBAC1B9J,KAAKc,sBAAsBd,KAAK0J,6BAA6BjD,EAAApL,KAAA,EACvD8P,EAAAA,GAAG2C,KAAK,aAAY,OAC1B9N,KAAKoJ,gBAAe,GAAM,wBAAA3C,EAAAvJ,OAAA,GAAAsJ,EAAA,UAC7B,WAZY,OAAAoH,EAAAlQ,MAAC,KAAD5G,UAAA,IAcb,CAAAwH,IAAA,YAAAzG,MAEA,WACImI,KAAKkB,uBACLiK,EAAAA,GAAG0C,UAAU,WACjB,IA1MJvW,GAAA+G,GAAAjH,EAAAI,UAAAF,GAAAD,GAAAgH,GAAAjH,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAqB,UAAA,IAAArB,EAAA,IAAAA,EAAAE,EAAAD,EAqLKuW,EAnGAxD,CAwHA,CAhM8B,CAASzL,GC2CtC4R,GAAsBC,IAAAA,cAA0C,MAEzDC,GAAuB,SAAH/H,GAAuD,IAAjDgI,EAAQhI,EAARgI,SAC7BhP,GAAaiP,EAAAA,EAAAA,KACbC,EAAgBJ,IAAAA,SAAc,WAChC,MAAO,CACH/E,aAAc,IAAIoF,EAAa,CAAEnP,WAAAA,IACjC2O,UAAW,IAAIS,GAAgB,CAAEpP,WAAAA,IAEzC,GAAG,CAACA,IAEJ,OAAO8O,IAAAA,cAACD,GAAoBQ,SAAQ,CAAClZ,MAAO+Y,GAAgBF,EAChE,24CC3DA,IAAMM,IAAgBC,EAAAA,GAAAA,WAAS,WAC3B,IAAAC,GAA6CC,EAAAA,GAAAA,KAArCC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QAASC,EAAYJ,EAAZI,aAEpBC,GADcZ,EAAAA,EAAAA,KAAda,UACAD,iCACAE,GAAaC,EAAAA,GAAAA,eAAbD,SAiCR,OA/BAjB,IAAAA,WAAgB,WACRa,EAAQta,OAAS,GAAGua,EAAaD,EAAQ,GAAGvB,IAC5C2B,IAAaE,EAAAA,OAAOC,OACxBP,EAAQpX,SAAQ,SAAAyO,GAAkB,IAAf1P,EAAI0P,EAAJ1P,KAAM8W,EAAEpH,EAAFoH,GAChB9W,GAEDsY,EAAaxB,EAErB,GAEJ,GAAG,CAACuB,EAASI,IAEbjB,IAAAA,WAAgB,WAeZ,OAFAe,GAZsC,SAAC9G,EAAyCnI,GAAc,OAC1F8O,oWAASna,CAAC,CACN4a,KACIrB,IAAAA,cAACsB,GAAAA,EAA+B,CAC5BC,SAAS,KACTC,UAAS,uBAAA9N,OAAyB5B,GAClChE,IAAI,qBAGTmM,GACL,IAIC,kBAAM8G,GAAkC,CAEnD,GAAG,IAGCf,IAAAA,cAACyB,GAAAA,EAAmB,CAChBC,gBAAiB,IACjBb,QAASA,EACTW,UAAU,qBACVG,UAAQ,EACRC,QAASd,EACTe,OAAQ,KAGpB,IAEA,MCrDA,GDqDA,inCE5BA,SAlB4B,SACxB/T,EACAgU,GAC2E,IAAA5J,EAAA6J,EACqBC,EAAAC,GAAxEjC,IAAAA,SAA+D,QAAjD9H,EAA+B,QAA/B6J,GAAWG,EAAAA,GAAAA,IAAgBpU,UAAI,IAAAiU,EAAAA,EAAID,SAAc,IAAA5J,EAAAA,EAAI,MAAK,GAAzFC,EAAI6J,EAAA,GAAEG,EAAOH,EAAA,GAEpBhC,IAAAA,WAAgB,WACZpN,aAAaC,QAAQ/E,EAAK2E,KAAKC,UAAUyF,GAC7C,GAAG,CAACrK,EAAKqK,IAOT,MAAO,CAACA,EAAMgK,EALI,WACdvP,aAAawP,WAAWtU,GACxBqU,EAAQL,QAAAA,EAAkB,KAC9B,EAGJ,00CCuBA,SA7CiB,SAAH5J,GAUR,IAAAmK,EATFC,EAAIpK,EAAJoK,KACAC,EAAerK,EAAfqK,gBACAC,EAAqBtK,EAArBsK,sBACAhB,EAAStJ,EAATsJ,UAO2DiB,EAAAR,IAAnBS,EAAAA,EAAAA,UAAiB,GAAE,GAApDC,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAMpC,OAJAI,EAAAA,EAAAA,YAAU,WACND,GAAgB,SAAAE,GAAO,OAAIA,EAAU,CAAC,GAC1C,GAAG,CAACP,IAGAvC,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,OAAKwB,UAAS,GAAA9N,OAAK8N,EAAS,WACxBxB,IAAAA,cAAC+C,GAAAA,EAAI,CACDC,KAAK,KACLC,MAAI,EACJzB,UAAWe,EACX,cAAY,yBACZW,MAAM,qCACNpV,IAAK6U,GAEJL,EAAK,KAGA,QADRD,EACLC,EAAK7V,MAAM,UAAE,IAAA4V,OAAA,EAAbA,EAAenQ,KAAI,SAACiR,EAAY7b,GAAS,OACtC0Y,IAAAA,cAAA,OACIlS,IAAKxG,EAAI,EACTka,WAAW4B,EAAAA,GAAAA,GAAK,GAAD1P,OAAI8N,EAAS,UAAU,CAClC,cAAegB,GAA8B,GAALlb,KAG5C0Y,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMG,GACf,IAItB,qMC3CaE,GACQ,IADRA,GAEQ,GAFRA,GAGG,GAHHA,GAII,GAJJA,GAKD,GALCA,GAMA,GAGAC,GAAe,MAEfC,GAAsB,SAAHrL,GAU1B,IAAAsL,EAAAC,EATFC,EAAaxL,EAAbwL,cACAjJ,EAAavC,EAAbuC,cACAkJ,EAAgBzL,EAAhByL,iBACAC,EAAM1L,EAAN0L,OAQA,OAAOF,KADiE,QAA5DF,EAA2C,QAA3CC,GAAGI,EAAAA,GAAAA,IAAeD,EAAQD,UAAiB,IAAAF,OAAA,EAAxCA,EAA2ChJ,UAAc,IAAA+I,EAAAA,EAAI,CAAC,EAEjF,EAEaM,GAAiB,SAAHlG,GAUrB,IATFnD,EAAamD,EAAbnD,cACAkJ,EAAgB/F,EAAhB+F,iBACAI,EAAcnG,EAAdmG,eACAH,EAAMhG,EAANgG,OAOMI,EAASC,OAAOC,YAAcb,GAAgBA,GAAoBA,GAAyBA,GAC3Fc,EAAY,SAACT,GAAqB,OACpCH,GAAoB,CAAEG,cAAAA,EAAeE,OAAAA,EAAQD,iBAAAA,EAAkBlJ,cAAAA,GAAgB,EAEnF,OAAIsJ,EAAuBC,EAASX,GAEhCc,EAAU,eACVA,EAAU,sBACVA,EAAU,0BACVA,EAAU,iBACVA,EAAU,UAEHH,EAASX,GACbW,CACX,EAEaI,GACa,sBADbA,GAGe,wBAHfA,GAIY,qBAJZA,GAKa,sBALbA,GAMoB,2BAGpBC,GAA2B,SAAHC,GAM/B,IALFC,EAAcD,EAAdC,eACAC,EAAwCF,EAAxCE,yCAKAC,EAAuBF,GAAkB,CAAC,EAAlCG,EAAID,EAAJC,KAAMlc,EAAIic,EAAJjc,KAKd,OAHgCkc,IAASN,IACPM,IAASN,IAAiD,QAAT5b,GAC1Ckc,IAASN,MAK5CI,CAEV,+zCC1BA,SAzCqB,SAAHtM,GAWQ,IAAAyM,EAAAzM,EAVtB0M,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAA3M,EACf4M,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA7M,EAChB8M,gBAAAA,OAAe,IAAAD,EAAG,cAAaA,EAAAE,EAAA/M,EAC/BgN,KAAAA,OAAI,IAAAD,GAAOA,EAAAE,EAAAjN,EACXkN,MAAAA,OAAK,IAAAD,GAAOA,EAAAE,EAAAnN,EACZoN,QAAAA,OAAO,IAAAD,EAAG,OAAMA,EAChBE,EAAGrN,EAAHqN,IACAC,EAAOtN,EAAPsN,QACAC,EAAKvN,EAALuN,MACGC,+WAAKC,CAAAzN,EAAA0N,IAE+C5D,EAAAC,GAApBjC,IAAAA,UAAe,GAAK,GAAhD3H,EAAU2J,EAAA,GAAE6D,EAAY7D,EAAA,GAEzB/H,EAAS,CAAC,kBAADvG,OACOoS,mBAAmBd,IAAgB,SAAAtR,OAC5C0R,GAAK,WAAA1R,OACH4R,GAAO,QAAA5R,OACVwR,GAAI,YAAAxR,OACAkR,GAAQ,YAAAlR,OACRoR,IACdiB,KAAK,KAEP,OACI/F,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,kBAAmB/K,GAAc,gCACjDA,GAAc2H,IAAAA,cAACgG,GAAAA,EAASC,OAAM,CAACjC,OAAM,gBAAAtQ,OAAkB4P,GAAY,OACpEtD,IAAAA,cAAA,SAAAkG,GAAA,CACIC,iBAAiB,EACjB3E,UAAU,iBACV4E,MAAM,OACNpC,OAAO,OACPuB,IAAG,uCAAA7R,OAAyC6R,EAAG,KAAA7R,OAAIuG,GACnD,cAAauL,EACbC,MAAOA,EACPY,OAAQ,WAAF,OAAQR,GAAa,EAAM,GAC7BH,IAIpB,ECrDA,MCgCA,SA7BoC,SAAHxN,GAAmE,IAA7DoO,EAAkBpO,EAAlBoO,mBACnC,OACItG,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACC,eAAa,EAACC,mBAAiB,EAACC,kBAAkB,YAClE3G,IAAAA,cAAA,OAAKwB,UAAU,qBACXxB,IAAAA,cAAC4G,GAAY,CAACrB,IAAKsB,GAAAA,GAAsBC,kBAAmBrB,MAAM,sBAClEzF,IAAAA,cAAA,OAAKwB,UAAU,8BACXxB,IAAAA,cAAA,OAAKwB,UAAU,qCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,sCACvBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAGpChH,IAAAA,cAAA,OAAKwB,UAAU,2CACXxB,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kIAK5ChH,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACrCK,SAAUf,KAK9B,ECgBA,SA5C8B,SAAHpO,GAQrB,IAPFoK,EAAIpK,EAAJoK,KACAC,EAAerK,EAAfqK,gBACAC,EAAqBtK,EAArBsK,sBAMA,OACIxC,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAAA,OAAKwB,UAAU,eACXxB,IAAAA,cAAA,OAAKwB,UAAU,sBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,sCACvBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAGpChH,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,6BAGpChH,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,KAChBtH,IAAAA,cAAA,OAAKwB,UAAU,sBACXxB,IAAAA,cAACuH,GAAQ,CACLjF,KAAMA,EAAK,GACXC,gBAAiBA,EACjBC,sBAAuBA,EACvBhB,UAAU,wBAGjBc,EAAK7V,MAAM,GAAGyF,KAAI,SAACsV,EAAgBC,GAAa,OAC7CzH,IAAAA,cAAA,OAAKlS,IAAK2Z,EAAOjG,UAAU,sBACtBgG,EAAKtV,KAAI,SAACsV,EAAcE,GAAkB,OACvC1H,IAAAA,cAAA,OAAKlS,IAAG,GAAA4F,OAAK+T,EAAK,KAAA/T,OAAIgU,GAAclG,UAAU,8BAC1CxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMwE,GACf,IAER,KAK1B,y3CC0EA,MCtHA,IDOyB/G,EAAAA,GAAAA,WAAS,WAAM,IAAAkH,EACiBC,GAAhBC,EAAAA,GAAAA,KAA7BC,oBAAAA,OAAmB,IAAAF,EAAG,CAAC,EAACA,EACYnF,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAArCqF,EAAOtF,EAAA,GAAEuF,EAASvF,EAAA,GAC0CwF,EAAAhG,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAA5DwF,EAAmBD,EAAA,GAAEE,EAAoBF,EAAA,GACSG,EAAAnG,IAAZS,EAAAA,EAAAA,UAAS,IAAG,GAAlDH,EAAe6F,EAAA,GAAEC,EAAiBD,EAAA,GACuBE,EAAArG,IAA7BS,EAAAA,EAAAA,UAAwB,MAAK,GAAzD6F,EAAUD,EAAA,GAAEE,EAAYF,EAAA,GACuCG,EAAAxG,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAA/DF,EAAqBiG,EAAA,GAAEC,EAAqBD,EAAA,GAE7CE,GAAgBC,EAAAA,EAAAA,UAAQ,WAAM,IAAAC,EAChC,OAA2C,QAA3CA,EAAOf,aAAmB,EAAnBA,EAAqBgB,uBAAe,IAAAD,EAAAA,EAAI,EACnD,GAAG,CAACf,IAEExF,GAAmBsG,EAAAA,EAAAA,UAAQ,WAE7B,OAAOD,EAAc9W,QAAmB,SAACkX,EAAKC,EAAKvB,GAI/C,OAHIA,EAFS,GAEY,GACrBsB,EAAI1d,KAAKsd,EAAclc,MAAMgb,EAAOA,EAH3B,IAKNsB,CACX,GAAG,GACP,GAAG,CAACJ,IAEErC,EAAqB,WACvB0B,GAAU,GACVG,GAAqB,EACzB,EAkCA,OAhCAtF,EAAAA,EAAAA,YAAU,WACN,IAAIoG,EACAC,EACAC,EAEJ,GAAI7G,EAAK,IAAMA,EAAK,GAAG/b,OAAS,EAAG,CAC/B8hB,EAAkB,IAClBe,aAAaH,GACbG,aAAaF,GACbE,aAAaD,GAEb,IAAME,EAAgBd,IAAejG,EAAK,GAAG,GAE7C+G,EACOH,EAAgB5X,YAAW,kBAAM+W,EAAkB,gBAAgB,GAAE,GACrEY,EAAkB3X,YAAW,kBAAM+W,EAAkB,kBAAkB,GAAE,GAEhFK,EAAsBW,GAClBA,IACAF,EAAqB7X,YAAW,kBAAMoX,GAAsB,EAAM,GAAE,MAGxEF,EAAalG,EAAK,GAAG,GACzB,CAEA,OAAO,WACH8G,aAAaH,GACbG,aAAaF,GACbE,aAAaD,EACjB,CACJ,GAAG,CAAQ,QAARxB,EAACrF,EAAK,UAAE,IAAAqF,OAAA,EAAPA,EAAU,GAAIgB,IAEE,IAAhBrG,EAAK/b,OACE,KAGPyZ,IAAAA,cAAA,WACIA,IAAAA,cAAA,OAAKwB,UAAU,yBACXxB,IAAAA,cAAA,OAAKwB,UAAU,oCACXxB,IAAAA,cAAA,UACIwB,UAAU,4CACV8H,QAAS,WAAF,OAAQnB,GAAqB,EAAK,GAEzCnI,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACPhD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAGpChH,IAAAA,cAAA,OAAKwB,UAAU,8CACfxB,IAAAA,cAAA,OAAKwB,UAAU,2CACXxB,IAAAA,cAACuH,GAAQ,CACLjF,KAAI,GAAA5O,OAAAkJ,GAAM0F,EAAK,IAAE1F,GAAM0F,EAAK,IAAM,KAClCC,gBAAiBA,EACjBC,sBAAuBA,EACvBhB,UAAU,6CAGlBxB,IAAAA,cAAA,UAAQwB,UAAU,2CAA2C8H,QAAS,WAAF,OAAQtB,GAAU,EAAK,GACvFhI,IAAAA,cAACuJ,GAAAA,EAA8B,CAC3B,cAAY,oBACZC,KAAK,6DAKrBxJ,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,GAAWG,EACnBtG,QAAS0E,EACTqD,SAAS,OACTnI,UAAU,kCACVoI,YAAY,GAEX7B,GACG/H,IAAAA,cAAC6J,GAAqB,CAClBvH,KAAMA,EACNE,sBAAuBA,EACvBD,gBAAiBA,IAGxB2F,GAAuBlI,IAAAA,cAAC8J,GAA2B,CAACxD,mBAAoBA,KAIzF,gqDEDA,MCnHA,IDmBkB7F,EAAAA,GAAAA,WAAS,SAAAvI,GAAuD,IAApDgI,EAAQhI,EAARgI,SAAUsB,EAAStJ,EAATsJ,UAAWuI,EAAQ7R,EAAR6R,SACzCC,GAAUC,EAAAA,GAAAA,cACVC,GAAWhJ,EAAAA,GAAAA,eACjBiJ,GAA8BhK,EAAAA,EAAAA,KAAtBpL,EAAMoV,EAANpV,OACAqV,EADiBD,EAATnJ,UACRoJ,uBACAC,EAAiBtV,EAAjBsV,aAEFC,EAAiB,CACnB,CACIjJ,KAAMrB,IAAAA,cAACuK,GAAAA,EAA8B,CAAChJ,SAAS,OAC/CiJ,WAAYxK,IAAAA,cAACyK,GAAAA,EAA2B,CAAClJ,SAAS,OAClDmJ,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UACnC2D,KAAMxJ,EAAAA,OAAOC,OAEjB,CACIC,KACI+I,EAAyB,EACrBpK,IAAAA,cAAC4K,GAAAA,EAAK,CACFC,QAAQ,eACRlB,SAAS,YACTe,MAAON,EAAuB1M,WAC9BwF,MAAM,SACNF,KAAK,KACL8H,YAAY,KACZtJ,UAAU,mCAEVxB,IAAAA,cAAC+K,GAAAA,EAA+B,CAACxJ,SAAS,QAG9CvB,IAAAA,cAAC+K,GAAAA,EAA+B,CAACxJ,SAAS,OAElDiJ,WACIJ,EAAyB,EACrBpK,IAAAA,cAAC4K,GAAAA,EAAK,CACFC,QAAQ,eACRlB,SAAS,YACTe,MAAON,EAAuB1M,WAC9BwF,MAAM,SACNF,KAAK,KACL8H,YAAY,KACZtJ,UAAU,mCAEVxB,IAAAA,cAACgL,GAAAA,EAA4B,CAACzJ,SAAS,QAG3CvB,IAAAA,cAACgL,GAAAA,EAA4B,CAACzJ,SAAS,OAE/CmJ,MACI1K,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,QAAMwB,UAAU,uBAChBxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eAGpC2D,KAAMxJ,EAAAA,OAAO8J,mBAIfC,EAAWZ,EAAea,WAAU,SAAA3D,GAAI,OAAIA,EAAKmD,OAAST,EAASjJ,QAAQ,IACKe,EAAAC,GAA5CjC,IAAAA,SAAekL,GAAY,EAAIA,EAAW,GAAE,GAA/EE,EAAapJ,EAAA,GAAEqJ,EAAgBrJ,EAAA,GAOtC,OACIhC,IAAAA,cAAA,OAAKwB,UAAW8J,KAAW,aAAc9J,IACrCxB,IAAAA,cAAA,OAAKwB,UAAU,uBAAuBuI,SAAUA,GAC3C7J,GAEJmK,EACGrK,IAAAA,cAACuL,GAAAA,EAAWC,OAAM,CAAChK,UAAU,uBAAuBiK,SAAU,SAACC,EAAGjE,GAAK,OAX9D,SAACA,GAClB4D,EAAiB5D,GACjBuC,EAAQ3e,KAAKif,EAAe7C,GAAOkD,KACvC,CAQwFgB,CAAalE,EAAM,GAC1F6C,EAAepY,KAAI,SAACsV,EAAMC,GAAK,OAC5BzH,IAAAA,cAACuL,GAAAA,EAAWK,aAAY,CACpB9d,IAAK2Z,EACLA,MAAOA,EACP+C,WAAYxK,IAAAA,cAAAA,IAAAA,SAAA,MACZqB,KAAMoG,IAAU2D,EAAgB5D,EAAKgD,WAAahD,EAAKnG,KACvDqJ,MAAOlD,EAAKkD,MACZmB,SAAUpE,IAAU2D,EACpBU,WAAS,EACTtK,WAAW4B,EAAAA,GAAAA,GACP,kBACAqE,IAAU2D,GAAiB,0BAC3B5D,EAAKmD,OAASxJ,EAAAA,OAAO8J,kBAAoB,+BAE/C,KAIVjL,IAAAA,cAAAA,IAAAA,SAAA,MAIhB,wgCElGA,IAAM+L,GAA6B,CAAC,EAE9BC,GAA6D,CAAC,EAE9DC,GAAS,SAAC7f,GAAuB,OAAM4K,MAAMkV,QAAQ9f,GAAQA,EAAK2Z,KAAK,KAAO3Z,CAAI,EAE3E+f,GAAkB,SAC3B/f,EAEAggB,GAEwB,IADxB/d,EAAqB/H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEnBwH,EAAMme,GAAO7f,GACnBigB,EAA2Bhe,EAAnBie,QAAAA,OAAO,IAAAD,GAAOA,EAC+C5J,EAAAR,IAA7CS,EAAAA,EAAAA,UAA0BqJ,GAAMje,IAAQ,MAAK,GAA9DqK,EAAIsK,EAAA,GAAEN,EAAOM,EAAA,GACyCwF,EAAAhG,IAAnCS,EAAAA,EAAAA,UAA8B,MAAK,GAAtD/N,EAAKsT,EAAA,GAAEsE,EAAQtE,EAAA,GAC+CG,EAAAnG,IAAhCS,EAAAA,EAAAA,WAAUqJ,GAAMje,IAAQwe,GAAQ,GAA9DE,EAAWpE,EAAA,GAAEqE,EAAarE,EAAA,GAC3BsE,GAAaC,EAAAA,EAAAA,SAAO,GACpBC,EAAiBna,KAAKC,UAAU0Z,GAEtCS,EAAsCxe,EAA9Bye,mBAAAA,OAAkB,IAAAD,GAAOA,GAEjChK,EAAAA,EAAAA,YAAU,WAGN,OAFA6J,EAAWK,SAAU,EAEd,WACHL,EAAWK,SAAU,CACzB,CACJ,GAAG,IAEH,IAAMC,GAAYC,EAAAA,EAAAA,cAAY,WAAM,IAAAC,EAI5BC,EAEJ,GALAV,GAAc,GAKVT,GAAiBle,GACjBqf,EAAenB,GAAiBle,OAC7B,CACH,IAAMse,EAAU3Z,KAAKQ,MAAM2Z,GAC3BO,EAAeL,EAAqBnS,EAAAA,GAAGyS,WAAWC,KAAKjB,GAAWzR,EAAAA,GAAG0S,KAAKjB,GAC1EJ,GAAiBle,GAAOqf,CAC5B,CAEY,QAAZD,EAAAC,SAAY,IAAAD,GAAZA,EACMljB,MAAK,SAAC8H,GACC4a,EAAWK,UAEhBhB,GAAMje,GAAOgE,EACbqQ,EAAQrQ,GACR2a,GAAc,GAClB,IAAE,OACK,SAACa,GACCZ,EAAWK,UAEhBR,EAASe,GACTb,GAAc,GAClB,IAAE,SACO,kBACET,GAAiBle,EAC5B,GACR,GAAG,CAACA,EAAK8e,EAAgBE,KAEzBjK,EAAAA,EAAAA,YAAU,WACFyJ,IAAYP,GAAMje,IAClBkf,GAER,GAAG,CAAClf,EAAKkf,EAAWV,KAEpBzJ,EAAAA,EAAAA,YAAU,WACFyJ,GAAWnU,IAAS4T,GAAMje,IAC1BqU,EAAQ4J,GAAMje,GAEtB,GAAG,CAACwe,EAASxe,EAAKqK,IAElB,IAAMoV,GAAUN,EAAAA,EAAAA,cAAY,WACxBlB,GAAMje,GAAO,KACbkf,GACJ,GAAG,CAACA,EAAWlf,IAEf,MAAO,CAAEqK,KAAAA,EAAMxD,MAAAA,EAAO6X,YAAAA,EAAae,QAAAA,EACvC,kDCjGaC,GAA0B,SAAClkB,GACpC,MAAO,CAACmkB,EAAAA,kBAAmBC,EAAAA,iBAAkBC,EAAAA,oBAAoBC,MAAK,SAAAC,GAAiB,OACnFvkB,EAAOwkB,OAAM,SAAAzmB,GAAK,OAAIwmB,EAAkBxmB,EAAM,GAAC,GAEvD,sgCC4LA,SAxK+B,WAC3B,IAA+F2a,EAAAC,GAA3CjC,IAAAA,SAAwC,IAAG,GAAxF+N,EAAmB/L,EAAA,GAAEgM,EAAoBhM,EAAA,GAEwBiM,EAAAhM,GAAnCjC,IAAAA,SAAgC,IAAG,GAAjEkO,EAAWD,EAAA,GAAEE,EAAaF,EAAA,GACjCG,GACIvG,EAAAA,GAAAA,KADIpN,EAAa2T,EAAb3T,cAAegR,EAAQ2C,EAAR3C,SAAU4C,EAAsBD,EAAtBC,uBAAwBC,EAAeF,EAAfE,gBAAiBC,EAAqBH,EAArBG,sBAAuB3K,EAAMwK,EAANxK,OAEzF7O,GAAWoL,EAAAA,EAAAA,KAAXpL,OACA8B,EAAqD9B,EAArD8B,QAAS2X,EAA4CzZ,EAA5CyZ,aAAcC,EAA8B1Z,EAA9B0Z,0BACzBC,EAAqC1O,IAAAA,OAAayO,GAElDE,GAAiB1B,EAAAA,EAAAA,cAAY,WAC/B,QCrCwB,SAACpW,GAC7B,OAAOA,GAAuB,SAAZA,CACtB,CDmCY+X,CAAiB/X,KAAa4X,KAC9BD,CAER,GAAG,CAAC3X,EAAS2X,EAAcC,IAE3BI,EAII1C,GACA,CAAC,wBAAyBtV,QAAAA,EAAW,GAAI4X,GACzC,CACIK,sBAAuB,EACvBC,gBAAiBN,GAErB,CACInC,QAASqC,MAVPzU,EAAQ2U,EAAd1W,KACAxD,EAAKka,EAALla,MACA6X,EAAWqC,EAAXrC,YAYEwC,GAAsBC,EAAAA,EAAAA,+BACtBC,GAAuBC,EAAAA,EAAAA,aAAYH,GACnCI,GAAiBC,EAAAA,EAAAA,0BAGpBC,EAAArN,GAF2DjC,IAAAA,WAE3D,GAFIuP,EAAwBD,EAAA,GAAEE,EAAyBF,EAAA,GAIpDG,GAAkB9C,EAAAA,EAAAA,QAAOH,GAEzBkD,GAA0BzC,EAAAA,EAAAA,cAC5B,SAACiB,GACG,OAAOA,EAAYN,MACf,SAAAplB,GAAI,OAAIglB,GAAwB,CAAC/S,EAAejS,EAAKnB,SAAWoT,IAAkBjS,EAAKnB,KAAK,GAEpG,GACA,CAACoT,IAGCkV,GAAgB1C,EAAAA,EAAAA,cAAY,SAAC2C,GAC/B,OAAO5Y,MAAMkV,QAAQ0D,IAAqC,IAAtBA,EAAWrpB,OACzC,IACAspB,EAAAA,GAAAA,IAAkBD,EAC5B,GAAG,IAEGE,GAAqB7C,EAAAA,EAAAA,cACvB,SAACiB,GACG,OAAKwB,EAAwBxB,IAAgBA,EAAY3nB,OAAS,EACvD2nB,EAAY,GAAG7mB,MAEnBoT,CACX,GACA,CAACA,EAAeiV,IAGdK,GAAyB9C,EAAAA,EAAAA,cAC3B,SAAC+C,GACqCvV,GAAiBuV,GAAqBA,GAEpEvE,EAAS,CACL1O,OAAQ,CACJlR,KAAM,gBACNxE,MAAO2oB,MAInBC,EAAAA,EAAAA,mBAAkB,CAAEC,aAAcF,GACtC,GACA,CAACvV,EAAegR,KAGpB5I,EAAAA,EAAAA,YAAU,WACN2M,OAA0BhpB,GAC1BwnB,EAAqB,IACrByB,EAAgB1C,SAAU,CAC9B,GAAG,CAAClW,KAEJgM,EAAAA,EAAAA,YAAU,WACN,IACI,IAAQiM,GAA0B5U,GAAY,CAAC,GAAvC4U,sBACFS,EAAsE,CAAC,EAG7E,GAFAE,EAAgB1C,SAAU,GAErBpY,GAAD,MAAUma,GAAAA,EAAuBqB,UAAU5pB,OAAQ,CACnDuoB,EAAsBqB,UAAU1mB,SAAQ,SAAA2mB,GACpC,IAAM5nB,EAAOzB,OAAOqF,KAAKgjB,GAAgBiB,MACrC,SAAAviB,GAAG,OACsE,IAArEshB,EAAethB,GAAKogB,YAAYoC,QAAQF,EAAS3V,iBACrB,QAA3B2V,EAAS3V,eAAiE,IAAtC2U,EAAethB,GAAKyiB,cAAoB,IAGrF,GAAK/nB,EAAL,CAEA,IAAK+mB,EAAyB/mB,GAAO,KAAAgoB,EAAAC,EAE3BC,EAGD,QAHSF,EACVzpB,OAAOqF,KAAK8iB,GAAsBmB,MAC9B,SAAAviB,GAAG,OAA4D,IAAxDohB,EAAqBphB,GAAK8hB,WAAWU,QAAQ9nB,EAAY,WACnE,IAAAgoB,EAAAA,EAAI,GAEHG,EAAyC,QAAjCF,EAAGvB,EAAqBwB,UAAS,IAAAD,OAAA,EAA9BA,EAAgCb,WAEjD,IAAKe,EAAU,OAEfA,EAAUA,EAAsBL,QAAQ9nB,IAAS,CAC7CnB,MAAOmB,EACPooB,KAAMxB,EAAe5mB,GAAMid,MAC3BoL,iBAAkBT,EAASS,kBAG/BtB,EAAyB/mB,IAAQ2mB,EAAAA,EAAAA,aAAYC,EAAe5mB,GAChE,CACA,IAAMsoB,EAAkBvB,EAAyB/mB,GAAMsoB,QAAU,CAAC,EAClEA,EAAOD,iBACoC,IAAvCzB,EAAe5mB,GAAM+nB,cACf,WACCH,EAASS,iBACpBC,EAAOC,cAAgBX,EAASW,cAC5BvoB,IAASiS,GAAe6T,EAAgB8B,EAASW,eACrDxB,EAAyB/mB,GAAMsoB,OAASA,CA5BvB,CA6BrB,IAEAzC,EAAuBa,GACvBlB,EAAqBkB,GACrBM,EAA0BD,GAE1B,IAAMrB,EAAcyB,EAAcT,GAClCf,EAAcD,GAEd,IAAM8B,EAAoBF,EAAmB5B,GAC7C6B,EAAuBC,GAEnBvB,IAA8BC,EAAmC3B,SACjEtB,EAAS,CACL1O,OAAQ,CACJlR,KAAM,SACNxE,MAAOuc,KAEZ5Z,MAAK,WACJukB,IACAG,EAAmC3B,QAAU0B,CACjD,GAER,CACJ,CAAE,MAAOnB,GAELnY,QAAQR,MAAM2Y,EAClB,CAEJ,GAAG,CAACpT,IAMJ,MAAO,CAAEgU,YAAAA,EAAaH,oBAAAA,EAAqBwB,yBAAAA,EAA0BE,gBAAAA,EAAiBuB,gBAJ9D,WACpB7C,EAAc,GAClB,EAGJ,yPE/LAxnB,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,GAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,GAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,GAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAAkG,GAAAzG,EAAAE,GAAA,IAAAD,EAAAE,OAAAqF,KAAAxF,GAAA,GAAAG,OAAAuG,sBAAA,KAAAnG,EAAAJ,OAAAuG,sBAAA1G,GAAAE,IAAAK,EAAAA,EAAAoG,QAAA,SAAAzG,GAAA,OAAAC,OAAAyG,yBAAA5G,EAAAE,GAAAiB,UAAA,KAAAlB,EAAAwE,KAAA6B,MAAArG,EAAAM,EAAA,QAAAN,CAAA,UAAA4G,GAAA7G,EAAAE,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAS,EAAA,SAAAT,EAAAC,GAAA,aAAA+C,GAAAhD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAAwG,aAAA,YAAAnH,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA+C,GAAAvC,GAAA,OAAAA,EAAA,UAAAqD,UAAA,kEAAA7D,EAAAkH,OAAAC,QAAApH,EAAA,CAAAqH,CAAArH,EAAA,0BAAAgD,GAAAvC,GAAAA,EAAAA,EAAA,GAAAsG,CAAA9G,MAAAF,EAAAG,OAAAK,eAAAR,EAAAE,EAAA,CAAAO,MAAAR,EAAAkB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAArB,EAAAE,GAAAD,EAAAD,CAAA,UAAAqb,GAAAnb,EAAAF,GAAA,gBAAAE,GAAA,GAAAkQ,MAAAkV,QAAAplB,GAAA,OAAAA,CAAA,CAAAmqB,CAAAnqB,IAAA,SAAAA,EAAA8B,GAAA,IAAA/B,EAAA,MAAAC,EAAA,yBAAAS,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,uBAAAD,EAAA,KAAAD,EAAAK,EAAAK,EAAAM,EAAAJ,EAAA,GAAAqB,GAAA,EAAA1B,GAAA,SAAAG,GAAAT,EAAAA,EAAA6B,KAAA5B,IAAA+D,KAAA,IAAAjC,EAAA,IAAA7B,OAAAF,KAAAA,EAAA,OAAAgC,GAAA,cAAAA,GAAAjC,EAAAU,EAAAoB,KAAA7B,IAAAsD,QAAA3C,EAAA6D,KAAAzE,EAAAS,OAAAG,EAAAjB,SAAAqC,GAAAC,GAAA,UAAA/B,GAAAK,GAAA,EAAAF,EAAAH,CAAA,iBAAA+B,GAAA,MAAAhC,EAAA,SAAAe,EAAAf,EAAA,SAAAE,OAAAa,KAAAA,GAAA,kBAAAT,EAAA,MAAAF,CAAA,SAAAO,CAAA,EAAA0pB,CAAApqB,EAAAF,IAAA,SAAAE,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAqqB,GAAArqB,EAAAU,GAAA,IAAAX,EAAA,GAAA6W,SAAAhV,KAAA5B,GAAA2F,MAAA,uBAAA5F,GAAAC,EAAA8E,cAAA/E,EAAAC,EAAA8E,YAAAC,MAAA,QAAAhF,GAAA,QAAAA,EAAAmQ,MAAA8G,KAAAhX,GAAA,cAAAD,GAAA,2CAAAuqB,KAAAvqB,GAAAsqB,GAAArqB,EAAAU,QAAA,GAAA6pB,CAAAvqB,EAAAF,IAAA,qBAAA+D,UAAA,6IAAA2mB,EAAA,UAAAH,GAAArqB,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAAP,UAAAiB,EAAAV,EAAAP,QAAA,QAAAK,EAAA,EAAAK,EAAA+P,MAAAxP,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,CAgGA,SAlFyB,WAAM,IAAAsqB,EAqBQC,EAAAC,EApBnCtH,GAA2BhK,EAAAA,EAAAA,KAAnBpL,EAAMoV,EAANpV,OAAQqB,EAAM+T,EAAN/T,OACRS,EAA0B9B,EAA1B8B,QAAS2X,EAAiBzZ,EAAjByZ,aACTkD,EAAgCtb,EAAhCsb,UAAWC,EAAqBvb,EAArBub,iBACnBvD,GAMIvG,EAAAA,GAAAA,KALgB+J,EAAkBxD,EAAlC3S,eACAhB,EAAa2T,EAAb3T,cACAoX,EAAUzD,EAAVyD,WACAC,EAAS1D,EAAT0D,UACAC,EAAkB3D,EAAlB2D,mBAEsFtP,EAAAR,IAAhDS,EAAAA,EAAAA,UAA6BkP,GAAmB,GAAnFI,EAAavP,EAAA,GAAEwP,EAAgBxP,EAAA,GAEtCyP,EAAgFC,KAAxE5C,EAAwB2C,EAAxB3C,yBAA2C6C,EAAwBF,EAAzCzC,gBAE5B4C,EAAoC,CACtCC,EAAAA,YAAYC,UACZD,EAAAA,YAAYE,gBACZF,EAAAA,YAAYG,UAUR5B,IAAsBtB,SAAyC,QAAjBgC,EAAxBhC,EAA2B9U,UAAc,IAAA8W,OAAjB,EAAxBA,EAA2CT,SAAU,CAAC,GAA5ED,iBAEFlC,GAAiB1B,EAAAA,EAAAA,cAAY,WAC/B,SAAKsC,GAA4B6C,EAAyBrF,SAAWyB,EAEzE,GAAG,CAACe,EAA0Bf,EAAc4D,IAW5CvD,EAA2B1C,GACvB,CAAC,iBAAkBtV,QAAAA,EAAW,IAT1B6W,EAAAA,EAAAA,kBAAiBjT,GACV,UACAgT,EAAAA,EAAAA,mBAAkBhT,GAClB,UAEJA,EAI8CkX,GA3D7D,SAAA/qB,GAAA,QAAAE,EAAA,EAAAA,EAAAR,UAAAC,OAAAO,IAAA,KAAAD,EAAA,MAAAP,UAAAQ,GAAAR,UAAAQ,GAAA,GAAAA,EAAA,EAAAuG,GAAAtG,OAAAF,IAAA,GAAA4C,SAAA,SAAA3C,GAAA2G,GAAA7G,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAA2G,0BAAA3G,OAAA4G,iBAAA/G,EAAAG,OAAA2G,0BAAA7G,IAAAwG,GAAAtG,OAAAF,IAAA4C,SAAA,SAAA3C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAAyG,yBAAA3G,EAAAC,GAAA,WAAAF,CAAA,CA2D8EH,CAAA,CAElEgV,eAAgB,QAChBhB,cA1BAqX,EAAkB,CAACY,EAAAA,eAAeC,OAAOC,KAAMF,EAAAA,eAAeC,OAAOE,OACrEhB,EAAmB,CAACa,EAAAA,eAAeI,QAAQC,KAAML,EAAAA,eAAeI,QAAQE,KACjB,QAA3DxB,EAA8C,QAA9CC,GAAOpC,EAAAA,EAAAA,0BAAyB5U,UAAc,IAAAgX,OAAA,EAAvCA,EAAyCvD,mBAAW,IAAAsD,EAAAA,EAAI,IAyBvDa,EAAkC5e,SAASgH,IAAkBoW,EAC3D,CAAEA,iBAAkB,CAACA,IACrB,CAAC,GAEX,CACIvE,QAASqC,MAVHzU,EAAQ2U,EAAd1W,KAmCR,OArBA0K,EAAAA,EAAAA,YACI,WACI,IAAMoQ,EAAO,eA1EzBhsB,EA0EyB2W,GA1EzB3W,EA0EyBN,KAAAmF,MAAG,SAAA4J,IAAA,IAAAwd,EAAAzX,EAAA,OAAA9U,KAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,UACPqP,EAAU,CAAFvE,EAAA9K,KAAA,eAAA8K,EAAAjL,OAAA,iBAAAwoB,EAE0BhZ,EAA/BuB,eAAAA,OAAc,IAAAyX,EAAG,GAAEA,EAAYhZ,EAAVvF,MAEzB+c,EAAU,CAAE3W,SAASiE,EAAAA,EAAAA,UAAS,0CACtBvD,SAAAA,EAAgBlV,QAGxB0rB,EAAiBxW,GACjBsW,EAAmBtW,IAHnBwW,EAAiB,IAIpB,wBAAAtc,EAAAjJ,OAAA,GAAAgJ,EAAA,IArFjB,eAAA7O,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,QAsFa,kBAZY,OAAAyQ,EAAA1Q,MAAA,KAAA5G,UAAA,KAab2sB,GACJ,GAEA,CAAC/Y,IAGE,CAAE8X,cAAAA,EACb,iGClEA,MC1BA,GDQgC,SAAH9Z,GAAkF,IAA5Eib,EAAYjb,EAAZib,aAAcC,EAAWlb,EAAXkb,YAAazB,EAAgBzZ,EAAhByZ,iBACpD0B,GAAyBC,EAAAA,EAAAA,mBAAkBH,GAE3CI,GADc3tB,EAAAA,EAAAA,UAAS,IAAI4tB,MAAQC,OAAO9B,EAAiB+B,eAAe1tB,IAAIotB,EAAa,QAChExX,OAAO,eAExC,OACIoE,IAAAA,cAAC2T,GAAAA,EAAW,CAAC1Q,MAAI,EAACzB,UAAU,8BACxBxB,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,qDAClB1d,OAAQ,CACJ+pB,uBAAAA,EACAE,aAAAA,KAKpB,iHEMA,MC9BA,GDU6B,SAAHrb,GAA6C,IAAvC0b,EAAS1b,EAAT0b,UACxBC,EAAmB,GAEvB,GAAI9sB,OAAOqF,KAAKwnB,GAAWrtB,OAAQ,CAC/B,IAAMutB,GAAkC,GAAzB7lB,OAAO2lB,EAAUG,MAAa9lB,OAAO2lB,EAAUE,QAAQpW,WAAWsW,SAAS,EAAG,KACvFC,EAAUhmB,OAAO2lB,EAAUK,SAASvW,WAAWsW,SAAS,EAAG,KAC3DE,EAAUjmB,OAAO2lB,EAAUM,SAASxW,WAAWsW,SAAS,EAAG,KACjEH,EAAmB,GAAHngB,OAAMogB,EAAK,KAAApgB,OAAIugB,EAAO,KAAAvgB,OAAIwgB,EAC9C,CAEA,OACIlU,IAAAA,cAAA,OAAKwB,UAAU,0BACXxB,IAAAA,cAACmU,GAAAA,EAA8B,CAAC3K,KAAK,mDACrCxJ,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,EAACD,KAAK,KAAKxB,UAAU,+BAC1BqS,GAIjB,EE7BO,IAAMO,GAAoB,SAACC,GAC9B,IAAMC,EAAaD,EAAyBb,KAAKe,MACjD,OAAOD,EAAa,EACd,CACIP,KAAMS,KAAKC,MAAMH,EAAa,OAC9BR,MAAOU,KAAKC,MAAOH,EAAa,KAAoB,IACpDL,QAASO,KAAKC,MAAOH,EAAa,IAAO,GAAM,IAC/CJ,QAASM,KAAKC,MAAOH,EAAa,IAAQ,KAE9C,CAAC,CACX,EAEaI,GAAY,SACrBC,EACAC,GAIA,IAFA,IAAIhR,EACIiR,EAAYD,EAAZC,QACCvtB,EAAI,EAAGA,EAAIutB,EAAQtuB,OAAQe,IAAK,CACrC,IAAQwtB,EAAeD,EAAQvtB,GAAvBwtB,WACR,GAAIA,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAWvuB,OAAQwuB,IAAK,CACxC,IAAQC,EAAYF,EAAWC,GAAvBC,QAER,QAAexuB,KADfod,EAASoR,aAAO,EAAPA,EAAS3E,MAAK,SAAA7I,GAAI,OAAIA,EAAK5D,SAAW+Q,CAAa,KAClC,OAAO/Q,CACrC,CAER,CACJ,6vCC7BAjd,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,GAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,GAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,GAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8F,GAAAhG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,OAkBA,IAEM8nB,GAAe,eAAA/c,EAAAjL,GAAAtG,KAAAmF,MAAG,SAAA4J,EAAOwf,GAAiD,IAAA/c,EAAA,OAAAxR,KAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,cAAA8K,EAAA9K,KAAA,EACzD8P,EAAAA,GAAGwa,aAAaD,GAAY,OAArC,KAAJ/c,EAAIxC,EAAApL,MACDoK,MAAO,CAAFgB,EAAA9K,KAAA,eAAA8K,EAAAjL,OAAA,SACH,CAAE0qB,uBAAwBjd,EAAKxD,MAAMoG,UAAS,cAAApF,EAAAjL,OAAA,SAElDyN,GAAI,wBAAAxC,EAAAjJ,OAAA,GAAAgJ,EAAA,KACd,gBANoBmF,GAAA,OAAA3C,EAAAhL,MAAA,KAAA5G,UAAA,KAyGrB,MC3HA,ID0B4Bma,EAAAA,GAAAA,WAAS,WACjC,IACQkR,GADWxR,EAAAA,EAAAA,KAAX/J,OACAub,iBACRvD,GAAwDvG,EAAAA,GAAAA,KAAhDjE,EAAMwK,EAANxK,OAAQyR,EAAiBjH,EAAjBiH,kBAAmBC,EAAgBlH,EAAhBkH,iBAC3BtD,EAAkBuD,KAAlBvD,cAEFwD,GAAYC,EAAAA,EAAAA,gBACsFzT,EAAAC,GAAxDjC,IAAAA,SAAiC,CAAC,GAAsB,GAAjG0V,EAAiB1T,EAAA,GAAE2T,EAAkB3T,EAAA,GACiEiM,EAAAhM,GAA5EjC,IAAAA,SAAeoU,GAAkBsB,aAAiB,EAAjBA,EAAmBrB,yBAAwB,GAAtGT,EAAS3F,EAAA,GAAE2H,EAAW3H,EAAA,GACwBqB,EAAArN,GAApBjC,IAAAA,UAAe,GAAK,GAA9C3H,EAAUiX,EAAA,GAAEuG,EAAUvG,EAAA,GAiE7B,GA/DAtP,IAAAA,WAAgB,WACZ,GAAIsV,EAAkB,CAClBO,GAAW,GACX,IAAMC,EAAe,eAAAlY,EAAA3Q,GAAAtG,KAAAmF,MAAG,SAAAkK,EACpBod,EACAuB,GAAqB,IAAAN,EAAA0B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/uB,EAAA,OAAAX,KAAAuB,MAAA,SAAA+N,GAAA,cAAAA,EAAA1J,KAAA0J,EAAApL,MAAA,YAEjBuoB,EA5Bc,GA4ByB,CAAAnd,EAAApL,KAAA,eAAAoL,EAAAvL,OAAA,SAAS,CAAC,GAAC,OAEW,OAA3DqrB,GAAcnwB,EAAAA,EAAAA,UAAS,IAAI4tB,MAAQxtB,IAAIotB,EAAa,QAAOnd,EAAApL,KAAA,EACtCoqB,GAAgBc,EAAYna,OAAO,eAAc,OAA1D,IAAZoa,EAAY/f,EAAA1L,MACA6qB,uBAAwB,CAAFnf,EAAApL,KAAA,SAIiD,GAH/EorB,EAAkBvB,GAAUC,EAAeqB,EAAapB,eACxDsB,EAAOD,aAAe,EAAfA,EAAiBK,MAAMJ,KAC9BC,EAAQF,aAAe,EAAfA,EAAiBK,MAAMH,QACM,KAAjBD,aAAI,EAAJA,EAAM3vB,SAA4B,OAAZ2vB,EAAK,IAA4B,OAAbC,EAAM,IACnD,CAAFlgB,EAAApL,KAAA,gBAAAoL,EAAAvL,OAAA,SACVorB,EAAgB1C,EAAc,EAAGuB,IAAc,QAEpDyB,EAAWL,EAAYQ,cAAcC,UAAU,EAAG,IAClDH,EAAa,SAACI,GAAY,OAAK,IAAIjD,KAAK,GAAD9f,OAAI0iB,GAAQ1iB,OAAG+iB,EAAI,KAAI,EAC3DnvB,EAAI,EAAC,aAAEA,GAAI4uB,aAAI,EAAJA,EAAM3vB,SAAM,CAAA0P,EAAApL,KAAA,SACkB,MAAhCwrB,EAAWH,EAAK5uB,IAAMksB,KAAKe,MAC9B,GAAC,CAAAte,EAAApL,KAAA,SACsC,GAA9CwpB,GAA0BgC,EAAWH,EAAK5uB,KACtCkuB,KAAeb,IAAkB/Q,EAAM,CAAA3N,EAAApL,KAAA,gBAAAoL,EAAAvL,OAAA,SAChCirB,EAAmB,CACtBvC,YAAAA,EACAD,aAAc+C,EAAK5uB,GACnB+sB,uBAAAA,KACF,QAToB/sB,IAAG2O,EAAApL,KAAA,iBAarCirB,EAAgB1C,EAAc,EAAGuB,GAAe,yBAAA1e,EAAAvJ,OAAA,GAAAsJ,EAAA,KAEvD,gBAjCoB8E,EAAAyC,GAAA,OAAAK,EAAA1Q,MAAA,KAAA5G,UAAA,KAmCrBwvB,EAAgB,EAAGlS,EACvB,CACAgS,EAAY,CAAC,GACbD,EAAmB,CAAC,EAExB,GAAG,CAAC3D,EAAepO,IAEnB5D,IAAAA,WAAgB,WACZ,IAAI0W,EAUJ,OATIhB,SAAAA,EAAmBrB,yBACnBqC,EAAQplB,YAAW,WACfskB,EAAYxB,GAAkBsB,EAAkBrB,0BAC3C,IAAIb,KAAKkC,EAAkBrB,yBAA2B,IAAIb,KAAS,MACpEqC,GAAW,GACXR,GAAkB,GAE1B,GAAG,MAEA,WACCqB,GACAtN,aAAasN,EAErB,CACJ,GAAG,CAAC9C,EAAW8B,EAAmBL,KAE5BK,IAAqB3uB,OAAOqF,KAAKwnB,GAAWrtB,SAAY+uB,EAAkB,OAAO,KAEvF,IAAQnC,EAA8BuC,EAA9BvC,aAAcC,EAAgBsC,EAAhBtC,YAItB,OAFI/a,GAAYwd,GAAW,GAGvB7V,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,mCAAoC,CAAE,iCAAkC/K,KACzF2H,IAAAA,cAAA,OAAKwB,UAAU,+BACXxB,IAAAA,cAAC2T,GAAAA,EAAW,CAACnS,UAAU,uCACnBxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gCAEhChH,IAAAA,cAAC2W,GAAuB,CACpBxD,aAAcA,EACdC,YAAaA,EACbzB,iBAAkBA,KAG1B3R,IAAAA,cAAC4W,GAAoB,CAAChD,UAAWA,IAG7C,umCEhHA,IAAMiD,GACG,YADHA,GAEG,YAFHA,GAGK,QAILC,GAAqB,SAAH5e,GAAiE,IAA3D6e,EAAc7e,EAAd6e,eAAgBC,EAAI9e,EAAJ8e,KAAMC,EAAI/e,EAAJ+e,KAC1CC,EAAajpB,OAAO+oB,aAAI,EAAJA,EAAMvqB,OAAO,IACjC0qB,GAAYC,EAAAA,GAAAA,aAAYJ,GACxBK,EAAkBppB,OAAOkpB,aAAS,EAATA,EAAW1qB,OAAO,IAE2BuV,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAArEsX,EAAqBtV,EAAA,GAAEuV,EAAqBvV,EAAA,GAC+BiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAA3EwX,EAAwBvJ,EAAA,GAAEwJ,EAAwBxJ,EAAA,GACgCqB,EAAArN,GAA1BjC,IAAAA,SAAekX,GAAW,GAAlFQ,EAAyBpI,EAAA,GAAEqI,EAAyBrI,EAAA,GACqBsI,EAAA3V,GAA1BjC,IAAAA,SAAekX,GAAW,GAAzEW,EAAoBD,EAAA,GAAEE,EAAqBF,EAAA,GAE5CG,EAAiB/X,IAAAA,OAAaqX,GAC9BW,EAAmBhY,IAAAA,SACnBiY,EAAkBjY,IAAAA,SAClBkY,EAAuBlY,IAAAA,OAA6B,MAiE1D,OAvCAA,IAAAA,WAAgB,WAAM,IAAAmY,EAClB,IAAI1sB,MAAM4rB,KAAoB5rB,MAAMyrB,IAAgBF,EAApD,CAEA,IAAMoB,EAAO5D,KAAK6D,IAAIpqB,OAAOopB,GAAmBH,GAC1CoB,EAAgBF,EAAO,EAAI5D,KAAKC,MA7CjB,GA6C8C2D,GA7C9C,GA8CfG,EAAmBtqB,OAAOopB,IAAoBH,EAExB,QAA5BiB,EAAAD,EAAqBnL,eAAO,IAAAoL,GAA5BA,EAA8BK,MAAMC,YAAY,mBAAoB,GAAF/kB,OAAK4kB,EAAa,OAEhFC,EACAhB,GAAsB,GAEtBE,GAAyB,GAG7BQ,EAAgBlL,QAAUzb,YAAW,WACjCimB,GAAsB,GACtBE,GAAyB,GACzBK,EAAsBC,EAAehL,QAAU,GACnD,GA5DqB,IA8DrB,IACQpd,EAWR,OAHAooB,EAAehL,QAAU9e,OAAOopB,GAtDd,SAClB1nB,EACA+oB,EACAC,EACAC,GAEAC,cAAcb,EAAiBjL,SAC/B,IAAM+L,EAAcC,aAAY,WACxBppB,IAAWknB,IAAekB,EAAehL,QAAU6L,EACnDb,EAAehL,SAAWgL,EAAehL,QAAU,GAAK,GACjDpd,IAAWknB,IAAekB,EAAehL,QAAU6L,EAC1Db,EAAehL,QAAUyH,KAAK6D,IAAIN,EAAehL,QAAU,GAAK,GACzDpd,IAAWknB,IAAiBkB,EAAehL,QAAU4L,EAAQ,GACpEZ,EAAehL,SAAW,GAE1Bpd,IAAWknB,GAAgBkB,EAAehL,UAAY4L,EAAQ,GAAKZ,EAAehL,UAAY6L,IAE9FC,cAAcC,GAElBnB,EAA0BI,EAAehL,QAAU,GACvD,GAAG2L,GACHV,EAAiBjL,QAAU+L,CAC/B,CAiCIE,EATQrpB,EAA+CknB,GAC/C5oB,OAAOopB,GAAmBH,EAC1BvnB,EAASknB,GACF5oB,OAAOopB,GAAmBH,IACjCvnB,EAASknB,IAENlnB,GAGgB2oB,EAAerqB,OAAOopB,GAAkBH,GAE5D,WACH9N,aAAa6O,EAAgBlL,SAC7B8L,cAAcb,EAAiBjL,QACnC,CAnCgE,CAoCpE,GAAG,CAACiK,EAAMK,EAAiBH,IAEtBF,EAEDhX,IAAAA,cAAA,OAAKwB,UAAU,yBACVuV,GACG/W,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,sCAClBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAAwB1d,OAAQ,CAAE2vB,aAAchC,MAGpFjX,IAAAA,cAAA,OAAKwB,UAAU,gBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,sCACtB8T,EAAKvqB,MAAM,GAAI,IAEpBuT,IAAAA,cAAA,OAAKwB,UAAU,sCACXxB,IAAAA,cAAA,OACIkZ,IAAKhB,EACL1W,WAAW4B,EAAAA,GAAAA,GACP,mCACAkU,GAAyB,mDACzBE,GAA4B,wDAG/BF,GACGtX,IAAAA,cAACmZ,GAAAA,EAAQC,GAAE,CAAClW,MAAM,qCAAqC1B,UAAU,4BAC5DkW,GAGT1X,IAAAA,cAACmZ,GAAAA,EAAQC,GAAE,CAAClW,MAAM,qCAAqC1B,UAAU,4BAC5DqW,GAEJL,GACGxX,IAAAA,cAACmZ,GAAAA,EAAQC,GAAE,CAAClW,MAAM,qCAAqC1B,UAAU,4BAC5DkW,OA/BX,IAuCtB,EAEA,SAAe1X,IAAAA,KAAW8W,wgCC9H1B,IAAMuC,GACI,OADJA,GAEG,MAGHC,IAAc7Y,EAAAA,GAAAA,WAAS,WAAM,IAAA8Y,EAAAC,EAAAC,EAAAC,EACzBC,EAA2B3Z,IAAAA,SAEzB4Z,GAAmBzZ,EAAAA,EAAAA,KAAnByZ,eACAC,EAAiCD,EAAjCC,cAAeC,EAAkBF,EAAlBE,cACvB5hB,EAM+B,QAA3BqhB,EAAAM,EAAcE,qBAAa,IAAAR,GAA3BA,EAA6BS,aAAeF,EAAgBD,EAAgBC,EAAaG,EAAA/hB,EALzF6hB,cAAAA,OAAa,IAAAE,EAAG,CAAC,EAACA,EAAAC,EAAAhiB,EAClBiiB,YAAAA,OAAW,IAAAD,EAAG,CAAC,EAACA,EAChBE,EAAcliB,EAAdkiB,eACAC,EAAiBniB,EAAjBmiB,kBACAC,EAAQpiB,EAARoiB,SAEJlM,GAA8BvG,EAAAA,GAAAA,KAAtB0S,EAASnM,EAATmM,UAAW3W,EAAMwK,EAANxK,OACXpF,EAAgFub,EAAhFvb,YAAawb,EAAmED,EAAnEC,WAAYQ,EAAuDT,EAAvDS,WAAY/f,EAA2Csf,EAA3Ctf,cAAeggB,EAA4BV,EAA5BU,YAAahe,EAAesd,EAAftd,WACnEie,GAAmBtD,EAAAA,GAAAA,aAAY5Y,GAC/Bmc,EAAiD,QAA9BnB,EAAGK,EAAcE,qBAAa,IAAAP,GAAa,QAAbC,EAA3BD,EAA6BiB,mBAAW,IAAAhB,OAAb,EAA3BA,EAA0ClzB,OAChEq0B,GAA2BxD,EAAAA,GAAAA,aAAYuD,GAEzC1D,EAAOsD,EAELM,GAAsBC,EAAAA,EAAAA,mBAAkBf,EAAe9C,GACvD8D,GAA2BD,EAAAA,EAAAA,mBAAkBhB,aAAa,EAAbA,EAAeC,cAAe9C,GAC3E+D,GAAUH,GAAyB5D,EAAOmD,EAAiB,KAGjE,GAAII,IAAeK,GACXJ,SAAAA,EAAal0B,OAAQ,CACrB,IAAA00B,GAAgEtpB,EAAAA,EAAAA,MAAK8oB,EAAYhuB,OAAO,GAAG,IAAnFyuB,EAAKD,EAALC,MAAaC,EAAkBF,EAAxBhE,KAA0BmE,EAAkBH,EAAlBG,mBACzCnE,EAAO,CACHoE,IAAKF,EACLG,IAAKH,EACLD,MAAAA,EACAK,SAAUH,aAAkB,EAAlBA,EAAoBI,MAAM,KAAK,GAAGj1B,OAC5Ck1B,MAAON,EACPlC,aAAcwB,EAAYl0B,OAElC,CAEJ,IAAM0yB,EAAehC,GAAQ,iBAAkBA,EAAQA,EAAKgC,aAA0B,KAEhFyC,EAA0BpB,GAAYD,EACtCsB,EAASD,GAA2BV,IAAW3B,GAC/CuC,EAAUF,GAA2BV,IAAW3B,GAChDwC,EAAe90B,OAAOqF,KAAK+tB,GAC5B2B,MAAK,SAACt0B,EAAGu0B,GAAC,OAAMv0B,GAAKu0B,CAAC,IACtB7pB,KAAI,SAAA8pB,GAAS,OAAI7B,GAAa6B,EAAU,IAEvCC,EAAsBjc,IAAAA,SAAc,kBAAM6b,EAAapvB,OAAO,GAAG,IAAM,CAAC,CAAC,GAAE,CAACovB,IAC5EK,EAAuBjF,GAAQA,EAAKsE,SAAW,KAC/CY,EACE,QAAJzC,EAAAzC,SAAI,IAAAyC,GAAJA,EAAM+B,OAASS,EAAuBjF,EAAKwE,MAAMW,QAAQF,GAAwB,KAC/EG,EAAoBF,IAA4BA,EAAwBX,MAAM,IAAIlvB,OAAS,IAAM,KAEjGgwB,EAAetc,IAAAA,SACjB,kBACI2b,GAAUC,EACHK,EACD,CAAEM,MAAOF,EAAmBrF,KAAMmF,EAAyB,GACrE,CAACR,EAAQC,EAASS,EAAmBF,EAAyBF,IAGoBja,EAAAC,GAA3CjC,IAAAA,SAA8BiZ,GAAa,GAA/EuD,EAAcxa,EAAA,GAAEya,EAAgBza,EAAA,GACoDiM,EAAAhM,GAAhDjC,IAAAA,SAA8Bsc,EAAatF,MAAK,GAApF0F,GAAczO,EAAA,GAAE0O,GAAgB1O,EAAA,GACqCqB,GAAArN,GAArBjC,IAAAA,UAAe,GAAM,GAArEsX,GAAqBhI,GAAA,GAAEiI,GAAqBjI,GAAA,GAE7CsN,IAAW/B,GAAyB5D,EAAOhpB,OAAO8rB,EAAc6C,SAAW,KAC3EC,IAAaC,EAAAA,GAAAA,IAAuBriB,EAAemiB,GAASN,EAAaC,OACzEQ,GAAe1C,GAAqBW,GAAUsB,EAAatF,QAAUgD,EACrEgD,GAAoBD,KAAiBzC,EACrC2C,GAAyBxgB,IAAemH,IAAWnH,EACnDygB,GAAyBH,IAAgBE,GACzCE,KACDrD,SAAAA,EAAeC,iBACbgB,GAAoD,IAAxBJ,GAA8BC,IAE3DwC,GAAapd,IAAAA,aAAkB,WACjCyc,EAAiBxD,GACjB0D,GAAiBL,EAAatF,KAClC,GAAG,CAACiC,EAAcqD,EAAatF,OA+B/B,OA7BAhX,IAAAA,WAAgB,WAAM,IAAAqd,GAEdvD,aAAa,EAAbA,EAAeC,iBAAkBgB,IAAuD,QAA/BsC,EAAIxD,EAAcE,qBAAa,IAAAsD,OAAA,EAA3BA,EAA6BrD,cAC9DU,GAAoBlc,GAAekc,IAAqBlc,IAEpF+Y,IAAsB,GACtBoC,EAAyB5M,QAAUzb,YAAW,WAC1CimB,IAAsB,GACtB6F,IACJ,GAAG,MACK9F,IACR8F,IAER,GAAG,CACC5e,EACAuc,EACAlB,EACAC,EACAY,EACA0C,GACA9F,KAGJtX,IAAAA,WAAgB,WACZ,OAAO,WACHoJ,aAAauQ,EAAyB5M,QAC1C,CACJ,GAAG,IAGC/M,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GACP,sBACA8Z,IAA0B,oCAC1BA,IAA0BC,IAA0B,wCACnDD,IAA0BrC,GAAuB,wCAClDmC,IAAqBH,IAAc,+BACnClB,GAAU,2BACVqB,KAAsBH,IAAc,8BACpCjB,GAAW,8BAGd3E,GAAQgG,IAA0BP,GAC/B1c,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GACP,wBACAkU,IAAyB,0CAG5BA,IACGtX,IAAAA,cAAC8W,GAAkB,CACfC,iBAAkBgG,GAClB/F,KAAMsF,EAAatF,KACnBC,KAAMgC,IAGdjZ,IAAAA,cAAC8W,GAAkB,CAACC,iBAAkBgG,GAAc/F,KAAM0F,GAAgBzF,KAAMuF,KAGpFxc,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,IAAKpC,OAAQ,KAI9C,IAEA,MC/JA,GD+JA,kQEnJMsZ,IAAqB7c,EAAAA,GAAAA,WACvB,SAAAvI,GAAuF,IAAAsZ,EAApF+L,EAAWrlB,EAAXqlB,YAAaC,EAActlB,EAAdslB,eAAgBC,EAAWvlB,EAAXulB,YAAaC,EAAcxlB,EAAdwlB,eAEjCjnB,GADO0J,EAAAA,EAAAA,KAAP3J,GACAC,gBACAgE,GAAkBoN,EAAAA,GAAAA,KAAlBpN,cACFkjB,EAAuD,QAA1CnM,GAAGnC,EAAAA,EAAAA,0BAAyB5U,UAAc,IAAA+W,OAAA,EAAvCA,EAAyC/L,MACzDmY,GAAWjR,EAAAA,EAAAA,QAAgC,OAEjD9J,EAAAA,EAAAA,YAAU,WACN,IAAMgb,EAAeD,EAAS7Q,QAE9B,GAAI8Q,EAAc,CACd,IAAMC,EAAc,WAAH,OAASN,GAAe,EAAK,EAG9C,OAFAK,EAAaE,iBAAiB,QAASD,GAEhC,WACHD,EAAaG,oBAAoB,QAASF,EAC9C,CACJ,CAEJ,GAAG,IAOH,OACI9d,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,kCAAmC,CAC/C,mCAAoCma,KAGxCvd,IAAAA,cAACie,GAAAA,EAAW,CACRC,UAAU,KACVC,aAAanf,EAAAA,EAAAA,UAAS,sBAAwB2e,EAC9C9S,QAAQ,OACRqO,IAAK0E,EACLv2B,MAAOo2B,EACPhS,SAAU,SAAA7kB,GACN82B,EAAe92B,EAAEmW,OAAO1V,MAC5B,IAEHk2B,GACGvd,IAAAA,cAACoe,GAAAA,GAAM,CACHvT,QAAQ,WACRH,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACnChE,KAAK,KACLE,MAAOzM,EAAkB,QAAU,QACnC6S,QA3BI,WAChBoU,EAAe,IACfF,GAAe,EACnB,IA6BJ,IAGJ,MCrEA,GDqEA,GE9CA,SApBoB,SAACa,GACjB,IACMC,EADqB,CAAC,kBAAmB,QAAS,UAAW,iBAAkB,eAC3BzsB,QACtD,SAACkX,EAAqBwV,EAAgB9W,GAElC,OADAsB,EAAIwV,GAAU9W,EACPsB,CACX,GACA,CAAC,GAGL,OAAOsV,EAAY5xB,QAAQqvB,MAAK,SAACt0B,EAAGu0B,GAChC,IAAMyC,OAA4Ch4B,IAA7B83B,EAAe92B,EAAE+2B,QAAwBD,EAAe92B,EAAE+2B,QAAUF,EAAY93B,OAC/Fk4B,OAA4Cj4B,IAA7B83B,EAAevC,EAAEwC,QAAwBD,EAAevC,EAAEwC,QAAUF,EAAY93B,OACrG,OAAIi4B,IAAiBC,EACVD,EAAeC,EAEnBj3B,EAAEk3B,uBAAuBC,cAAc5C,EAAE2C,uBACpD,GACJ,wuECJO,kpxB,GAAuC,IAAjC0L,EAAM1L,EAAN0L,OAGnB2lB,EAAgB3K,GAAYhb,GAClC,OAAO2lB,EAAgBvpB,IAAAA,cAACupB,EAAa,CAAChoB,SAHrB,OAG8C,IACnE,qpBCXA5a,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,GAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,GAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,GAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8a,GAAAnb,EAAAF,GAAA,gBAAAE,GAAA,GAAAkQ,MAAAkV,QAAAplB,GAAA,OAAAA,CAAA,CAAAmqB,CAAAnqB,IAAA,SAAAA,EAAA8B,GAAA,IAAA/B,EAAA,MAAAC,EAAA,yBAAAS,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,uBAAAD,EAAA,KAAAD,EAAAK,EAAAK,EAAAM,EAAAJ,EAAA,GAAAqB,GAAA,EAAA1B,GAAA,SAAAG,GAAAT,EAAAA,EAAA6B,KAAA5B,IAAA+D,KAAA,IAAAjC,EAAA,IAAA7B,OAAAF,KAAAA,EAAA,OAAAgC,GAAA,cAAAA,GAAAjC,EAAAU,EAAAoB,KAAA7B,IAAAsD,QAAA3C,EAAA6D,KAAAzE,EAAAS,OAAAG,EAAAjB,SAAAqC,GAAAC,GAAA,UAAA/B,GAAAK,GAAA,EAAAF,EAAAH,CAAA,iBAAA+B,GAAA,MAAAhC,EAAA,SAAAe,EAAAf,EAAA,SAAAE,OAAAa,KAAAA,GAAA,kBAAAT,EAAA,MAAAF,CAAA,SAAAO,CAAA,EAAA0pB,CAAApqB,EAAAF,IAAAyqB,GAAAvqB,EAAAF,IAAA,qBAAA+D,UAAA,6IAAA2mB,EAAA,UAAAD,GAAAvqB,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAqqB,GAAArqB,EAAAU,GAAA,IAAAX,EAAA,GAAA6W,SAAAhV,KAAA5B,GAAA2F,MAAA,uBAAA5F,GAAAC,EAAA8E,cAAA/E,EAAAC,EAAA8E,YAAAC,MAAA,QAAAhF,GAAA,QAAAA,EAAAmQ,MAAA8G,KAAAhX,GAAA,cAAAD,GAAA,2CAAAuqB,KAAAvqB,GAAAsqB,GAAArqB,EAAAU,QAAA,YAAA2pB,GAAArqB,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAAP,UAAAiB,EAAAV,EAAAP,QAAA,QAAAK,EAAA,EAAAK,EAAA+P,MAAAxP,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,CAkBA,IAAMuiC,IAAqBC,EAAAA,EAAAA,aACvB,SAAAvxB,EAA8EghB,GAA6B,IAAxG1R,EAAItP,EAAJsP,KAAMkiB,EAAcxxB,EAAdwxB,eAAgBC,EAAiBzxB,EAAjByxB,kBAAmB3hB,EAAS9P,EAAT8P,UACWvF,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAA5CknB,EAAUnnB,EAAA,GAAEonB,EAAapnB,EAAA,GACdqnB,GAAmBjiB,EAAAA,GAAAA,KAA7B4D,SACAoJ,GAAYkV,EAAAA,GAAAA,KAAZlV,QACAmV,EAA8DnV,EAA9DmV,gBAAiBC,EAA6CpV,EAA7CoV,mBAAoBC,EAAyBrV,EAAzBqV,qBACrCC,GAAgBC,EAAAA,GAAAA,KAAhBD,aAERtnB,EAAAA,EAAAA,YAAU,WACNgnB,EAAcG,EAAgBv2B,SAAS+T,EAAK5D,QAChD,GAAG,CAAComB,EAAiBxiB,EAAK5D,SAE1B,IAAM+H,EAAY,eA9B1B1kB,EA8B0B2W,GA9B1B3W,EA8B0BN,KAAAmF,MAAG,SAAA4J,EAAOkO,GAAc,OAAAjd,KAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,OACZ,OAA1B8+B,EAAkB/lB,GAAQjO,EAAA9K,KAAA,EACpBi/B,EAAe,CAAE/sB,OAAQ,CAAElR,KAAM,SAAUxE,MAAOuc,KAAW,OACnEoE,GAAU,GAAO,wBAAArS,EAAAjJ,OAAA,GAAAgJ,EAAA,IAjC7B,eAAA7O,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,QAkCS,gBAJiB0N,GAAA,OAAA+C,EAAA1Q,MAAA,KAAA5G,UAAA,KA4BZ+jC,EAAwB,SAACzjC,GAC3B,IAAMgd,GAAUhd,aAAC,EAADA,EAAG0jC,eAA8BC,aAAa,gBAAkB,IAChFC,EAAAA,EAAAA,0BAAwB,kBAAM7e,EAAa/H,EAAO,GAAEhd,EACxD,EAEM6jC,EAA2B,SAAC7jC,GAC9B,IAAMgd,GAAUhd,aAAC,EAADA,EAAG0jC,eAA8BC,aAAa,gBAAkB,IAChFC,EAAAA,EAAAA,0BAAwB,kBA7BJ,SAAC5mB,GAChBA,KAGgB,IAFDomB,EAAgB1Z,QAAQ1M,IAGxCsmB,EAAqBtmB,GACrBumB,EAAY,CACR9oB,KAAMrB,IAAAA,cAAC0qB,GAAAA,EAAyB,CAAClhB,KAAK,yCAAyCjI,SAAS,OACxFxG,QAASiF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4BACrC2jB,gBAAgB,MAGpBV,EAAmB,GAADv2B,OAAAkJ,GAAKotB,GAAe,CAAEpmB,KACxCumB,EAAY,CACR9oB,KAAMrB,IAAAA,cAAC4qB,GAAAA,EAAsB,CAACphB,KAAK,sCAAsCjI,SAAS,OAClFxG,QAASiF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBACrC2jB,gBAAgB,KAGxBd,EAAcG,EAAgBv2B,SAASmQ,IAC3C,CASkCinB,CAAgBjnB,EAAO,GAAEhd,EAC3D,EAEA,OACIoZ,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwB,CACpC,iCAAkCsmB,IAAmBliB,EAAK5D,SAE9DsV,IAAKA,GAELlZ,IAAAA,cAAA,QACIwB,UAAU,4BACV,cAAagG,EAAK5D,OAClB0F,QAAS+gB,EACTS,UAAWT,GAEXrqB,IAAAA,cAAC+qB,GAAiB,CAACnnB,OAAQ4D,EAAK5D,SAChC5D,IAAAA,cAAC+C,GAAAA,EAAI,CACDC,KAAK,KACLxB,WAAW4B,EAAAA,GAAAA,GAAK,8BAA+B,CAC3C,wCAAyCsmB,IAAmBliB,EAAK5D,UAGrE5D,IAAAA,cAAA,YAAOwH,EAAKnL,gBAEdmL,EAAKwjB,kBACHhrB,IAAAA,cAACirB,GAAAA,EAAG,CACAvgB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACjZ,IAAI,kBAAkBkZ,kBAAkB,WACzD9D,MAAM,QACN2H,QAAS6e,IAAmBliB,EAAK5D,OAAS,UAAY,OACtDsnB,UAAU,KAItBlrB,IAAAA,cAAA,QAAMsJ,QAASmhB,EAA0BK,UAAWL,EAA0B,cAAajjB,EAAK5D,QAC3FgmB,EACG5pB,IAAAA,cAAC4qB,GAAAA,EAAsB,CAACphB,KAAK,sCAAsCjI,SAAS,OAE5EvB,IAAAA,cAAC0qB,GAAAA,EAAyB,CACtBlhB,KACIkgB,IAAmBliB,EAAK5D,OAClB,6DACA,uDAEVrC,SAAS,QAMjC,IAGJioB,GAAmB99B,YAAc,qBAEjC,MCtHA,IDsHe+U,EAAAA,GAAAA,UAAS+oB,IExGxB,SAZ0B,WAAH,OACnBxpB,IAAAA,cAAA,OAAKwB,UAAU,4BACXxB,IAAAA,cAAC4qB,GAAAA,EAAsB,CAACphB,KAAK,6DAA6DjI,SAAS,QACnGvB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,mCACvBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCAClBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,8CAE9B,ECsBV,MCjCA,IDSwBvG,EAAAA,GAAAA,WAAS,SAAAvI,GAAwE,IAArEwxB,EAAcxxB,EAAdwxB,eAAgBC,EAAiBzxB,EAAjByxB,kBAAmB3hB,EAAS9P,EAAT8P,UAC7DgiB,EEP2B,WACjC,IAAQhY,EAAkBuD,KAAlBvD,cAEAgY,GADYD,EAAAA,GAAAA,KAAZlV,QACAmV,gBAEFmB,GAAqBviB,EAAAA,EAAAA,UAAQ,WAC/B,OAAOohB,aAAe,EAAfA,EACD93B,KAAI,SAAAk5B,GAAiB,OAAIpZ,EAAc3B,MAAK,SAAAgb,GAAW,OAAIA,EAAYznB,SAAWwnB,CAAiB,GAAC,IACrG79B,QAAO,SAAC89B,GAAW,YAAsD7kC,IAAhB6kC,CAAyB,GAC3F,GAAG,CAACrZ,EAAegY,IAMnB,OAJ8BphB,EAAAA,EAAAA,UAAQ,WAClC,OAAO0iB,GAAYH,EACvB,GAAG,CAACA,GAGR,CFT4BI,GAExB,OACIvrB,IAAAA,cAACA,IAAAA,SAAc,KACVgqB,EAAgBzjC,OAAS,EACtByZ,IAAAA,cAAA,OAAKwB,UAAU,+BACVwoB,EAAgB93B,KAAI,SAAA0R,GAAM,OACvB5D,IAAAA,cAACwpB,GAAkB,CACf17B,IAAK8V,aAAM,EAANA,EAAQvH,aACbmL,KAAM5D,EACN8lB,eAAgBA,EAChBC,kBAAmBA,EACnB3hB,UAAWA,GACb,KAIVhI,IAAAA,cAACwrB,GAAiB,MAIlC,wgCG0CA,MCzEA,GDauB,SAAHtzB,GAA4F,IAAtFwY,EAAQxY,EAARwY,SAAUgZ,EAAcxxB,EAAdwxB,eAAgBC,EAAiBzxB,EAAjByxB,kBAAmB3hB,EAAS9P,EAAT8P,UAAW0B,EAAMxR,EAANwR,OACxE+hB,GAAW9e,EAAAA,EAAAA,QAAiD,CAAC,GAC7D+e,GAAatU,EAAAA,GAAAA,aAAYsS,GAQ/B,OANA7mB,EAAAA,EAAAA,YAAU,WACwG,IAAA8oB,EAA1GjiB,GAA8B,QAApBgH,EAAS6N,QAAoBmL,GAAkB+B,EAAS1e,QAAQ2c,KAAoBgC,IAC9D,QAAhCC,EAAAF,EAAS1e,QAAQ2c,UAAe,IAAAiC,GAAhCA,EAAkCC,eAAe,CAAEC,MAAO,WAElE,GAAG,CAACniB,EAAQgH,EAAS6N,OAAQmL,EAAgBgC,IAGzC1rB,IAAAA,cAAC8rB,GAAAA,EAAIC,MAAK,CAACj+B,IAAK4iB,EAASsb,qBACA,cAApBtb,EAAS6N,OACNx3B,OAAOklC,QAAQvb,EAASwb,WAAWh6B,KAAI,SAAA0L,GAAA,IAAA0G,EAAArC,GAAArE,EAAA,GAAEuuB,EAAW7nB,EAAA,GAAE8nB,EAAQ9nB,EAAA,UAC1DtE,IAAAA,cAAA,OAAKlS,IAAKq+B,EAAa3qB,UAAU,sCACZ,SAAhB2qB,GACGnsB,IAAAA,cAAA,OAAKwB,UAAU,oCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,UAAU,yBACrBkP,EAASwb,UAAUC,GAAaE,wBAI5CtlC,OAAOklC,QAAQG,EAAStX,YAAY5iB,KAAI,SAAAuS,GAAA,IAAA6nB,EAAArqB,GAAAwC,EAAA,GAAE8nB,EAAYD,EAAA,GAAEE,EAASF,EAAA,UAC9DtsB,IAAAA,cAAA,OAAKwB,UAAU,uBAAuB1T,IAAKy+B,GACvCvsB,IAAAA,cAAC2T,GAAAA,EAAW,CAAC3Q,KAAK,KAAKxB,UAAU,4BAC5BgrB,EAAU9N,wBAEf1e,IAAAA,cAAA,OAAKwB,UAAU,yBACVgrB,EAAUC,MAAMv6B,KAAI,SAACsV,GAAsB,OACxCxH,IAAAA,cAACwpB,GAAkB,CACf17B,IAAK0Z,EAAKnL,aACV6c,IACI1R,EAAK5D,SAAW8lB,EACV,SAAAvmB,GAAE,OAAKsoB,EAAS1e,QAAQvF,EAAK5D,QAAUT,CAAE,OACzC3c,EAEVghB,KAAMA,EACNkiB,eAAgBA,EAChBC,kBAAmBA,EACnB3hB,UAAWA,GACb,KAGR,IAER,IAGVhI,IAAAA,cAAA,WACIA,IAAAA,cAAC0sB,GAAe,CACZhD,eAAgBA,EAChBC,kBAAmBA,EACnB3hB,UAAWA,KAMnC,EErDA,SAZ0B,SAAH9P,GAAyC,IAAnCwY,EAAQxY,EAARwY,SACzB,OACI1Q,IAAAA,cAAC8rB,GAAAA,EAAIa,QAAO,CAAC7+B,IAAK4iB,EAASsb,qBACF,YAApBtb,EAAS6N,OACNve,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qBAE5B0J,EAASsb,oBAIzB,EC0BA,MC1CA,IDayBvrB,EAAAA,GAAAA,WACrB,SAAAvI,GAAsG,IAAnGwxB,EAAcxxB,EAAdwxB,eAAgBC,EAAiBzxB,EAAjByxB,kBAAmB3hB,EAAS9P,EAAT8P,UAAW0B,EAAMxR,EAANwR,OAAQkjB,EAAmB10B,EAAnB00B,oBAE/CC,EZCmB,SAAC7X,GAC9B,GAAuB,IAAnBA,EAAQzuB,OACR,MAAO,CAAC,EAGZ,IACIsmC,EADkBvB,GAAYtW,GACKnjB,QAAO,SAACkX,EAAkCnF,GAA6B,IAAAkpB,EAAAC,EAAAC,EAAAC,EAAAC,EAClG3O,EACJ3a,EADI2a,OAAQyN,EACZpoB,EADYooB,oBAAqBI,EACjCxoB,EADiCwoB,SAAUC,EAC3CzoB,EAD2CyoB,sBAAuBG,EAClE5oB,EADkE4oB,UAAW9N,EAC7E9a,EAD6E8a,uBAiBjF,OAdW,QAAXoO,EAAA/jB,EAAIwV,UAAO,IAAAuO,IAAX/jB,EAAIwV,GAAY,CAAEA,OAAAA,EAAQyN,oBAAAA,EAAqBE,UAAW,CAAC,IAE5B,QAA/Bc,GAAAD,EAAAhkB,EAAIwV,GAAQ2N,WAAUE,UAAS,IAAAY,IAA/BD,EAAsBX,GAAc,CAChCC,sBAAAA,EACAvX,WAAY,CAAC,IAGoC,QAArDoY,GAAAD,EAAAlkB,EAAIwV,GAAQ2N,UAAUE,GAAUtX,YAAW0X,UAAU,IAAAU,IAArDD,EAA2CT,GAAe,CACtD9N,uBAAAA,EACA+N,MAAO,KAGX1jB,EAAIwV,GAAQ2N,UAAUE,GAAUtX,WAAW0X,GAAWC,MAAMphC,KAAKuY,GAE1DmF,CACX,GAAG,CAAC,GAEJhiB,OAAOqF,KAAKygC,GAAoBpjC,SAAQ,SAAA80B,GACpCx3B,OAAOqF,KAAKygC,EAAmBtO,GAAQ2N,WAAWziC,SAAQ,SAAA2iC,GACtD,IAAMtX,EAAa+X,EAAmBtO,GAAQ2N,UAAUE,GAAUtX,WAC5DqY,EAAmBpmC,OAAOklC,QAAQnX,GACnCgH,MAAK,SAAA5jB,EAAA0F,GAAA,IAAIpW,EAAJya,GAAA/J,EAAA,GAAK,GAAM6jB,EAAN9Z,GAAArE,EAAA,GAAO,UAAMpW,EAAEk3B,uBAAuBC,cAAc5C,EAAE2C,uBAAuB,IACvF7sB,QAAO,SAACu7B,EAASd,GAAmB,IAAAe,EAAAprB,GAAAqqB,EAAA,GAAhBx+B,EAAGu/B,EAAA,GAAEhmC,EAAKgmC,EAAA,GAE3B,OADAD,EAAUt/B,GAAOzG,EACV+lC,CACX,GAAG,CAAC,GACRP,EAAmBtO,GAAQ2N,UAAUE,GAAUtX,WAAaqY,CAChE,GACJ,IAGA,IAAMG,EAAcvmC,OAAOuC,OAAOujC,GAAoBh7B,QAAO,SAACC,EAAQ0V,GAWlE,OAVAzgB,OAAOqF,KAAKob,EAAK0kB,WAAWziC,SAAQ,SAAAqE,GAChC,IAAMy/B,EAAiB,SAARz/B,EAAiB0Z,EAAK+W,OAASzwB,EACxC0/B,EAAkB,SAAR1/B,EAAiB0Z,EAAKwkB,oBAAsBxkB,EAAK0kB,UAAUp+B,GAAKu+B,sBAEhFv6B,EAAOy7B,GAAU,CACblB,sBAAuBmB,EACvB1Y,WAAYtN,EAAK0kB,UAAUp+B,GAAKgnB,WAExC,IAEOhjB,CACX,GAAG,CAAC,GAkBJ,OAfA+6B,EAAkBpmC,GAAA,CACdgnC,UAAW,CACPlP,OAAQ,YACRyN,qBAAqBhtB,EAAAA,EAAAA,UAAS,cAC9BktB,UAAW,CAAC,GAEhBwB,IAAK,CACDnP,OAAQ,MACRyN,qBAAqBhtB,EAAAA,EAAAA,UAAS,OAC9BktB,UAASzlC,GAAA,GAAO6mC,KAGjBT,EAIX,CYzEmCc,CADDpY,KAAlBvD,eAGR,OACIhS,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAC8rB,GAAAA,EAAI8B,KAAI,KACJ7mC,OAAOuC,OAAOujC,GAAoB36B,KAAI,SAAAwe,GAAQ,OAC3C1Q,IAAAA,cAAC6tB,GAAiB,CAAC//B,IAAK4iB,EAAS6N,OAAQ7N,SAAUA,GAAY,KAGvE1Q,IAAAA,cAAC8rB,GAAAA,EAAIxkB,QAAO,CAAC9F,UAAU,0BAA0B0X,IAAK0T,GACjD7lC,OAAOuC,OAAOujC,GAAoB36B,KAAI,SAAAwe,GAAQ,OAC3C1Q,IAAAA,cAAC8tB,GAAc,CACXhgC,IAAK4iB,EAAS6N,OACd7N,SAAUA,EACVgZ,eAAgBA,EAChBC,kBAAmBA,EACnB3hB,UAAWA,EACX0B,OAAQA,GACV,KAKtB,IEpBJ,MCnBA,GDCuB,SAAHxR,GAAgD,IAA1C61B,EAAU71B,EAAV61B,WACtB,OACI/tB,IAAAA,cAAA,OAAKwB,UAAU,+BACXxB,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,oCACtBlE,EAAAA,EAAAA,UAAS,gCAAiC,CACvC+uB,WAAAA,EACAC,cAAe,CAAEC,aAAa,MAGtCjuB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCAClBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wCAKhD,EEsBA,MCvCA,IDW4BvG,EAAAA,GAAAA,WAAS,SAAAvI,GAAyE,IAAtEulB,EAAWvlB,EAAXulB,YAAazV,EAAS9P,EAAT8P,UAAW2hB,EAAiBzxB,EAAjByxB,kBACtDuE,EEX+B,SAACzQ,GACtC,IAAQzL,EAAkBuD,KAAlBvD,cAEFkc,GAAgBtlB,EAAAA,EAAAA,UAAQ,WAC1B,MAA2B,KAAvB6U,EAAY0Q,OAAsB,GAC/Bnc,EAAczkB,QAAO,SAAAqW,GAAM,OAAIA,EAAOvH,aAAaqX,cAAcjgB,SAASgqB,EAAY/J,cAAc,GAC/G,GAAG,CAAC+J,EAAazL,IAMjB,OAJ4BpJ,EAAAA,EAAAA,UAAQ,WAChC,OAAO0iB,GAAY4C,EACvB,GAAG,CAACA,GAGR,CFF0BE,CAA0B3Q,GAEhD,OACIzd,IAAAA,cAAA,OAAKwB,UAAU,oCACM,KAAhBic,GACGzd,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,kCAAkC1B,UAAU,qCAC9DxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2CAGnB,KAAhByW,IACIyQ,EAAc3nC,OAAS,EACpB2nC,EAAch8B,KAAI,SAAA0R,GAAM,OACpB5D,IAAAA,cAACwpB,GAAkB,CACf17B,IAAK8V,aAAM,EAANA,EAAQvH,aACbmL,KAAM5D,EACN8lB,eAAgB,GAChBC,kBAAmBA,EACnB3hB,UAAWA,GACb,IAGNhI,IAAAA,cAACquB,GAAc,CAACN,WAAYtQ,KAIhD,6iCG1BA,IAAM6Q,IAAoB7tB,EAAAA,GAAAA,WAAS,SAAAvI,GAA+C,IAA5CwR,EAAMxR,EAANwR,OAAQ1B,EAAS9P,EAAT8P,UAC1CoG,GAA8DvG,EAAAA,GAAAA,KAAtD0mB,EAAWngB,EAAXmgB,YAAaC,EAAapgB,EAAbogB,cAAe5qB,EAAMwK,EAANxK,OAAQnJ,EAAa2T,EAAb3T,cACSgI,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAA9C6a,EAAW9a,EAAA,GAAE+a,EAAc/a,EAAA,GAC0BwF,EAAAhG,IAAhBS,EAAAA,EAAAA,UAASkB,GAAO,GAArD8lB,EAAczhB,EAAA,GAAE0hB,EAAiB1hB,EAAA,GACUG,EAAAnG,IAAZS,EAAAA,EAAAA,UAAS,IAAG,GAA3C+a,EAAWrV,EAAA,GAAEsV,EAActV,EAAA,GAE5BwkB,GAAsBjgB,EAAAA,EAAAA,QAAuB,MAQnD,OANA9J,EAAAA,EAAAA,YAAU,WACN8mB,EAAkB/lB,GAClB2qB,EAAY,MACZC,EAAc,GAClB,GAAG,CAACA,EAAeD,EAAa3qB,IAG5B5D,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CAACC,OAAQA,EAAQ9H,QAAS,WAAF,OAAQoG,GAAU,EAAM,GAC7DhI,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,EAAC+nB,kBAAgB,GAClDzuB,IAAAA,cAACsd,GAAkB,CACfG,YAAaA,EACbC,eAAgBA,EAChBH,YAAaA,EACbC,eAAgBA,IAEpBxd,IAAAA,cAAC8rB,GAAAA,EAAI4C,UAAS,CACVC,aAAa,MACb3rB,KAAK,KACLxB,UAAU,+BACVotB,iBAAkB,EAClBC,YAAa,SAAApnB,GACQ,IAAAqnB,EAAH,IAAVrnB,IAC2B,QAA3BqnB,EAAAlC,EAAoB7f,eAAO,IAAA+hB,GAA3BA,EAA6BC,SAAS,CAAEC,IAAK,IAErD,GAECzR,EACGvd,IAAAA,cAACivB,GAAmB,CAChBxR,YAAaA,EACbC,eAAgBA,EAChB1V,UAAWA,EACX2hB,kBAAmB,SAAC/lB,IAChBsrB,EAAAA,GAAAA,IAA0BtrB,EAAQnJ,GAClCkvB,EAAkB/lB,EACtB,IAGJ5D,IAAAA,cAACmvB,GAAgB,CACbzF,eAAgBA,EAChBC,kBAAmB,SAAC/lB,IAChBsrB,EAAAA,GAAAA,IAA0BtrB,EAAQnJ,GAClCkvB,EAAkB/lB,EACtB,EACAoE,UAAWA,EACX0B,OAAQA,EACRkjB,oBAAqBA,OAQrD,IAEA,MC3EA,GD2EA,2nCEjEA,IAAMwC,IAAiB3uB,EAAAA,GAAAA,WAAS,WAAM,IAAA4uB,EACS5sB,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAApCgH,EAAMjH,EAAA,GAAEuF,EAASvF,EAAA,GAChBuP,EAAkBuD,KAAlBvD,cACR5D,GAA4EvG,EAAAA,GAAAA,KAA5DynB,EAAWlhB,EAAnBxK,OAAqB2W,EAASnM,EAATmM,UAAWjF,EAAgBlH,EAAhBkH,iBAAkB7a,EAAa2T,EAAb3T,cAClD0vB,GAAgBC,EAAAA,GAAAA,KAAhBD,YACAjc,EAAgBiE,KAAhBjE,YAEFqhB,EAAgBvd,EAAc3B,MAAK,SAAAnY,GAAS,OAAAA,EAAN0L,SAAwB0rB,CAAW,IAEzE3R,EAAgBzP,SAAwE,QAA7DmhB,EAAXnhB,EAAamC,MAAK,SAAC7I,GAAmB,OAAKA,EAAKngB,QAAUoT,CAAa,WAAC,IAAA40B,OAA7D,EAAXA,EAA0Eze,MAEhG/N,EAAAA,EAAAA,YAAU,WACN,IAAK0sB,EAAe,CAChB,IAAMC,GAAcC,EAAAA,EAAAA,qBAAoBH,IAAkDA,EACpFv0B,EAAU4iB,EACZ3d,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAiB,GAAAtT,OAAK87B,EAAW,wBAAA97B,OAAuBiqB,EAAa,KACrEr0B,OAAQ,CACJkmC,YAAAA,EACA7R,cAAAA,KAIR3d,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAiB,GAAAtT,OAAK87B,EAAW,oBACjClmC,OAAQ,CACJkmC,YAAAA,KAKZA,GACIrF,EAAY,CACRpvB,QAAAA,EACAigB,OAAQ,UACR2P,gBAAgB,EAChB+E,gBAAgB,EAChBlX,MAAO,CACHmX,aAAc,IACdvpB,MAAO,wCAGvB,CACJ,GAAG,CAACmpB,EAAeD,EAAa3R,IAEhC,IAAA/f,EAA4B2c,QAAAA,EAAa,CAAC,EAAlCgB,EAAQ3d,EAAR2d,SAAUE,EAAK7d,EAAL6d,MACZmU,EAAenU,aAAK,EAALA,EAAOW,QAAQb,GAC9BsU,EAA2Bva,EAC7BtV,IAAAA,cAAC+C,GAAAA,EAAI,KAAC,KAEN/C,IAAAA,cAACgG,GAAAA,EAASC,OAAM,CAACjC,OAAQ,GAAIoC,MAAO,GAAI0pB,SAAO,IAInD,YAA+C,KAApCP,aAAa,EAAbA,EAAevE,kBACfhrB,IAAAA,cAACgG,GAAAA,EAASC,OAAM,CAACjC,OAAQ,GAAIoC,MAAO,IAAK0pB,SAAO,IAGvD9vB,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKwB,UAAU,6BAA6B8H,QAAS,WAAF,OAAQtB,GAAU,EAAK,GACtEhI,IAAAA,cAAA,OAAKwB,UAAU,mBACXxB,IAAAA,cAAC+qB,GAAiB,CAACnnB,OAAQ0rB,IAC3BtvB,IAAAA,cAAA,OAAKwB,UAAU,wBACXxB,IAAAA,cAAA,OAAKwB,UAAU,+BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,GAAEssB,aAAa,EAAbA,EAAelzB,gBACzBkzB,SAAAA,EAAevE,mBACbhrB,IAAAA,cAACirB,GAAAA,EAAG,CACAvgB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACjZ,IAAI,SAASkZ,kBAAkB,WAChD9D,MAAM,QACN2H,QAAQ,OACRqgB,UAAU,EACVloB,KAAK,OAGbhD,IAAAA,cAAC+vB,GAAAA,EAAmC,CAACvmB,KAAK,6CAE7ComB,EACG5vB,IAAAA,cAAC2T,GAAAA,EAAW,CAACnS,UAAU,+BAA+BouB,GAEtDC,KAKhB7vB,IAAAA,cAACsuB,GAAiB,CAAC5kB,OAAQA,EAAQ1B,UAAWA,IAG1D,IAEA,MCnGA,GDmGA,+oBE7BA,SA9DqB,SAAH9P,GAAqG,IAA/F83B,EAAU93B,EAAV83B,WAAYC,EAAY/3B,EAAZ+3B,aAAcC,EAASh4B,EAATg4B,UAAWC,EAAIj4B,EAAJi4B,KAAMC,EAAYl4B,EAAZk4B,aAAcC,EAAYn4B,EAAZm4B,aACvEC,GAAiBC,EAAAA,GAAAA,cAAa,CAChCC,WAAY,WAAM,IAAAC,EACyB,QAAvCA,EAAAC,SAASC,cAAc,wBAAgB,IAAAF,GAAvCA,EAAyC7E,iBACzCyE,GAAa,SAAC9jC,GAAY,OAAKA,EAAO,CAAC,GAC3C,EACAqkC,8BAA8B,EAC9BC,YAAY,EACZC,YAAY,IAGhB,MAAmB,gBAAfX,EAAK1qB,MAEDzF,IAAAA,cAAA,MAAAkG,GAAA,GAASoqB,EAAc,CAAE9uB,UAAU,kCAC/BxB,IAAAA,cAAC+wB,GAAAA,EAA+B,CAACvvB,UAAU,0BAC3CxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,UAAU,sCAC3BxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gCAOxChH,IAAAA,cAAA,MAAAkG,GAAA,GAASkqB,EAAY,CAAE5uB,UAAU,2BAC7BxB,IAAAA,cAAA,WACKmwB,EAAK1qB,OACFzF,IAAAA,cAAA,OAAKwB,UAAU,yBACXxB,IAAAA,cAAC2T,GAAAA,EAAW,CAAC1Q,MAAI,EAACzB,UAAU,gCACvB2uB,EAAK1qB,OAEVzF,IAAAA,cAACgxB,GAAAA,EAAU,CACP1nB,QAAS4mB,EAAU5mB,QACnBjI,KACIrB,IAAAA,cAACixB,GAAAA,EAA0B,CACvBznB,KAAK,8CACL1b,IAAI,iBAGZ0T,UAAU,uBACVwB,KAAK,KACLE,MAAM,cACN2H,QAAQ,cAInBslB,EAAK/oB,SAAWpH,IAAAA,cAAC2T,GAAAA,EAAW,CAACnS,UAAU,0BAA0B2uB,EAAK/oB,UAE3EpH,IAAAA,cAACoe,GAAAA,GAAM,CACH9U,QAAS,SAAA1iB,GACLypC,GAAa,SAAC9jC,GAAY,OAAKA,EAAO,CAAC,IACvC0jC,EAAa3mB,QAAQ1iB,EACzB,EACAsc,MAAM,cACN1B,UAAU,wBACVqJ,QAAQ,YACR7H,KAAK,KACL0H,MAAOslB,EAAahwB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SAAYhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAIxG,ECLA,SA9Dc,CACV,CACII,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iDACrCkqB,OAAQ,EACRC,iBAAkB,EAClBp0B,OAAQ,sBACR0I,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,+BAEvC,CACII,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iCACrCkqB,OAAQ,EACRE,UAAW,eACXD,iBAAkB,EAClBp0B,OAAQ,8BACR0I,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2BAEvC,CACII,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mCACrCkqB,OAAQ,EACRC,iBAAkB,EAClBp0B,OAAQ,gBACR0I,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2BAEvC,CACII,QAAS,GACTiqB,eAAe,EACfH,OAAQ,EACRC,iBAAkB,EAClBG,OAAQ,CACJC,UAAW,CACPC,QAAS,QAEbC,MAAO,CACHD,QAAS,SAGjBz0B,OAAQ,wBACR0I,MAAO,eAEX,CACI2B,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qDACrCmqB,iBAAkB,EAClBD,OAAQ,EACRn0B,OAAQ,wBACR0I,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,8BACnCoqB,UAAW,UAEf,CACIhqB,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,0DACrC0qB,kBAAkB,EAClBR,QAAS,EACTn0B,OAAQ,oBACR0I,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kCAEvC,CACII,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,8BACrCkqB,QAAS,EACTn0B,OAAQ,sBACR0I,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gwCClD3C,IAAM2qB,GAAiB,SAAHz5B,GAA4D,IAAtD05B,EAAU15B,EAAV05B,WAAYC,EAAa35B,EAAb25B,cACkB7vB,EAAAC,GAAjBjC,IAAAA,SAAe,GAAE,GAA7C8xB,EAAU9vB,EAAA,GAAEquB,EAAYruB,EAAA,GAY/B,OACIhC,IAAAA,cAAC+xB,GAAAA,GAAO,CACJC,YAAU,EACVC,SAbe,SAAC95B,GACpB,IAAQ6iB,EAAwB7iB,EAAxB6iB,OAAQmV,EAAgBh4B,EAAhBg4B,KACF,IADkBh4B,EAAVsP,QAElB0oB,EAAKkB,eAAgB,GAEoB,CAAChY,GAAAA,GAAO6Y,SAAU7Y,GAAAA,GAAO8Y,SAEhD1+B,SAASunB,IAAS6W,GAC5C,EAMQO,mBAAiB,EACjBC,qBAAmB,EACnBX,kBAAgB,EAChBY,aAAc,CACVhB,OAAQ,CACJG,MAAO,CACHlrC,OAAQ,EACRgsC,OAAQ,EACRf,QAAwB,IAAfM,EAAmB,OAAS,iBAIjDU,IAAKZ,EACLa,gBAAc,EACdC,MAAOC,GACPxB,iBAAkB,EAClByB,mBAAiB,EACjBtB,OAAQ,CACJjjC,QAAS,CACLwkC,WAAY,6CACZC,aAAc,uCAElBvB,UAAW,CACPwB,aAAc,UAGtBC,UAAWlB,EACXmB,iBAAkB,SAAAvtB,GAAK,OAAI1F,IAAAA,cAACkzB,GAAYhtB,GAAA,GAAKR,EAAK,CAAE2qB,aAAcA,IAAgB,GAG9F,EAEA,SAAerwB,IAAAA,KAAW2xB,wgCClB1B,SAhCwB,SAAHz5B,GAAwC,IAAlC1P,EAAI0P,EAAJ1P,KACgCwZ,EAAAC,GAApBjC,IAAAA,UAAe,GAAK,GAAhD3H,EAAU2J,EAAA,GAAE6D,EAAY7D,EAAA,GAGzBmxB,EAAiBnzB,IAAAA,aACnB,SAACozB,GAAiB,OACdC,EAAAA,EAAAA,YAAW,wCAAD3/B,OAAyClL,EAAK8qC,WAAW,IAAK,KAAI,KAAA5/B,OAAI0/B,GAAY,GAChG,CAAC5qC,IAEC+qC,EAAUvzB,IAAAA,SAAc,kBAAMmzB,EAAe,MAAM,GAAE,CAACA,IAE5D,OACInzB,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,yBAA0B/K,GAAc,uCACxDA,GAAc2H,IAAAA,cAACgG,GAAAA,EAASC,OAAM,CAACjC,OAAM,gBAAAtQ,OAAkB4P,GAAY,OACpEtD,IAAAA,cAAA,SACIwzB,UAAQ,EACRhyB,UAAU,gBACV,cAAY,4BACZ4D,OAAK,EACLF,MAAI,EACJuuB,aAAc,WAAF,OAAQ5tB,GAAa,EAAM,EACvC6tB,aAAW,EACXpuB,QAAQ,QAGRtF,IAAAA,cAAA,UAAQuF,IAAKguB,EAAS/qC,KAAK,cAC3BwX,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,6DAI5C,wuEC5BA,IAAM2sB,GAAkB,SAAHz7B,GAAkF,IAAA07B,EAAA17B,EAA5E1P,KAAAA,OAAI,IAAAorC,EAAG,aAAYA,EAAEn9B,EAAeyB,EAAfzB,gBAAiBw7B,EAAQ/5B,EAAR+5B,SACAjwB,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAAtD6zB,EAAa7xB,EAAA,GAAE8xB,EAAc9xB,EAAA,GAC+BiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAA5D+zB,EAAgB9lB,EAAA,GAAE+lB,EAAiB/lB,EAAA,GACpCgmB,EAAoBj0B,IAAAA,SACpBk0B,EAAwBl0B,IAAAA,QAAa,GAMzCm0B,EAAAlyB,GAJ4CmyB,GAA6C,mBAAoB,CAC3GC,uBAAuB,EACvBC,YAAY,EACZC,gBAAgB,IAClB,GAJKC,EAAgBL,EAAA,GAAEM,EAAiBN,EAAA,GAMpCO,EAA+B,eAATlsC,EAEtBqpC,EAAgB7xB,IAAAA,aAAkB,WACpCg0B,GAAkB,GAClBS,EAAiBhuC,GAAAA,GAAC,CAAC,EAAI+tC,GAAgB,GAAA/mC,GAAA,GAAGjF,GAAO,KACjDypC,SAAAA,GAEJ,GAAG,CAACwC,IAEEE,EAAc,WACZT,EAAsBnnB,UAC1B8kB,IACAiC,GAAe,GACnB,EAQMc,EAAanuC,GAAA,CACfouC,MAAO70B,IAAAA,cAAC80B,GAAe,CAACtsC,KAAMiO,EAAkB,GAAH/C,OAAMlL,EAAI,SAAUA,IACjEid,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBACnCI,QACIpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oFAEhC+tB,aAAc/0B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAC1CguB,sBAAuBL,GACnBD,EACE,CACIjvB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oCACnCI,QACIpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iGAEhC+tB,aAAc/0B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAC1CguB,sBArBO,WACjBd,EAAsBnnB,SAAU,EAChCinB,GAAkB,GAClBF,GAAe,EACnB,GAmBU,CAAC,GAUX,OAPA9zB,IAAAA,WAAgB,WAGZ,OAFKw0B,SAAAA,EAAmBhsC,KAAOyrC,EAAkBlnB,QAAUzb,YAAW,kBAAMwiC,GAAe,EAAK,GAAE,MAE3F,kBAAM1qB,aAAa6qB,EAAkBlnB,QAAQ,CAExD,GAAG,CAACynB,aAAgB,EAAhBA,EAAmBhsC,KAGnBwX,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACi1B,GAAAA,EAAK,CACFC,SAAUrB,EACVsB,iBAAe,EACfxzB,UAAQ,EACRyzB,eAAa,EACbC,6BAA2B,EAC3BC,YAAaX,EACbY,mBAAoBX,EAAcG,aAClCC,sBAAuBJ,EAAcI,uBAErCh1B,IAAAA,cAACi1B,GAAAA,EAAMO,OAAM,CAACX,MAAOD,EAAcC,MAAOpvB,MAAOmvB,EAAcnvB,QAC/DzF,IAAAA,cAACi1B,GAAAA,EAAMQ,KAAI,KAAEb,EAAcxtB,UAE9BstB,GAAuB10B,IAAAA,cAAC2xB,GAAc,CAACC,WAAYmC,EAAkBlC,cAAeA,IAGjG,EAEA,MC1FA,GD0Fe7xB,IAAAA,KAAW2zB,oHEd1B,SA/D8B,SAAHz7B,GASG,IAR1BkD,EAAQlD,EAARkD,SACAs6B,EAAsBx9B,EAAtBw9B,uBACAC,EAAqBz9B,EAArBy9B,sBACAC,EAAI19B,EAAJ09B,KACAC,EAAa39B,EAAb29B,cACA/jB,EAAS5Z,EAAT4Z,UACAD,EAAU3Z,EAAV2Z,WACAikB,EAAU59B,EAAV49B,WAEA,GAAIH,EAAuB,OAAO,KAElC,IAAAI,GAA0BC,EAAAA,EAAAA,qBAAlBj6B,EAAMg6B,EAANh6B,OAAQk6B,EAAKF,EAALE,MAQVC,EAFsBL,EAAgBI,EAAQl6B,EAG9C6C,EAPY,WACd,IAAQq3B,EAA8BL,EAA9BK,MAAOE,EAAuBP,EAAvBO,mBACf,OAAON,EAAgBI,EAAQE,aAAkB,EAAlBA,EAAoB9uC,KACvD,CAIe+uC,GACTC,GAAoBH,IAAet3B,EAEzC,OACIoB,IAAAA,cAAC2T,GAAAA,EAAW,CACR3Q,KAAK,KACLxB,WAAW4B,EAAAA,GAAAA,GACP,wCACA0yB,GAAc,iDACdO,GAAoB,+DAExB,cAAY,+BAEVA,GACEr2B,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAC2T,GAAAA,EAAW,CACR2iB,GAAG,OACHtzB,KAAK,KACLxB,WAAW4B,EAAAA,GAAAA,IAAMsyB,GAA0B,sCAC3CxyB,MAAM,sCAELgzB,GAELl2B,IAAAA,cAAC2T,GAAAA,EAAW,CACR2iB,GAAG,OACHtzB,KAAK,KACLxB,WAAW4B,EAAAA,GAAAA,IAAMsyB,GAA0B,sCAC3CxyB,MAAM,sCAENlD,IAAAA,cAACu2B,GAAAA,MAAK,CACF33B,OAAQA,EACRxD,SAAUA,EACVo7B,eAAgB1kB,IAAcD,EAC9B4kB,eAAa,MAOzC,mxEClDA,IAAMC,GAAc,QAIdC,IAAiBl2B,EAAAA,GAAAA,WAAS,WAC5B,IAAyFuB,EAAAC,GAAnCjC,IAAAA,SAA8B,MAAK,GAAlF42B,EAAoB50B,EAAA,GAAE60B,EAAqB70B,EAAA,GAIhDiM,EAAAhM,GAHiCjC,IAAAA,SAA+D,CAC9F82B,WAAW,EACX/7B,QAAS,OACX,GAHKg8B,EAAU9oB,EAAA,GAAE+oB,EAAY/oB,EAAA,GAIvBtM,GAAas1B,EAAAA,GAAAA,KAAbt1B,SACAf,GAAcD,EAAAA,GAAAA,KAAdC,UACAupB,GAAgBC,EAAAA,GAAAA,KAAhBD,YACRhgB,GAKIhK,EAAAA,EAAAA,KAAU+2B,EAAA/sB,EAJVnJ,UAAam2B,EAAaD,EAAbC,cAAeC,EAAWF,EAAXE,YAAaC,EAAkBH,EAAlBG,mBAAoBC,EAAgBJ,EAAhBI,iBACnDjtB,EAAYF,EAAtBpV,OAAUsV,aACA9F,EAAc4F,EAAxB/T,OAAUmO,eAAcgzB,EAAAptB,EACxB3T,GAAMgO,EAAwC+yB,EAAxC/yB,yCAA0CgzB,EAA6BD,EAA7BC,8BAEpDppB,GAqBIvG,EAAAA,GAAAA,KApBA4vB,EAAKrpB,EAALqpB,MACAC,EAAUtpB,EAAVspB,WACAj9B,EAAa2T,EAAb3T,cACAW,EAAQgT,EAARhT,SACAs6B,EAAsBtnB,EAAtBsnB,uBACA3xB,EAAcqK,EAAdrK,eACA8xB,EAAaznB,EAAbynB,cACA8B,EAAmBvpB,EAAnBupB,oBACAC,EAAQxpB,EAARwpB,SACAC,EAAmBzpB,EAAnBypB,oBACA/lB,EAAS1D,EAAT0D,UACAgmB,EAAa1pB,EAAb0pB,cACAjmB,EAAUzD,EAAVyD,WACAkmB,EAAa3pB,EAAb2pB,cACAC,EAAa5pB,EAAb4pB,cACAC,EAAY7pB,EAAZ6pB,aACAxsB,EAAQ2C,EAAR3C,SACA7H,EAAMwK,EAANxK,OACAs0B,EAAc9pB,EAAd8pB,eACAhqB,EAAWE,EAAXF,YAG8GoB,EAAArN,GAAxDjC,IAAAA,SAAe+D,GAAkB2xB,GAAuB,GAA3GyC,EAAsB7oB,EAAA,GAAE8oB,EAAuB9oB,EAAA,GACgBsI,EAAA3V,GAAnBjC,IAAAA,SAAe,KAAI,GAA/Dq4B,EAAkBzgB,EAAA,GAAE0gB,EAAoB1gB,EAAA,GACzC2gB,GAA8BnhB,EAAAA,GAAAA,eAC9BigB,KACIC,EAAiBjnB,MACf,SAAAnY,GAAA,IAAG6hB,EAAa7hB,EAAb6hB,cAAevxB,EAAI0P,EAAJ1P,KAAI,OAAOgwC,EAAAA,EAAAA,uBAAsBhwC,IAASuxB,EAActd,aAAemH,CAAM,KAGrG60B,GAAoBC,EAAAA,GAAAA,KACpBC,EAAgB34B,IAAAA,SAClB,kBAAO03B,EAAWnxC,OAASmxC,EAAWxlC,KAAI,SAAAsV,GAAI,OAAIA,EAAKngB,KAAK,IAAI,EAAE,GAClE,CAACqwC,IAGCkB,EAAc,aAAaxnB,KAAK3W,EAAciZ,eAC9CmlB,GAAgC,CAClCz9B,SAAAA,EACAs6B,uBAAAA,EACAG,cAAAA,EACA/jB,UAAAA,EACAD,WAAAA,GAEE8jB,GACF9jB,GACAimB,GACAhmB,GACA8mB,GACAhB,GACC7zB,IAAmB2xB,EAClBtmB,IAAiB0pB,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GACvEa,GAAuBh1B,EACvBozB,EAAc9mB,MACV,SAAAzS,GAAA,IAAGmc,EAAanc,EAAbmc,cAAevxB,EAAIoV,EAAJpV,KAAI,OAClBgwC,EAAAA,EAAAA,uBAAsBhwC,IAASuxB,EAActd,aAAemH,IAAWmW,EAAcif,OAAO,SAEpGxyC,EACAyyC,KAAmBF,WAAAA,GAAsBhf,kBACzCmf,EAAAA,EAAAA,oBAAmBH,GAAqBhf,iBACxCrQ,EAAAA,EAAAA,QAAOqvB,GAAqBhf,iBAC5Bof,EAAAA,EAAAA,eAAcJ,GAAqBhf,gBAEnCqf,GACDH,IAAoBF,KAAwBM,EAAAA,EAAAA,oBAAmBN,GAAqBhf,gBAAmB,KACtGuf,IAAaC,EAAAA,EAAAA,mBACbC,GAAiBn1B,GAAyB,CAAEE,eAAAA,EAAgBC,yCAAAA,IAC5Di1B,IAAyBR,KAAoBF,cAAoB,EAApBA,GAAsBW,mBAEnEC,GAAgB,SAAClyB,EAAemyB,GAClC,IAAMC,GAAYC,EAAAA,GAAAA,IAAqBr/B,GAAe0Q,WAAU,SAAA4uB,GAAG,OAAIA,EAAIt/B,gBAAkBm/B,CAAU,IAEvG,OADqBC,EAAY,EAAIpyB,EAAQoyB,GACvB,OAAS,UACnC,EAEMG,GAAgC,SAAC//B,EAAyCuE,GAE5E,OADAy7B,EAAAA,GAAAA,IAAiCx/B,EAAemJ,EAAQpF,GACjDoC,oWAASna,CAAC,CACb4a,KACIrB,IAAAA,cAACk6B,GAAAA,EAA8B,CAC3B34B,SAAS,KACTC,UAAU,+BACV1T,IAAI,qBAGTmM,GAEX,EA2DA,OAzDA+F,IAAAA,WAAgB,WACR23B,GAAqBd,EAAsB,KACnD,GAAG,CAACc,IAEJ33B,IAAAA,WAAgB,WAhHC,WAkHTy3B,GAA0BkB,EAAcpyC,OAAS,GAAKoyC,EAAcllC,SAASijC,KAE7EjrB,EAAS,CAAE1O,OAAQ,CAAE1V,MAAOqvC,GAAa7qC,KAnHlC,UAsHf,GAAG,CAAC4rC,EAAOkB,IAEX34B,IAAAA,WAAgB,WAIZs4B,GAFMC,GAA+B7C,GAChC6C,IAAgC7C,GAA0B3xB,EAC5B,IAAM,GAEzCq0B,IAAwBr0B,GAAiB2xB,EAE7C,GAAG,CAAC3xB,EAAgB2xB,IAEpB11B,IAAAA,WAAgB,WAEZ,GAAI+3B,GAAiB3oB,GAAe7oB,SAAWQ,OAAOqF,KAAK2rC,GAAexxC,OAAQ,CAC9E,IAAIwU,EAAU,GAER+7B,EAAY/vC,OAAOuC,OAAOyuC,GAAenqB,MAAK,SAAAgoB,GAChD,SAAIA,EAAKkB,YAAalB,EAAK76B,WACvBA,EAAU66B,EAAK76B,SAAW,IACnB,EAGf,IACAi8B,EAAa,CAAEF,UAAAA,EAAW/7B,QAASA,GAAW,IAClD,CACJ,GAAG,CAACg9B,IAEJ/3B,IAAAA,WAAgB,WACR+2B,EAAWD,WAAaC,EAAWh8B,UACnCovB,EAAY,CACRpvB,QAASg8B,EAAWh8B,QACpBigB,OAAQ,OACR2P,gBAAgB,EAChB+E,gBAAgB,EAChBlX,MAAO,CACHmX,aAActlB,EAAe,OAAS,OACtCjE,MAAO,yCAKf4wB,EAAa,CAAEF,WAAW,EAAO/7B,QAAS,OAElD,GAAG,CAACg8B,EAAWD,YAGX92B,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACm6B,GAAAA,EAAa,CACVC,IAAKjC,EACLkC,QAAShC,EACT/sB,WAAW,QACXxd,IAAI,kBACJwsC,eAAa,EACbC,cAAY,GAEZv6B,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,2BAA4B,CACxC,qCAAsCiH,KAGzC+E,GAAeld,KAAI,SAAC0nC,EAAYnyB,GAC7B,IAAMmuB,GAAOmC,aAAa,EAAbA,EAAgB6B,KAAe,CAAC,EACvCY,EAA6C,IAA1BprB,GAAe7oB,OAClC8R,EAAau+B,IAAyBnvB,EACtCgzB,GACD5C,GAAuBjC,EAAKkB,aAAgBkB,EAAcrjC,QAAU6kC,GAEzE,OACIx5B,IAAAA,cAACA,IAAAA,SAAc,CAAClS,IAAK8rC,GACjB55B,IAAAA,cAACoe,GAAAA,GAAM,CACHlb,MAAOy2B,GAAclyB,EAAOmyB,GAC5B52B,KAAK,KACL0H,OAAOgwB,EAAAA,EAAAA,wBAAuBd,EAAY,CACtCe,UAAW/B,EACXgC,gBAAgB,IAEpBC,WAAS,EACTr5B,WAAW4B,EAAAA,GAAAA,GACP,kBACA/K,GAAc,2BACdmiC,GAAoB,2BAExBM,UAAWziC,EACX0iC,UAAQ,EACRC,SAAUP,IAAgBpiC,EAC1BiR,QAAS,WACDusB,GAAiB4C,IAAsBwC,EAAAA,mBAAmBC,QAC1D1D,GAA8B,IAE9BX,EAAsBpvB,GACtBwwB,EAAa2B,EAAYj4B,EAAUq4B,IAE3C,IAEE3hC,GACE2H,IAAAA,cAACm7B,GAAqBj1B,GAAA,GACd2yB,GAA6B,CACjClD,sBAAuBA,GACvBC,KAAMA,EACNE,aAAcruB,MAMtC,MAGRzH,IAAAA,cAACm6B,GAAAA,EAAa,CACVC,GAAIjC,EACJkC,QAAShC,EACT/sB,WAAW,QACXxd,IAAI,cACJwsC,eAAa,EACbC,cAAY,GAEZv6B,IAAAA,cAAA,OAAKwB,UAAU,4BACXxB,IAAAA,cAACoe,GAAAA,GAAM,CACHlb,MAAM,cACNF,KAAK,KACL0H,MACI+uB,GAAqB,GAAA/lC,OACZ4lC,GAAW8B,OAAK,GAAA1nC,OAChB4lC,GAAW8B,MAAK,KAAA1nC,OAAI0lC,GAAa,KAAA1lC,OAAI0H,GAElDy/B,WAAS,EACTE,UAAQ,EACRD,UAAW/B,cAAoB,EAApBA,GAAsBW,kBACjCl4B,UAAU,0CACVw5B,UAAW/B,GACX3vB,QAAS,WAAF,OAAQ8tB,EAAY2B,cAAoB,EAApBA,GAAsBhf,cAAcvb,YAAY,MAMnG,IAEA,MC3RA,GD2RA,uHEjQA,SAxBmC,WAAM,IAAAtG,EAAAmjC,EAC7BljC,GAASmjC,EAAAA,GAAAA,IAAgB,GAAzBnjC,KACFojC,EAA0D,QAAlCrjC,EAAIC,aAAI,EAAJA,EAAMojC,gCAAwB,IAAArjC,EAAAA,EAAiB,GACzEnD,GAAWoL,EAAAA,EAAAA,KAAXpL,OACAymC,EAAsCzmC,EAAtCymC,iBAAkBC,EAAoB1mC,EAApB0mC,gBAGpBC,GADqE,QAAxDL,EAAG5oC,KAAKQ,MAAM0oC,KAAAA,IAAY,uBAAyB,aAAK,IAAAN,OAAA,EAArDA,EAAuDO,aACxCJ,aAAgB,EAAhBA,EAAkBK,cAUvD,MAAO,CACHC,wBARA9kC,MAAMkV,QAAQqvB,IAA6BG,GAAeH,EAAyB9nC,SAASioC,GAS5FK,qBANA/kC,MAAMkV,QAAQqvB,IACdE,GACAF,EAAyB9nC,SAASgoC,GAKlCO,yBAA0BT,EAAyBh1C,OAE3D,EC0BA,SA3C6D,SAAH2R,GAA+C,IAAzC+jC,EAAU/jC,EAAV+jC,WAAYC,EAAsBhkC,EAAtBgkC,uBA+BxEt+B,EA9BmB,WACf,OAAQq+B,GACJ,KAAK73B,GACD,MAAO,CACHqB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,yBACnC4J,KAAMsrB,GAA0Bl8B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAEpE,KAAK5C,GACD,MAAO,CACHqB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,0BACnC4J,KAAM5Q,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,uDAE1C,KAAK5C,GACD,MAAO,CACHqB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kCACnC4J,KACI5Q,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4GAGxC,KAAK5C,GACD,MAAO,CACHqB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,yBACnC4J,KACI5Q,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gIAGxC,QACI,MAAO,CAAC,EAEpB,CACwBm1B,IAAgB,CAAC,EAAjC12B,EAAK7H,EAAL6H,MAAOmL,EAAIhT,EAAJgT,KAEf,OACI5Q,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,UAAU,sCAC1BiE,GAELzF,IAAAA,cAAC+C,GAAAA,EAAI,KAAE6N,GAGnB,iuCC+GA,MC/JA,IDW0BnQ,EAAAA,GAAAA,WAAS,WAC/B,IAA4CgC,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAArCqF,EAAOtF,EAAA,GAAEuF,EAASvF,EAAA,GACzB0H,GAA+BhK,EAAAA,EAAAA,KAAvB/J,EAAM+T,EAAN/T,OAAQrB,EAAMoV,EAANpV,OAAQyB,EAAE2T,EAAF3T,GAChBgO,EAA4EhO,EAA5EgO,yCAA0CgzB,EAAkChhC,EAAlCghC,8BAC1C4E,EAA2BrnC,EAA3BqnC,WAAYC,EAAetnC,EAAfsnC,WACZ93B,EAAuCnO,EAAvCmO,eAAgB+3B,EAAuBlmC,EAAvBkmC,mBACxBluB,GAA8DvG,EAAAA,GAAAA,KAAtD00B,EAAiBnuB,EAAjBmuB,kBAAoCC,EAAapuB,EAA9BquB,gBACrBzyB,GAAUC,EAAAA,GAAAA,cACR6xB,EAA4BY,KAA5BZ,wBAER5jC,EAAgCqM,GAAkB,CAAC,EAA3CG,EAAIxM,EAAJwM,KAAM3J,EAAO7C,EAAP6C,QAASvS,EAAI0P,EAAJ1P,KACjBm0C,EAA0Bj4B,IAASN,GACnCw4B,EAA4Bl4B,IAASN,IAAiD,QAAT5b,EAC7Eq0C,EAAmCn4B,IAASN,GAC5C04B,KACAlrC,EAAAA,EAAAA,eAAc2S,IAAmBC,IACnCH,GAAyB,CAAEE,eAAAA,EAAgBC,yCAAAA,IAEzC5C,EAAU,WAEZ,GADAoG,GAAU,GACkB,QAAxBzD,EAAe/b,KAAgB,CAC/B,GAAIm0C,EACA,OAEJJ,IACAC,GACJ,CACJ,EAgGA,OAXA35B,EAAAA,EAAAA,YAAU,WACNmF,EAAU80B,EAEd,GAAG,CAACA,KAEJj6B,EAAAA,EAAAA,YAAU,YACDkF,GAAWrD,GAAM43B,IACjBv0B,GAASyvB,GAA8B,EAEhD,GAAG,CAACzvB,IAEC+0B,EAGD98B,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbjI,UAAU,sBACVkI,OAAQ3B,EACRnG,QAASA,EACTgI,YAAY,EACZD,SAAS,QAET3J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACC,eAAa,EAACC,mBAAiB,GAC/C1G,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+8B,GAAuB,CAACd,WA9BjCU,EAAgCv4B,GAChCw4B,EAAkCx4B,GAClCy4B,EAAyCz4B,GACzCI,EAAiDJ,GAC9C,KA0B0D83B,uBAAwBnhC,KAEjFiF,IAAAA,cAACuG,GAAAA,EAAYU,OAAMf,GAAA,CACf1E,UAAU,8BACV0F,UAAU,WACV81B,mBAAmB,SA9G3BL,EACO,CACHx1B,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBACrCK,SAAU,WAEN,GADAi1B,IACKD,EAmBDz6B,SAlBA,GAAIw6B,GAAcN,EAAyB,CACvC,IAAMmB,EAA0B,eAAHvpC,QAAkBwpC,EAAAA,EAAAA,gBAAc,eAEvDC,GADuB,uBAAHzpC,QAA0BwpC,EAAAA,EAAAA,gBAAc,eAGxDD,GAGJG,EAAmBn5B,OAAOiG,SAASmzB,OACnCC,EAAa,IAAIC,gBAAgBH,GACjCI,EACFv5B,OAAOnR,eAAeI,QAAQ,YAAcoqC,EAAW7oC,IAAI,WAE/DwP,OAAOiG,SAASuzB,KAAO,GAAH/pC,OAAMypC,EAAW,mDAAAzpC,OAAkD8pC,EAAmB,YAAH9pC,OAAe8pC,GAAqB,GAC/I,KAAO,KAAAE,EACH1zB,SAAa,QAAN0zB,EAAP1zB,EAAS3e,YAAI,IAAAqyC,GAAbA,EAAAh1C,KAAAshB,EAAgBoyB,EAAaj7B,EAAAA,OAAOw8B,gBAAkBx8B,EAAAA,OAAOy8B,gBACjE,CAIR,IAIRhB,EACO,CACHz1B,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBACrCK,SAAU,WACNi1B,KACAuB,EAAAA,EAAAA,mBACJ,GAEJC,gBAAiB,CACb12B,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UACrCK,SAAU,WACNi1B,KACAyB,EAAAA,EAAAA,kBAAgB,GAAOC,EAAAA,EAAAA,eAC3B,IAIRnB,EACO,CACH11B,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBACrCK,SAAU,WACNi1B,IACAtyB,EAAQ3e,KAAK8V,EAAAA,OAAO88B,kBACxB,IAIRz5B,EACO,CACH2C,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACrCK,SAAU,WACNi1B,IACA9E,GAA8B,GAC9B51B,GACJ,SARZ,MAiCiC,IAuBzC,uGE9HA,SA3BsB,SAAH1J,GAA2D,IAAAgmC,EAArDC,EAAYjmC,EAAZimC,aACrB/vB,GAAyFvG,EAAAA,GAAAA,KAAjFpN,EAAa2T,EAAb3T,cAAes9B,EAAa3pB,EAAb2pB,cAAexpC,EAAiB6f,EAAjB7f,kBAAmB2pC,EAAc9pB,EAAd8pB,eAAgBhqB,EAAWE,EAAXF,YACnEkB,GAAiB0pB,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GAE7Et6B,EAIsC,QAJtCsgC,EAIInG,aAAa,EAAbA,EAAgB3oB,EAAe,WAAG,IAAA8uB,EAAAA,EAAI,CAAC,EAH5BE,EAAkBxgC,EAA7Bk5B,UACauH,EAAoBzgC,EAAjC0gC,YACSC,EAAsB3gC,EAA/B7C,QAiBJ,OALcojC,EACTjsC,KAAI,SAAAssC,GAAK,OAVa,SAACA,GAAwB,IAAAC,EAAAn6B,EAAAo6B,EAC1CC,GAAuBpwC,SAA0B,QAATkwC,EAAjBlwC,EAAoBiwC,UAAM,IAAAC,OAAT,EAAjBA,EAA4Bl4C,QAAS,EAKlE,MAAO,CAAEq4C,wBAJwBR,GAAsBC,IAAyBG,GAAUG,EAIxD5jC,QAFuC,QAA5DuJ,EAAGi6B,QAAAA,EAA0BhwC,SAA0B,QAATmwC,EAAjBnwC,EAAoBiwC,UAAM,IAAAE,OAAT,EAAjBA,EAA6B,UAAE,IAAAp6B,EAAAA,EAAI,GAGjF,CAGkBu6B,CAAmBL,EAAM,IACtCnuB,MAAK,SAAAve,GAAM,OAAIA,EAAO8sC,uBAAuB,KAGlC,CAAEA,yBAAyB,EAAO7jC,QAAS,GAC/D,ECGA,MCjCA,IDG2B0F,EAAAA,GAAAA,WACvB,SAAAvI,GAA8G,IAA3GimC,EAAYjmC,EAAZimC,aAAcW,EAAoB5mC,EAApB4mC,qBAECz0B,GACVlK,EAAAA,EAAAA,KADApL,OAAUsV,aAEN8f,GAAgBC,EAAAA,GAAAA,KAAhBD,YACR4U,EAAwDC,GAAc,CAClEb,aAAAA,IAD6BrH,EAASiI,EAAlCH,wBAAoC7jC,EAAOgkC,EAAPhkC,QAoB5C,OAhBAiF,IAAAA,WAAgB,WACR82B,GAAagI,GACb3U,EAAY,CACRpvB,QAAAA,EACAigB,OAAQ,OACR2P,gBAAgB,EAChB+E,gBAAgB,EAChBlX,MAAO,CACHmX,aAActlB,EAAe,OAAS,OACtCjE,MAAO,wCAKvB,GAAG,CAAC0wB,EAAWgI,IAER9+B,IAAAA,cAACi/B,GAAAA,EAAkB,KAC9B,wLEFJ,SAnB6B,SAAH/mC,GAAA,IAAMuC,EAAavC,EAAbuC,cAAeykC,EAAIhnC,EAAJgnC,KAAMt9B,EAAO1J,EAAP0J,QAAO,OACxD5B,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CAACC,SAAUw1B,EAAMt9B,QAASA,EAAS+H,SAAS,OAAOC,YAAY,GAC5E5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,uBAC3BxB,IAAAA,cAACmZ,GAAAA,EAAQgmB,GAAE,CAAC39B,UAAU,qBAAqB09B,GAC3Cl/B,IAAAA,cAAC+C,GAAAA,EAAI,CAACuzB,GAAG,QAAO8I,EAAAA,GAAAA,IAAkB,CAAEF,KAAAA,EAAMzkC,cAAAA,MAE9CuF,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACrCK,SAAUzF,GAEdJ,UAAU,wBAGH,mFChBjB69B,IAA+BC,EAAAA,EAAAA,iBACjC,kBACIC,EAAAA,EAAAA,eACI,kBACI,uJAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARNH,GAW/BI,IAA8BJ,EAAAA,EAAAA,iBAChC,kBACIC,EAAAA,EAAAA,eACI,kBACI,qJAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARPH,GAW9BK,IAA2BL,EAAAA,EAAAA,iBAC7B,kBACIC,EAAAA,EAAAA,eACI,kBACI,+IAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARVH,GAW3BM,IAAyBN,EAAAA,EAAAA,iBAC3B,kBACIC,EAAAA,EAAAA,eACI,kBACI,2IAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARZH,GAWzBO,IAA2BP,EAAAA,EAAAA,iBAC7B,kBACIC,EAAAA,EAAAA,eACI,kBACI,iJAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARVH,GAW3BQ,IAA8BR,EAAAA,EAAAA,iBAChC,kBACIC,EAAAA,EAAAA,eACI,kBACI,uJAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARPH,GAW9BS,IAA+BT,EAAAA,EAAAA,iBACjC,kBACIC,EAAAA,EAAAA,eACI,kBACI,2JAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARNH,GAW/BU,IAAiCV,EAAAA,EAAAA,iBACnC,kBACIC,EAAAA,EAAAA,eACI,kBACI,6JAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARJH,GAWjCW,IAA0BX,EAAAA,EAAAA,iBAC5B,kBACIC,EAAAA,EAAAA,eACI,kBACI,+IAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARXH,GAW1BY,IAA4BZ,EAAAA,EAAAA,iBAC9B,kBACIC,EAAAA,EAAAA,eACI,kBACI,mJAEC,GACR,IACL,kBAAMv/B,IAAAA,cAACw/B,GAAAA,QAAO,CAACC,eAAe,GAAS,GARTH,GA6DlC,SAlDyB,SAAHpnC,GAMhB,IACEioC,EANJ1lC,EAAavC,EAAbuC,cACA2lC,EAAWloC,EAAXkoC,YAMA,OAAQ3lC,GACJ,KAAK4lC,GAAAA,GAAcC,aACfH,EAAsBngC,IAAAA,cAACq/B,GAA4B,CAACe,YAAaA,IACjE,MACJ,KAAKC,GAAAA,GAAc9tB,UACf4tB,EAAsBngC,IAAAA,cAAC6/B,GAAwB,CAACO,YAAaA,IAC7D,MACJ,KAAKC,GAAAA,GAAcE,YACfJ,EAAsBngC,IAAAA,cAAC0/B,GAA2B,CAACU,YAAaA,IAChE,MACJ,KAAKC,GAAAA,GAAcG,SACfL,EAAsBngC,IAAAA,cAAC2/B,GAAwB,CAACS,YAAaA,IAC7D,MACJ,KAAKC,GAAAA,GAAc1tB,OACfwtB,EAAsBngC,IAAAA,cAAC4/B,GAAsB,CAACQ,YAAaA,IAC3D,MACJ,KAAKC,GAAAA,GAAcI,aACfN,EAAsBngC,IAAAA,cAAC8/B,GAA2B,CAACM,YAAaA,IAChE,MACJ,KAAKC,GAAAA,GAAcK,eACfP,EAAsBngC,IAAAA,cAAC+/B,GAA4B,CAACK,YAAaA,IACjE,MACJ,KAAKC,GAAAA,GAAcM,gBACfR,EAAsBngC,IAAAA,cAACggC,GAA8B,CAACI,YAAaA,IACnE,MACJ,KAAKC,GAAAA,GAAcO,SACfT,EAAsBngC,IAAAA,cAACigC,GAAuB,CAACG,YAAaA,IAC5D,MACJ,KAAKC,GAAAA,GAAcQ,WACfV,EAAsBngC,IAAAA,cAACkgC,GAAyB,CAACE,YAAaA,IAC9D,MACJ,QACID,EACIngC,IAAAA,cAAC+C,GAAAA,EAAI,CAACuzB,GAAG,KACLt2B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4BAK5C,OAAOhH,IAAAA,cAACA,IAAAA,SAAc,KAAEmgC,EAC5B,yEChHA,SAxCqB,SAAHjoC,GAAA,IACd4oC,EAAa5oC,EAAb4oC,cACAC,EAAY7oC,EAAZ6oC,aACAX,EAAWloC,EAAXkoC,YACAY,EAAsB9oC,EAAtB8oC,uBACAC,EAAgC/oC,EAAhC+oC,iCAAgCC,EAAAhpC,EAChCipC,4BAAAA,OAA2B,IAAAD,GAAOA,EAClCE,EAAiBlpC,EAAjBkpC,kBACAC,EAASnpC,EAATmpC,UAAS,OAETrhC,IAAAA,cAACA,IAAAA,SAAc,MACTihC,GACEjhC,IAAAA,cAAA,OAAKwB,UAAU,eACVs/B,EAAc5uC,KAAI,SAAA0L,GAAA,IAAG0jC,EAAS1jC,EAAT0jC,UAAWhiC,EAAE1B,EAAF0B,GAAE,OAC/BU,IAAAA,cAACuhC,GAAAA,EAAKC,WAAU,CACZ1zC,IAAKwR,EACLyhC,aAAc,WAAF,OAAQA,EAAazhC,EAAG,EACpCuM,SAAUvM,IAAO0hC,GAEjBhhC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMs+B,GACH,KAI9BthC,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,8BAA+B,CAC3C,4CAA6C+9B,IAEjDrzC,IAAKkzC,GAELhhC,IAAAA,cAACyhC,GAAgB,CAAChnC,cAAeumC,EAAwBZ,YAAaA,IACtEpgC,IAAAA,cAAC0hC,GAAAA,EAAY,CACTjnC,cAAeumC,EACfI,kBAAmBA,EACnBC,UAAWA,KAGN,uiCCjCrB,IAAMM,GAAc,SAAHzpC,GAA6E,IAAvEwR,EAAMxR,EAANwR,OAAQxJ,EAAQhI,EAARgI,SAC3B,OAAKwJ,EAEEk4B,KAAAA,aACH5hC,IAAAA,cAAA,OAAKwB,UAAU,eAAe,aAAW,QACrCxB,IAAAA,cAAA,OACIwB,UAAU,0BACV8H,QAAS,SAAA1iB,GAAC,OAAIA,EAAEi7C,iBAAiB,EACjC/W,UAAW,SAAAlkC,GAAC,OAAIA,EAAEi7C,iBAAiB,GAElC3hC,IAGTwwB,SAASoR,MAZO,IAcxB,EAEMC,GAAwB,SAAHnkC,GAUG,IAT1BkjC,EAAaljC,EAAbkjC,cACArqC,EAAemH,EAAfnH,gBACAsR,EAAOnK,EAAPmK,QACAg5B,EAAYnjC,EAAZmjC,aACAn/B,EAAOhE,EAAPgE,QACAw+B,EAAWxiC,EAAXwiC,YACAY,EAAsBpjC,EAAtBojC,uBACAC,EAAgCrjC,EAAhCqjC,iCAAgCe,EAAApkC,EAChCujC,4BAAAA,OAA2B,IAAAa,GAAOA,EAE4ChgC,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAAvEiiC,EAAsBjgC,EAAA,GAAEkgC,EAAsBlgC,EAAA,GAC/CmgC,EAAYniC,IAAAA,OAAgC,MAE5CqhC,GAAYe,EAAAA,GAAAA,IAAuBpB,EAAwBvqC,GAE3D2qC,EAAoB,SAACx6C,IACvB4jC,EAAAA,EAAAA,0BAAwB,kBAAM0X,GAAwBD,EAAuB,GAAEr7C,EACnF,EAEMy7C,EAAsB,CACxBvB,cAAAA,EACAC,aAAAA,EACAX,YAAAA,EACAY,uBAAAA,EACAC,iCAAAA,EACAE,4BAAAA,EACAC,kBAAAA,EACAC,UAAAA,GAOJ,OAJArhC,IAAAA,WAAgB,WACRmiC,EAAUp1B,UAASk1B,EAAyBE,EAAUp1B,QAAQu1B,YAAcH,EAAUp1B,QAAQoJ,QACtG,GAAG,CAAC8rB,IAGAjiC,IAAAA,cAACA,IAAAA,SAAc,KACVmhC,EACGnhC,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CAACC,OAAQ3B,EAASnG,QAASA,EAAS+H,SAAS,OAAOC,YAAY,GAC7E5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,2BAC3BxB,IAAAA,cAACmZ,GAAAA,EAAQgmB,GAAE,CAAC39B,UAAU,gBACjBy/B,EACGD,EAEAhhC,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAGpChH,IAAAA,cAACuiC,GAAiBF,IAEtBriC,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACrCK,SAAUzF,GAEdJ,UAAU,oBAKtBxB,IAAAA,cAAA,OAAKwB,UAAU,qCACXxB,IAAAA,cAACuiC,GAAiBF,IAG1BriC,IAAAA,cAAC2hC,GAAW,CAACj4B,OAAQu4B,GACjBjiC,IAAAA,cAACwiC,GAAAA,YAAW,CACRhhC,UAAU,wBACVihC,YAAY,kBACZC,OAAK,EACLC,WAAS,EACTC,qBAAmB,EACnBr9B,IAAK87B,EACLwB,aAAczB,EACdh8B,OAAO,EACP09B,qBAAqB,KAKzC,EAEA,SAAe9iC,IAAAA,KAAW+hC,23CChG1B,IAAMgB,IAAQtiC,EAAAA,GAAAA,WACV,SAAAvI,GAMc,IAAA8qC,EAAAC,EALVC,EAAShrC,EAATgrC,UACAC,EAAkBjrC,EAAlBirC,mBACAlC,EAAgC/oC,EAAhC+oC,iCAAgCmC,EAAAlrC,EAChCmrC,oBAAAA,OAAmB,IAAAD,GAAOA,EAAAlC,EAAAhpC,EAC1BipC,4BAAAA,OAA2B,IAAAD,GAAOA,EAElC/2B,GAGIhK,EAAAA,EAAAA,KAFM1J,EAAe0T,EAArB3T,GAAMC,gBACIkb,EAAgBxH,EAA1B/T,OAAUub,iBAENlX,GAAkBoN,EAAAA,GAAAA,KAAlBpN,cACF6oC,EAA4F,QAAzEN,EAAqE,QAArEC,EAAGM,GAAAA,GAAoBlzB,MAAK,SAAA7I,GAAI,OAAIA,EAAI,IAAK/T,SAASgH,EAAc,WAAC,IAAAwoC,OAAA,EAAlEA,EAAoE3jC,UAAE,IAAA0jC,EAAAA,EAAI,GAC9F90B,EAAgBiE,KAAhBjE,YACFs1B,EAAQ,CACVnD,GAAAA,GAAc9tB,UACd8tB,GAAAA,GAAcC,aACdD,GAAAA,GAAcE,YACdF,GAAAA,GAAcG,SACdH,GAAAA,GAAc1tB,OACd0tB,GAAAA,GAAcI,aACdJ,GAAAA,GAAcK,eACdL,GAAAA,GAAcM,gBACdN,GAAAA,GAAcO,SACdP,GAAAA,GAAcQ,YAGZ4C,EAAyBF,GAAAA,GAAoBh2C,QAAO,SAAA6iB,GAAQ,OAC9DlC,EAAYN,MAAK,SAACxM,GAAwB,OAAKA,EAAMwP,OAASR,EAAS9Q,EAAE,GAAC,IAGxEokC,EAAwB9mC,GAAI6mC,GAAwB3nB,MACtD,SAACt0B,EAAGu0B,GAAC,OAAKynB,EAAMr4B,WAAU,SAAA3D,GAAI,OAAIA,IAAShgB,EAAE8X,EAAE,IAAIkkC,EAAMr4B,WAAU,SAAA3D,GAAI,OAAIA,IAASuU,EAAEzc,EAAE,GAAC,IAGH0C,EAAAC,GAAlCjC,IAAAA,SAAemjC,GAAmB,GAAnFQ,EAAqB3hC,EAAA,GAAE4hC,EAAsB5hC,EAAA,GACyCiM,EAAAhM,GAAnCjC,IAAAA,SAAesjC,GAAoB,GAAtFtC,EAAsB/yB,EAAA,GAAE41B,EAAuB51B,EAAA,GACaqB,EAAArN,GAA1BjC,IAAAA,SAAuB,IAAG,GAA5D8jC,EAAax0B,EAAA,GAAEy0B,EAAez0B,EAAA,GAE/ByxB,EAAe/gC,IAAAA,aAAkB,SAACV,GAAU,OAAKukC,EAAwBvkC,QAAAA,EAAM,GAAG,GAAE,IAEpFsC,EAAU5B,IAAAA,aAAkB,kBAAM4jC,GAAuB,EAAM,GAAE,IAWvE,OATA5jC,IAAAA,WAAgB,WACRihC,GAAkC4C,EAAwBP,EAClE,GAAG,CAACrC,EAAkCqC,IAEtCtjC,IAAAA,WAAgB,WACZ4jC,EAAuBD,EAE3B,GAAG,CAACR,IAGAnjC,IAAAA,cAACA,IAAAA,SAAc,KACVqjC,GACGrjC,IAAAA,cAACoe,GAAAA,GAAM,CACHlb,MAAOzM,EAAkB,QAAU,QACnC4K,KAAMrB,IAAAA,cAACgkC,GAAAA,EAA0C,CAACl2C,IAAI,sBACtDwb,QAAS,YACL26B,EAAAA,GAAAA,IAAyBxpC,EAAe,mBACxCmpC,GAAuB,EAC3B,EACA/4B,QAASq4B,EAAY,YAAc,WACnCp1C,IAAK6jB,GAEJuxB,GACGljC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,sCACvBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAK5ChH,IAAAA,cAAC+hC,GAAqB,CAClBjB,cAAe4C,EACfjtC,gBAAiBA,EACjBsR,QAAS47B,EACT5C,aAAc,SAACzhC,GAAe,IAAA4kC,EAAAC,EACpBC,EAAsBV,EAAsBrzB,MAAK,SAAA7I,GAAI,OAAIA,EAAKlI,KAAOA,CAAE,KAC7E2kC,EAAAA,GAAAA,IAAsD,QAA9BC,EAACE,SAAwB,QAALD,EAAnBC,EAAmB,WAAK,IAAAD,OAAL,EAAnBA,EAA2B,UAAE,IAAAD,EAAAA,EAAI,GAAI,mBAC9DnD,EAAazhC,EACjB,EACAsC,QAASA,EACTw+B,YAAa2D,EACb/C,uBAAwBA,EACxBC,iCAAkCA,EAClCE,4BAA6BA,IAEjCnhC,IAAAA,cAACqkC,GAAoB,CACjB5pC,cAAeumC,EACf9B,KAAM4E,EACNliC,QAAS,WAAF,OAAQmiC,EAAgB,GAAG,IAIlD,IAGJ,MCvHA,GDuHA,GE/GA,IAAMO,GAA2B,SAAHpsC,GAI4B,IAHtDgI,EAAQhI,EAARgI,SACAqkC,EAAYrsC,EAAZqsC,aACAC,EAAoBtsC,EAApBssC,qBAEMC,EAA2BF,GAAgBC,EACjD,OACIxkC,IAAAA,cAAA,WACIwB,WAAW4B,EAAAA,GAAAA,GAAK,GAAI,CAChB,0BAA2BqhC,EAC3B,gBAAiBA,MAGnBA,GACEzkC,IAAAA,cAAA,OAAKwB,UAAU,uBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBAEhChH,IAAAA,cAAC+iC,GAAK,CAACG,WAAS,EAACjC,kCAAgC,KAGxD/gC,EAGb,EAEA,SAAeF,IAAAA,KAAWskC,ICN1B,MC5BA,IDMgC7jC,EAAAA,GAAAA,WAAS,WAAM,IAAAikC,EAC3Ct2B,GAAsEvG,EAAAA,GAAAA,KAA9DzM,EAAQgT,EAARhT,SAAUka,EAAgBlH,EAAhBkH,iBAAkBqvB,EAAcv2B,EAAdu2B,eAGpC,OAF2D,QAA5CD,EADkDt2B,EAAb2pB,cACpBrlB,EAAAA,eAAekyB,oBAAY,IAAAF,OAAA,EAAzCA,EAA2C5N,WAEvC,KAGlB92B,IAAAA,cAAA,OAAKwB,UAAU,8BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAE/B29B,EACG3kC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCACrDtV,IAAAA,cAACu2B,GAAAA,MAAK,CAAC33B,OAAQ+lC,EAAgBlO,eAAa,EAACr7B,SAAUA,KAG3D4E,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,IAAKpC,OAAQ,KAI9C,grCEoDA,MC9EA,IDMoBvD,EAAAA,GAAAA,WAAS,WACzB,IAAA2N,GAQIvG,EAAAA,GAAAA,KAPAkG,EAAmBK,EAAnBL,oBACA82B,EAAmBz2B,EAAnBy2B,oBACAC,EAAa12B,EAAb02B,cACAC,EAAW32B,EAAX22B,YACAC,EAAQ52B,EAAR42B,SACA1vB,EAAgBlH,EAAhBkH,iBACA7J,EAAQ2C,EAAR3C,SAG8CzJ,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GAEnBijC,GAA4BC,EAAAA,GAAAA,IAC9Bn3B,EACA+2B,EACAD,GAEEM,GAAmBC,EAAAA,GAAAA,IAAgBr3B,GAQnCs3B,EAAkB,SAACz+C,GACjB0uB,IACJkV,EAAAA,EAAAA,0BAAwB,kBAAMxiB,GAAU,EAAK,GAAEphB,EACnD,EAEM0+C,EAAmB,WAAH,OAASt9B,GAAU,EAAM,EAE/C,OAd0Bi9B,GAA6C,YAAhBF,IAA8BI,EAiBjFnlC,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKwB,UAAU,yBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CACDC,KAAK,KACLxB,WAAW4B,EAAAA,GAAAA,GAAK,sBAAuBkS,GAAoB,iCAC3DhM,QAAS+7B,EACTva,UAAWua,GAEXrlC,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kBAEhChH,IAAAA,cAACulC,GAAAA,EAAY,CAACC,UAAWR,EAAUv5B,SAzBxB,SAACg6B,GACpBh6B,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,WAAYxE,MAAO4G,OAAOw3C,MACrDz9B,GAAU,EACd,EAsByEgzB,SAAU1lB,KAE3EtV,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CAACC,OAAQ3B,EAASnG,QAAS0jC,EAAkB37B,SAAS,OAAOC,YAAY,GACtF5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,qCAC3BxB,IAAAA,cAACmZ,GAAAA,EAAQgmB,GAAE,CAAC39B,UAAU,mCAClBxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACuzB,GAAG,OACLt2B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2DAGpChH,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACrCK,SAAUi+B,GAEd9jC,UAAU,4BA/BA,IAqClC,g0CEeA,MC3FA,GDkBiB,SAAHtJ,GAaG,IAZbwtC,EAASxtC,EAATwtC,UACAC,EAAaztC,EAAbytC,cACAC,EAAM1tC,EAAN0tC,OACAC,EAAY3tC,EAAZ2tC,aACAC,EAAgB5tC,EAAhB4tC,iBACAC,EAAiB7tC,EAAjB6tC,kBACAC,EAAqB9tC,EAArB8tC,sBACAC,EAAK/tC,EAAL+tC,MACAC,EAAahuC,EAAbguC,cACAzgC,EAAKvN,EAALuN,MACA0gC,EAASjuC,EAATiuC,UACAC,EAAeluC,EAAfkuC,gBAE2DpkC,EAAAC,GAAjBjC,IAAAA,SAAe,GAAE,GAApDqmC,EAAarkC,EAAA,GAAEskC,EAAgBtkC,EAAA,GAEhCukC,EAAkBX,EAElBY,OAAiChgD,IAAlBm/C,QAAmDn/C,IAApB4/C,EAC9C3+B,EAAQ++B,EAAeb,EAAgBU,EAEvCI,EAAkB,QADXzI,EAAAA,EAAAA,eAGP0I,EAAkB,WACpB,GAAKZ,KAAoBr+B,EAAQ,GAAKw+B,EAAM1/C,QAA5C,CACA,IAAMogD,GAAYl/B,EAAQ,GAAKw+B,EAAM1/C,OACrCigD,EAAeJ,SAAAA,EAAkBO,GAAYL,EAAiBK,GAC9DZ,SAAAA,GAH0D,CAI9D,EAEMa,EAAkB,WACpB,GAAKd,KAAoBr+B,EAAQ,EAAI,GAArC,CACA,IAAMk/B,GAAYl/B,EAAQ,EAAIw+B,EAAM1/C,QAAU0/C,EAAM1/C,OACpDigD,EAAeJ,SAAAA,EAAkBO,GAAYL,EAAiBK,GAC9DX,SAAAA,GAH8C,CAIlD,EAEM1V,GAAiBC,EAAAA,GAAAA,cAAa,CAChCsW,aAAcH,EACdI,cAAeF,IAGnB,OACI5mC,IAAAA,cAACA,IAAAA,SAAc,KACVumC,GACGvmC,IAAAA,cAACumC,EAAe,CACZZ,cAAel+B,EACfs/B,YAAaL,EACbM,YAAaJ,EACbV,cAAeA,EACfC,UAAWA,EACX1gC,MAAOA,IAGfzF,IAAAA,cAAA,KAAAkG,GAAA,CACI1E,WAAW4B,EAAAA,GAAAA,GAAK,WAAYsiC,GAC5B,cAAY,eACPG,EAAevV,EAAiB,CAAC,GAErC2V,EAAM/zC,KAAI,SAAA0L,GAAA,IAAGqpC,EAASrpC,EAATqpC,UAAW3nC,EAAE1B,EAAF0B,GAAE,OACvBU,IAAAA,cAAA,MACIwB,UAAU,iBACVgX,MAAO,CAAE0uB,UAAW,cAAFxzC,OAAwB,IAAR+T,GAAeg/B,EAAS,GAAK,GAAE,OACjE34C,IAAKwR,GAEJ2nC,EACA,KAKzB,EE5CA,SA5C2B,SAAH/uC,GAAwC,IAAlCivC,EAAMjvC,EAANivC,OAC1B,OACInnC,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,uCAC1B2lC,EACGnnC,IAAAA,cAAA,OAAKwB,UAAU,mBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,GACNjD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qCAIpChH,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,OAAKwB,UAAU,mBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,GACNjD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oCAGpChH,IAAAA,cAAA,OAAKwB,UAAU,mBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,GACNjD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oCAGpChH,IAAAA,cAAA,OAAKwB,UAAU,mBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,GACNjD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sCAOxD,ymCCvCA,IAAMogC,GAAgB,CAClB,CACIv7C,KAAMmU,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAEtC,CACInb,KAAMmU,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAEtC,CACInb,KAAMmU,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBA4Q1C,UAzQqBvG,EAAAA,GAAAA,WACjB,SAAAvI,GAQM,IAPFmvC,EAAsBnvC,EAAtBmvC,uBACAF,EAAMjvC,EAANivC,OACAvlC,EAAO1J,EAAP0J,QAMAwM,GAAwFvG,EAAAA,GAAAA,KAAhFy/B,EAASl5B,EAATk5B,UAAW77B,EAAQ2C,EAAR3C,SAAUld,EAAiB6f,EAAjB7f,kBAAmBgsB,EAASnM,EAATmM,UAAWgtB,EAAwBn5B,EAAxBm5B,yBACdvlC,EAAAC,GAAjBjC,IAAAA,SAAe,GAAE,GAAtCwnC,EAAMxlC,EAAA,GAAEylC,EAASzlC,EAAA,GAC6CiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAA9D0nC,EAAiBz5B,EAAA,GAAE05B,EAAkB15B,EAAA,GACwBqB,EAAArN,GAAzBjC,IAAAA,SAAesnC,GAAU,GAA7CM,GAAFt4B,EAAA,GAAkBA,EAAA,IAGjCu4B,EAAmB,2BACnBC,EAAoB,4BAGpBC,EAAiB,SAACj6C,GACpB,IAEI,OADoB8E,aAAaM,QAAQpF,IACnB,EAC1B,CAAE,MAAOlH,GACL,MAAO,EACX,CACJ,EAEMohD,EAAa,SAACl6C,EAAazG,GAC7B,IACIuL,aAAaC,QAAQ/E,EAAKzG,EAC9B,CAAE,MAAOT,GACL,CAER,EAGwGgxB,EAAA3V,GAAtDjC,IAAAA,SAAe+nC,EAAeF,IAAqB,IAAG,GAAjGI,EAAkBrwB,EAAA,GAAEswB,EAAmBtwB,EAAA,GAC6DuwB,EAAAlmC,GAAvDjC,IAAAA,SAAe+nC,EAAeD,IAAsB,IAAG,GAApGM,EAAmBD,EAAA,GAAEE,EAAoBF,EAAA,GACQG,EAAArmC,GAArBjC,IAAAA,UAAe,GAAM,GAAjDuoC,EAAUD,EAAA,GAAEE,EAAYF,EAAA,GACvB/sB,GAAahB,QAAAA,EAAa,CAAC,GAA3BgB,SACFktB,EAAczoC,IAAAA,OAAsC,MACpD0oC,GAAoBn6C,aAAiB,EAAjBA,EAAmB+4C,UAAU/gD,QAAS,IAAM+gD,GAAaI,GAEnF1nC,IAAAA,WAAgB,WAKZ,GAJAqnC,EAAuBC,GACvBC,EAAyB,CAAE17C,KAAM,YAAaxE,MAAOigD,IAGjDA,EAAU7zC,SAAS,KAAM,CACzBg0C,EAAU,GACV,IAAMkB,EAAmBrB,EAAU7pC,QAAQ,QAAS,IACpDyqC,EAAoBS,GAEfV,GACDD,EAAWH,EAAkBc,EAErC,MAAO,GAAIrB,EAAU7zC,SAAS,KAAM,CAChCg0C,EAAU,GACV,IAAMkB,EAAmBrB,EAAU7pC,QAAQ,QAAS,IACpDyqC,EAAoBS,GAEfV,GACDD,EAAWH,EAAkBc,EAErC,MACIlB,EAAU,GACVY,EAAqBf,GAEhBc,GACDJ,EAAWF,EAAmBR,GAItC77B,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,YAAaxE,MAAOigD,IAEnD,GAAG,IAEHtnC,IAAAA,WAAgB,WACZ,IAAM4oC,EAAkBH,EAAY17B,QAC9B87B,EAAa,WACfL,KAAgBI,IAAmBA,EAAgBE,SAASpY,SAASqY,gBACzE,EAIA,OAHArY,SAAS3S,iBAAiB,UAAW8qB,GACrCnY,SAAS3S,iBAAiB,WAAY8qB,GAE/B,WACHnY,SAAS1S,oBAAoB,UAAW6qB,GACxCnY,SAAS1S,oBAAoB,WAAY6qB,EAC7C,CACJ,IAEA7oC,IAAAA,WAAgB,WACRuoC,GACAZ,GAAmB,EAE3B,GAAG,CAACY,IAEJ,IAuCMS,EAAiB,SAACpiD,GACpB,IAAIS,EAAQT,EAAEmW,OAAO1V,MAKrB,GAJe,IAAXmgD,IAAcngD,EAAQ,IAAHqM,OAAOrM,IACf,IAAXmgD,IAAcngD,EAAQ,IAAHqM,OAAOrM,IAGf,IAAXmgD,GAA2B,IAAXA,EAAc,CAE9B,IAAMmB,EAAmBthD,EAAMoW,QAAQ,QAAS,IAChDyqC,EAAoBS,GAEpBX,EAAWH,EAAkBc,EACjC,MAAsB,IAAXnB,IAEPa,EAAqBhhD,GAErB2gD,EAAWF,EAAmBzgD,IAGlCokB,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,YAAaxE,MAAAA,KACxCkgD,EAAyB,CAAE17C,KAAM,YAAaxE,MAAAA,IAC9CugD,EAAiBvgD,EACrB,EAEA,OACI2Y,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,KAChBtH,IAAAA,cAAA,OAAKwB,UAAU,mBACT2lC,GACEnnC,IAAAA,cAAA,OAAKwB,UAAU,yBACV4lC,GAAcl1C,KAAI,SAACsV,EAAMC,GAAK,OAC3BzH,IAAAA,cAACuhC,GAAAA,EAAKC,WAAU,CACZ1zC,IAAK2Z,EACL6B,QAAS,WAAF,OAxEd,SAAC7B,GACtB,IAAMwhC,EAAiBzB,EACvBC,EAAUhgC,GACV,IAAIxT,EAAW,GAGf,GAAuB,IAAnBg1C,GAA2C,IAAnBA,EAAsB,CAE9C,IAAMN,EAAmBrB,EAAU7pC,QAAQ,QAAS,IACpDyqC,EAAoBS,GAEpBX,EAAWH,EAAkBc,EACjC,MAA8B,IAAnBM,IAEPZ,EAAqBf,GAErBU,EAAWF,EAAmBR,IAIlC,GAAc,IAAV7/B,GAAyB,IAAVA,EAAa,CAE5B,IAAMyhC,EAAajB,GAAsB,GACzCh0C,EAAqB,IAAVwT,EAAc,IAAH/T,OAAOw1C,GAAU,IAAAx1C,OAASw1C,EACpD,MAAqB,IAAVzhC,IAEPxT,EAAWm0C,GAAuB,KAGjCn0C,EAASk1C,WAAW,MAAQl1C,EAASk1C,WAAW,OAAgC,MAAvBl1C,EAASzH,OAAO,GAC1EyH,EAAW,GAAHP,OAAMO,EAASzH,OAAO,GAAE,KAAAkH,OAAIO,EAASxH,MAAM,IAC5CwH,EAASk1C,WAAW,OAC3Bl1C,EAAW,IAAHP,OAAOO,IAGnB2zC,EAAiB3zC,GACjBwX,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,YAAaxE,MAAO4M,IACnD,CAmC+Cm1C,CAAiB3hC,EAAM,EACtCoE,SAAUpE,GAAS+/B,GAEnBxnC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMwE,EAAK3b,MACR,KAK9BmU,IAAAA,cAAA,WACgB,IAAXwnC,GAAgBL,EACbnnC,IAAAA,cAACqpC,GAAAA,EAAS,CACNC,WAAW,eACXz9C,KAAK,YACL09C,cAAY,EACZvuB,OAAQ0tB,EAAoB,QAAU,UACtCrhD,MAAOigD,EACPkC,eAAa,EACbC,SAAUluB,EACVmuB,WAAW,EACXC,UAAU,UACVC,MAAO,YACPC,cAAc,SACdp+B,SAAUu9B,EACV7qB,aAAanf,EAAAA,EAAAA,UAAS,SACtB6L,QAAQ,OACR9P,QAAS2tC,EAAoBn6C,aAAiB,EAAjBA,EAAmB+4C,UAAU,GAAK,GAC/DpuB,IAAKuvB,IAGTzoC,IAAAA,cAAC8pC,GAAAA,EAAc,CACXC,qBAAqB,sDACrBT,WAAW,eACXz9C,KAAK,YACL09C,cAAY,EACZS,WAAsB,GAAVxC,EAAc,IAAM,IAChCiC,SAAUluB,EACVl0B,MAAOigD,EAAU7pC,QAAQ,QAAS,IAClC+rC,eAAa,EACbG,UAAU,UACVD,WAAW,EACX1uB,OAAQ0tB,EAAoB,QAAU,UACtCj9B,SAAUu9B,EACV7qB,aAAanf,EAAAA,EAAAA,UAAS,oBACtB4qC,MAAO,YACP/+B,QAAQ,OACR9P,QAAS2tC,EAAoBn6C,aAAiB,EAAjBA,EAAmB+4C,UAAU,GAAK,GAC/DpuB,IAAKuvB,KAG4B,IAAvCl6C,aAAiB,EAAjBA,EAAmB+4C,UAAU/gD,UAAgBmiD,IAC3C1oC,IAAAA,cAAA,OAAKwB,UAAU,gCAGvBxB,IAAAA,cAAA,OAAKwB,UAAU,wCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACPhD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMuX,aAAS,EAATA,EAAWkB,UAIxCzb,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACV+iC,iCAAiC,EACjC9iC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SAAU,WACN,GAA2C,IAAvC9Y,EAAkB+4C,UAAU/gD,OAAc,CAE1C,GAAe,IAAXihD,GAA2B,IAAXA,EAAc,CAC9B,IAAMmB,EAAmBrB,EAAU7pC,QAAQ,QAAS,IACpDuqC,EAAWH,EAAkBc,EACjC,MAAsB,IAAXnB,GACPQ,EAAWF,EAAmBR,GAGlC1lC,GAAQ,GAGRonC,EAAe,CACXjsC,OAAQ,CAAElR,KAAM,YAAaxE,MAAOigD,EAAU7pC,QAAQ,QAAS,MAEvE,MACIkqC,GAAmB,EAE3B,KAKpB,qOCrPJ,SArBuB,SAAHzvC,GAOQ,IANxBytC,EAAaztC,EAAbytC,cACAoB,EAAW7uC,EAAX6uC,YACAC,EAAW9uC,EAAX8uC,YACAd,EAAahuC,EAAbguC,cACAC,EAASjuC,EAATiuC,UACA1gC,EAAKvN,EAALuN,MAEMykC,EAAW/D,QAAAA,EAAagE,GAAAA,EACxBC,EAAelE,QAAAA,EAAiBmE,GAAAA,EAEtC,OACIrqC,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CACfh0B,UAAU,oBACViE,MAAOA,EACPpE,KAAMskC,EAAgB3lC,IAAAA,cAACoqC,EAAY,CAAC9gC,QAAS09B,IAAkBhnC,IAAAA,cAACkqC,EAAQ,CAAC5gC,QAASy9B,IAClFuD,aAAc3E,EAAgB,OAAS,SAGnD,sgCCiFA,MC/GA,IDSgBllC,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAAAqyC,EAAAC,EAA1CjG,EAAYrsC,EAAZqsC,aACxBn2B,GAUIvG,EAAAA,GAAAA,KATAy/B,EAASl5B,EAATk5B,UACA77B,EAAQ2C,EAAR3C,SACAq5B,EAAa12B,EAAb02B,cACAxvB,EAAgBlH,EAAhBkH,iBACAiyB,EAAwBn5B,EAAxBm5B,yBACAkD,EAAwBr8B,EAAxBq8B,yBACAl8C,EAAiB6f,EAAjB7f,kBACAwpC,EAAa3pB,EAAb2pB,cACAG,EAAc9pB,EAAd8pB,eAE8Cl2B,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GAC+CiM,EAAAhM,GAAlBjC,IAAAA,SAAe,IAAG,GAAjE0qC,EAAmBz8B,EAAA,GAAEo5B,EAAsBp5B,EAAA,GAC5Ck5B,EAA0B,KAAjBrC,EACThO,EACFvoC,EAAkB+4C,UAAU/gD,OAAS,IACpCwxC,SAA+B,QAAlBwS,EAAbxS,EAAgBG,UAAe,IAAAqS,OAAlB,EAAbA,EAAiCzT,YAA8D,aAAjDiB,SAA+B,QAAlByS,EAAbzS,EAAgBG,UAAe,IAAAsS,OAAlB,EAAbA,EAAiClM,aAC5EnU,GAAgBC,EAAAA,GAAAA,KAAhBD,YACiE7a,EAAArN,GAArBjC,IAAAA,UAAe,GAAM,GAAlE2qC,EAAmBr7B,EAAA,GAAEs7B,EAAoBt7B,EAAA,GAE1C1N,EAAU5B,IAAAA,aACZ,WACQ+H,IADCzhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAGGmlB,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,YAAaxE,MAAOqjD,KAEnDnD,EAAyB,CAAElgD,MAAO,GAAIwE,KAAM,cAC5Cmc,GAAU,GAElB,GAEA,CAAC0iC,EAAqB3iC,IAG1B/H,IAAAA,WAAgB,WAAM,IAAA6qC,EAAAC,EAAAC,EACZjU,EAAYiB,SAA+B,QAAlB8S,EAAb9S,EAAgBG,UAAe,IAAA2S,OAAlB,EAAbA,EAAiC/T,UAC7CwH,EAAcvG,SAA+B,QAAlB+S,EAAb/S,EAAgBG,UAAe,IAAA4S,OAAlB,EAAbA,EAAiCxM,YAC/CvjC,EAAUg9B,SAA+B,QAAlBgT,EAAbhT,EAAgBG,UAAe,IAAA6S,OAAlB,EAAbA,EAAiChwC,SAE7C+7B,GAA6B,YAAhBwH,GAA8BqM,GAAwB5iC,GAAYw8B,IAC/Epa,EAAY,CACRpvB,QAAAA,EACA4vB,gBAAgB,EAChB3P,OAAQ,OACRxC,MAAO,CAAEmX,aAAc,UAE3Bib,GAAqB,GAE7B,GAAG,CAAC7S,IAEJ/3B,IAAAA,WAAgB,WACR+H,GACA6iC,GAAqB,EAE7B,GAAG,CAAC7iC,IAEJ,IAAMijC,EAAyB,CAC3B,CACI1rC,GAAI,EACJ2nC,UACIjnC,IAAAA,cAACirC,GAAY,CAAC9D,OAAQA,EAAQE,uBAAwBA,EAAwBzlC,QAASA,KAG/F,CACItC,GAAI,EACJ2nC,UAAWjnC,IAAAA,cAACkrC,GAAkB,CAAC/D,OAAQA,MAI/C,OACInnC,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCACxDvJ,SAAU1lB,EACVzK,QAAQ,OACRsgC,UAAQ,EACR5B,cAAY,EACZ7+B,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UAAUlZ,IAAG,UAAA4F,OAAY6wC,EAAe,aAAe,MAC1Fl9C,MAAOojD,EAAyBnD,WAAaA,EAC7Ch+B,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9BgT,OAAQ8b,IAAc/uB,EAAU,aAAUvhB,IAE9CwZ,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAASA,EACT+H,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACLzF,OAAQ0F,GACR7lC,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YACnCi/B,MAAO+E,MAM/B,IExGA,IAAMO,IAAc9qC,EAAAA,GAAAA,WAAS,WAAM,IAAAy9B,EAC/B9vB,GAAsEvG,EAAAA,GAAAA,KAA9Dy/B,EAASl5B,EAATk5B,UAAW7sC,EAAa2T,EAAb3T,cAAe6a,EAAgBlH,EAAhBkH,iBAIlC,OAF6C,QAA9B4oB,EAFkD9vB,EAAb2pB,cAC/Bt9B,EAAc+wC,sBACU,IAAAtN,OAAA,EAA3BA,EAA6BpH,WAEzB,KAElB92B,IAAAA,cAAA,OAAKwB,UAAU,2BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,aAE/BsgC,EACGtnC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCACpDgyB,GAGLtnC,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,GAAIpC,OAAQ,KAI7C,IAEA,MC3BA,GD2BA,GEoBA,SA9CsB,SAAH9L,GAQb,IAPFuzC,EAAmBvzC,EAAnBuzC,oBACAC,EAAYxzC,EAAZwzC,aACAC,EAAIzzC,EAAJyzC,KAMMC,EAAgBH,EAAoBllD,OAAS,EAEnD,OAAKqlD,EAKD5rC,IAAAA,cAAA,OAAKwB,UAAU,6BACViqC,EAAoBv5C,KACjB,SAACsV,EAAMC,GAAK,MACO,MAAfD,EAAKngB,OACD2Y,IAAAA,cAACuhC,GAAAA,EAAKC,WAAU,CACZ1zC,IAAG,GAAA4F,OAAK8T,EAAKoJ,KAAI,KAAAld,OAAI+T,GACrBoE,SAAU8/B,GAAQnkC,EAAKngB,MACvBma,UAAU,kCACV8H,QAAS,WAAF,OAAQqiC,IAASnkC,EAAKngB,OAASqkD,EAAalkC,EAAKngB,MAAM,GAE9D2Y,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMwE,EAAKoJ,MAE7B,IAERg7B,GACG5rC,IAAAA,cAACuhC,GAAAA,EAAKC,WAAU,CACZ1zC,IAAI,WACJ+d,SAAmB,MAAT8/B,EACVnqC,UAAU,kCACV8H,QAAS,WAAF,OAAQoiC,EAAa,IAAI,GAEhC1rC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACPhD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBA1BrChH,IAAAA,cAAAA,IAAAA,SAAA,KAgCf,gnCCqCA,SA5EmB,SAAH9H,GAUV,IAAA2zC,EAAAC,EATFC,EAAmB7zC,EAAnB6zC,oBACAC,EAAa9zC,EAAb8zC,cACAC,EAAa/zC,EAAb+zC,cACAC,EAAgBh0C,EAAhBg0C,iBAOoDzpC,EAAAR,IAA1BS,EAAAA,EAAAA,UAAuB,IAAG,GAA7CoR,EAAKrR,EAAA,GAAE0pC,EAAQ1pC,EAAA,GACkCwF,EAAAhG,IAA1BS,EAAAA,EAAAA,UAAuB,IAAG,GAAjDuR,EAAOhM,EAAA,GAAEmkC,EAAUnkC,EAAA,IAE1BpF,EAAAA,EAAAA,YAAU,WACN,IAAMwpC,EAAc73B,KAAK83B,IAAIJ,EAAiBK,SAASC,IAAK,MACtDC,EAAcP,EAAiBK,SAASD,IAExCI,EAAYl4B,KAAK83B,IAAI,EAAG93B,KAAKm4B,KAAKN,EAAc,OAChDO,EAAYp4B,KAAKC,MAAMg4B,EAAc,MAErCI,EAAY71C,MAAM8G,KAAK,CAAEvX,OAAQqmD,EAAYF,EAAY,IAAK,SAAChhC,EAAGpkB,GAAC,MAAM,CAC3EojB,MAAO,GAAFhX,OAAKpM,EAAIolD,EAAS,KAAAh5C,QAAIsL,EAAAA,EAAAA,UAAS,MACpC3X,MAAOC,EAAIolD,EACd,IACDP,EAASU,GAETC,EAAed,EAAc,IAAMU,EAAWL,EAAaI,EAC/D,GAAG,CAACP,EAAkBF,IAEtB,IAAMc,EAAiB,SAACd,EAAuBK,EAAqBI,GAChE,IAAIM,EAAc,EACdC,EAAc,GAEdhB,IAAkBx3B,KAAKm4B,KAAKN,EAAc,QAC1CU,EAAcv4B,KAAKm4B,KAAMN,EAAc,KAAQ,KAG/CL,IAAkBx3B,KAAKC,MAAMg4B,EAAc,QAC3CO,EAAcx4B,KAAKC,MAAOg4B,EAAc,KAAQ,KAGhDM,EAAc,GAAqB,KAAhBf,GAAwBK,IAC3CU,EAAc,GAGlB,IAAME,EAAcj2C,MAAM8G,KAAK,CAAEvX,OAAQymD,EAAcD,EAAc,IAAK,SAACrhC,EAAGpkB,GAAC,MAAM,CACjFojB,MAAO,GAAFhX,OAAKpM,EAAIylD,EAAW,KAAAr5C,QAAIsL,EAAAA,EAAAA,UAAS,QACtC3X,MAAOC,EAAIylD,EACd,IACDX,EAAWa,EACf,EASMC,EAAkB,SAAC7+C,EAAuB8+C,GAA2B,IAAAC,EACjE5F,EAASn5C,EAAQgiB,MAAK,SAAAg9B,GAAG,OAAIA,EAAIhmD,QAAU8lD,CAAc,IAC/D,OAAO3F,EAASA,EAAO98B,OAAkB,QAAV0iC,EAAA/+C,EAAQ,UAAE,IAAA++C,OAAA,EAAVA,EAAY1iC,QAAK,KAAAhX,QAASsL,EAAAA,EAAAA,UAAS,KACtE,EAEA,OACIgB,IAAAA,cAACstC,GAAAA,EAAoB,CACjBn1C,KAAM,CAAC2b,EAAOG,GACds5B,aAAc,CAACL,EAAgBp5B,EAAOk4B,EAAc,IAAKkB,EAAgBj5B,EAASg4B,EAAc,KAChGuB,gBAAgB,QAChBC,YAAa,CAACzB,EAAc,KAAc,QAAZH,EAAI/3B,EAAM,UAAE,IAAA+3B,OAAA,EAARA,EAAUxkD,OAAO4kD,EAAc,KAAgB,QAAdH,EAAI73B,EAAQ,UAAE,IAAA63B,OAAA,EAAVA,EAAYzkD,QACnFqmD,eAlBoB,SAACjmC,EAAepgB,GACxC0kD,EAAoBtkC,EAAOpgB,GACb,IAAVogB,GACAqlC,EAAe7+C,OAAO5G,GAAQ6kD,EAAiBK,SAASC,IAAKN,EAAiBK,SAASD,IAE/F,GAgBJ,EC1BA,UAjD4B7rC,EAAAA,GAAAA,WACxB,SAAAvI,GAUM,IATFyzC,EAAIzzC,EAAJyzC,KACAI,EAAmB7zC,EAAnB6zC,oBACAC,EAAa9zC,EAAb8zC,cACAC,EAAa/zC,EAAb+zC,cAOA79B,GAAkDvG,EAAAA,GAAAA,KAA1CqkC,EAAgB99B,EAAhB89B,iBAAkBT,EAAmBr9B,EAAnBq9B,oBACpBp9C,EAAU2R,IAAAA,SAAc,kBAAM2tC,EAAAA,GAAAA,IAAiBhC,EAAMO,EAAiB,GAAE,CAACP,EAAMO,IAQrF,OACIlsC,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,6CAA8C,CAC1D,qDACkC,GAA9BqoC,EAAoBllD,QAAeolD,IAASiC,GAAAA,GAAcC,QAGjElC,IAASiC,GAAAA,GAAcE,MACpB9tC,IAAAA,cAACstC,GAAAA,EAAoB,CACjBn1C,KAAM9J,EACNk/C,aAAc,CAACv/C,OAAOi+C,IACtBuB,gBAhBR7B,IAASiC,GAAAA,GAAcC,KAChB,QAE2B,IAA/BpC,EAAoBllD,OAAe,QAAU,QAcxCknD,YAAaxB,EACbyB,eAAgB3B,IAGpB/rC,IAAAA,cAAC+tC,GAAU,CACPhC,oBAAqBA,EACrBC,cAAeA,EACfC,cAAeA,EACfC,iBAAkBA,IAKtC,+mBCrDJvlD,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,GAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,GAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,GAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8F,GAAAhG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,gBAAA8U,GAAAnb,EAAAF,GAAA,gBAAAE,GAAA,GAAAkQ,MAAAkV,QAAAplB,GAAA,OAAAA,CAAA,CAAAmqB,CAAAnqB,IAAA,SAAAA,EAAA8B,GAAA,IAAA/B,EAAA,MAAAC,EAAA,yBAAAS,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,uBAAAD,EAAA,KAAAD,EAAAK,EAAAK,EAAAM,EAAAJ,EAAA,GAAAqB,GAAA,EAAA1B,GAAA,SAAAG,GAAAT,EAAAA,EAAA6B,KAAA5B,IAAA+D,KAAA,IAAAjC,EAAA,IAAA7B,OAAAF,KAAAA,EAAA,OAAAgC,GAAA,cAAAA,GAAAjC,EAAAU,EAAAoB,KAAA7B,IAAAsD,QAAA3C,EAAA6D,KAAAzE,EAAAS,OAAAG,EAAAjB,SAAAqC,GAAAC,GAAA,UAAA/B,GAAAK,GAAA,EAAAF,EAAAH,CAAA,iBAAA+B,GAAA,MAAAhC,EAAA,SAAAe,EAAAf,EAAA,SAAAE,OAAAa,KAAAA,GAAA,kBAAAT,EAAA,MAAAF,CAAA,SAAAO,CAAA,EAAA0pB,CAAApqB,EAAAF,IAAA,SAAAE,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAqqB,GAAArqB,EAAAU,GAAA,IAAAX,EAAA,GAAA6W,SAAAhV,KAAA5B,GAAA2F,MAAA,uBAAA5F,GAAAC,EAAA8E,cAAA/E,EAAAC,EAAA8E,YAAAC,MAAA,QAAAhF,GAAA,QAAAA,EAAAmQ,MAAA8G,KAAAhX,GAAA,cAAAD,GAAA,2CAAAuqB,KAAAvqB,GAAAsqB,GAAArqB,EAAAU,QAAA,GAAA6pB,CAAAvqB,EAAAF,IAAA,qBAAA+D,UAAA,6IAAA2mB,EAAA,UAAAH,GAAArqB,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAAP,UAAAiB,EAAAV,EAAAP,QAAA,QAAAK,EAAA,EAAAK,EAAA+P,MAAAxP,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,CAqFA,SA3EuB,SAAHiR,GAQd,IAPF81C,EAAU91C,EAAV81C,WACAC,EAAQ/1C,EAAR+1C,SACAC,EAAUh2C,EAAVg2C,WAMqElsC,EAAAC,GAA5BjC,IAAAA,SAAyB,IAAG,GAA9DmuC,EAAansC,EAAA,GAAEosC,EAAepsC,EAAA,GAC7B4B,GAAWiE,EAAAA,GAAAA,KAAXjE,OACF4R,GAAYC,EAAAA,EAAAA,gBAEZ44B,EAAwBruC,IAAAA,YAAiB/S,GAAAtG,KAAAmF,MAC3C,SAAA4J,IAAA,IAAA9O,EAAA0nD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/uC,EAAAtZ,UAAA,OAAAK,KAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,OAEwC,OAFjCjE,EAACgZ,EAAArZ,OAAA,QAAAC,IAAAoZ,EAAA,GAAAA,EAAA,IAAGha,EAAAA,EAAAA,YAAWgW,OAAO,cACnB0yC,EAAoC,GACtCC,EAA8B,GAAE54C,EAAA9K,KAAA,EAECsB,QAAQuhC,IAAI,CAC7CkhB,GAAAA,EAAaC,iBAAiBjoD,EAAGgd,GACjCgrC,GAAAA,EAAaE,eAAeloD,EAAGgd,KACjC,OAAA4qC,EAAA74C,EAAApL,KAAAkkD,EAAAxsC,GAAAusC,EAAA,GAHKE,EAAMD,EAAA,IAAEE,EAAYF,EAAA,MAOvBF,EADiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEvDr8C,KAAI,SAAC68C,EAAgCtnC,GAAK,OAAOknC,EAAal7C,SAASs7C,IAAgB,EAATtnC,CAAU,IACxFla,QAAO,SAAAka,GAAK,OAAe,IAAXA,CAAY,KAGrCinC,SAAAA,EAAQjlD,SAAQ,SAAAulD,GACZ,IAAMC,EAAQD,EAAIC,MAAMzzB,MAAM,MAC9B8yB,EAAkBjjD,KAAK,CACnB4jD,MAAAA,EACAC,QAASF,EAAIE,SAErB,IAEI15B,KACA44B,EAAgBG,GACnB,yBAAA54C,EAAAjJ,OAAA,GAAAgJ,EAAA,KAEL,CAAC8f,EAAW5R,KAGhBf,EAAAA,EAAAA,YAAU,WACNwrC,GAEJ,GAAG,IAMH,OACIruC,IAAAA,cAAA,OAAKwB,UAAU,uDACXxB,IAAAA,cAACmvC,GAAAA,EAAU,CACP3tC,UAAU,cACV4tC,eAAe,EACfC,QAAS,IAAI77B,KAAKw6B,GAClBsB,QAAS,IAAI97B,MAAK,IAAIA,MAAO+7B,aAAY,IAAI/7B,MAAOg8B,cAAgB,IACpEC,KAAK,QACLpoD,MAAO4mD,EACPyB,aAbY,SAAHprC,GAAiC,IAC5CyqC,EADqBzqC,EAAJpF,KACNywC,SACjB,OAAOxB,EAAc16C,SAASs7C,EAClC,EAWYtjC,SAAU,SAAAvM,GACFA,GAAQA,aAAgBsU,MACxB06B,EAAWhvC,EAEnB,EACA0wC,iBAAiB,2CAIjC,iHChDA,SAhCsB,SAAH13C,GAUb,IATF23C,EAAQ33C,EAAR23C,SACAC,EAAU53C,EAAV43C,WACAC,EAAgB73C,EAAhB63C,iBACAC,EAAmB93C,EAAnB83C,oBAOA,OACIhwC,IAAAA,cAAA,OAAKwB,UAAU,mCACXxB,IAAAA,cAACiwC,GAAAA,EAAwB,CACrBC,UAAU,EACVC,oBAAqBH,EACrBI,gBAAiB,EACjBC,aAAcR,EACdS,iBAAkB,SAAAC,GAAG,OAAIT,EAAWS,EAAc,EAClD/C,gBAAgB,QAChBgD,cAAe,IAEnBxwC,IAAAA,cAAA,OAAKwB,UAAU,+BACXxB,IAAAA,cAAC2T,GAAAA,EAAW,CAACzQ,MAAM,mCACflD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAI,GAAAtP,OAAKq8C,EAAgB,UAIpD,qyECfA,IAAMU,GAAgB,SAACC,GACnB,IAAoDC,EAAA1uC,GAA3ByuC,EAAKl1B,MAAM,KAAKtpB,IAAIjE,QAAO,GACpD,OAAe,GADH0iD,EAAA,GAASA,EAAA,EAEzB,EAyVA,SAvViB,SAAHz4C,GAgBR,IAAA04C,EAAAC,EAAAC,EAAAC,EAfFlB,EAAQ33C,EAAR23C,SACAmB,EAAiB94C,EAAjB84C,kBACAC,EAAoB/4C,EAApB+4C,qBACAnB,EAAU53C,EAAV43C,WACAoB,EAAkBh5C,EAAlBg5C,mBACAC,EAAsBj5C,EAAtBi5C,uBACAC,EAAsBl5C,EAAtBk5C,uBAUwEpvC,EAAAC,GAA1BjC,IAAAA,SAAuB,IAAG,GAAjE+vC,EAAgB/tC,EAAA,GAAEqvC,EAAiBrvC,EAAA,GACGiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAAtCkW,EAAIjI,EAAA,GAAEqjC,EAAOrjC,EAAA,GAC8CqB,EAAArN,GAArBjC,IAAAA,UAAe,GAAM,GAA3DuxC,EAAejiC,EAAA,GAAEkiC,EAAiBliC,EAAA,GACa7M,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAA/C+uC,EAAYhvC,EAAA,GAAEivC,EAAcjvC,EAAA,GACiBwF,EAAAhG,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAA7C+3B,EAAWxyB,EAAA,GAAE0pC,EAAa1pC,EAAA,GAGhCG,EAAAnG,IAFmDS,EAAAA,EAAAA,UAChD,IAAI8Q,KAAKy9B,GAAwBG,IACpC,GAFMQ,EAAmBxpC,EAAA,GAAEypC,EAAoBzpC,EAAA,GAG4BE,EAAArG,IAA9BS,EAAAA,EAAAA,YAA8B,GAArEovC,EAAgBxpC,EAAA,GAAEypC,EAAiBzpC,EAAA,GAC6BG,EAAAxG,IAA9BS,EAAAA,EAAAA,YAA8B,GAAhEsvC,EAAavpC,EAAA,GAAEwpC,EAAexpC,EAAA,GAC7BrS,GAAW+J,EAAAA,EAAAA,KAAX/J,OAC2C87C,EAAAjwC,IAA7BS,EAAAA,EAAAA,UAAwB,MAAK,GAA5CqsC,EAAGmD,EAAA,GAAEC,EAAMD,EAAA,GACVE,EAAgBh8C,EAAhBg8C,YACRhkC,GAeIvG,EAAAA,GAAAA,KAdAy/B,EAASl5B,EAATk5B,UACA7sC,EAAa2T,EAAb3T,cACAyxC,EAAgB99B,EAAhB89B,iBACAT,EAAmBr9B,EAAnBq9B,oBACA4G,EAAQjkC,EAARikC,SACAC,EAAWlkC,EAAXkkC,YACAxgC,EAAS1D,EAAT0D,UACAygC,GAAkBnkC,EAAlBmkC,mBACAC,GAAiBpkC,EAAjBokC,kBACAxE,GAAU5/B,EAAV4/B,WACAyE,GAAUrkC,EAAVqkC,WACA7uC,GAAMwK,EAANxK,OACA2W,GAASnM,EAATmM,UACArM,GAAWE,EAAXF,YAEEwkC,IAAc7qC,EAAAA,GAAAA,KACZsiB,IAAgBC,EAAAA,GAAAA,KAAhBD,YAEFwoB,GAAUlsD,GAAAA,GAAA,CACZq+C,cAAe,IACfuN,SAAUtD,GAAOsD,EACjBtN,YAAa,WACbtqC,cAAAA,EACAg9B,MAAO,QACP74B,OAAQ,IACRgF,OAAAA,IACIkuC,GAAoB,CAAEA,iBAAAA,IACtBE,GAAiB,CAAEp1B,QAASo1B,IAG9BY,IAAeC,EAAAA,GAAAA,IAAyB,CAC1CF,WAAAA,GACAD,YAAAA,GACA9Y,WAAY7yC,OAAOqF,KAAK8hB,IAAa,KAG3BhU,GAAaiS,GACvB,CAAC,WAAY1Z,KAAKC,UAAUq8C,GAAMt8C,KAAKC,UAAUo/C,GAAmBr/C,KAAKC,UAAUs/C,IAAevrD,GAAAA,GAAA,GAE3FmsD,IAAY,IACfhvC,OAAAA,KACI0jC,GAAcx1B,GAAckgC,EAAsE,CAAC,EAAvD,CAAEp1B,QAASpI,KAAKs+B,MAAMv4B,cAAS,EAATA,GAAWkB,SAErF,CACInP,QAASmlC,IARTt5C,MAYR0K,EAAAA,EAAAA,YAAU,WACN,GAAI3I,GAAU,KAAA64C,EAAAC,EAAAC,EAAAC,EAAAC,EAmBsEC,EAY3CC,EA9BrC,GAA8B,gCAA1Bn5C,UAAe,QAAP64C,EAAR74C,GAAUvF,aAAK,IAAAo+C,OAAP,EAARA,EAAiBruC,MAAuC,CACxD,IAAM4uC,EAAUp5C,GAASvF,MAAM2+C,QAE/B,GAAuB,sBAAnBA,aAAO,EAAPA,EAAS9U,QAAT,MAAyC8U,GAAAA,EAASC,yBAA0B,CAC5E,IAAMC,EAAmBF,aAAO,EAAPA,EAASC,yBAAyB,GAG3D,OAFAxB,EAAkByB,QAClB9B,GAAe,EAEnB,CAEA,GAAuB,aAAnB4B,aAAO,EAAPA,EAAS9U,QAAT,MAAgC8U,GAAAA,EAASG,gBAAiB,CAC1D,IAAMC,EAAoBJ,aAAO,EAAPA,EAASG,gBAAgB,GAGnD,OAFAxB,EAAgByB,QAChBhC,GAAe,EAEnB,CACJ,CAEA,GAAIx3C,UAAe,QAAP84C,EAAR94C,GAAUvF,aAAK,IAAAq+C,GAAfA,EAAiBj4C,SAA+C,cAApCb,UAAe,QAAP+4C,EAAR/4C,GAAUvF,aAAK,IAAAs+C,GAAS,QAATC,EAAfD,EAAiBK,eAAO,IAAAJ,OAAhB,EAARA,EAA0B1U,OACtDrU,GAAY,CACRpvB,QAASiF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAmB9M,UAAe,QAAPk5C,EAARl5C,GAAUvF,aAAK,IAAAy+C,OAAP,EAARA,EAAiBr4C,UACvDigB,OAAQ,OACR2P,gBAAgB,EAChBnS,MAAO,CAAEmX,aAAc,UAE3BgiB,GAAc,QAEdA,GAAc,GAGlB,GAAIz3C,UAAkB,QAAVi5C,EAARj5C,GAAUy5C,gBAAQ,IAAAR,GAAlBA,EAAoBS,YACpB1C,EACI,IAAI19B,KAAmD,KAA7CtZ,UAAkB,QAAVm5C,EAARn5C,GAAUy5C,gBAAQ,IAAAN,OAAV,EAARA,EAAoBO,cACzBr9B,cACAiF,MAAM,KAAK,GACXhF,UAAU,EAAG,IlFvCCpqB,EkF2CJ,CACnB,WACAqG,KAAKC,UAAUq8C,GACft8C,KAAKC,UAAUo/C,GACfr/C,KAAKC,UAAUs/C,IlF9CrBlkD,EAAMme,GAAO7f,GACnB2f,GAAMje,GAAO,KkF+CL4jD,GAAe,EACnB,ClFlD8B,IAACtlD,EAC7B0B,CkFkDN,GAAG,CAACoM,GAAUg3C,EAAoBC,IAElC,IAAM0C,IAAqBjuD,EAAAA,EAAAA,UAAS0sD,GAC9BwB,GAAwBtB,GAAkBtgD,KAAI,SAAA6hD,GAAS,OAAIC,EAAAA,EAAAA,SAAQH,GAAmBI,QAASF,EAAU,IACzGG,GAAyB3B,GAAmBrgD,KAAI,SAAAiiD,GAAU,OAC5DH,EAAAA,EAAAA,SAAQH,GAAmBI,QAASE,EAAW,IAE7CC,IAAkBxuD,EAAAA,EAAAA,UAASwsD,GAE3BpC,IACiB,QAAnBY,GAFeyD,EAAAA,GAAAA,GAAcD,GAAgBH,QAASH,GAAuBI,IAElEv7B,MAAM,UAAE,IAAAi4B,OAAA,EAAnBA,EAAqBqD,QAAQjuD,IAAI,EAAG,WAAW4V,OAAO,YAAY04C,EAAAA,GAAAA,IAA2B,GAE3FC,GAAiB,IAAI/gC,KAAK49B,GAAwBoD,mBAAmB,QAAS,CAChFzF,IAAK,UACL0F,MAAO,QACPC,KAAM,YAEJC,IAAyB,IAAInhC,MAAOghC,mBAAmB,QAAS,CAClEzF,IAAK,UACL0F,MAAO,QACPC,KAAM,UACNE,SAAU,QAGd50C,IAAAA,WAAgB,WACZ,IAAM60C,EAAuB,WACzB,IACMC,GADM,IAAIthC,MACKuhC,mBAAmB,QAAS,CAAEH,SAAU,MAAOI,QAAQ,IAC5E3D,EAAkByD,EACtB,EACAD,IACA,IAAMI,EAAWl8B,YAAY87B,EAAsB,KAWnD,MAPiB,KAAbhF,GACAY,GAAcZ,GAAYY,GAAcT,KACmC,IAA3Ex7B,KAAK6D,IAAIo4B,GAAcT,IAAuBS,GAAcZ,MAC3D0B,GAEDzB,EAAWE,IAER,kBAAMn3B,cAAco8B,EAAS,CAExC,GAAG,CAACpF,EAAUG,MAEdntC,EAAAA,EAAAA,YAAU,WACF0xC,KAAmBI,IAA2B9E,GAC9CC,EAAWE,GAGnB,GAAG,CAACoB,IAEJ,IAAI8D,GAOiEC,GAAtDC,GAAQC,GAAUC,GAEnBZ,GACAD,GACAv1C,GATRq2C,IAA6BC,EAAAA,EAAAA,yBAAwB/J,GAErDgK,IAG+DN,GAAAlzC,GAAzBsyC,GAAe/4B,MAAM,KAAI,GAAtD45B,GAAMD,GAAA,GAAEE,GAAQF,GAAA,GAAEG,GAAOH,GAAA,GAE1BT,GAAOzmD,OAAOqnD,IACdb,GAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExEnkC,QAAQ+kC,GAAS5oD,MAAM,EAAG,IACzCyS,GAAOjR,OAAOmnD,IAEbV,KAAStC,EAAYsC,QAAUD,KAAUrC,EAAYqC,SAAWv1C,KAASkzC,EAAYlzC,QAGpGg2C,MAA0BlH,IAAcyH,KAAeF,GA8BvD,OACIv1C,IAAAA,cAAA,OAAKwB,UAAU,kCACXxB,IAAAA,cAACqpC,GAAAA,EAAS,CACNx+B,QAAQ,OACRsgC,UAAQ,EACRt/C,KAAK,OACL,cAAY,gBACZg+C,cAAc,SACdxiD,MAAOktD,GACPvZ,SAA4E,IAAlEyQ,EAAoBl+C,QAAO,SAAAia,GAAI,MAAmB,MAAfA,EAAKngB,KAAa,IAAEd,OACjE+iB,QAAS,WACLgoC,GAAQ,EACZ,EACAoE,SAAU11C,IAAAA,cAAC21C,GAAAA,EAAgC,CAACvvC,MAAO,GAAIpC,OAAQ,OAGnEhE,IAAAA,cAACqpC,GAAAA,EAAS,CACNx+B,QAAQ,OACRsgC,UAAQ,EACRtB,cAAc,SACdh+C,KAAK,OACLxE,MAAK,GAAAqM,QAAMwhD,GAAuBrF,EAAW4F,IAAczE,IAAsB,WAAU,QAC3FhW,UAAWka,GACX5rC,QAAS,WACLkoC,GAAkB,EACtB,EACAkE,SAAU11C,IAAAA,cAAC41C,GAAAA,EAAkC,CAACxvC,MAAO,GAAIpC,OAAQ,OAGrEhE,IAAAA,cAAA,OAAKwB,UAAU,0CACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCAClBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAI,qBAAAtP,OACb6gD,GAAc,KAAA7gD,QACX6gD,KAAmBI,GAAyB9E,EAAWmB,IAAsB,WAAU,UAGhGhxC,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQwM,GAAQq7B,EAChB3vC,QAAS,WACL0vC,GAAQ,GACRE,GAAkB,GAClBG,GAAc,EAClB,EACAhoC,SAAS,OACTC,YAAY,GAEZ5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CACf/vB,MACIyQ,EACIlW,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qBAE5BhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,uBAIvCkP,GACGlW,IAAAA,cAAC61C,GAAc,CACX7H,WACI,IAAIx6B,KAMC,QANGq9B,GACJiF,EAAAA,GAAAA,IACIrK,EACA2G,EACAK,GACAvG,UACH,IAAA2E,GACkB,QADlBC,EALDD,EAMMt6B,qBAAa,IAAAu6B,GACH,QADGC,EANnBD,EAOMt1B,MAAM,YAAI,IAAAu1B,OAFf,EALDA,EAOmB,IAG3B9C,SAAU2D,EACV1D,WArGL,SAAChvC,GAChB,IAAM62C,EAAqB72C,EAAK82C,WAAY,IAAIxiC,MAAOwiC,UACjDC,EAAqBzhC,KAAKm4B,KAAKoJ,EAAqB,OAI1D,GAFA5D,EAAOlkD,OADegoD,GAAsB,EAAI,EAAIA,IAEpDpE,EAAqB3yC,GACjB+2C,GAAsB,EAAG,CACzBnG,EAAWE,IAEX,IAAMkG,EAAgB,IAAI1iC,KAAKtU,GAGzBw1C,EAAOwB,EAAc1G,cACrBiF,EAAQzmD,OAAOkoD,EAAcC,WAAa,GAAGniC,SAAS,EAAG,KACzD+6B,EAAM/gD,OAAOkoD,EAAcE,WAAWpiC,SAAS,EAAG,KAElDqiC,EAAS,GAAH3iD,OAAMghD,EAAI,KAAAhhD,OAAI+gD,EAAK,KAAA/gD,OAAIq7C,GAEnCoC,EAAuBkF,EAC3B,MACIvG,EAAW,IACXqB,EAAuB,GAADz9C,OACfwL,EAAKswC,cAAa,KAAA97C,OAAI1F,OAAOkR,EAAKi3C,WAAa,GAAGniC,SAAS,EAAG,KAAI,KAAAtgB,OAAI1F,OAAOkR,EAAKk3C,WAAWpiC,SAAS,EAAG,OAGpH09B,GAAe,EACnB,IA8EiBH,GACGvxC,IAAAA,cAACs2C,GAAa,CACVxG,WAAYA,EACZD,SAAUA,EACVE,iBAAkBA,EAClBC,oBAAqBA,KAG7BhwC,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACV+iC,iCAAiC,EACjCsM,wBAAyB9b,EACzBtzB,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SAAU,WACDozB,IACD6W,GAAQ,GACRE,GAAkB,GACD,IAAIh+B,KAAK49B,GAAwBoD,mBAAmB,QAAS,CAC1EzF,IAAK,UACL0F,MAAO,QACPC,KAAM,cAGOC,IACb7E,EAAW,IAEXW,GAAcT,IAAuBS,GAAcZ,IACnDC,EAAWE,IAGvB,OAO5B,sgCCnWA,IAAMwG,IAA+B/1C,EAAAA,GAAAA,WACjC,SAAAvI,GA0BM,IAzBF23C,EAAQ33C,EAAR23C,SACA4G,EAAkBv+C,EAAlBu+C,mBACAxF,EAAoB/4C,EAApB+4C,qBACAjF,EAAa9zC,EAAb8zC,cACA8D,EAAU53C,EAAV43C,WACA4G,EAAmBx+C,EAAnBw+C,oBACAC,EAAoBz+C,EAApBy+C,qBACAC,EAAe1+C,EAAf0+C,gBACAC,EAAO3+C,EAAP2+C,QACA1F,EAAsBj5C,EAAtBi5C,uBACAxF,EAAIzzC,EAAJyzC,KACAyF,EAAsBl5C,EAAtBk5C,uBAeAhjC,GAA4DvG,EAAAA,GAAAA,KAApDwqC,EAAQjkC,EAARikC,SAAU5G,EAAmBr9B,EAAnBq9B,oBAAqBqL,EAAgB1oC,EAAhB0oC,iBACsBr0C,EAAAR,IAApBS,EAAAA,EAAAA,UAAS,CAAC2vC,IAAU,GAAtDpG,EAAaxpC,EAAA,GAAEs0C,EAAet0C,EAAA,GAC6CT,EAAAC,GAAlCjC,IAAAA,SAAey2C,GAAmB,GAA3EzF,EAAiBhvC,EAAA,GAAEkvC,EAAkBlvC,EAAA,GAE5ChC,IAAAA,WAAgB,WACZmxC,EAAuBF,GAAwBG,EACnD,GAAG,IAEH,IA6CM1F,EAAe1rC,IAAAA,aACjB,SAAC3Y,GACGwvD,EAAQxvD,GACR0vD,EAAgB,IACZ1vD,IAAUumD,GAAAA,GAAcE,OACxB8I,EAAgB,GAExB,GACA,CAACC,EAASD,IAcd,OACI52C,IAAAA,cAAA,OAAKwB,UAAU,sBACXxB,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eACvDhH,IAAAA,cAACg3C,GAAa,CAACvL,oBAAqBA,EAAqBC,aAAcA,EAAcC,KAAMA,IAC1FA,IAASiC,GAAAA,GAAcC,MACpB7tC,IAAAA,cAACi3C,GAAmB,CAChBtL,KAAMA,EACNI,oBAlBY,SAACtkC,EAAepgB,GACxC,IAAM6vD,EAAYjpD,OAAO5G,GACzB,GAAIskD,IAASiC,GAAAA,GAAcE,MAAO,CAC9B,IAAMqJ,EAAMnL,EACZmL,EAAI1vC,GAASyvC,EACbN,EAAgBO,EACpB,MACIJ,EAAgB,CAACG,GAEzB,EAUgBlL,cAAeA,EACfC,cAAeA,IAItBN,IAASiC,GAAAA,GAAcC,MACpB7tC,IAAAA,cAACo3C,GAAQ,CACLvH,SAAUA,EACVmB,kBAAmBA,EACnBC,qBAAsBA,EACtBnB,WAAYA,EACZoB,mBAAoBA,EACpBC,uBAAwBA,EACxBC,uBAAwBA,GAA0BH,IAG1DjxC,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SA/FC,WAGb,GAFAqvC,EAAoB1F,GACpB2F,EAAqBvF,GACjBzF,IAASiC,GAAAA,GAAcE,MAAO,CAC9B,IAAM75B,EAA6B,GAAnB+3B,EAAc,GAAUA,EAAc,GAChDv1B,EAAOjC,KAAKC,MAAM49B,EAAW,IAEnCuE,EAAgB,CAACngC,EADL47B,EAAW,KAEvBvC,EAAW,IACXgH,EAAiB,CACbhS,cAAe8I,GAAAA,GAAcyJ,QAC7BhF,SAAUpkD,OAAOgmB,GACjBqjC,YAAa,KACbvS,YAAa,YAErB,MAAO,GAAI4G,IAASiC,GAAAA,GAAcC,KAAM,CACpC,IAAMkI,EAAqB,IAAIviC,KAAK49B,GAAwB4E,WAAY,IAAIxiC,MAAOwiC,UAC7EC,EAAqBzhC,KAAKm4B,KAAKoJ,EAAqB,OAC1Da,EAAgB,IACZ/G,EACAiH,EAAiB,CACbQ,YAAazH,EACb9K,YAAa,aAGjB+K,EAAW,IACXgH,EAAiB,CACbhS,cAAe8I,GAAAA,GAAcC,KAC7BwE,SAAUpkD,OAAOgoD,GACjBqB,YAAa,KACbvS,YAAa,aAGzB,MACI+K,EAAW,IACX8G,EAAgB,IAChBE,EAAiB,CACbhS,cAAe6G,EACf0G,SAAUpkD,OAAOg+C,GACjBqL,YAAa,KACbvS,YAAa,YAGzB,KAyDJ,IAGJ,ghCCxIA,IAAMwS,IAAW92C,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAAAs/C,EAAAlzC,EAAA45B,EAAAuZ,EAAAC,EAAAC,EAA1CpT,EAAYrsC,EAAZqsC,aACzBn2B,GAqBIvG,EAAAA,GAAAA,KApBApN,EAAa2T,EAAb3T,cACAmJ,EAAMwK,EAANxK,OACAsoC,EAAgB99B,EAAhB89B,iBACApH,EAAa12B,EAAb02B,cACA2G,EAAmBr9B,EAAnBq9B,oBACA4G,EAAQjkC,EAARikC,SACAuF,EAAYxpC,EAAZwpC,aACAN,EAAWlpC,EAAXkpC,YACAvS,EAAW32B,EAAX22B,YACAzvB,EAAgBlH,EAAhBkH,iBACAwhC,EAAgB1oC,EAAhB0oC,iBACA/e,EAAa3pB,EAAb2pB,cACAkZ,EAAoB7iC,EAApB6iC,qBACA0F,EAAoBvoC,EAApBuoC,qBACAxF,EAAsB/iC,EAAtB+iC,uBACAsB,EAAUrkC,EAAVqkC,WACAva,EAAc9pB,EAAd8pB,eACAhqB,EAAWE,EAAXF,YACAkjC,EAAsBhjC,EAAtBgjC,uBACA7iD,EAAiB6f,EAAjB7f,kBAEI47B,GAAgBC,EAAAA,GAAAA,KAAhBD,YACRvsB,EAAwE,QAAxE45C,GAA6CK,EAAAA,EAAAA,cAAa/S,UAAc,IAAA0S,EAAAA,EAAI,CAAC,EAArEM,EAAWl6C,EAAXk6C,YAAajsD,EAAI+R,EAAJ/R,KAAMksD,EAAan6C,EAAbm6C,cACrBC,EAAkE,QAAhD1zC,EAAiB,IAAb+tC,EAAiB0F,EAAgBD,SAAW,IAAAxzC,EAAAA,EAAKzY,EACd4W,EAAAR,IAAtBS,EAAAA,EAAAA,UAAmB,IAAG,GAAxDspC,EAAavpC,EAAA,GAAEm0C,EAAen0C,EAAA,GACKwF,EAAAhG,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAAnCqF,EAAOE,EAAA,GAAEqpC,EAAOrpC,EAAA,GACuCG,EAAAnG,IAAZS,EAAAA,EAAAA,UAAS,IAAG,GAAvD+zC,EAAkBruC,EAAA,GAAEsuC,EAAmBtuC,EAAA,GACgBE,EAAArG,IAAZS,EAAAA,EAAAA,UAAS,IAAG,GAAnCu1C,GAAF3vC,EAAA,GAAqBA,EAAA,IACWG,EAAAxG,IAA1BS,EAAAA,EAAAA,UAAe,IAAI8Q,MAAO,GAAxC06B,GAAFzlC,EAAA,GAAYA,EAAA,IACwBypC,EAAAjwC,IAApBS,EAAAA,EAAAA,UAAiB,IAAG,GAA5CmtC,GAAQqC,EAAA,GAAEpC,GAAUoC,EAAA,GACwCgG,GAAAj2C,IAA3CS,EAAAA,EAAAA,UAAS40C,EAAc,IAAMxS,GAAc,GAA5D6G,GAAIuM,GAAA,GAAErB,GAAOqB,GAAA,GACdC,IAAuBrf,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GAC7EpB,IACqC,QAAtCoH,EAAAnG,EAAcogB,GAAqB,WAAG,IAAAja,OAAA,EAAtCA,EAAwCpH,YACmB,cAAlB,QAAtC2gB,EAAA1f,EAAcogB,GAAqB,WAAG,IAAAV,OAAA,EAAtCA,EAAwCnZ,eACR,QAApCoZ,EAACnpD,SAA2B,QAAVopD,EAAjBppD,EAAmB8jD,gBAAQ,IAAAsF,OAAV,EAAjBA,EAA6BpxD,cAAM,IAAAmxD,EAAAA,EAAI,GAAK,EAC3CU,IAAiBzrC,EAAAA,EAAAA,SAAO,GAC9BxC,IAA2BhK,EAAAA,EAAAA,KAAnB/J,GAAM+T,GAAN/T,OACAiU,GADcF,GAANpV,OACRsV,aACA+nC,GAAgBh8C,GAAhBg8C,aAERvvC,EAAAA,EAAAA,YAAU,WACN,GAAI+0C,GAAkC,MAAlB9S,IAA0BmM,EAAsB,CAEhEyF,EAAoB,YAGpB,IAAM2B,GAAgBC,EAAAA,EAAAA,iBAAgBlG,IACtC6F,EAAoBI,GACpB1B,EAAqB0B,EACzB,CACA,GAAIT,GAAkC,MAAlB9S,IAA0B2R,EAAoB,CAC9DC,EACI,IAAIljC,KAAgC,IAA1BokC,GAAgCrhC,cAAciF,MAAM,KAAK,GAAGhF,UAAU,EAAG,IAAM,IAG7F,IAAM+hC,EAAkB,IAAI/kC,KAAgC,IAA1BokC,GAAgCrhC,cAAciF,MAAM,KAAK,GAC3Fy8B,EAAoB,IAAIzkC,KAAgC,IAA1BokC,GAAgCrhC,cAAciF,MAAM,KAAK,IACvFm7B,EAAqB4B,EACzB,CACJ,GAAG,CAACX,KAEJ/0C,EAAAA,EAAAA,YAAU,WACN,GAAqB,KAAjBiiC,EAAsB,CACtB,IAAM0T,EAAU,IAAIhlC,KACpBglC,EAAQC,QAAQD,EAAQpC,UAAY/D,GACpCnE,EAAWsK,EACf,CACJ,GAAG,CAAC1T,KAEJjiC,EAAAA,EAAAA,YAAU,WACN,GAAIu1C,GAAerrC,QAAS,CACxB,IAAM2J,EAAQplB,YAAW,WACrB8mD,GAAerrC,SAAU,CAC7B,GAAG,KACH,OAAO,kBAAM3D,aAAasN,EAAM,CACpC,CAEsB,MAAlBouB,GACAoJ,EAAW,IAAI16B,MAEnB,IAAMw6B,GAAa8H,EAAAA,GAAAA,IAAuBrK,EAAqB2G,GAAaK,EAAYvG,GACxFgC,EAAW,IAAI16B,KAAKw6B,GACxB,GAAG,CAACpqC,EAAQsoC,EAAkBT,EAAqB4G,EAAUvN,KAE7DjiC,EAAAA,EAAAA,YAAU,WACN,GAAsB,MAAlBiiC,EAAuB,CACvB,IAAMhzC,GAAS4mD,EAAAA,GAAAA,IAAoBxM,EAAkBT,GACjC,MAAhB35C,aAAM,EAANA,EAAQ65C,OACRuC,EAAW,IAAI16B,MAGnB,IAAMmlC,EAAiBrnD,YAAW,WAC9BwlD,EAAiB,CACbhS,cAAehzC,aAAM,EAANA,EAAQ65C,KACvB0G,SAAUvgD,aAAM,EAANA,EAAQzK,MAClBiwD,YAAa,KACbvS,YAAa,YAErB,GAAG,IAEGiJ,GAAa8H,EAAAA,GAAAA,IAAuBrK,EAAqB2G,GAAaK,EAAYvG,GAGxF,OAFAgC,EAAW,IAAI16B,KAAKw6B,IAEb,kBAAM5kC,aAAauvC,EAAe,CAC7C,CACJ,GAAG,CAAClN,EAAqBS,EAAkBtoC,EAAQnJ,IAEnD,IAAMmH,GAAU5B,IAAAA,aAAkB,kBAAMsxC,GAAQ,EAAM,GAAE,KA4BxDzuC,EAAAA,EAAAA,YAAU,WACN,GAAIi0B,KAAcyN,EAAc,KAAAqU,EACtBC,EAAY9gB,EAAcogB,GAAqB,MAAO5pD,SAA2B,QAAVqqD,EAAjBrqD,EAAmB8jD,gBAAQ,IAAAuG,OAAV,EAAjBA,EAA8B,IAC3D,cAA3BC,aAAS,EAATA,EAAWva,cACXnU,EAAY,CACRpvB,QAAS89C,EAAU99C,QACnBigB,OAAQ,OACR2P,gBAAgB,EAChB+E,gBAAgB,EAChBlX,MAAO,CACHmX,aAActlB,GAAe,OAAS,OACtCjE,MAAO,wCAIvB,CAEJ,GAAG,CAAC0wB,GAAWqhB,GAAqB,KAEpC,IAAMW,GAAa94C,IAAAA,aAAkB,WACjC,GAAIs3C,EACAT,GAAQ,KACR/G,GAAWwH,QAGX,GAAsB,MAAlBxS,GAAyBuN,EAAW,GAAI,CACxC,IAAM57B,EAAOjC,KAAKC,MAAM49B,EAAW,IAC7Bp+B,EAAUo+B,EAAW,GAC3BwE,GAAQ,KACRD,EAAgB,CAACngC,EAAMxC,GAC3B,MACI2iC,EAAgB,IAChBC,GAAQ/R,EAGpB,GAAG,CAACuN,EAAUvN,EAAewS,IAQ7B,OANAz0C,EAAAA,EAAAA,YAAU,WACFkF,GACA+wC,IAER,GAAG,CAAC/wC,IAGA/H,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAACqpC,GAAAA,EAAS,CACNx+B,QAAQ,OACR/c,IAAG,GAAA4F,OAAK2+C,EAAQ,MAAA3+C,OAAKoxC,GACrBqG,UAAQ,EACRzgC,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAAWlZ,IAAG,WAAA4F,OAAa6wC,EAAe,aAAe,MAC5Fl9C,MA5EW,WACnB,IAAMktD,EAAiBtD,EACjB,IAAIz9B,KAAKy9B,GAAsBuD,mBAAmB,QAAS,CACvDzF,IAAK,UACL0F,MAAO,QACPC,KAAM,YAEV,GACN,GAAmB,YAAf3P,EAA2B,CAC3B,GAAsB,MAAlBD,GAAyBuN,EAAW,GAAI,CACxC,IAAMv+B,EAAQU,KAAKC,MAAM49B,EAAW,IAC9Bp+B,EAAUo+B,EAAW,GAC3B,MAAO,GAAP3+C,OAAUogB,EAAK,KAAApgB,OAAIogB,EAAQ,GAAI9U,EAAAA,EAAAA,UAAS,UAAWA,EAAAA,EAAAA,UAAS,QAAO,KAAAtL,OAAIugB,EAAU,GAAHvgB,OAAMugB,EAAO,KAAAvgB,OAAIugB,EAAU,GAAIjV,EAAAA,EAAAA,UAAS,YAAaA,EAAAA,EAAAA,UAAS,WAAc,GAAE,IAChK,CAAO,MAAsB,MAAlB8lC,EACFyP,EAGE,GAAP7gD,QAAUsL,EAAAA,EAAAA,UAAS,WAAU,KAAAtL,OAAI6gD,EAAc,MAAA7gD,OAAK+iD,GAAsB,WAAU,QAFzE,GAIR,GAAP/iD,OAAU2+C,EAAQ,KAAA3+C,OAAIskD,EAC1B,CACA,GAAIV,EACA,MAAO,GAAP5jD,QAAUsL,EAAAA,EAAAA,UAAS,WAAU,KAAAtL,OAAI6gD,EAAc,KAAA7gD,OAAI4jD,EAAW,OAEtE,CAoDmByB,GACPxP,cAAY,EACZvO,SAAU1lB,EACV9T,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCACxDj7B,QAAS,WAAF,OAAQgoC,GAAQ,EAAK,EAC5Bt2B,OAAQ8b,GAAY,QAAU,YAElC92B,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAASA,GACT+H,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACw2C,GAA4B,CACzBxK,cAAeA,EACf4K,gBAAiBA,EACjBjL,KAAMA,GACNkL,QAASA,GACTJ,mBAAoBA,EACpBC,oBAAqBA,EACrB7G,SAAUA,GACVC,WAAYA,GACZmB,qBAAsBA,EACtB0F,qBAAsBA,EACtBvF,uBAAwBA,EACxBD,uBAAwBA,MAMhD,IAEA,MCzOA,GDyOA,GEzNA,MChBA,GDO6B,SAAHj5C,GAAsF,IAAhFwtC,EAASxtC,EAATwtC,UAAWsT,EAAW9gD,EAAX8gD,YAAaC,EAAqB/gD,EAArB+gD,sBACpD,OAAKD,EAEDh5C,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,WAAW4B,EAAAA,GAAAA,GAAK,yBAA0BsiC,IAC1DuT,EAAwBD,EAAch5C,IAAAA,cAAC+C,GAAAA,EAAI,KAAEi2C,IAH7B,IAM7B,oGECME,GAAyBzgD,KAAS,SAAC0gD,EAAeC,GACpDD,EAAcC,EAClB,GAAG,KA6FH,SA3FyB,SAAHlhD,GAQQ,IAAAmhD,EAAAnhD,EAP1BohD,uBAAAA,OAAsB,IAAAD,EAAG,GAAEA,EAC3BD,EAAWlhD,EAAXkhD,YACAG,EAAarhD,EAAbqhD,cACAJ,EAAajhD,EAAbihD,cACA5R,EAAwBrvC,EAAxBqvC,yBACAiS,EAAmBthD,EAAnBshD,oBACAC,EAA4BvhD,EAA5BuhD,6BAEMC,EAAsB15C,IAAAA,SACtB25C,EAAuB35C,IAAAA,OAAqBo5C,GAC5CjhD,EAAOmhD,EAAuBpnD,KAAI,SAAA0nD,GAAI,MAAK,CAAEvyD,MAAO,GAAFqM,QAAKmmD,EAAAA,EAAAA,yBAAwBD,GAAK,KAAK,IACzFE,EAAkB,CACpB,CACIpvC,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YACnC3f,MAAO,IAAFqM,OAAM+lD,IAEf,CACI/uC,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBACnC3f,MAAO,GAAFqM,OAAK6lD,GAAiB,EAAC,KAAA7lD,OAAsB,IAAlB6lD,GAAsBv6C,EAAAA,EAAAA,UAAS,SAAUA,EAAAA,EAAAA,UAAS,YAI1FgB,IAAAA,WAAgB,WAKZ,OAJK05C,EAAoB3sC,SAAWqsC,IAChCM,EAAoB3sC,QAAUqsC,EAC9B7R,EAAyB,CAAElgD,MAAO+xD,EAAavtD,KAAM,iBAElD,WACC6tD,EAAoB3sC,SAAW2sC,EAAoB3sC,UAAY4sC,EAAqB5sC,SACpFosC,EAAcO,EAAoB3sC,SAEtCmsC,GAAuBa,QAC3B,CAEJ,GAAG,IAcH,OACI/5C,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,uBAC3BxB,IAAAA,cAAA,OAAKwB,UAAU,6BACV83C,EAAuB/yD,OACpByZ,IAAAA,cAACg6C,GAAAA,EAAW,CACR7hD,KAAMA,EACN8hD,cAAa,GAAAvmD,QAAKmmD,EAAAA,EAAAA,yBAAwBF,EAAqB5sC,SAAQ,KACvEujC,iBAfS,SAACjpD,GAC9B,IAAM6yD,EAAYjsD,OAAQ5G,EAAiBoF,MAAM,GAAI,IAAM,IACvDytD,IAAcP,EAAqB5sC,UACvCmsC,GAAuBC,EAAee,GACtCP,EAAqB5sC,QAAUmtC,EACnC,IAaoBl6C,IAAAA,cAACgG,GAAAA,SAAQ,OAGjBhG,IAAAA,cAAA,OAAKwB,UAAU,wBACVs4C,EAAgB5nD,KAAI,SAAA0L,GAAA,IAAG8M,EAAK9M,EAAL8M,MAAOrjB,EAAKuW,EAALvW,MAAK,OAChC2Y,IAAAA,cAAA,QAAMlS,IAAKzG,EAAOma,UAAU,6BACxBxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACG,MAAM,kCAAkCF,KAAK,MAC9C0H,GAEL1K,IAAAA,cAAA,OAAKwB,UAAU,mCACVg4C,EACGx5C,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAM3b,GAEjB2Y,IAAAA,cAACgG,GAAAA,SAAQ,CAAChC,OAAQ,GAAIoC,MAAO,MAGlC,MAInBpG,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SA/CG,WACfqyC,EAAoB3sC,QAAU4sC,EAAqB5sC,QACnDw6B,EAAyB,CAAElgD,MAAOsyD,EAAqB5sC,QAASlhB,KAAM,eAC1E,KAiDJ,sgCChGA,IAAMsuD,IAAa15C,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aAC3Bn2B,GAaIvG,EAAAA,GAAAA,KAZAyxC,EAAsBlrC,EAAtBkrC,uBACAF,EAAWhrC,EAAXgrC,YACAzhB,EAAmBvpB,EAAnBupB,oBACAyiB,EAAgBhsC,EAAhBgsC,iBACA9kC,EAAgBlH,EAAhBkH,iBACAogB,EAAsBtnB,EAAtBsnB,uBACA6jB,EAAanrC,EAAbmrC,cACA9tC,EAAQ2C,EAAR3C,SACAssB,EAAa3pB,EAAb2pB,cACAwP,EAAwBn5B,EAAxBm5B,yBACAkS,EAA4BrrC,EAA5BqrC,6BACAhP,EAAwBr8B,EAAxBq8B,yBAG8CzoC,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GACnBq4C,GAAkBC,EAAAA,GAAAA,MAClB1kB,GAAOmC,aAAa,EAAbA,EAAgBrlB,EAAAA,eAAekyB,eAAgB,CAAC,EACvD2V,EACFH,KAAqBxoD,EAAAA,EAAAA,eAAcmmC,MAAoBnC,EAAKt2B,IAAMq4B,EAChE+N,GAAYtiC,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCAEzDiW,EAAyB,SAACZ,GAC5BnuC,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,cAAexE,MAAOuyD,IACrD,EACMtzC,EAAqBtG,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAE/DyyC,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC06C,GAAgB,CACbpB,uBAAwBA,EACxBC,cAAeA,EACfH,YAAaA,EACbD,cAAeqB,EACfjT,yBAA0BA,EAC1BiS,oBAAqBe,EACrBd,6BAA8BA,KAI1C,CACIn6C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC26C,GAAoB,CACjB3B,YACIh5C,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,qKAClB1d,OAAQ,CACJ8vD,aAAaS,EAAAA,EAAAA,yBAAwBT,GACrCK,6BAAAA,SAe5B,OANAz5C,IAAAA,WAAgB,WACZ,IAAM05C,EAAsBjP,aAAwB,EAAxBA,EAA0B2O,YAClDM,GAAuBN,IAAgBM,GAAqBc,EAAuBd,EAE3F,GAAG,IAEEN,EAODp5C,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,UAAWkkC,EACX1K,SAAUtF,GAA0BpgB,EACpC5K,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cAAclZ,IAAG,cAAA4F,OAAgB6wC,EAAe,aAAe,MAE/Fj7B,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9BmjC,UAAQ,EACR9jD,MAAK,GAAAqM,QAAKmmD,EAAAA,EAAAA,yBAAwBT,GAAY,KAC9CvuC,QAAQ,SAEZ7K,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAAS0E,EACTqD,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACL3F,WAAWtiC,EAAAA,GAAAA,GAAK,wBAAyBi3C,GAAmB,gCAC5DzU,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qBA7B/ChH,IAAAA,cAAA,OAAKwB,UAAWkkC,GACZ1lC,IAAAA,cAACgG,GAAAA,SAAQ,MAkCzB,IAEA,MCtHA,GDsHA,GE1EA,SAjCc,SAAH9N,GAAmG,IAA7FqkB,EAAKrkB,EAALqkB,MAAKq+B,EAAA1iD,EAAE2iD,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAAEE,EAAS5iD,EAAT4iD,UAAWrgB,EAAWviC,EAAXuiC,YAAasgB,EAAM7iD,EAAN6iD,OAAQC,EAAM9iD,EAAN8iD,OAAQ1xC,EAAOpR,EAAPoR,QACxE2xC,EAAQJ,EAAYt0D,OAASs0D,EAAYt+B,GAAS,KAClD2+B,EAAaD,EAAiB,IAARA,EAAe,IAAO,KAC5CE,EAAqBD,IAAezvD,MAAMyvD,GAAc19C,WAAW09C,EAAW9+B,QAAQ,IAAM,KAElG,OAAKG,GAAS9wB,MAAM8wB,GAAe,KAE/Bvc,IAAAA,cAAA,OAAKlS,IAAKyuB,EAAO/a,UAAU,SACvBxB,IAAAA,cAAA,UACIwB,WAAW4B,EAAAA,GAAAA,GAAK03C,GAAa,UAC7B9f,SAAUP,EACVnxB,QAAS,WAAF,OAAQA,aAAO,EAAPA,EAAUiT,EAAM,EAC/B1wB,KAAK,cAELmU,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAOu3B,EAAc,oCAAsC,IACtEle,IAGR4+B,EACGn7C,IAAAA,cAAC2T,GAAAA,EAAW,CACR3Q,KAAK,KACLxB,WAAW4B,EAAAA,GAAAA,GAAK,aAAc23C,GAAU,kBAAmBC,GAAU,mBACrE,cAAY,6BAEXG,EAAmB,KAGxBn7C,IAAAA,cAACgG,GAAAA,EAASC,OAAM,CAACG,MAAO,GAAIpC,OAAQ,GAAI8rB,SAAO,IAI/D,quBCPA,SA3B0B,SAAH53B,GAAA,IAAAkjD,EAAAljD,EACnBmjD,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EACXP,EAAW3iD,EAAX2iD,YACApgB,EAAWviC,EAAXuiC,YACA6gB,EAAapjD,EAAbojD,cACAC,EAAcrjD,EAAdqjD,eAAc,OAEdv7C,IAAAA,cAAA,OAAKwB,UAAU,mCACV5E,GAAI5F,MAAM,GAAG5K,QAAQ8F,KAAI,SAAAspD,GAAO,OAC7Bx7C,IAAAA,cAAA,OAAKlS,IAAK0tD,EAASh6C,UAAU,uCACxB65C,EAAO5uD,MAAgB,EAAV+uD,EAA6B,GAAfA,EAAU,IAAQtpD,KAAI,SAAAqqB,GAAK,OACnDvc,IAAAA,cAACy7C,GAAK,CACF3tD,IAAKyuB,EACLA,MAAOA,EACPs+B,YAAaA,EACbC,UAAWS,IAAmBh/B,EAC9Bke,YAAaA,EACbsgB,OAAQF,EAAYt+B,KAAW/H,KAAK83B,IAAGp/C,MAARsnB,KAAI5X,GAAQi+C,IAC3CG,OAAQH,EAAYt+B,KAAW/H,KAAKg4B,IAAGt/C,MAARsnB,KAAI5X,GAAQi+C,IAC3CvxC,QAASgyC,GACX,IAEJ,IAER,2gCC1BV,OAAMI,oDAAuB1kD,MAAM,IAAI5K,iTAoFvC,MC1FA,IDQ4BqU,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aACpCn2B,GAAqEvG,EAAAA,GAAAA,KAAgB8zC,EAAAvtC,EAA7EysC,YAAAA,OAAW,IAAAc,EAAG,GAAEA,EAAErmC,EAAgBlH,EAAhBkH,iBAAkB4B,EAAU9I,EAAV8I,WAAYzL,EAAQ2C,EAAR3C,SACNzJ,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GAC4CiM,EAAAhM,GAA1BjC,IAAAA,SAAekX,GAAW,GAA9DqkC,EAActtC,EAAA,GAAE2tC,EAAgB3tC,EAAA,GAEvCjO,IAAAA,WAAgB,WACZ47C,EAAiB1kC,EACrB,GAAG,CAACA,IAEJ,IAAM2kC,EAAwB,SAACt/B,GAC3B9Q,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,aAAcxE,MAAOk1B,IACpD,EAIMjW,EAAqBtG,IAAAA,aAAkB,WACzCgI,GAAU,GACV4zC,EAAiB1kC,EACrB,GAAG,CAACA,IAEJ,OAAIqtB,EAEIvkC,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwB,mCACxC43B,SAAU1lB,EACVzK,QAAQ,OACRsgC,UAAQ,EACRzgC,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,wBAClBlZ,IAAG,wBAAA4F,OAA0B6wC,EAAe,aAAe,MAGnEl9C,MAAO6vB,EACP5N,QAAS,WAAF,OAAQtB,GAAU,EAAK,IAElChI,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAAS0E,EACTqD,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4BACvDhH,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,KAChBtH,IAAAA,cAAC87C,GAAiB,CACdT,OAAQK,GACRb,YAAaA,EACbS,cAAeM,EACfL,eAAgBA,KAGxBv7C,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SA9CF,WAClB6P,IAAeqkC,GAAgBM,EAAsBN,EAC7D,QAqDIv7C,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,wBAAyBkS,GAAoB,oCAC9DtV,IAAAA,cAAC2T,GAAAA,EAAW,CAAC3Q,KAAK,KAAKxB,UAAU,gCAC7BxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2BAEhChH,IAAAA,cAAC87C,GAAiB,CACdT,OAAQK,GACRb,YAAaA,EACbS,cAAeO,EACfN,eAAgBrkC,EAChBujB,YAAanlB,IAI7B,IE5EA,IAAMymC,GAAyBtjD,KAAS,SAACujD,EAAeC,GACpDD,EAAcC,EAClB,GAAG,KA0EH,SAxE8B,SAAH/jD,GAMQ,IAL/B+jD,EAAU/jD,EAAV+jD,WAAUC,EAAAhkD,EACVikD,sBAAAA,OAAqB,IAAAD,EAAG,GAAEA,EAC1B9gD,EAAQlD,EAARkD,SACAghD,EAAUlkD,EAAVkkD,WACAJ,EAAa9jD,EAAb8jD,cAEMK,EAAmBF,EAAsBjqD,KAAI,SAAAsV,GAAI,MAAK,CAAEngB,MAAOmgB,EAAKoJ,KAAM,IAC1E0rC,EAAqBt8C,IAAAA,OAAqBi8C,GAC1CM,EAAsBv8C,IAAAA,OAAqBi8C,IAEjDp5C,EAAAA,EAAAA,YAAU,WACN,OAAO,WACCy5C,EAAmBvvC,SAAWuvC,EAAmBvvC,UAAYwvC,EAAoBxvC,SACjFivC,EAAcM,EAAmBvvC,SAErCgvC,GAAuBhC,QAC3B,CAEJ,GAAG,IAYH,OACI/5C,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,sBAC3BxB,IAAAA,cAAA,OAAKwB,UAAU,4BACV66C,EAAiB91D,OACdyZ,IAAAA,cAACg6C,GAAAA,EAAW,CACR7hD,KAAMkkD,EACNpC,cAAa,IAAAvmD,OAAM6oD,EAAoBxvC,SACvCujC,iBAlBS,SAACjpD,GAC9B,IAAM6yD,EAAYjsD,OAAQ5G,EAAiBoF,MAAM,IAC7CytD,IAAcqC,EAAoBxvC,UACtCgvC,GAAuBC,EAAe9B,GACtCqC,EAAoBxvC,QAAU9e,OAAOisD,GACzC,IAgBoBl6C,IAAAA,cAACgG,GAAAA,EAASC,OAAM,OAGxBjG,IAAAA,cAAA,OAAKwB,UAAU,0BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACG,MAAM,kCAAkCF,KAAK,MAC/ChD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKszB,GAAG,MAAM90B,UAAU,gCAC9B46C,EACGp8C,IAAAA,cAACA,IAAAA,SAAc,MACV5D,EAAAA,EAAAA,aAAYhB,EAAUghD,GAAY,GAAM,IAAEhhD,GAG/C4E,IAAAA,cAACgG,GAAAA,EAASC,OAAM,CAACG,MAAO,GAAIpC,OAAQ,QAKpDhE,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfsvC,yBAAyB,EACzBtM,iCAA+B,EAC/B9iC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SArCG,WACfi1C,EAAmBvvC,QAAUwvC,EAAoBxvC,OACrD,KAwCJ,sgCC5EA,IAAMyvC,IAAa/7C,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aAC3Bn2B,GAAgGvG,EAAAA,GAAAA,KAAxFo0C,EAAU7tC,EAAV6tC,WAAYE,EAAqB/tC,EAArB+tC,sBAAuBC,EAAUhuC,EAAVguC,WAAY9mC,EAAgBlH,EAAhBkH,iBAAkB7J,EAAQ2C,EAAR3C,SAAUrQ,EAAQgT,EAARhT,SAExCqH,EAAAR,IAAfS,EAAAA,EAAAA,WAAS,GAAM,GAApCgH,EAAMjH,EAAA,GAAEuF,EAASvF,EAAA,GAClBg6C,GAAyBnC,EAAAA,GAAAA,MACzB5U,GAAYtiC,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCAMzD3iC,EAAU5B,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAEpDyyC,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC08C,GAAqB,CAClBT,WAAYA,EACZE,sBAAuBA,EACvB/gD,SAAUA,EACVghD,WAAYA,EACZJ,cAfe,SAACC,GAC5BxwC,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,aAAcxE,MAAO40D,IACpD,KAiBI,CACI38C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC26C,GAAoB,CACjB3B,YACIh5C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mIAOhD,OAAKi1C,EAQDj8C,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,UAAWkkC,EACX1K,SAAU1lB,EACVzK,QAAQ,OACRsgC,UAAQ,EACRzgC,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,aAAalZ,IAAG,aAAA4F,OAAe6wC,EAAe,aAAe,MAE7Fl9C,MAAK,IAAAqM,OAAMuoD,GACX3yC,QAAS,WAAF,OAAQtB,GAAU,EAAK,IAElChI,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbG,YAAY,EACZF,OAAQA,EACRC,SAAS,OACT/H,QAASA,EACTwpC,kBAAmB1hC,GAEnB1J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACL3F,WAAWtiC,EAAAA,GAAAA,GACP,uBACAq5C,GAA0B,+BAE9B7W,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBAjC/ChH,IAAAA,cAAA,OAAKwB,UAAWkkC,GACZ1lC,IAAAA,cAACgG,GAAAA,EAASC,OAAM,MAsChC,IAEA,MC3FA,GD2FA,GEhBA,MC3EA,IDUwCxF,EAAAA,GAAAA,WAAS,SAAAvI,GAA6D,IAAAwsC,EAAAiY,EAAAC,EAAAC,EAAAC,EAAAC,EAA1DxY,EAAYrsC,EAAZqsC,aAChDn2B,GAAsDvG,EAAAA,GAAAA,KAA9CzM,EAAQgT,EAARhT,SAAUka,EAAgBlH,EAAhBkH,iBAAkByiB,EAAa3pB,EAAb2pB,cAE9BilB,EAA2BjlB,SAA6C,QAAhC2M,EAAb3M,EAAgBrlB,EAAAA,eAAeuqC,WAAWC,WAAG,IAAAxY,GAAc,QAAdiY,EAA7CjY,EAA+CyY,oBAAY,IAAAR,OAA9C,EAAbA,EAA6DS,UACxFC,EAA6BtlB,SAA+C,QAAlC6kB,EAAb7kB,EAAgBrlB,EAAAA,eAAeuqC,WAAWK,aAAK,IAAAV,GAAc,QAAdC,EAA/CD,EAAiDO,oBAAY,IAAAN,OAAhD,EAAbA,EAA+DO,UAMlG,IAHIrlB,SAA6C,QAAhC+kB,EAAb/kB,EAAgBrlB,EAAAA,eAAeuqC,WAAWC,WAAG,IAAAJ,OAAhC,EAAbA,EAA+ChmB,aAC/CiB,SAA+C,QAAlCglB,EAAbhlB,EAAgBrlB,EAAAA,eAAeuqC,WAAWK,aAAK,IAAAP,OAAlC,EAAbA,EAAiDjmB,WAEtC,OAAO,KAEtB,IAAMymB,EAAiB,SAACC,GACpB,OAAOA,EACHx9C,IAAAA,cAACu2B,GAAAA,MAAK,CAAC33B,OAAQ4+C,EAAW/mB,eAAa,EAACr7B,SAAUA,IAElD4E,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,GAAIpC,OAAQ,IAErC,EAEA,OAAIugC,EAEIvkC,IAAAA,cAAA,OAAKwB,UAAU,uEACXxB,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACqzB,GAAG,MAAM90B,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAC7DioC,EAAeP,KAGxBh9C,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACqzB,GAAG,MAAM90B,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAC7DioC,EAAeF,MAQhCr9C,IAAAA,cAAA,OAAKwB,UAAU,oEACXxB,IAAAA,cAAA,OAAKwB,UAAU,yBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACqzB,GAAG,MAAM90B,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAC7DioC,EAAeP,KAGxBh9C,IAAAA,cAAA,OAAKwB,UAAU,yBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACqzB,GAAG,MAAM90B,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAC7DioC,EAAeF,KAKpC,IE9CA,MC3BA,IDKkC58C,EAAAA,GAAAA,WAAS,WACvC,IAAA2N,GAAyCvG,EAAAA,GAAAA,KAAjC41C,EAAUrvC,EAAVqvC,WAAYnoC,EAAgBlH,EAAhBkH,iBAECm9B,GADFtyC,EAAAA,EAAAA,KAAX/J,OACAg8C,YACRsL,GAA4BC,EAAAA,EAAAA,iBACxBC,EAAAA,EAAAA,iBAAgB3vD,OAAOwkD,aAAU,EAAVA,EAAY3sD,QAASmI,OAAOwvD,IACnD,SAFI1pC,EAAI2pC,EAAJ3pC,KAAM8pC,EAASH,EAATG,UAIR3+C,GAAO4+C,EAAAA,EAAAA,gBAAe/pC,EAAM,MAAO,eAEzC,OACI/T,IAAAA,cAAA,OAAKwB,UAAU,0CACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCACrDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4BAA4B1d,OAAQ,CAAE4V,KAAAA,EAAM2+C,UAAAA,MAIxF,IEKA,MC9BA,IDKmBp9C,EAAAA,GAAAA,WAAS,WAAM,IAAA8pC,EAAAC,EAC9Bp8B,GAAsEvG,EAAAA,GAAAA,KAA9DzM,EAAQgT,EAARhT,SAAUka,EAAgBlH,EAAhBkH,iBAAkByiB,EAAa3pB,EAAb2pB,cAAeG,EAAc9pB,EAAd8pB,eACpCn8B,IAAwC,QAA7BwuC,EAAAxS,EAAcG,UAAe,IAAAqS,OAAA,EAA7BA,EAA+BpU,qBAAsB,CAAC,GAAxE9uC,MACFyvC,EAAyC,QAAhC0T,EAAGzS,EAAcG,UAAe,IAAAsS,OAAA,EAA7BA,EAA+B1T,UAEjD,OACI92B,IAAAA,cAAA,OAAKwB,UAAU,0BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAE/BjL,EACGiE,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCACrDtV,IAAAA,cAACu2B,GAAAA,MAAK,CAAC33B,OAAQ7C,EAAQ06B,eAAa,EAACr7B,SAAUA,KAEnD07B,EACA92B,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,GAAC,KACd7H,GAGP4E,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,GAAIpC,OAAQ,KAI7C,23CETA,IAAM+5C,IAAsBt9C,EAAAA,GAAAA,WACxB,SAAAvI,GAOiC,IAN7B0kB,EAAO1kB,EAAP0kB,QACAohC,EAAwB9lD,EAAxB8lD,yBACAj2C,EAAO7P,EAAP6P,QACAk2C,EAAsB/lD,EAAtB+lD,uBACAr8C,EAAO1J,EAAP0J,QACAs8C,EAAqBhmD,EAArBgmD,sBAEMxL,GAAc7qC,EAAAA,GAAAA,KACZqG,EAAgBwkC,EAAhBxkC,YAE2ElM,EAAAC,GAAzDjC,IAAAA,SAAgCg+C,GAAyB,GAA5E32D,EAAK2a,EAAA,GAAEm8C,EAAQn8C,EAAA,GAC6DiM,EAAAhM,GAAvBjC,IAAAA,SAAe4c,GAAQ,GAA5EwhC,EAAuBnwC,EAAA,GAAEowC,EAAwBpwC,EAAA,GAGlDqwC,EAA+Bt+C,IAAAA,QAAa,GAE5C2yC,EAAa,CAAEb,iBAAkB9jD,OAAO3G,IACxCurD,GAAeC,EAAAA,GAAAA,IAAyB,CAC1CF,WAAAA,EACAD,YAAAA,EACA9Y,WAAY7yC,OAAOqF,KAAK8hB,GAAa,KAG3BhU,EAAaiS,GAAe,CAElC,YAAUzY,OAAAkJ,GACP7V,OAAOklC,QAAQ0mB,GAAY4L,OAAOx4C,KAAK,MAAI,IAAArS,OAC3CkpB,GACH71B,OAAOqF,KAAK8hB,GAAa,GACzBzb,KAAKC,UAAUkgD,KAEnBA,EACA,CACItmC,QAASvE,IAVT5P,KA2CR,OAbA6H,IAAAA,WAAgB,WAUR9F,GAT4C,SAAAA,GAC5C,IAAQvF,EAAoBuF,EAApBvF,MAAOg/C,EAAaz5C,EAAby5C,SACP6K,GAA0B7K,QAAAA,EAAY,CAAC,GAAvC6K,sBAEJA,IAA0B7pD,GAAO0pD,EAAyBG,GAE9DF,EAA6BvxC,SAAU,CAC3C,CAEc0xC,CAAmBvkD,EACrC,GAAG,CAACA,IAGA8F,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,4BAA4B,cAAY,+BACnExB,IAAAA,cAAA,OAAKwB,UAAU,kCACXxB,IAAAA,cAACg6C,GAAAA,EAAW,CAAC7hD,KAAM+lD,EAAuBjE,cAAe5yD,EAAOipD,iBAjC/D,SAAC4J,GAEd,IAAMlV,EAAW39C,IAAU6yD,EAC3BoE,EAA6BvxC,QAAUi4B,EACnCA,GAEJmZ,EAASjE,EACb,KA4BYl6C,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACG,MAAM,kCAAkCF,KAAK,MAC/ChD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,aAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKszB,GAAG,MAAM90B,UAAU,sCAC9B48C,QAAAA,EAA2Bp+C,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,GAAIpC,OAAQ,QAIrEhE,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SAvCD,WAENi3C,EAA6BvxC,UAClCkxC,EAAuB52D,GACvBua,IACJ,GAoCYqoC,iCAAiC,IAIjD,IAGJ,m4CCvGA,IAAMyU,IAAiBj+C,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aACmBviC,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GACzBoM,GACIvG,EAAAA,GAAAA,KADIy/B,EAASl5B,EAATk5B,UAAWlsC,EAAQgT,EAARhT,SAAUka,EAAgBlH,EAAhBkH,iBAAkBqpC,EAAcvwC,EAAduwC,eAAgB7M,EAAgB1jC,EAAhB0jC,iBAAkBC,EAAiB3jC,EAAjB2jC,kBAE3EsI,GAAkBC,EAAAA,GAAAA,MAClBsE,GAAwBC,EAAAA,EAAAA,wBAAuBzjD,GAC/C8iD,EAAwBthD,GAAI+hD,GAC7B7iC,MAAK,SAACt0B,EAAGu0B,GAAC,OAAK9tB,OAAOzG,GAAKyG,OAAO8tB,EAAE,IACpC7pB,KAAI,SAAC4/C,GAAwB,MAAM,CAChCzqD,MAAOyqD,EACPpnC,MAAO,GAAFhX,OAAKo+C,EAAgB,KAAAp+C,OAAIkrD,GACjC,IAECh9C,EAAU5B,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAEpDyyC,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC+9C,GAAmB,CAChBnhC,QAAS0qB,EACT0W,yBAA0BlM,EAC1B/pC,QAASA,EACTk2C,uBACIlM,EAEJnwC,QAASA,EACTs8C,sBAAuBA,KAInC,CACI5+C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC26C,GAAoB,CACjB3B,YACIh5C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sHAM1C0+B,GAAYtiC,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCAE/D,OAAKuN,EAQD9xC,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACqpC,GAAAA,EAAS,CACNrO,SAAU1lB,EACV9T,UAAWkkC,EACXh7B,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,mBAClBlZ,IAAG,mBAAA4F,OAAqB6wC,EAAe,aAAe,MAG9Dj7B,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9BmjC,UAAQ,EACRtgC,QAAQ,OACRxjB,MAAK,GAAAqM,OAAKo+C,EAAgB,KAAAp+C,OAAIkrD,KAElC5+C,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAASA,EACT+H,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACL3F,WAAWtiC,EAAAA,GAAAA,GACP,6BACAi3C,GAAmB,qCAEvBzU,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,0BApC/ChH,IAAAA,cAAA,OAAKwB,UAAWkkC,GACZ1lC,IAAAA,cAACgG,GAAAA,SAAQ,MAyCzB,IAEA,MCtGA,GDsGA,GEjGA,IAAM84C,IAAqBr+C,EAAAA,GAAAA,WAAS,WAAM,IAAAy9B,EAAAuZ,EACtCrpC,GAAqEvG,EAAAA,GAAAA,KAA7DpN,EAAa2T,EAAb3T,cAAeW,EAAQgT,EAARhT,SAAUka,EAAgBlH,EAAhBkH,iBAAkByiB,EAAa3pB,EAAb2pB,cAC7CgnB,EAAetkD,EAAc+wC,cACpBsG,IAAgD,QAA3B5T,EAAAnG,EAAcgnB,UAAa,IAAA7gB,OAAA,EAA3BA,EAA6B/H,qBAAsB,CAAC,GAAhF9uC,MAGR,OAF6C,QAA9BowD,EAAG1f,EAAcgnB,UAAa,IAAAtH,OAAA,EAA3BA,EAA6B3gB,WAEzB,KAGlB92B,IAAAA,cAAA,OAAKwB,UAAU,oCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCAChDtV,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sBAE/B8qC,EACG9xC,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,WAAW4B,EAAAA,GAAAA,GAAKkS,GAAoB,iCACpDw8B,EAAiB,IAAE12C,GAGxB4E,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,IAAKpC,OAAQ,KAI9C,IAEA,MC7BA,GD6BA,o1EE2DA,UA9EyBvD,EAAAA,GAAAA,WAAS,SAAAvI,GAAkD,IAA/C8mD,EAAgB9mD,EAAhB8mD,iBACjC5wC,GAOIvG,EAAAA,GAAAA,KANAlE,EAAgByK,EAAhBzK,iBACAs7C,EAAe7wC,EAAf6wC,gBACAC,EAAa9wC,EAAb8wC,cACAC,EAAuB/wC,EAAvB+wC,wBACAC,EAAqBhxC,EAArBgxC,sBACAtI,EAAgB1oC,EAAhB0oC,iBAEI3sB,GAAgBC,EAAAA,GAAAA,KAAhBD,YAE2DnoB,EAAAC,GAAhCjC,IAAAA,SAAe2D,GAAiB,GAA5D8hC,EAAUzjC,EAAA,GAAEq9C,EAAYr9C,EAAA,GACiDiM,EAAAhM,GAArCjC,IAAAA,SAAeo/C,GAAsB,GAAzEjS,EAAcl/B,EAAA,GAAEqiC,EAAgBriC,EAAA,GAEjC9V,EAAOgnD,EAAwBjtD,KAAI,SAAA0L,GAAA,IAAGgT,EAAIhT,EAAJgT,KAAMvpB,EAAKuW,EAALvW,MAAK,MAAQ,CAAEqjB,OAAO40C,EAAAA,GAAAA,IAAQ,CAAEj4D,MAAOupB,IAASvpB,MAAAA,EAAO,IA4BzG,OACI2Y,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKwB,UAAU,gCACXxB,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+C,GAAAA,EAAI,KACD/C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,uBAEhChH,IAAAA,cAACulC,GAAAA,EAAY,CAACC,QAASC,EAAYh6B,SAAU4zC,KAEjDr/C,IAAAA,cAAA,OAAKwB,UAAU,mCACV29C,EAAwB54D,OACrByZ,IAAAA,cAACg6C,GAAAA,EAAW,CACR7hD,KAAMA,EACN6iC,UAAWyK,EACXwU,cAAe9M,EACfmD,iBACIA,IAIRtwC,IAAAA,cAACgG,GAAAA,EAASC,OAAM,QAI5BjG,IAAAA,cAACoe,GAAAA,GAAM,CACHlb,MAAM,cACNF,KAAK,KACL0H,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACnC6zB,WAAS,EACTr5B,UAAU,+BACV8H,QAxDG,WACP3F,IAAqB8hC,GAAc0H,IAAmBiS,GAKtD3Z,IAAewZ,GAAmBC,IAClC/0B,EAAY,CACRpvB,SAASwkD,EAAAA,GAAAA,IAAgB,CACrB57C,iBAAkB8hC,EAClByZ,cAAAA,EACAD,gBAAAA,EACAO,wBAAwB,IAE5B70B,gBAAgB,IAIxBmsB,EAAgBrwD,GAAAA,GAAC,CACbkd,iBAAkB8hC,GACdA,EAAa,CAAEwZ,iBAAiB,EAAOC,eAAe,GAAU,CAAC,GAAC,IACtEE,sBAAuBjS,KAE3B6R,KArBIA,GAsBR,IAoCJ,wgCC/CA,SAtCiC,SAACS,GAC9B,IAAoDz9C,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA7C0/C,EAAQ19C,EAAA,GAAE29C,EAAU39C,EAAA,GACuBiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAOkG,EAAA,GAAEjG,EAASiG,EAAA,GAiCzB,OA5BAjO,IAAAA,WAAgB,WAAM,IAAA4/C,EACZ9hC,EAAc,SAACl3B,GACjB,IAAMmW,EAASnW,EAAEmW,OACX8iD,EAAyB,YAAXj5D,EAAE4B,KAEjBuU,GACAA,EAAuBuC,KAAOmgD,GAAWE,EAAWE,EAC7D,EAEMC,EAAgB,SAACl5D,GACnB,IAAMmW,EAASnW,EAAEmW,OACjB,GAAKA,GAAWA,SAAAA,EAAQiH,QAAWjH,SAAAA,EAAQgjD,MAA3C,CACA,IAAMC,EAAiCjjD,EAAOiH,OAASjH,EAAOgjD,MAAS97C,OAAOg8C,OAAOj8C,OAd/E,IAeNgE,EAAUg4C,EAF8C,CAG5D,EAMA,OAJAtvB,SAAS3S,iBAAiB,UAAWD,GACrC4S,SAAS3S,iBAAiB,WAAYD,GACjB,QAArB8hC,EAAA37C,OAAOi8C,sBAAc,IAAAN,GAArBA,EAAuB7hC,iBAAiB,SAAU+hC,GAE3C,WAAM,IAAAK,EACTzvB,SAAS1S,oBAAoB,UAAWF,GACxC4S,SAAS1S,oBAAoB,WAAYF,GACpB,QAArBqiC,EAAAl8C,OAAOi8C,sBAAc,IAAAC,GAArBA,EAAuBniC,oBAAoB,SAAU8hC,EACzD,CAEJ,GAAG,IAEI,CAAEM,qBAAsBV,GAAY33C,EAC/C,2lFC8RA,UAAetH,EAAAA,GAAAA,WApSoB,SAAHvI,GASQ,IAAA0F,EAAAyiD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EARpChb,EAASxtC,EAATwtC,UAASib,EAAAzoD,EACT0oD,gBAAAA,OAAe,IAAAD,GAAOA,EAAAE,EAAA3oD,EACtB4oD,wBAAAA,OAAuB,IAAAD,GAAOA,EAC9BE,EAAkB7oD,EAAlB6oD,mBACAz6C,EAAkBpO,EAAlBoO,mBACA06C,EAAU9oD,EAAV8oD,WACAC,EAAmC/oD,EAAnC+oD,oCAAmCrtB,EAAA17B,EACnC1P,KAAAA,OAAI,IAAAorC,EAAG,cAAaA,EAEd8e,GAAc7qC,EAAAA,GAAAA,KAEhBpN,EAWAi4C,EAXAj4C,cACAW,EAUAs3C,EAVAt3C,SACA6jD,EASAvM,EATAuM,gBACAC,EAQAxM,EARAwM,cACAn7C,EAOA2uC,EAPA3uC,eACAm9C,EAMAxO,EANAwO,YACAC,EAKAzO,EALAyO,UACAjzC,EAIAwkC,EAJAxkC,YACAgqB,EAGAwa,EAHAxa,eACA4e,EAEApE,EAFAoE,iBACAsK,EACA1O,EADA0O,kBAGEC,EAAgC,gBAAT74D,EACvB4mB,GAAiB0pB,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GAGrEn9B,EAAYikC,GAAc,CAAEb,aAAc,CAAC31C,KAA3CuS,QAGFumD,EAA2BthD,IAAAA,QAAa,GACxCs+C,EAA+B2C,GAAuCK,EAE6Bt/C,EAAAC,GAAtEjC,IAAAA,SAAeqhD,EAAuBpC,EAAkBC,GAAc,GAAlGzZ,EAAUzjC,EAAA,GAAEq9C,EAAYr9C,EAAA,GAC2EiM,EAAAhM,GAA9DjC,IAAAA,SAAeqhD,EAAuBH,EAAcC,GAAU,GAAnGI,EAAetzC,EAAA,GAAEuzC,EAAgBvzC,EAAA,GACaqB,EAAArN,GAAlBjC,IAAAA,SAAe,IAAG,GAA9CyhD,EAAUnyC,EAAA,GAAEoyC,EAAYpyC,EAAA,GAC4DsI,EAAA3V,GAAnDjC,IAAAA,SAA4C,QAA9BpC,EAACmjD,QAAAA,EAAsBhmD,SAAO,IAAA6C,EAAAA,EAAI,IAAG,GAApF+jD,EAAa/pC,EAAA,GAAEgqC,EAAchqC,EAAA,GACiBuwB,EAAAlmC,GAAlBjC,IAAAA,SAAe,IAAG,GAA9C6hD,EAAU1Z,EAAA,GAAE2Z,EAAY3Z,EAAA,GAGzB4Z,GAAY/hD,IAAAA,OAA+B,MAC3CgiD,GAAoBhiD,IAAAA,OAA+B,MACnDiiD,GAAgBjiD,IAAAA,SAEhBypC,IAAWyY,EAAAA,EAAAA,kBAAiB9mD,GAC5BwjD,IAAwBC,EAAAA,EAAAA,wBAAuBzjD,GAC/C+mD,GAAYrB,EAA0Bv6C,GAAAA,EAAYe,QAAU,MAE5D86C,GAAgD,QAAvC/B,EAAGe,EAAkBhyC,EAAe,WAAG,IAAAixC,GAAQ,QAARC,EAApCD,EAAuC73D,UAAK,IAAA83D,OAAR,EAApCA,EAA8C9T,IAC1D6V,GAAgD,QAAvC9B,EAAGa,EAAkBhyC,EAAe,WAAG,IAAAmxC,GAAQ,QAARC,EAApCD,EAAuC/3D,UAAK,IAAAg4D,OAAR,EAApCA,EAA8ClU,IAEoChE,GAAArmC,GAA5EjC,IAAAA,SAAmD,CAAEoiD,UAAAA,GAAWC,UAAAA,KAAY,GAA7FzsB,GAAI0S,GAAA,GAAEga,GAAOha,GAAA,GAEdqK,GAAUlsD,GAAAA,GAAA,GACR46D,EAAuB,CAAEpC,gBAAiBxZ,GAAe,CAAEyZ,cAAezZ,IAAY,IAC1F9hC,kBAAkB,GACd09C,EACE,CAAEH,YAAazb,EAAa8b,EAAkB,IAC9C,CAAEJ,UAAW1b,EAAa8b,EAAkB,KAGhD3O,IAAeC,EAAAA,GAAAA,IAAyB,CAC1CF,WAAAA,GACAD,YAAAA,EACA9Y,WAAY7yC,OAAOqF,KAAK8hB,GAAa,KAIrCmzC,GAAgD,QAA5BZ,EAAI7N,GAAa2P,mBAAW,IAAA9B,GAAxBA,EAA0BU,kBAC3CvO,GAAa2P,YAAYpB,WAE/BE,GAAgD,QAA5BX,EAAI9N,GAAa2P,mBAAW,IAAA7B,GAAxBA,EAA0BQ,oBAC5CtO,GAAa2P,YAAYrB,YAGpC,IAAchnD,GAAaiS,GAAe,CAElC,YAAUzY,OAAAkJ,GACP7V,OAAOklC,QAAQ0mB,IAAY4L,OAAOx4C,KAAK,MAAI,CAC9Chf,OAAOqF,KAAK8hB,GAAa,GACzBzb,KAAKC,UAAUkgD,MAEnBA,GACA,CACItmC,QAASm5B,IATTttC,KAaFqqD,GACF5sB,GAAKwsB,WAAaxsB,GAAKysB,UACnBriD,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,gEAClB1d,OAAQ,CACJ8R,SAAUwjD,GACVwD,UAAWxsB,GAAKwsB,UAChBC,UAAWzsB,GAAKysB,aAIxB,GAGFI,GAAkB,SAAHn+C,GAAsF,IAAhFo+C,EAAUp+C,EAAVo+C,WAAYxI,EAAS51C,EAAT41C,UAC9B8G,SAAAA,EAAYj0C,SAAY21C,IAC7B1B,EAAWj0C,QAAOtmB,GAAAA,GAAA,GAAQu6D,EAAWj0C,SAAO,GAAAtf,GAAA,GAAGi1D,EAAaxI,IAChE,EAEMyI,GAAiB,SAACzI,GAQb,IAAA0I,GAPPtE,EAA6BvxC,SAAU,EACvCsyC,EAAanF,GACbuI,GAAgB,CAAEC,WAAYrB,EAAuB,kBAAoB,gBAAiBnH,UAAAA,IAEtFA,IACA9wC,aAAa64C,GAAcl1C,SAC3Bk1C,GAAcl1C,SAAU81C,EAAAA,GAAAA,IAAqBb,GAAkBj1C,QAASg1C,GAAUh1C,WAElF60C,EAAe,IACfF,EAAa,IACbe,GAAgB,CAAEC,WAAYrB,EAAuB,gBAAkB,gBAAiBnH,UAAW,KAClF,QAAjB0I,EAAAb,GAAUh1C,eAAO,IAAA61C,GAAjBA,EAAmBE,OAE3B,EAEA9iD,IAAAA,WAAgB,WAwBR9F,IAvB4C,SAAAA,GAAY,IAAA6oD,EAAAC,EAAAC,EAChDtuD,EAAoBuF,EAApBvF,MAAOg/C,EAAaz5C,EAAby5C,SAETuP,EAA0B,QAAjBH,EAAGpuD,aAAK,EAALA,EAAOoG,eAAO,IAAAgoD,EAAAA,EAAI,GAC9BI,GAAuBxuD,SAAc,QAATquD,EAALruD,EAAO2+C,eAAO,IAAA0P,OAAT,EAALA,EAAgBxkB,SAAUh2C,KAASmM,SAAc,QAATsuD,EAALtuD,EAAO2+C,eAAO,IAAA2P,GAAdA,EAAgBzkB,OAQhF,GAPAkjB,EAAayB,EAAuBD,EAAY,IAChDT,GAAgB,CACZC,WAAYrB,EAAuB,gBAAkB,gBACrDnH,UAAWiJ,EAAuBD,EAAY,MAI7CttB,GAAKwsB,YAAcxsB,GAAKysB,UAAW,KAAAe,EAAAC,EACpC5+C,EAA8E,QAA9E2+C,EAAsBzP,SAAgD,QAAxC0P,EAAR1P,EAA+ByN,yBAAiB,IAAAiC,OAAxC,EAATA,EAAoD76D,UAAK,IAAA46D,EAAAA,EAAI,CAAC,EAA3E5W,EAAG/nC,EAAH+nC,IAAKF,EAAG7nC,EAAH6nC,IACbgW,IAAQ,SAAA1sB,GAAI,OACPA,EAAKwsB,YAAc5V,GAAOA,GAAS5W,EAAKysB,YAAc/V,GAAOA,EACxD,CAAE8V,UAAW5V,EAAK6V,UAAW/V,GAC7B1W,CAAI,GAElB,CACA0oB,EAA6BvxC,SAAU,CAC3C,CAEc0xC,CAAmBvkD,GACrC,GAAG,CAACurC,EAAYvrC,KAEhB,IA2C8BopD,GAAkBC,GAAyB/6D,GAAjE43D,qBAqBR,OAnBApgD,IAAAA,WAAgB,WAAM,IAAAwjD,EACdF,KAAqB,QAANE,EAAAv/C,cAAM,IAAAu/C,GAANA,EAAQz0B,SAAS,CAAEC,IAAK,IAAKy0B,SAAU,WAC9D,GAAG,CAACH,KAEJtjD,IAAAA,WAAgB,WACZ4hD,EAAeb,QAAAA,EAAsB,GAEzC,GAAG,CAACA,IAEJ/gD,IAAAA,WAAgB,WACZsiD,IAAQ,SAAA1sB,GAAI,OACPA,EAAKwsB,YAAcA,IAAaA,IAAexsB,EAAKysB,YAAcA,IAAaA,GAC1E,CAAED,UAAAA,GAAWC,UAAAA,IACbzsB,CAAI,GAElB,GAAG,CAACwsB,GAAWC,KAEfriD,IAAAA,WAAgB,kBAAM,kBAAMoJ,aAAa64C,GAAcl1C,QAAQ,IAAE,IAG7D/M,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACmiD,GAAS,CAAC3gD,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwBsiC,IAC/C1lC,IAAAA,cAAA,OAAKwB,UAAU,wBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,KACAs+C,EACGrhD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAE5BhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eAGpChH,IAAAA,cAACulC,GAAAA,EAAY,CAACC,QAASC,EAAYh6B,SAAUk3C,MAEjD3iD,IAAAA,cAAC0jD,GAAAA,EAAqB,CAClBla,eAAa,EACbF,WAAW,eACX9nC,UAAU,qBACVw5B,UAAWyK,EACXgE,SAAUA,GACV,cAAa4X,EAAuB,cAAgB,cACpD1X,UAAU,UACVrqC,GAAI9W,EACJuS,QAAS0qC,IAAekc,GAAiBF,GAAce,IACvDmB,cAAe11D,OAAOszD,GAAmB,GAAK,EAC9C11D,KAAMrD,EACN+gD,cAAY,EACZ99B,SA1FM,SAAC7kB,GACnB,IAAIS,EAAQ2G,OAAOpH,EAAEmW,OAAO1V,OACxBA,EAAMd,OAAS,IAAGc,EAAQ,UAAU+pB,KAAK/pB,GAAS,IAAMA,EAAMoW,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAGpG,IAAMunC,EAAW39C,IAAUk6D,EAC3BjD,EAA6BvxC,QAAUi4B,EACnCA,IACJ4c,EAAe,IACfJ,EAAiBn6D,GACjBo7D,GAAgB,CAAEC,WAAYl6D,EAAM0xD,UAAW7yD,IACnD,EAgFgB82B,aAAanf,EAAAA,EAAAA,UAAS,UACtBka,IAAK6oC,GACLnY,MAAO,YACP5uB,OAAQ2mC,GAAiBF,EAAa,QAAU,UAChD5X,cAAc,SACd+Z,SAAUhF,GACV/zC,QAAQ,OACRxjB,MAAOk6D,QAAAA,EAAmB,GAC1BsC,cAAe,SAACj9D,GAAyC,IAAAk9D,EAAAC,EAAAC,EAEjD,CAAC,IAAK,KAAKvwD,SAA4C,QAApCqwD,EAAe,QAAfC,EAAEn9D,EAAEq9D,mBAAW,IAAAF,OAAA,EAAdA,EAA+B5rD,YAAI,IAAA2rD,EAAAA,EAAI,MACnC,QAAxBE,EAACzC,aAAe,EAAfA,EAAiBh7D,cAAM,IAAAy9D,EAAAA,EAAI,IAAM,GAElClC,EAAarY,GAAW,GAAKA,GAAW,IAChC8X,SAAAA,EAAiB9tD,SAAS,MAClCquD,EAAa,GAErB,EACAoC,UAAWrC,KAEbpc,GACEzlC,IAAAA,cAAA,UACIwB,UAAU,uBACV,cAAY,yBACZ8H,QAAS,WAAF,OAAQq5C,IAAe,EAAK,IAI3C3iD,IAAAA,cAAA,SAAOkZ,IAAK8oC,GAAmBxpC,MAAO,CAAExU,OAAQ,EAAGmgD,QAAS,EAAG3yB,QAAS,QAAUmY,UAAU,YAC3F5lC,GACG/D,IAAAA,cAAC2T,GAAAA,EAAW,CAACzQ,MAAM,kCAAkC1B,UAAU,iCAC3DxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kEAIvC45C,GACG5gD,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SAtHL,WAEX,IAAKi3C,EAA6BvxC,UAAW04B,MAEzCgc,IAAchc,GAClB,GAAK8b,IAAmB9b,EAAxB,CASA,IAAM2e,GAAgB3C,GAAqBhc,EAC3CqR,EAAgBrwD,GAAAA,GAAAA,GAAC,CAAC,EACV46D,EAAuB,CAAEpC,gBAAiBmF,GAAkB,CAAElF,cAAekF,IAC7E/C,EACE,CACIH,YAAaO,GAAkC,MAApBF,EAA0B,GAAKA,GAE9D,CACIJ,UAAWM,GAAkC,MAApBF,EAA0B,GAAKA,IAE9D6C,EAAgB,CAAEzgD,kBAAkB,GAAU,CAAC,IAEvD2C,GAdA,MANIs7C,EACIP,GACMriD,EAAAA,EAAAA,UAAS,uCACTA,EAAAA,EAAAA,UAAS,oCAkB3B,GA6FgBirC,iCAAiC,IAKrD,q4DCvTA,IAAMoa,IAAiC5jD,EAAAA,GAAAA,WAAS,SAAAvI,GAAgE,IAAAosD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA7D3F,EAAgB9mD,EAAhB8mD,iBAC/C5wC,GAQIvG,EAAAA,GAAAA,KAPAo3C,EAAe7wC,EAAf6wC,gBACAt7C,EAAgByK,EAAhBzK,iBACAu7C,EAAa9wC,EAAb8wC,cACAgC,EAAW9yC,EAAX8yC,YACApK,EAAgB1oC,EAAhB0oC,iBACAqK,EAAS/yC,EAAT+yC,UACA5yD,EAAiB6f,EAAjB7f,kBAGI47B,GAAgBC,EAAAA,GAAAA,KAAhBD,YAE0GnoB,EAAAC,GAA1EjC,IAAAA,SAAmE,QAArDskD,EAAkB/1D,SAA8B,QAAbg2D,EAAjBh2D,EAAmB2yD,mBAAW,IAAAqD,OAAb,EAAjBA,EAAiC,UAAE,IAAAD,EAAAA,EAAI,IAAG,GAA3GM,EAAa5iD,EAAA,GAAE6iD,EAAc7iD,EAAA,GAC9B8iD,EAAS9kD,IAAAA,OAAa,CAAEi/C,gBAAAA,EAAiBiC,YAAAA,EAAa0D,cAAer2D,SAA8B,QAAbi2D,EAAjBj2D,EAAmB2yD,mBAAW,IAAAsD,OAAb,EAAjBA,EAAiC,KACtGO,EAAkC/kD,IAAAA,QAAa,GAE2DiO,EAAAhM,GAAxEjC,IAAAA,SAAiE,QAAnDykD,EAAkBl2D,SAA4B,QAAXm2D,EAAjBn2D,EAAmB4yD,iBAAS,IAAAuD,OAAX,EAAjBA,EAA+B,UAAE,IAAAD,EAAAA,EAAI,IAAG,GAAzGO,EAAa/2C,EAAA,GAAEg3C,EAAch3C,EAAA,GAC9Bi3C,EAASllD,IAAAA,OAAa,CAAEk/C,cAAAA,EAAeiC,UAAAA,EAAW6D,cAAez2D,SAA4B,QAAXo2D,EAAjBp2D,EAAmB4yD,iBAAS,IAAAwD,OAAX,EAAjBA,EAA+B,KAChGQ,EAAkCnlD,IAAAA,QAAa,GAoDrD,OACIA,IAAAA,cAAA,OAAKwB,UAAU,mCACXxB,IAAAA,cAAColD,GAA0B,CACvB1f,UAAU,yBACVkb,iBAAiB,EACjBE,yBAAyB,EACzBC,mBAAoB6D,EACpBt+C,mBAAoB04C,EACpBgC,WAAY8D,EACZ7D,oCAAqC8D,IAEzC/kD,IAAAA,cAAColD,GAA0B,CACvB1f,UAAU,yBACVkb,iBAAiB,EACjBE,yBAAyB,EACzBC,mBAAoBiE,EACpB1+C,mBAAoB04C,EACpBgC,WAAYkE,EACZjE,oCAAqCkE,EACrC38D,KAAK,cAETwX,IAAAA,cAACoe,GAAAA,GAAM,CACHlb,MAAM,cACNF,KAAK,KACL0H,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACnC6zB,WAAS,EACTr5B,UAAU,+BACV8H,QA7EG,WAEX,IAAKy7C,EAAgCh4C,UAAW+3C,EAAO/3C,QAAQkyC,mBAC1DkG,EAAgCp4C,UAAWm4C,EAAOn4C,QAAQmyC,eAA/D,CAEA,IAAAmG,EAIIP,EAAO/3C,QAHUu4C,EAAuBD,EAAxCpG,gBACasG,EAAmBF,EAAhCnE,YACesE,EAAqBH,EAApCT,cAEJa,EAIIP,EAAOn4C,QAHQ24C,EAAqBD,EAApCvG,cACWyG,EAAiBF,EAA5BtE,UACeyE,EAAqBH,EAApCT,cAGEa,GAAeN,GAAuBD,EACtCQ,GAAeH,GAAqBD,EAG1C,GAFIG,GAAahB,EAAe7kD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wCACxD8+C,GAAab,EAAejlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wCACvDw+C,GAAyBF,GAA6BM,GAAyBF,GAEhFI,GAAeD,GAAnB,CAGA,IAAMzB,GAAgBoB,GAAgCF,EAChDS,GAAgBH,GAAgCF,GACjDtB,GAAiB2B,IAAkBpiD,GACpCwmB,EAAY,CACRpvB,SAASwkD,EAAAA,GAAAA,IAAgB,CACrB57C,iBAAAA,EACAu7C,cAAe6G,EACf9G,gBAAiBmF,EACjB4B,iBAAiB,IAErBr7B,gBAAgB,IAIxBmsB,oWAAgBrwD,CAAC,CACbw4D,gBAAiBqG,EACjBpE,YAAasE,GAAiD,MAAxBD,EAA8B,GAAKA,EACzErG,cAAewG,EACfvE,UAAWyE,GAA+C,MAAtBD,EAA4B,GAAKA,GACjEvB,GAAiB2B,EAAgB,CAAEpiD,kBAAkB,GAAU,CAAC,IAGxEq7C,GAzBsC,CAnB8C,CA6CxF,IAiCJ,IAEA,ghCC3EA,SA9B6B,SAAH9mD,GAIQ,IAH9B8mD,EAAgB9mD,EAAhB8mD,iBAAgBiH,EAAA/tD,EAChBguD,kBAAAA,OAAiB,IAAAD,EAAG,EAACA,EACrBE,EAA6BjuD,EAA7BiuD,8BAEkEnkD,EAAAC,GAAjCjC,IAAAA,SAAekmD,GAAkB,GAA3DrsB,EAAS73B,EAAA,GAAEokD,EAAWpkD,EAAA,GAE7B,OACIhC,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,2BAC1B2kD,GACGnmD,IAAAA,cAACqmD,GAAAA,EAA4B,CACzBC,mBAAiB,EACjB76C,SAAU26C,EACV/3D,QAAS,CACL,CAAEqc,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,aACrC,CAAE0D,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAEzChE,KAAK,KACLujD,kBAAmB1sB,IAG1BA,EACG75B,IAAAA,cAACwmD,GAAgB,CAACxH,iBAAkBA,IAEpCh/C,IAAAA,cAACqkD,GAA8B,CAACrF,iBAAkBA,IAIlE,6FCiBA,SAjD8B,SAAH9mD,GAAuE,IAAjEiuD,EAA6BjuD,EAA7BiuD,8BACvB/+C,EAAU,CACZ,CACIq/C,WACIzmD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,8FAEhC0/C,cAAc,EACdh8C,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAEvC,CACIy/C,WACIzmD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4FAEhC0/C,cAAc,EACdh8C,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eAEvC,CACIy/C,WACIzmD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2HAEhC0/C,aAAcP,EACdz7C,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAI3C,OACIhH,IAAAA,cAACA,IAAAA,SAAc,KACVoH,EAAQlV,KACL,SAAA0L,GAAA,IAAG6oD,EAAU7oD,EAAV6oD,WAAYC,EAAY9oD,EAAZ8oD,aAAch8C,EAAK9M,EAAL8M,MAAK,OAC9Bg8C,GACI1mD,IAAAA,cAACA,IAAAA,SAAc,CAAClS,IAAK24D,EAAW/gD,MAAMsB,mBAClChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,GAAEyH,GACZ1K,IAAAA,cAAC+C,GAAAA,EAAI,CAACvB,UAAU,4CAA4CilD,GAEnE,IAERN,GACGnmD,IAAAA,cAAC2mD,GAAAA,EAAc,CACX5rD,QACIiF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sFAEhChE,KAAK,KACLgY,OAAO,SAK3B,sgCCvCA,IAAM4rC,IAAiBnmD,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aACmBviC,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GACzBoM,GAUIvG,EAAAA,GAAAA,KATAs3C,EAAuB/wC,EAAvB+wC,wBACAC,EAAqBhxC,EAArBgxC,sBACAhkD,EAAQgT,EAARhT,SACAuI,EAAgByK,EAAhBzK,iBACAs7C,EAAe7wC,EAAf6wC,gBACAC,EAAa9wC,EAAb8wC,cACA5pC,EAAgBlH,EAAhBkH,iBACA4rC,EAAW9yC,EAAX8yC,YACAC,EAAS/yC,EAAT+yC,UAG6BrqB,EAAckI,GAAc,CACzDb,aAAc,CAAC,YAAa,iBADxBS,wBAIFogB,EAAmBh/C,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAY7DqyC,GAAkBC,EAAAA,GAAAA,MAClB6L,GAAgChH,aAAuB,EAAvBA,EAAyB54D,QAAS,EAClEm/C,GAAYtiC,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCACzDkW,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC6mD,GAAoB,CACjB7H,iBAAkBA,EAClBkH,kBAAmBj4D,OAAO0V,GAC1BwiD,8BAA+BA,KAI3C,CACI7mD,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC26C,GAAoB,CACjBjV,UAAU,+BACVsT,YACIh5C,IAAAA,cAAC8mD,GAAqB,CAACX,8BAA+BA,IAE1DlN,uBAAqB,MAMrC,OACIj5C,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,UAAWkkC,EACX1K,SAAU1lB,EACV5K,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,kBAClBlZ,IAAG,kBAAA4F,OAAoB6wC,EAAe,aAAe,MAG7Dj7B,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9BmjC,UAAQ,EACR9jD,MAnDJsc,EAAyB,OAAPjQ,QAAc4rD,EAAAA,GAAAA,IAAQ,CAAEj4D,MAAO+3D,EAAuBzT,MAAM3sC,EAAAA,EAAAA,UAAS,cACvFigD,GAAmBC,EACZ,OAAPxrD,OAAcwtD,EAAW,KAAAxtD,QAAImrD,EAAAA,EAAAA,wBAAuBzjD,GAAS,WAAA1H,OAAUytD,EAAS,KAAAztD,QAAImrD,EAAAA,EAAAA,wBAChFzjD,IAEJ6jD,EAAwB,OAAPvrD,OAAcwtD,EAAW,KAAAxtD,QAAImrD,EAAAA,EAAAA,wBAAuBzjD,IACrE8jD,EAAsB,OAAPxrD,OAAcytD,EAAS,KAAAztD,QAAImrD,EAAAA,EAAAA,wBAAuBzjD,IAC9D,IA6CCyP,QAAQ,OACRmQ,OAAQ8b,EAAY,QAAU,YAElC92B,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAASo9C,EACTr1C,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACL3F,WAAWtiC,EAAAA,GAAAA,GACP,4BACAi3C,GAAmB,oCAEvBzU,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAM3D,IAEA,MC/GA,GD+GA,suBEnGO,IAAM+/C,GAAuB,SAAH7uD,GAY3B,IAAA8uD,EAXFtU,EAAWx6C,EAAXw6C,YACAuU,EAAuB/uD,EAAvB+uD,wBACAxsD,EAAavC,EAAbuC,cACA2U,EAAclX,EAAdkX,eACAq2B,EAAUvtC,EAAVutC,WAQMyhB,GAAmBrU,EAAAA,GAAAA,IAAyB,CAC9CF,WAAYsU,EACZvU,YAAAA,EACA9Y,WAAYn/B,IAGVwxB,EAAUg7B,EAA0BlgE,OAAOklC,QAAQg7B,GAA2B,GAC9EE,EAAY,CACd,YAAUzzD,OAAAkJ,GACPqvB,EAAQsyB,OAAOx4C,KAAK,MAAI,IAAArS,OACO,QADPszD,EACxBC,aAAuB,EAAvBA,EAAyBroD,cAAM,IAAAooD,EAAAA,EAAI,IACtCv0D,KAAKC,UAAUw0D,GACf93C,EAAerJ,KAAK,OAGxB,OAAOoG,GAAoDg7C,EAAWD,EAAkB,CACpF56C,QAASm5B,GAEjB,+jCC2GA,SA5HqB,SAAHvtC,GAUQ,IATtBuC,EAAavC,EAAbuC,cACA2U,EAAclX,EAAdkX,eACAhU,EAAQlD,EAARkD,SACAk4C,EAAOp7C,EAAPo7C,QACA4L,EAAahnD,EAAbgnD,cACAkI,EAAmBlvD,EAAnBkvD,oBACAvxB,EAAa39B,EAAb29B,cACAh9B,EAAQX,EAARW,SACAwuD,EAA0BnvD,EAA1BmvD,2BAUErlD,EAAAC,GAR6CjC,IAAAA,SAAe,CAC1DsnD,0BAA0B,EAC1BC,2BAA2B,EAC3BnL,WAAY,GACZoL,sBAAuB,GACvBC,WAAY,GACZC,uBAAwB,GACxBC,SAAU,KACZ,GARKC,EAAgB5lD,EAAA,GAAE6lD,EAAkB7lD,EAAA,GAU3ChC,IAAAA,WAAgB,WACZ,IAAM8nD,EAAoB,SAAC5N,EAA6B6N,GACpD,MAA0B,MAAlBA,GAAyBX,IAAyBlN,GAAarhD,EACjE,KACAuD,EAAAA,EAAAA,aAAYhB,EAAUnN,OAAOisD,IAAY,EACnD,EAGgB8N,EAOZJ,EAPAxL,WACAoL,EAMAI,EANAJ,sBACAF,EAKAM,EALAN,yBACAC,EAIAK,EAJAL,0BACAG,EAGAE,EAHAF,uBACUO,EAEVL,EAFAD,SACAF,EACAG,EADAH,WAEES,EAAiBJ,EAAkBtzC,KAAK6D,IAAIpqB,OAAOqlD,EAAQ8I,aAAc4L,GACzEG,EAAeL,EAAkBxU,EAAQkU,sBAAuBA,GAChEY,EAAeN,EAAkBxU,EAAQoU,uBAAwBA,GACjEW,EAAeP,EAAkBtzC,KAAK6D,IAAIpqB,OAAOqlD,EAAQqU,WAAYM,GACrEK,EAAiBR,EAAkBxU,EAAQmU,WAAYA,GAGzDO,IAAqBE,GACrBV,IAA0BW,GAC1BP,EAAiBN,2BAA6BA,GAC9CM,EAAiBL,4BAA8BA,GAC/CG,IAA2BU,GAC3BH,IAAmBI,GACnBZ,IAAea,GAEfT,EAAmB,CACfzL,WAAY8L,EACZV,sBAAuBW,EACvBb,yBAAAA,EACAC,0BAAAA,EACAG,uBAAwBU,EACxBT,SAAUU,EACVZ,WAAYa,GAGxB,GAAG,CAACltD,EAAUk4C,EAASsU,EAAkBR,EAAqBvuD,IAE9D,IAAM0vD,EAAevoD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAC3CI,EAAU,CACZ,CACIs/C,cAAexH,GAAiBrpB,IAAkBwxB,EAClD38C,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,aACnC3f,MAAOugE,EAAiBD,UAE5B,CACIjB,aAAc7wB,IAAkBwxB,EAChC38C,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eACnC3f,MAAOugE,EAAiBxL,YAE5B,CACIsK,eAAgBpT,EAAQmU,YAAcJ,EACtC38C,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eACnC3f,OAAO+U,EAAAA,EAAAA,aAAYhB,GAAWk4C,EAAQmU,YAAY,IAEtD,CACIhtD,eAAe+tD,EAAAA,EAAAA,kBAAiBp5C,EAAe,GAAI,CAC/CurB,UAAWlgC,IAAkB6X,EAAAA,YAAYG,WAE7Ci0C,eAAgBt3C,EAAe7oB,QAAU8gE,EACzC38C,MAAO69C,EACPzxB,UAAWwc,EAAQgU,yBACnBjgE,MAAOugE,EAAiBJ,uBAE5B,CACI/sD,eAAe+tD,EAAAA,EAAAA,kBAAiBp5C,EAAe,GAAI,CAC/CurB,UAAWlgC,IAAkB6X,EAAAA,YAAYG,WAE7Ci0C,aAAct3C,EAAe7oB,OAAS,GAAK8gE,EAC3C38C,MAAO69C,EACPzxB,UAAWwc,EAAQiU,0BACnBlgE,MAAOugE,EAAiBF,yBAIhC,OACI1nD,IAAAA,cAAA,OAAKwB,UAAU,0BACV4F,EAAQlV,KACL,SAAA0L,EAA2D6qD,GAAG,IAA3DhuD,EAAamD,EAAbnD,cAAeisD,EAAY9oD,EAAZ8oD,aAAch8C,EAAK9M,EAAL8M,MAAOosB,EAASl5B,EAATk5B,UAAWzvC,EAAKuW,EAALvW,MAAK,OACnDq/D,GACI1mD,IAAAA,cAAA,OACIlS,IAAG,GAAA4F,OAAK+0D,EAAG,KAAA/0D,OAAIrM,GACfma,WAAW4B,EAAAA,GAAAA,GAAK,6BAA8B0zB,GAAa,UAE3D92B,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACN0H,EACAjQ,GAAiB,KAAJ/G,OAAS+G,EAAa,MAExCuF,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACN3b,EAAM,KAAEw3D,EAAAA,EAAAA,wBAAuBzjD,IAG3C,IAIrB,wuECjGA,IAAMstD,GAAU,SAACC,EAAoBh5D,GACjC,OAAQA,EAAOnH,MACX,IAAK,sBACD,OAAA/B,GAAAA,GAAA,GACOkiE,GAAK,IACR1B,wBAAuBxgE,GAAAA,GAAA,GAChBkiE,EAAM1B,yBACNt3D,EAAOi5D,WAGtB,IAAK,kBACD,OAAAniE,GAAAA,GAAA,GACOkiE,GAAK,IACRE,YAAal5D,EAAOi5D,UAE5B,IAAK,qBACD,OAAAniE,GAAAA,GAAA,GACOkiE,GAAK,IACRG,eAAgBn5D,EAAOi5D,UAE/B,IAAK,iBACD,OAAAniE,GAAAA,GAAA,GACOkiE,GAAK,IACRrV,QAAO7sD,GAAAA,GAAA,GACAkiE,EAAMrV,SACN3jD,EAAOi5D,WAGtB,IAAK,iBACD,OAAAniE,GAAAA,GAAA,GACOkiE,GAAK,IACR9G,WAAYlyD,EAAOi5D,UAE3B,IAAK,eACD,OAAAniE,GAAAA,GAAA,GACOkiE,GAAK,IACRE,YAAa,GACbC,eAAgB,KAExB,QACI,OAAOH,EAEnB,EAEMI,GAAqB,SAACrW,EAAgDjJ,GAAqB,IAAA7rC,EAEzFgB,EAQA8zC,EARA9zC,OACAw9C,EAOA1J,EAPA0J,WACA3hD,EAMAi4C,EANAj4C,cACAy9B,EAKAwa,EALAxa,eACAhqB,EAIAwkC,EAJAxkC,YACA6pB,EAGA2a,EAHA3a,cACAqpB,EAEA1O,EAFA0O,kBACAuG,EACAjV,EADAiV,SAGEv4C,GAAiB0pB,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GAC7E8wB,GAIIC,EAAAA,GAAAA,IAAclxB,EAAc3oB,EAAe,KAH1Bo4C,EAAqBwB,EAAtCE,gBACAzB,EAAUuB,EAAVvB,WACO0B,EAAkBH,EAAzBr0D,MAEJy0D,GAAgFH,EAAAA,GAAAA,IAC5ElxB,EAAc3oB,EAAe,KADRs4C,EAAsB0B,EAAvCF,gBAAgDG,EAAmBD,EAA1Bz0D,MAIzCshC,GAAuF,QAA/Fr4B,EAAmBwjD,EAAkBhyC,EAAe,KAAOgyC,EAAkBhyC,EAAe,WAAG,IAAAxR,EAAAA,EAAK,CAAC,GAA7Fq4B,MACR3xB,EAAmD2xB,QAAAA,EAAS,CAAC,EAACqzB,EAAAhlD,EAAtDgoC,IAAKid,OAAS,IAAAD,EAAG,EAACA,EAAAE,EAAAllD,EAAEkoC,IAAKid,OAAS,IAAAD,EAAG,EAACA,EAE9C,MAAO,CACHvC,wBAAyB,CAAEroD,OAAAA,GAC3BiqD,YAAa,GACbC,eAAgB,GAChBjH,WAAY6H,GAAmB9qD,EAAQ6qC,GACvC6J,QAAS,CACL8I,WAAAA,EACAuN,QAASR,EACTS,QAASP,EACT7B,sBAAAA,EACAE,uBAAAA,EACAJ,2BAA4B6B,GAAsB3B,EAAwBC,EAC1EF,4BAA6B8B,GAAuB3B,EAAyBD,EAC7EA,WAAAA,EACA8B,UAAAA,EACAE,UAAAA,EACA9B,SAAAA,GAGZ,EAEM+B,GAAqB,SAAC9qD,EAAyB6qC,GAEjD,OADmBz7C,OAAO4Q,GAAQnL,SAAS,MAAQzF,OAAO4Q,GAAQnL,SAAS,KACvD,GAAKg2C,EAAW,EACxC,EAEMogB,IAAappD,EAAAA,GAAAA,WAAS,SAAAgE,GAAuC,IAApC7C,EAAO6C,EAAP7C,QAASmG,EAAOtD,EAAPsD,QAC9B2qC,GAAc7qC,EAAAA,GAAAA,KAEhBpN,EAWAi4C,EAXAj4C,cACAW,EAUAs3C,EAVAt3C,SACAksC,EASAoL,EATApL,UACA4X,EAQAxM,EARAwM,cACAn7C,EAOA2uC,EAPA3uC,eACA8xB,EAMA6c,EANA7c,cACA/jB,EAKA4gC,EALA5gC,UACAD,EAIA6gC,EAJA7gC,WACApG,EAGAinC,EAHAjnC,SACAysB,EAEAwa,EAFAxa,eACAhqB,EACAwkC,EADAxkC,YAGEu7B,GAAWyY,EAAAA,EAAAA,kBAAiB9mD,GACwE0uD,EAAA7nD,GAAhFjC,IAAAA,WAAiB0oD,GAAS,MAAM,kBAAMK,GAAmBrW,EAAajJ,EAAS,IAAC,GAAnGkf,EAAKmB,EAAA,GAAEC,EAAQD,EAAA,GACd7C,EAAkE0B,EAAlE1B,wBAAyB4B,EAAyCF,EAAzCE,YAAaC,EAA4BH,EAA5BG,eAAgBxV,EAAYqV,EAAZrV,QAExDlkC,EAAiBpP,IAAAA,SACnB,kBAAM84B,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,EAAe,GAC3E,CAAChqB,EAAazT,EAAey9B,IAG3BmvB,IAA8BtjD,GAAmB8xB,GAAkB/jB,GAAcD,GAGjFm4C,EAAW,cACa1G,EAAkBC,GAAyByG,GAAjE5J,qBAERpgD,IAAAA,WAAgB,WAAM,IAAAwjD,EACdF,IAAqB,QAANE,EAAAv/C,cAAM,IAAAu/C,GAANA,EAAQz0B,SAAS,CAAEC,IAAK,IAAKy0B,SAAU,WAC9D,GAAG,CAACH,IAEJtjD,IAAAA,WAAgB,WACZ,IAAMiqD,EAAgBlB,GAAmBrW,EAAajJ,GACtDsgB,EAAS,CAAEvhE,KAAM,sBAAuBogE,QAASqB,EAAchD,0BAC/D8C,EAAS,CAAEvhE,KAAM,iBAAkBogE,QAASqB,EAAc3W,SAE9D,GAAG,IAIH,IAAM4W,EAAiC96C,EAAe7oB,OAAS,IAAMsvC,EAC/Ds0B,IAAoB7W,EAAQqW,WAAarW,EAAQsW,QAEjDQ,GACDF,GAAmCA,GAAkCC,EAE1EE,EAAyDtD,GAAqB,CAC1ErU,YAAAA,EACAuU,wBAAAA,EACAxsD,cAAe2U,EAAe,GAC9BA,eAAAA,EACAq2B,WAAY19B,IALFuiD,EAAUD,EAAhBlyD,KAA+BoyD,EAAaF,EAA1B79C,YAO1Bg+C,EAAyDzD,GAAqB,CAC1ErU,YAAAA,EACAuU,wBAAAA,EACAxsD,cAAe2U,EAAe,GAC9BA,eAAAA,EACAq2B,WAAY19B,GAAWmiD,IALbO,EAAUD,EAAhBryD,KAA+BuyD,EAAaF,EAA1Bh+C,YAQpB46C,EAAsBmD,GAAkBL,GAAkCQ,EAE1EC,EAAyB,SAACzwD,EAAqBgW,GAAqC,IAAA8yC,EAAAC,EAAA2H,EAAA7H,EAAA8H,EAAAC,EAAAC,EAC9Ep2D,EAAoBuF,EAApBvF,MAAOg/C,EAAaz5C,EAAby5C,SAGf,GAAuC,KAAnCsT,EAAwBroD,OAA5B,CAMA,GAAIiT,SAAcld,GAAc,QAATquD,EAALruD,EAAO2+C,eAAO,IAAA0P,GAAdA,EAAgBvP,gBAAiB,CAC/C,IAAQA,EAAoB9+C,EAAM2+C,QAA1BG,gBACR,GAAKA,UAAAA,EAAiBhgD,SAAS6zC,GAAY,CACvC,IAAM7/B,EAAQ+M,KAAKC,MAAMg/B,EAAgBltD,OAAS,GAKlD,YAJAwjE,EAAS,CACLvhE,KAAM,sBACNogE,QAAS,CAAEthB,UAAWmM,EAAgBhsC,KAG9C,CACJ,CAGA,GAAIqK,SAAand,GAAc,QAATsuD,EAALtuD,EAAO2+C,eAAO,IAAA2P,GAAdA,EAAgB1P,0BAAsD,sBAA1B5+C,SAAc,QAATi2D,EAALj2D,EAAO2+C,eAAO,IAAAsX,OAAT,EAALA,EAAgBpsB,OAA7E,CACI,IAAQ+U,EAA6B5+C,EAAM2+C,QAAnCC,yBACF9rC,EAAQ+M,KAAKC,MAAM8+B,EAAyBhtD,OAAS,GAC3DwjE,EAAS,CACLvhE,KAAM,sBACNogE,QAAS,CAAE9W,iBAAkByB,EAAyB9rC,KAG9D,KARA,CAWA,IAAMy7C,EAA0B,QAAjBH,EAAGpuD,aAAK,EAALA,EAAOoG,eAAO,IAAAgoD,EAAAA,EAAI,GAC9BI,EACF,CAAC,SAAU,SAAS1vD,SAA8B,QAAtBo3D,EAACl2D,SAAc,QAATm2D,EAALn2D,EAAO2+C,eAAO,IAAAwX,OAAT,EAALA,EAAgBtsB,aAAK,IAAAqsB,EAAAA,EAAI,OAAQl2D,SAAc,QAATo2D,EAALp2D,EAAO2+C,eAAO,IAAAyX,GAAdA,EAAgBvsB,OAIlF,GAHAurB,EAAS,CAAEvhE,KAAM,kBAAmBogE,QAASzF,EAAuBD,EAAY,KAG5EmE,EAA4B,CAC5B,IAAM2D,GAAeC,EAAAA,GAAAA,IAAgBvY,EAAax4C,GAClDgxD,GAA+CjC,EAAAA,GAAAA,IAAc+B,GAArD9B,EAAegC,EAAfhC,gBAAiBzB,EAAUyD,EAAVzD,WAAY9yD,EAAKu2D,EAALv2D,MAErCo1D,EAAS,CACLvhE,KAAM,iBACNogE,QAAOniE,GAAAA,GAAA,GACCghE,EAAa,CAAEA,WAAAA,GAAe,CAAC,GAAC,GAAAh6D,GAAAA,GAAAA,GAAA,MAAAiG,OAChCwc,EAAY,oBAAqBg5C,GAAmB,GAAC,MAAAx1D,OAClDwc,EAAY,sBAAuBvb,GAASu0D,EAAkBzB,GAAU,SAAA/zD,OACpD,UAAjBwc,EAA2B,EAAI,GAAMvb,KAG3D,KAAO,CAEH,KAAM2+C,EAAQmW,YAAcnW,EAAQiW,YAAhC,MAA8C50D,GAAAA,EAAO2+C,QAAS,CAC9D,IAAA6X,EAAiCx2D,EAAM2+C,QAA/BiW,EAAS4B,EAAT5B,UAAWE,EAAS0B,EAAT1B,UACfF,GAAaE,GACbM,EAAS,CACLvhE,KAAM,iBACNogE,QAAS,CACLW,UAAAA,EACAE,UAAAA,IAIhB,CAGA,GAAI9V,EAAU,KAAAyX,EAAAC,EACV/+B,EAAuDqnB,EAA/CyI,EAAU9vB,EAAV8vB,WAAYmG,EAAWj2B,EAAXi2B,YAAanB,EAAiB90B,EAAjB80B,kBACjC/zB,EAA6C,QAA7C+9B,EAAqBhK,aAAiB,EAAjBA,EAAmBnrB,aAAK,IAAAm1B,EAAAA,EAAI,CAAC,EAA1C9e,EAAGjf,EAAHif,IAAKE,EAAGnf,EAAHmf,IACL8e,GAAsC,QAA9CD,EAAyB9I,aAAW,EAAXA,EAAaoF,gBAAQ,IAAA0D,EAAAA,EAAI,CAAC,GAA3CC,aAERvB,EAAS,CACLvhE,KAAM,iBACNogE,QAAOniE,GAAAA,GAAA,GACCovC,GAAiBumB,GAAckP,EAAe,CAAElP,WAAAA,EAAYuL,SAAU2D,GAAiB,CAAC,GACxFhY,EAAQiW,WAAajW,EAAQmW,UAAY,CAAC,EAAI,CAAEF,UAAWjd,EAAKmd,UAAWjd,KAG3F,MAAYmH,GAAY9d,GACpBk0B,EAAS,CACLvhE,KAAM,iBACNogE,QAAS,CAAExM,WAAY,EAAGuL,SAAU,IAGhD,CAxDA,CAxBA,MAFIoC,EAAS,CAAEvhE,KAAM,kBAAmBogE,QAAS,IAmFrD,EAEA5oD,IAAAA,WAAgB,WACRsqD,GAAYK,EAAuBL,EAAY,QAEvD,GAAG,CAACA,IAEJtqD,IAAAA,WAAgB,WACRyqD,GAAYE,EAAuBF,EAAY,SAEvD,GAAG,CAACA,IAyEJ,OACIzqD,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,iBAC3BxB,IAAAA,cAAC0jD,GAAAA,EAAqB,CAClBla,eAAa,EACbE,WAAW,EACXloC,UAAU,qBACV8nC,WAAW,eACX,cAAY,yBACZG,SAAUA,EACVE,UAAU,UACVrqC,GAAI0qD,EACJ9F,UAAWyE,EAAM9G,WACjB9mD,QAAS+tD,GAAmBsB,GAA2BvB,KAnFjEvV,EAAQmW,aACRnW,EAAQiW,WACNvpD,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,gEAClB1d,OAAQ,CACJ8R,UAAUyjD,EAAAA,EAAAA,wBAAuBzjD,GACjCquD,WAAWrtD,EAAAA,EAAAA,aAAYhB,GAAWk4C,EAAQmW,WAAW,GACrDF,WAAWntD,EAAAA,EAAAA,aAAYhB,GAAWk4C,EAAQiW,WAAW,MA6ErD5F,cAAe11D,OAAOg5D,EAAwBroD,QAAU,GAAK,EAC7D/S,KAAK,SACL09C,cAAY,EACZ99B,SA3EM,SAAC7kB,GACnB,IAAMszD,EAAYlsD,OAAOpH,EAAEmW,OAAO1V,QAClC0iE,EAAS,CACLvhE,KAAM,iBACNogE,QAASc,GAAmBxP,EAAWzQ,KAEvCyQ,EAAUqR,SAAS,MAAQrR,EAAUqR,SAAS,MAC9CxB,EAAS,CACLvhE,KAAM,qBACNogE,SAAS5pD,EAAAA,EAAAA,UAAS,+BAKTk7C,IAAclsD,OAAOi5D,EAAwBroD,UAG9DmrD,EAAS,CAAEvhE,KAAM,iBACjBuhE,EAAS,CACLvhE,KAAM,sBACNogE,QAAS,CAAEhqD,OAAQs7C,KAE3B,EAsDgB2J,cApDY,SAACj9D,GAAyC,IAAAk9D,EAAAC,EAAAyH,EAAAC,EAE9D,CAAC,IAAK,KAAKh4D,SAA4C,QAApCqwD,EAAe,QAAfC,EAAEn9D,EAAEq9D,mBAAW,IAAAF,OAAA,EAAdA,EAA+B5rD,YAAI,IAAA2rD,EAAAA,EAAI,MACZ,QAA/C0H,EAAuC,QAAvCC,EAACz9D,OAAOi5D,EAAwBroD,eAAO,IAAA6sD,OAAA,EAAtCA,EAAwCllE,cAAM,IAAAilE,EAAAA,EAAI,IAAM,IAEzDzB,EAAS,CACLvhE,KAAM,iBACNogE,QAASnf,EAAW,GAAKA,EAAW,IAGhD,EA2CgBtrB,aAAanf,EAAAA,EAAAA,UAAS,UACtB4qC,MAAO,YACP5uB,OAAQ8tC,GAAmBsB,GAA2BvB,EAAe,QAAU,UAC/Ehf,cAAc,SACd+Z,UAAU/E,EAAAA,EAAAA,wBAAuBzjD,GACjC/T,MAAO4/D,EAAwBroD,OAC/BiM,QAAQ,SAEZ7K,IAAAA,cAAC0rD,GAAY,CACTjxD,cAAeA,EACf2U,eAAgBA,EAChBhU,SAAUA,EACVk4C,QAASA,EACT4L,cAAeA,EACfkI,oBAAqBA,EACrBvxB,cAAeA,EACfh9B,UAAWouD,EAAwBroD,OACnCyoD,2BAA4BA,KAGpCrnD,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACV+iC,iCAAiC,EACjC9iC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SAlED,WAGPkjD,GACCL,GAAkCQ,GAClCN,GAA2BvB,GAC5BC,IAGmC,KAAnC7B,EAAwBroD,QAS5B6M,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,SAAUxE,MAAO4/D,EAAwBroD,UACpEgD,KATImoD,EAAS,CACLvhE,KAAM,qBACNogE,SAAS5pD,EAAAA,EAAAA,UAAS,iCAQ9B,KAmDJ,IAEA,ghCCtaA,IAAM2sD,IAAQlrD,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aACtBn2B,GAUIvG,EAAAA,GAAAA,KATAjJ,EAAMwP,EAANxP,OACAxD,EAAQgT,EAARhT,SACAX,EAAa2T,EAAb3T,cACAi7B,EAAsBtnB,EAAtBsnB,uBACApgB,EAAgBlH,EAAhBkH,iBACAugB,EAAaznB,EAAbynB,cACA3nB,EAAWE,EAAXF,YACAgqB,EAAc9pB,EAAd8pB,eACAH,EAAa3pB,EAAb2pB,cAE6BjB,EAAckI,GAAc,CAAEb,aAAc,CAAC,QAAS,YAA/ES,wBAE0C58B,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GAEnBoN,GAAiB0pB,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GACvE0zB,EAA2Bx8C,EAAetB,OAAM,SAAAtG,GAAI,IAAAqkD,EAAA,OAAI9zB,SAAqB,QAAR8zB,EAAb9zB,EAAgBvwB,UAAK,IAAAqkD,OAAR,EAAbA,EAAuB/0B,SAAS,IAGxFgI,EAAiD,IAA1B1vB,EAAe7oB,QAAgBsvC,GAAiB+1B,EAEvEhqD,EAAU5B,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAE1D,OACIhI,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACqpC,GAAAA,EAAS,CACNrO,SAAUtF,GAA0BpgB,EACpCzK,QAAQ,OACRsgC,UAAQ,EACRzgC,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,QAAQlZ,IAAG,QAAA4F,OAAU6wC,EAAe,aAAe,MACtFgF,cAAY,EACZjgC,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9B3gB,MAAK,GAAAqM,OAAKkL,EAAM,KAAAlL,QAAImrD,EAAAA,EAAAA,wBAAuBzjD,IAC3CoG,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCACxDvpB,OAAQ8b,GAAagI,EAAuB,QAAU,YAE1D9+B,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAASA,EACT+H,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YACvDhH,IAAAA,cAAC6pD,GAAU,CAACjoD,QAASA,EAASmG,QAASA,MAK3D,IAEA,MCjEA,GDiEA,GEnDA,IAAM+jD,GAA+BrzD,KACjC,SAACyhD,EAA4BjoB,GAAkD,OAAKA,EAASioB,EAAU,GACvG,KA0EJ,SAvEoB,SAAHhiD,GAOQ,IANrB6zD,EAAc7zD,EAAd6zD,eACA3wD,EAAQlD,EAARkD,SACA4wD,EAAmB9zD,EAAnB8zD,oBACAla,EAAgB55C,EAAhB45C,iBACAma,EAAiB/zD,EAAjB+zD,kBACA1kB,EAAwBrvC,EAAxBqvC,yBAEM2kB,EAAoBlsD,IAAAA,SACpBmsD,EAAqBnsD,IAAAA,OAA8B+rD,GAsBzD,OAfA/rD,IAAAA,WAAgB,WAMZ,OALKksD,EAAkBn/C,SAAWg/C,IAC9BG,EAAkBn/C,QAAUg/C,EAC5BxkB,EAAyB,CAAElgD,MAAO0kE,EAAgBlgE,KAAM,YAGrD,WACCqgE,EAAkBn/C,SAAWm/C,EAAkBn/C,UAAYo/C,EAAmBp/C,SAC9Ei/C,EAAoBE,EAAkBn/C,SAE1C++C,GAA6B/R,QACjC,CAEJ,GAAG,IAGC/5C,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,kBAAkB,cAAY,qBACzDxB,IAAAA,cAAA,OAAKwB,UAAU,wBACXxB,IAAAA,cAACg6C,GAAAA,EAAW,CACR7hD,KAAM8zD,EACNhS,cAAekS,EAAmBp/C,QAClCujC,iBAAkB,SAAC4J,GACXA,IAAciS,EAAmBp/C,UACrCo/C,EAAmBp/C,QAAUmtC,EAC7B4R,GAA6B5R,EAAW8R,GAC5C,KAGRhsD,IAAAA,cAAA,OAAKwB,UAAU,kBACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACG,MAAM,kCAAkCF,KAAK,MAC/ChD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,uBAEhChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKszB,GAAG,MAAM90B,UAAU,2BAC9BswC,EACG9xC,IAAAA,cAACA,IAAAA,SAAc,KACV8xC,EAAiB,IAAE12C,GAGxB4E,IAAAA,cAACgG,GAAAA,SAAQ,CAACI,MAAO,GAAIpC,OAAQ,QAK7ChE,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SArDD,WACX6kD,EAAkBn/C,QAAUo/C,EAAmBp/C,QAC/Cw6B,EAAyB,CAAElgD,MAAO8kE,EAAmBp/C,QAASlhB,KAAM,UACxE,KAuDJ,sgCC7EA,IAAMugE,IAAS3rD,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAAAgmC,EAAAuZ,EAA1ClT,EAAYrsC,EAAZqsC,aAC2BviC,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GACzBoM,GAUIvG,EAAAA,GAAAA,KATAy/B,EAASl5B,EAATk5B,UACiB+kB,EAAoBj+C,EAArCqlC,gBACAh5C,EAAa2T,EAAb3T,cACAW,EAAQgT,EAARhT,SACAka,EAAgBlH,EAAhBkH,iBACA7J,EAAQ2C,EAAR3C,SACAssB,EAAa3pB,EAAb2pB,cACAwP,EAAwBn5B,EAAxBm5B,yBACAkD,EAAwBr8B,EAAxBq8B,yBAGE4P,GAAkBC,EAAAA,GAAAA,MAClB2R,EAAoBI,EAAqBn6D,KAAI,SAACo6D,GAAoB,MAAM,CAAEjlE,MAAOilE,EAAc,IAC/Fxa,GAAoClgD,EAAAA,EAAAA,eAAcmmC,GAClD,GAC0C,QADxCmG,EACFnG,EAAct9B,EAAc+wC,sBAAc,IAAAtN,GAAoB,QAApBuZ,EAA1CvZ,EAA4C/H,0BAAkB,IAAAshB,OAApB,EAA1CA,EAAgEpwD,MAEhEklE,EAAqB,SAACrS,GAA0B,OAClDzuC,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,YAAaxE,MAAO6yD,IAAc,EAC3Dt4C,EAAU5B,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAEpDyyC,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UACIjnC,IAAAA,cAACwsD,GAAW,CACRT,eAAgBzkB,EAChBlsC,UAAUyjD,EAAAA,EAAAA,wBAAuBzjD,GACjC4wD,oBAAqBO,EACrBza,iBAAkBA,EAClBma,kBAAmBA,EACnB1kB,yBAA0BA,KAItC,CACIjoC,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC26C,GAAoB,CACjB3B,YACIh5C,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,SACIA,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4EAEhChH,IAAAA,cAAA,WACAA,IAAAA,cAAA,SACIA,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iGAEhChH,IAAAA,cAAA,WACAA,IAAAA,cAAA,SACIA,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oGAQlD0+B,GAAYtiC,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCAU/D,OARAvkC,IAAAA,WAAgB,WACZ,IAAMysD,EAAiBhiB,aAAwB,EAAxBA,EAA0BiiB,OAC7CD,GAAkBnlB,IAAcmlB,GAChCF,EAAmBE,EAG3B,GAAG,IAEEnlB,EAQDtnC,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,UAAWkkC,EACX1K,SAAU1lB,EACV5K,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eAAelZ,IAAG,SAAA4F,OAAW6wC,EAAe,aAAe,MAC9Fj7B,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9BmjC,UAAQ,EACRtgC,QAAQ,OACRxjB,MAAOigD,IAEXtnC,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAASA,EACT+H,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACL3F,WAAWtiC,EAAAA,GAAAA,GAAK,mBAAoBi3C,GAAmB,2BACvDzU,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sBA5B/ChH,IAAAA,cAAA,OAAKwB,UAAWkkC,GACZ1lC,IAAAA,cAACgG,GAAAA,SAAQ,MAiCzB,IAEA,MCzHA,GDyHA,ugCE9GA,IAAM2mD,IAAalsD,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aAC3Bn2B,GAA6FvG,EAAAA,GAAAA,KAArFzM,EAAQgT,EAARhT,SAAUs6B,EAAsBtnB,EAAtBsnB,uBAAwBupB,EAAe7wC,EAAf6wC,gBAAiB3pC,EAAgBlH,EAAhBkH,iBAAkB4rC,EAAW9yC,EAAX8yC,YAC5CpqB,EAAckI,GAAc,CAAEb,aAAc,CAAC,iBAAtES,wBAC0C58B,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA3C+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GAEnBsE,EAAqBtG,IAAAA,aAAkB,kBAAMgI,GAAU,EAAM,GAAE,IAE/DyyC,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UAAWjnC,IAAAA,cAAColD,GAA0B,CAAC9+C,mBAAoBA,KAE/D,CACIhH,GAAI,EACJ2nC,UACIjnC,IAAAA,cAAC26C,GAAoB,CACjB3B,YACIh5C,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qGAOhD,OACIhH,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACqpC,GAAAA,EAAS,CACN7nC,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCACxDvJ,SAAUtF,GAA0BpgB,EACpC5K,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cAAclZ,IAAG,cAAA4F,OAAgB6wC,EAAe,aAAe,MAE/Fj7B,QAAS,WAAF,OAAQtB,GAAU,EAAK,EAC9BmjC,UAAQ,EACRtgC,QAAQ,OACRxjB,MAAO43D,GAAmBiC,EAAc,GAAHxtD,OAAMwtD,EAAW,KAAAxtD,QAAImrD,EAAAA,EAAAA,wBAAuBzjD,IAAc,IAC/F4f,OAAQ8b,EAAY,QAAU,YAElC92B,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ3B,EACRnG,QAAS0E,EACTqD,SAAS,OACTC,YAAY,EACZwhC,kBAAmBrjC,GAEnB/H,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACqrC,GAAQ,CACLzF,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBAM3D,IAEA,MCrEA,GDqEA,ugCE/DA,IAAM4lD,IAAgBnsD,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aAC9Bn2B,GAAuFvG,EAAAA,GAAAA,KAA/EpN,EAAa2T,EAAb3T,cAAe6a,EAAgBlH,EAAhBkH,iBAAkB7J,EAAQ2C,EAAR3C,SAAUysB,EAAc9pB,EAAd8pB,eAAgB20B,EAAez+C,EAAfy+C,gBAC7DC,GAAWhzB,EAAAA,GAAAA,IAAqBr/B,GAClCsyD,EAAgB,EAKQ,mBAAnB70B,GAAyD,oBAAlBz9B,GACpB,gBAAnBy9B,GAAsD,eAAlBz9B,IAGzCsyD,EAAgBD,EAAS3hD,WAAU,SAAA4uB,GAAG,OAClC7B,EAAiB6B,EAAIt/B,gBAAkBy9B,EAAiB6B,EAAI1yC,QAAUoT,CAAa,KAI3F,IAAMyrD,EAAoB6G,EAAgB,EAAI,EAAIA,EACgB/qD,EAAAC,GAAjCjC,IAAAA,SAAekmD,GAAkB,GAA3DrsB,EAAS73B,EAAA,GAAEokD,EAAWpkD,EAAA,GAiB7B,OANAhC,IAAAA,WAAgB,WAAM,IAAAgtD,EAClB5G,EAAYF,GACZ2G,EAA2C,QAA5BG,EAACF,EAAS5G,UAAkB,IAAA8G,OAAA,EAA3BA,EAA6BvyD,cAEjD,GAAG,CAACqyD,EAAU5G,IAET4G,EAASvmE,OAEVyZ,IAAAA,cAACqmD,GAAAA,EAA4B,CACzB7kD,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwBmhC,GAAgB,mCACxD+hB,mBAAiB,EACjB76C,SApBgB,SAACwhD,GAAgC,IAAAC,EACrDtvD,EAAgF,QAAhFsvD,EAAmDJ,EAASG,UAAoB,IAAAC,EAAAA,EAAI,CAAC,EAA9D1kE,EAAIoV,EAAnBnD,cAA4Bm/B,EAAUh8B,EAAjBvW,MAC7B++D,EAAY6G,GACZJ,EAAgBrkE,GACZoxC,IAAen/B,GACfgR,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,gBAAiBxE,MAAOuyC,IAE3D,EAcQvrC,QAASy+D,EAAS56D,KAAI,SAAAoS,GAAA,IAAGoG,EAAKpG,EAALoG,MAAK,MAAQ,CAAEswB,SAAU1lB,EAAkB5K,MAAAA,EAAO,IAC3E67C,kBAAmB1sB,EACnB/rC,IAAG,GAAA4F,OAAKmmC,GAASnmC,OAAG4hB,KARC,IAWjC,IAEA,MCtDA,GDsDA,GE5BA,IAAM63C,IAAkB1sD,EAAAA,GAAAA,WAAS,SAAAvI,GAA6C,IAA1CqsC,EAAYrsC,EAAZqsC,aAChCn2B,GAAoDvG,EAAAA,GAAAA,KAA5CpN,EAAa2T,EAAb3T,cAAekJ,EAAgByK,EAAhBzK,iBAAkBC,EAAMwK,EAANxK,OACnCO,EAAY,SAACT,GAAqB,OACpCH,GAAoB,CAAEG,cAAAA,EAAejJ,cAAAA,EAAekJ,iBAAAA,EAAkBC,OAAAA,GAAS,EAEnF,OACI5D,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GACP,iCACAmhC,GAAgB,8CAGnBA,GACGvkC,IAAAA,cAACA,IAAAA,SAAc,KACVmE,EAAU,eAAiBnE,IAAAA,cAACotD,GAAyB,MACrDjpD,EAAU,0BAA4BnE,IAAAA,cAAC8+C,GAAkB,MACzD36C,EAAU,iBAAmBnE,IAAAA,cAACqtD,GAAW,MACzClpD,EAAU,WAAanE,IAAAA,cAACstD,GAAU,OAG3CttD,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GACP,iCACAmhC,GAAgB,+CAGnBpgC,EAAU,oBAAsBnE,IAAAA,cAAC4sD,GAAa,CAACroB,aAAcA,IAC7DpgC,EAAU,eAAiBnE,IAAAA,cAACutD,GAAmB,CAAChpB,aAAcA,IAC9DpgC,EAAU,aAAenE,IAAAA,cAACu3C,GAAQ,CAAChT,aAAcA,IACjDpgC,EAAU,WAAanE,IAAAA,cAACosD,GAAM,CAAC7nB,aAAcA,IAC7CpgC,EAAU,YAAcnE,IAAAA,cAACwtD,GAAO,CAACjpB,aAAcA,IAC/CpgC,EAAU,gBAAkBnE,IAAAA,cAACm6C,GAAU,CAAC5V,aAAcA,IACtDpgC,EAAU,eAAiBnE,IAAAA,cAACw8C,GAAU,CAACjY,aAAcA,IACrDpgC,EAAU,UAAYnE,IAAAA,cAAC2rD,GAAK,CAACpnB,aAAcA,IAC3CpgC,EAAU,qBAAuBnE,IAAAA,cAAC0+C,GAAc,CAACna,aAAcA,IAC/DpgC,EAAU,kBAAoBogC,GAAgBvkC,IAAAA,cAACqtD,GAAW,MAC1DlpD,EAAU,gBAAkBnE,IAAAA,cAAC2sD,GAAU,CAACpoB,aAAcA,IACtDpgC,EAAU,oBAAsBnE,IAAAA,cAAC4mD,GAAc,CAACriB,aAAcA,IAC9DpgC,EAAU,gBAAkBogC,GAAgBvkC,IAAAA,cAACotD,GAAyB,MACtEjpD,EAAU,uBAAyBogC,GAAgBvkC,IAAAA,cAACytD,GAAuB,MAC3EtpD,EAAU,kBAAoBogC,GAAgBvkC,IAAAA,cAACurC,GAAW,MAC1DpnC,EAAU,2BAA6BogC,GAAgBvkC,IAAAA,cAAC8+C,GAAkB,MAC1E36C,EAAU,YAAcogC,GAAgBvkC,IAAAA,cAACstD,GAAU,OAEvDnpD,EAAU,sBAAwBnE,IAAAA,cAAC0tD,GAA+B,CAACnpB,aAAcA,IAG9F,IAEA,qfC5EA59C,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,GAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAAL,QAAA,KAAAY,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAAL,QAAA,GAAAU,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,GAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA+E,YAAA,QAAAhF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA8E,aAAA9E,EAAAiF,MAAA,EAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAoC,IAAApC,EAAAmF,UAAA/C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA6E,SAAA,IAAA3E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAuF,UAAA,SAAAxB,IAAA,KAAA/D,EAAAP,QAAA,KAAAM,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA2F,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA2F,MAAA,WAAA3F,GAAAD,EAAA,EAAA6F,KAAA,gBAAAvC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,IAAA,EAAAlC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAA7E,OAAA,EAAAY,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA4B,EAAA,UAAAtF,EAAA0D,QAAA,KAAAuB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,WAAAsB,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA6E,KAAAjF,EAAA2D,SAAA,OAAA2B,EAAAtF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAqC,KAAAjF,EAAA4D,WAAA,OAAA0B,EAAAtF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAA7E,OAAA,EAAAO,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAuB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA8D,SAAArF,EAAA,EAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAA+D,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAgG,SAAA/F,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAA7E,OAAA,EAAAK,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA6C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAoG,GAAA/F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAuE,QAAArC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA8F,GAAAhG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAN,UAAA,WAAA6F,SAAA,SAAArF,EAAAK,GAAA,IAAAK,EAAAP,EAAAiG,MAAArG,EAAAD,GAAA,SAAAuG,EAAAlG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,OAAAnG,EAAA,UAAAmG,EAAAnG,GAAA+F,GAAAxF,EAAAV,EAAAK,EAAAgG,EAAAC,EAAA,QAAAnG,EAAA,CAAAkG,OAAA,gBAAA8U,GAAAnb,EAAAF,GAAA,gBAAAE,GAAA,GAAAkQ,MAAAkV,QAAAplB,GAAA,OAAAA,CAAA,CAAAmqB,CAAAnqB,IAAA,SAAAA,EAAA8B,GAAA,IAAA/B,EAAA,MAAAC,EAAA,yBAAAS,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,uBAAAD,EAAA,KAAAD,EAAAK,EAAAK,EAAAM,EAAAJ,EAAA,GAAAqB,GAAA,EAAA1B,GAAA,SAAAG,GAAAT,EAAAA,EAAA6B,KAAA5B,IAAA+D,KAAA,IAAAjC,EAAA,IAAA7B,OAAAF,KAAAA,EAAA,OAAAgC,GAAA,cAAAA,GAAAjC,EAAAU,EAAAoB,KAAA7B,IAAAsD,QAAA3C,EAAA6D,KAAAzE,EAAAS,OAAAG,EAAAjB,SAAAqC,GAAAC,GAAA,UAAA/B,GAAAK,GAAA,EAAAF,EAAAH,CAAA,iBAAA+B,GAAA,MAAAhC,EAAA,SAAAe,EAAAf,EAAA,SAAAE,OAAAa,KAAAA,GAAA,kBAAAT,EAAA,MAAAF,CAAA,SAAAO,CAAA,EAAA0pB,CAAApqB,EAAAF,IAAA,SAAAE,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAqqB,GAAArqB,EAAAU,GAAA,IAAAX,EAAA,GAAA6W,SAAAhV,KAAA5B,GAAA2F,MAAA,uBAAA5F,GAAAC,EAAA8E,cAAA/E,EAAAC,EAAA8E,YAAAC,MAAA,QAAAhF,GAAA,QAAAA,EAAAmQ,MAAA8G,KAAAhX,GAAA,cAAAD,GAAA,2CAAAuqB,KAAAvqB,GAAAsqB,GAAArqB,EAAAU,QAAA,GAAA6pB,CAAAvqB,EAAAF,IAAA,qBAAA+D,UAAA,6IAAA2mB,EAAA,UAAAH,GAAArqB,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAAP,UAAAiB,EAAAV,EAAAP,QAAA,QAAAK,EAAA,EAAAK,EAAA+P,MAAAxP,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,CAwDA,SAlDyB,WACrB,IAAAmnB,GAAuEvG,EAAAA,GAAAA,KAA/D0G,EAAqBH,EAArBG,sBAAuB9C,EAAQ2C,EAAR3C,SAAkBkiD,EAAiBv/C,EAAzBxK,OAClBnI,EAAmB8Z,KAAlCvD,cACF47C,GAAsBjhD,EAAAA,EAAAA,SAAO,GACKlK,EAAAR,IAAZS,EAAAA,EAAAA,UAAS,IAAG,GAAjCkB,EAAMnB,EAAA,GAAEorD,EAASprD,EAAA,GAElBqrD,GAAoB7gD,EAAAA,EAAAA,cACtB,SAACxR,GACG,IAAMsyD,EAAkBH,EAAoB7gD,QAE5C,OAAOtR,EAAemS,MAAK,SAAAyd,GACvB,IAAM2iC,IAAsBD,GAA0D,IAAjC1iC,EAAYL,iBACjE,OAAOK,EAAYznB,SAAW+pD,GAAqBK,CACvD,GACJ,GACA,CAACL,IAGCM,GAAmBhhD,EAAAA,EAAAA,aAAW,eAAA/U,EAAAjL,GAAAtG,KAAAmF,MAChC,SAAA4J,EAAOw4D,GAAkB,IAAAH,EAAAI,EAAAC,EAAA,OAAAznE,KAAAuB,MAAA,SAAAyN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA9K,MAAA,OAKC,GAHhBkjE,EAAkBH,EAAoB7gD,QACtCohD,GAAqBJ,GAAmBG,EACxCE,EAAqBT,GAAqBO,GAAcA,EAC9DL,EAAUK,IAENC,IAAqBC,EAAkB,CAAAz4D,EAAA9K,KAAA,eAAA8K,EAAA9K,KAAA,EACjC4gB,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,SAAUxE,MAAO6mE,KAAe,OACjE3/C,IAAwB,QAE5B0B,EAAAA,EAAAA,mBAAkB,CAAErM,OAAQsqD,IAAc,wBAAAv4D,EAAAjJ,OAAA,GAAAgJ,EAAA,KAC7C,gBAAAmF,GAAA,OAAA3C,EAAAhL,MAAA,KAAA5G,UAAA,EAb+B,GAchC,CAACmlB,EAAU8C,EAAuBo/C,IAetC,OAZA9qD,EAAAA,EAAAA,YAAU,WACN,IAAMoQ,EAAO,eAAArV,EAAA3Q,GAAAtG,KAAAmF,MAAG,SAAAkK,IAAA,IAAAk4D,EAAA,OAAAvnE,KAAAuB,MAAA,SAAA+N,GAAA,cAAAA,EAAA1J,KAAA0J,EAAApL,MAAA,WACOijE,EAAkBryD,GAAe,CAAAxF,EAAApL,KAAA,QAAAoL,EAAAJ,GAC9C83D,EAAiB13D,EAAApL,KAAA,uBAAAoL,EAAApL,KAAA,GACVwjE,EAAAA,EAAAA,mBAAkB5yD,GAAe,UAAAxF,EAAAq4D,GAAAr4D,EAAA1L,KAAA0L,EAAAq4D,GAAE,CAAFr4D,EAAApL,KAAA,QAAAoL,EAAAq4D,GAAK,UAAS,OAAAr4D,EAAAJ,GAAAI,EAAAq4D,GAAA,QAFtDJ,EAAUj4D,EAAAJ,GAIhBo4D,EAAiBC,GACjBN,EAAoB7gD,SAAU,EAAK,yBAAA9W,EAAAvJ,OAAA,GAAAsJ,EAAA,KACtC,kBAPY,OAAA4H,EAAA1Q,MAAA,KAAA5G,UAAA,KAQb2sB,GACJ,GAAG,CAACxX,EAAgBqyD,EAAmBG,EAAkBN,IAElD,CAAE/pD,OAAAA,EACb,u8DCtCA,IAAM2qD,IAAsB9tD,EAAAA,GAAAA,WAAS,SAAAvI,GAA4C,IAAzCmjD,EAAMnjD,EAANmjD,OAAQpkC,EAAI/e,EAAJ+e,KAC5C7I,GAAuCvG,EAAAA,GAAAA,KAA/B2mB,EAAapgB,EAAbogB,cAAeD,EAAWngB,EAAXmgB,YAgBvB,OAbAvuB,IAAAA,WAAgB,WACZuuB,EAAYtX,EAEhB,GAAG,CAACA,IAEJjX,IAAAA,WAAgB,WACZwuB,EAAc6sB,EAIlB,GAAG,CAACA,EAAOt1C,KAAK,OAGT,IACX,IAEMyoD,IAAa/tD,EAAAA,GAAAA,WAAS,WACxB,IAAA0J,GAAkDhK,EAAAA,EAAAA,KAA1C3J,EAAE2T,EAAF3T,GAAIJ,EAAM+T,EAAN/T,OAAQwjB,EAAczP,EAAdyP,eAAgB5Y,EAASmJ,EAATnJ,UAC5BW,GAAas1B,EAAAA,GAAAA,KAAbt1B,SAEJ8sD,EAQA70C,EARA60C,0BACAC,EAOA90C,EAPA80C,mCACAC,EAMA/0C,EANA+0C,WACAC,EAKAh1C,EALAg1C,YACAC,EAIAj1C,EAJAi1C,0BACAC,EAGAl1C,EAHAk1C,cACAC,EAEAn1C,EAFAm1C,gBACAC,EACAp1C,EADAo1C,kBAEE91C,EAAMlZ,IAAAA,OAAuF,MAC3Fm3B,EAAkBn2B,EAAlBm2B,cACA83B,EAAiGz4D,EAAjGy4D,2BAA4BC,EAAqE14D,EAArE04D,wBAAyBz4D,EAA4CD,EAA5CC,gBAAiB04D,EAA2B34D,EAA3B24D,uBACtEx9C,EAAuCvb,EAAvCub,iBAAkBy9C,EAAqBh5D,EAArBg5D,iBACH3zD,EAAmB8Z,KAAlCvD,cACApO,EAAWyrD,KAAXzrD,OACR0rD,GAiBIznD,EAAAA,GAAAA,KAhBoB0nD,EAAcD,EAAlCE,mBACAC,EAAgBH,EAAhBG,iBACAC,EAAYJ,EAAZI,aACAj1D,EAAa60D,EAAb70D,cACAk1D,EAAYL,EAAZK,aACAC,EAAsBN,EAAtBM,uBACAC,EAAWP,EAAXO,YACwBC,EAAYR,EAApCS,uBACAC,EAAcV,EAAdU,eACAC,EAAiBX,EAAjBW,kBACAxkD,EAAQ6jD,EAAR7jD,SACAykD,EAAkBZ,EAAlBY,mBACAC,EAAQb,EAARa,SACAC,EAAcd,EAAdc,eACAC,EAAaf,EAAbe,cACAC,EAAWhB,EAAXgB,YAEEvsD,GAAiBy0B,EAAAA,EAAAA,uBAAsB/9B,GACvC81D,EAAQ9pE,GAAAA,GAAA,CACV+pE,UAAWvB,EACXwB,8BAA8B,EAC9BC,SAAU/+C,EAAiB+B,cAC3B/J,SAAUulD,EAA0B,SAAW,OAC/CyB,MAAOl6D,EAAkB,OAAS,SAC9BsN,EAAiB,CAAE6sD,WAAY,IAAKC,gBAAiBlvD,EAAW,OAAInb,GAAc,CAAC,GACnFqpE,EAAc,CAAEe,WAAY,KAAQ,CAAC,GAG7ChzD,EAA4C6wD,GAA6B,CAAC,EAAlE7+B,EAAYhyB,EAAZgyB,aAAckhC,EAAiBlzD,EAAjBkzD,kBAEtB9wD,IAAAA,WAAgB,WAAM,IAAA+wD,EAClB,IAAKhtD,GAAkBksD,IAAiC,QAAhBc,EAAK73C,EAAInM,eAAO,IAAAgkD,GAAXA,EAAaC,0BAA2B,KAAAC,EAEtE,QAAXA,EAAA/3C,EAAInM,eAAO,IAAAkkD,GAAXA,EAAaC,cADU,WAAH,OAASzlD,EAAS,CAAE1O,OAAQ,CAAElR,KAAM,gBAAiBxE,MAAO6oE,IAAuB,GAE3G,CACJ,GAAG,CAACnsD,EAAgB0H,EAAUykD,EAAoBD,IAElD,IAgBMkB,EAAgCrB,EAAe,CAACA,GAAYp8D,OAAAkJ,GAAK2yD,IAAkBA,EAGnF6B,EAA4B,IAAhBxC,EAAoB,EAAI,GAE1C,OAAKhrD,GAAWnI,EAAelV,OAE3ByZ,IAAAA,cAACqxD,GAAAA,GAAU,CACPn4C,IAAKA,EACLi4C,SAAUA,EACVG,gBAAiBxC,EACjByC,cAAehD,GACfiD,UAAW7vD,EAAW,OAAInb,EAC1BirE,0BAA2B,IAC3BC,oBAAkB,EAClBC,qBAAsB,KACtBC,oBAAqB,SAACvoE,GAAU,OAAK2mE,GAAgB3mE,GAAG,EAAK,EAC7DwoE,UAAWlD,EACXmD,YAAa,CACT9/C,cAAevf,KAAKQ,MAAMR,KAAKC,UAAU+I,KAE7Cs2D,UAAW,CACP//C,cAAevf,KAAKQ,MAAMR,KAAKC,UAAU+I,KAE7Cu2D,SAAU,CACNhgD,eAAe,GAEnBigD,yBAA0BtwD,EAC1BuwD,oBAAoB,EACpB5yD,GAAG,QACHqC,SAAUA,EACVwwD,yBAAyB,EACzBC,QAASzwD,EAAWyvD,OAAY5qE,EAChCooE,YAAaqB,GAAqBlsD,EAAiB,EAAI6qD,EACvDyD,WAAYhC,EACZiC,cAAenC,EACfoC,oBAAqBnC,EACrBoC,iBAAkBlC,EAClBC,SAAUA,EACVkC,uBAAwBxC,GAAqBlsD,EAC7C2uD,oBAAqBjD,EACrB7rD,OAAQA,EACR+uD,WAAY,WAAF,OAAQ3yD,IAAAA,cAAA,WAAO,EACzB4yD,mBAAoBxD,EACpByD,YAAY,EACZC,cAAe,WACX,OAAO9yD,IAAAA,cAAC+yD,GAAAA,EAAc,CAAChE,gBAAiBA,EAAiBC,kBAAmBA,GAChF,EACAgE,eAAgBtD,EAChBuD,eAAgBtD,EAChBuD,yBAAyB,EACzBC,qBAAsBvD,EACtBwD,gBApEgB,SAAC33D,GACrB,IAAM43D,EAAkB,kBAClBC,EAAsB73D,EAAemS,MAAK,SAAA9kB,GAAC,OAAIA,EAAEy1B,SAAW80C,CAAe,IACjF,OAAO53D,EACFhP,QACAqvB,MAAK,SAACt0B,EAAGu0B,GAAC,OAAMv0B,EAAE6U,aAAe0f,EAAE1f,cAAgB,EAAI,CAAC,IACxDnK,KAAI,SAAApJ,GAAC,OAAIA,EAAEy1B,MAAM,IACjB1sB,QACG,SAACslD,EAAK54B,GAEF,OAD6B,IAAzB44B,EAAI7mC,QAAQiO,IAAgB44B,EAAI9rD,KAAKkzB,GAClC44B,CACX,GACAmc,EAAsB,CAACD,GAAmB,GAEtD,EAuDQE,yBAA0BxvD,EAC1ByvD,YAAa,CACTxkC,IAAKrtB,EAAW,GAAK,KAEzB8xD,QAAM,EACNC,YAAa/xD,GAAYwtD,EAAyB,IAAM,IAEvDprD,GACG/D,IAAAA,cAAC2zD,GAAAA,EAAyB,CACtBx8B,cAAeA,EACfvH,aAAcA,EACdkhC,kBAAmBA,EACnBjC,0BAA2BA,EAC3B+E,0BAA2BlF,EAAmCmF,0BAC9DjwD,OAAQA,EACR++B,UAAWhhC,KA/DmB,IAoElD,IACA,kvEC7KA,IAAMmyD,GAAoE,SAAH57D,GAA4B,IAAtBzB,EAAeyB,EAAfzB,gBACZuL,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAAtD6zB,EAAa7xB,EAAA,GAAE8xB,EAAc9xB,EAAA,GAC9BiyB,EAAoBj0B,IAAAA,SAMxBm0B,EAAAlyB,GAJ4CmyB,GAA6C,mBAAoB,CAC3GC,uBAAuB,EACvBC,YAAY,EACZC,gBAAgB,IAClB,GAJKC,EAAgBL,EAAA,GAAEM,EAAiBN,EAAA,GAKlCE,GAA0BG,GAAoB,CAAC,GAA/CH,sBAEFgN,EAAY5qC,EACZs9D,GAAAA,GAAqBC,qBAAqBC,KAC1CF,GAAAA,GAAqBC,qBAAqBE,MAE1CriC,EAAgB,WAClBiC,GAAe,GACfW,EAAiBhuC,GAAAA,GAAC,CAAC,EAAI+tC,GAAgB,IAAEH,uBAAuB,IACpE,EAQA,OANAr0B,IAAAA,WAAgB,WAGZ,OAFKq0B,IAAuBJ,EAAkBlnB,QAAUzb,YAAW,kBAAMwiC,GAAe,EAAK,GAAE,MAExF,kBAAM1qB,aAAa6qB,EAAkBlnB,QAAQ,CACxD,GAAG,CAACsnB,IAEAA,EAA8B,KAG9Br0B,IAAAA,cAACi1B,GAAAA,EAAK,CACFC,SAAUrB,EACVsB,iBAAe,EACfxzB,UAAQ,EACRyzB,eAAa,EACbC,6BAA2B,EAC3BC,YAAazD,EACb0D,mBAAoBv1B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAChDguB,sBAAuBnD,GAEvB7xB,IAAAA,cAACi1B,GAAAA,EAAMO,OAAM,CACTX,MAAO70B,IAAAA,cAAC4G,GAAY,CAACrB,IAAK87B,EAAW57B,MAAM,0BAC3CA,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,8BAEvChH,IAAAA,cAACi1B,GAAAA,EAAMQ,KAAI,KACPz1B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,0EAI5C,EAEA,MC3DA,GD2DehH,IAAAA,KAAW8zD,kzCEK1B,SAnD6D,SAAH57D,GAQpD,IAPFi8D,EAAMj8D,EAANi8D,OACAn5B,EAAQ9iC,EAAR8iC,SACA0a,EAAQx9C,EAARw9C,SACA0e,EAAel8D,EAAfk8D,gBACAC,EAAgBn8D,EAAhBm8D,iBACAC,EAASp8D,EAATo8D,UACA7uD,EAAKvN,EAALuN,MAEM8uD,EACFv0D,IAAAA,cAACw0D,GAAAA,EAAkC,CAACjzD,SAAS,KAAKiI,KAAK,6CAErDirD,EAAqBz0D,IAAAA,cAAC00D,GAAAA,EAA6B,CAAClrD,KAAK,kCAAkCjI,SAAS,OACnDkB,EAAAR,IAAxBS,EAAAA,EAAAA,WAAkB,GAAM,GAAhDiyD,EAAQlyD,EAAA,GAAEmyD,EAAUnyD,EAAA,GAE3B,OACIzC,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,sBAAuB,CAAE,8BAA+B+wD,KACzEn0D,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAA,UACIwB,UAAU,iCACV,cAAY,mCACZ8H,QAAS8qD,EACTp5B,SAAUA,GAET0a,GAAY6e,GAEjBv0D,IAAAA,cAAA,OAAKwB,UAAU,8BAA8BiE,IAEjDzF,IAAAA,cAAA,UACIwB,WAAW4B,EAAAA,GAAAA,GAAK,4BAA6B,CAAE,sCAAuC43B,IACtF,cAAY,8BACZ1xB,QAAS,aACAurD,EAAAA,EAAAA,kBAAmBR,GAAkBA,GAC9C,EACAS,YAAa,WACJH,GAAUC,GAAW,EAC9B,EACAG,WAAY,WACHJ,IAAYN,GAAqBr5B,GAClCq5B,IAEJO,GAAW,EACf,EACA55B,SAAUA,GAETs5B,GAAaG,GAI9B,m8ECxCA,IAoCMO,GAKD,SAAHp3D,GAAA,IAAM8S,EAAQ9S,EAAR8S,SAAUukD,EAAar3D,EAAbq3D,cAAeZ,EAAgBz2D,EAAhBy2D,iBAAkBa,EAAoBt3D,EAApBs3D,qBAAoB,OACnEl1D,IAAAA,cAAA,OAAKwB,UAAW0zD,EAAuB,0BAA4B,IAC/Dl1D,IAAAA,cAACm1D,GAAAA,GAAS,CAACC,YAAa1kD,EAASpR,KAC5B,SAAA+1D,GAAQ,OACLr1D,IAAAA,cAAA,MAAAkG,GAAA,GACQmvD,EAASC,eAAc,CAC3Bp8C,IAAKm8C,EAASE,SACd/zD,UAAU,4CAEVxB,IAAAA,cAACw1D,GAAsB,CACnB/oC,MAAO/b,EAAS+b,MAChBwoC,cAAeA,EACfZ,iBAAkBA,IAErBgB,EAASl3C,YACR,IAGZ,EAGJq3C,GAID,SAAHlxD,GAAmD,IAA7CmoB,EAAKnoB,EAALmoB,MAAOwoC,EAAa3wD,EAAb2wD,cAAeZ,EAAgB/vD,EAAhB+vD,iBAC1B,OACIr0D,IAAAA,cAAAA,IAAAA,SAAA,KACKysB,EAAMv6B,KACH,SAACsV,EAAMC,GAAK,OACRD,EAAKlI,IACDU,IAAAA,cAACy1D,GAAAA,GAAS,CAAC3nE,IAAK0Z,EAAKlI,GAAIo2D,YAAaluD,EAAKlI,GAAImI,MAAOA,IACjD,SAAA4tD,GAAQ,OACLr1D,IAAAA,cAAA,MAAAkG,GAAA,CACIgT,IAAKm8C,EAASE,UACVF,EAASM,eACTN,EAASO,gBAAe,CAC5Bp0D,UAAU,kCAEVxB,IAAAA,cAAC61D,GAAiB,CACdpwD,MAAO+B,EAAK/B,MACZ4uD,iBAAkB,WAAF,OAAQA,EAAiB7sD,EAAK,EAC9C2sD,OAAQc,IAAkBztD,EAAKlI,GAC/B07B,SAA2B,IAAjBvO,EAAMlmC,SAElB,GAGjB,IAIrB,EAEMuvE,GAAiC,SACnCC,EACAjkE,GAEA,IAAQkkE,EAAwBlkE,EAAxBkkE,OAAQC,EAAgBnkE,EAAhBmkE,YAChB,IAAKA,EAAa,OAAOF,EAEzB,IAAMG,EAAcH,EAAc5qD,WAAU,SAAAuF,GAAQ,OAAIA,EAASpR,KAAO02D,EAAOZ,WAAW,IACpFe,EAAYJ,EAAc5qD,WAAU,SAAAuF,GAAQ,OAAIA,EAASpR,KAAO22D,EAAYb,WAAW,IAE7F,IAAqB,IAAjBc,IAAqC,IAAfC,EAAkB,OAAOJ,EAEnD,IAAMK,EAAiBL,EAAcG,GAC/BG,EAAeN,EAAcI,GAE7BG,EAAct/D,MAAM8G,KAAKs4D,EAAe3pC,OACvC8pC,EAAgDt0D,GAAnCq0D,EAAYE,OAAOR,EAAOvuD,MAAO,GAAE,GAAvC,GAEhB,GAAIyuD,IAAgBC,EAChBG,EAAYE,OAAOP,EAAYxuD,MAAO,EAAG8uD,OACtC,CACH,IAAME,EAAYz/D,MAAM8G,KAAKu4D,EAAa5pC,OAC1CgqC,EAAUD,OAAOP,EAAYxuD,MAAO,EAAG8uD,GACvCR,EAAcI,GAAU1vE,GAAAA,GAAA,GAAQ4vE,GAAY,IAAE5pC,MAAOgqC,GACzD,CAGA,OADAV,EAAcG,GAAYzvE,GAAAA,GAAA,GAAQ2vE,GAAc,IAAE3pC,MAAO6pC,IAClDt/D,MAAM8G,KAAKi4D,EACtB,EAEA,SA7HqD,SAAH79D,GAK5C,IAJF0X,EAAU1X,EAAV0X,WACAykD,EAAgBn8D,EAAhBm8D,iBACAqC,EAAMx+D,EAANw+D,OACAxB,EAAoBh9D,EAApBg9D,qBAEmElzD,EAAAC,GAA1BjC,IAAAA,SAAe4P,GAAW,GAA5DmmD,EAAa/zD,EAAA,GAAE20D,EAAe30D,EAAA,GACwCiM,EAAAhM,GAAnCjC,IAAAA,SAA8B,MAAK,GAAtEi1D,EAAahnD,EAAA,GAAE2oD,EAAgB3oD,EAAA,GActC,OADAjO,IAAAA,WAAgB,kBAAM22D,EAAgB/mD,EAAW,GAAE,CAACA,IAEhD5P,IAAAA,cAAC62D,GAAAA,GAAe,CAACC,UAbG,SAAChlE,GAErB,GADA8kE,EAAiB,MACZ9kE,EAAOmkE,YAAZ,CAEA,IAAMc,EAAoBjB,GAA+BC,EAAejkE,GACxE6kE,EAAgBI,GAChBL,SAAAA,EAASK,EAJsB,CAKnC,EAMiDC,YAJvB,SAACr+C,GAAgB,OAAKi+C,EAAiBj+C,EAAM+8C,YAAY,GAK1EK,EAAc7jE,KAAI,SAAAwe,GAAQ,OACvB1Q,IAAAA,cAACg1D,GAAiB,CACdlnE,IAAK4iB,EAASpR,GACdoR,SAAUA,EACVukD,cAAeA,EACfZ,iBAAkBA,EAClBa,qBAAsBA,GACxB,IAIlB,8GCJA,SAxC6D,SAAHh9D,GAQpD,IAPFuN,EAAKvN,EAALuN,MACAoG,EAAQ3T,EAAR2T,SACA6pC,EAAQx9C,EAARw9C,SACA4e,EAASp8D,EAATo8D,UACAF,EAAel8D,EAAfk8D,gBACAC,EAAgBn8D,EAAhBm8D,iBACA4C,EAAgB/+D,EAAhB++D,iBAEMC,EAAel3D,IAAAA,cAACm3D,GAAAA,EAA4B,CAAC3tD,KAAK,oCAAoCjI,SAAS,OAErG,OACIvB,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,uBAAwB,CAAE,iCAAkCyI,IAC5EvC,QAAS2tD,EACTnsC,UAAWmsC,GAEVvhB,GACG11C,IAAAA,cAAA,UACIwB,UAAU,kCACV,cAAY,oCACZ8H,QAAS8qD,GAER1e,GAGT11C,IAAAA,cAAA,OAAKwB,UAAU,+BAA+BiE,GAC7C4uD,GACGr0D,IAAAA,cAAA,UACIwB,UAAU,6BACV,cAAY,qCACZ8H,QAAS+qD,GAERC,GAAa4C,GAKlC,sgCCmBA,SA1CqD,SAAHh/D,GAO5C,IAAAk/D,EANFxnD,EAAU1X,EAAV0X,WACAynD,EAAUn/D,EAAVm/D,WACAC,EAAUp/D,EAAVo/D,WACAC,EAAYr/D,EAAZq/D,aACAlD,EAAgBn8D,EAAhBm8D,iBACA4C,EAAgB/+D,EAAhB++D,iBAEmEj1D,EAAAC,GAA1BjC,IAAAA,SAAe4P,GAAW,GAA5DmmD,EAAa/zD,EAAA,GAAE20D,EAAe30D,EAAA,GAMrC,OAJAhC,IAAAA,WAAgB,WACZ22D,EAAgB/mD,EACpB,GAAG,CAACA,IAECA,SAAe,QAALwnD,EAAVxnD,EAAa,UAAE,IAAAwnD,GAAfA,EAAiB3qC,MAAMlmC,OAExByZ,IAAAA,cAACA,IAAAA,SAAc,KACV+1D,aAAa,EAAbA,EAAe7jE,KAAI,SAAAwe,GAAQ,IAAA8mD,EAAA,OACxBx3D,IAAAA,cAAA,OACIlS,IAAK4iB,EAASpR,GACdkC,WAAW4B,EAAAA,GAAAA,GAAK,2BAA4B,CACxC,mCAAoCsN,EAAS+b,OAAS/b,EAAS+b,MAAMlmC,OAAS,GAAKgxE,KAGvFv3D,IAAAA,cAAA,OAAKwB,UAAU,mCACI,QAD6Bg2D,EAC3C9mD,EAAS+b,aAAK,IAAA+qC,OAAA,EAAdA,EAAgBtlE,KAAI,SAACsV,GAAoB,OACtCxH,IAAAA,cAAA,OAAKlS,IAAK0Z,EAAKlI,IACXU,IAAAA,cAACy3D,GAAiB,CACdhyD,MAAO+B,EAAK/B,MACZoG,WAAYyrD,GAAcD,EAAW7vD,EAAKlI,IAC1C+0D,iBAAkBA,GAAqB,kBAAMA,EAAiB7sD,EAAK,EACnEyvD,iBAAkBA,IAEpB,KAGZ,KAtByB,IA0B/C,ECiBA,SA3D0B,SAAH/+D,GAAA,IACnBw/D,EAAyBx/D,EAAzBw/D,0BACAC,EAAuBz/D,EAAvBy/D,wBACAC,EAAY1/D,EAAZ0/D,aACAC,EAAuB3/D,EAAvB2/D,wBACAC,EAAoB5/D,EAApB4/D,qBACAC,EAAU7/D,EAAV6/D,WACAthE,EAAeyB,EAAfzB,gBACAuhE,EAAmB9/D,EAAnB8/D,oBACAC,EAAwB//D,EAAxB+/D,yBACAC,EAA4BhgE,EAA5BggE,6BACAhD,EAAoBh9D,EAApBg9D,qBACAiD,EAAiBjgE,EAAjBigE,kBACAC,EAAkBlgE,EAAlBkgE,mBAAkB,OAElBp4D,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,WACIA,IAAAA,cAAA,OAAKwB,UAAU,kCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,UAAU,wCAC1Bu2D,GAAc/3D,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAE/ChH,IAAAA,cAACoe,GAAAA,GAAM,CACHlb,MAAOzM,EAAkB,QAAU,QACnCoU,QAAQ,YACRrJ,UAAU,wCACV8H,QAASyuD,EAAaE,EAA2BP,GAEhDK,EAAa/3D,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SAAYhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAI9FhH,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,+BAC1Bu2D,EACG/3D,IAAAA,cAACq4D,GAAa,CACVzoD,WAAYwoD,EACZ/D,iBAAkBsD,EAClBjB,OAAQkB,EACR1C,qBAAsBA,IAG1Bl1D,IAAAA,cAACs4D,GAAa,CACV1oD,WAAYwoD,EACZnB,iBAAkBY,EAClBR,WAAYW,EACZV,YAAU,EACVC,aAAcW,IAGtBl4D,IAAAA,cAACs4D,GAAa,CACV1oD,WAAYuoD,EACZ9D,iBAAkB0D,EAAaD,OAAuBtxE,EACtDywE,iBAAkBc,OAAavxE,EAAYqxE,EAC3CR,WAAYW,EACZV,YAAaS,KAGR,2lFCtCrB,IAAMQ,GAAa,SAAHrgE,GAA6F,IAAAsgE,EAAAC,EAAAC,EAAAC,EAAAC,EAAvFn+D,EAAavC,EAAbuC,cAAeo+D,EAAiB3gE,EAAjB2gE,kBAAmB3qD,EAAWhW,EAAXgW,YAAazX,EAAeyB,EAAfzB,gBACNuL,EAAAC,GAA9BjC,IAAAA,UAAwB,GAAM,GAApD+H,EAAO/F,EAAA,GAAEgG,EAAShG,EAAA,GACwCiM,EAAAhM,GAA9BjC,IAAAA,UAAwB,GAAM,GAA1D+3D,EAAU9pD,EAAA,GAAE6qD,EAAY7qD,EAAA,GACzB8qD,EAAkB/4D,IAAAA,OAA6B,MAe/Cg5D,EAAoF,QAA7CR,EAAG5lE,aAAaM,QAAQ,6BAAqB,IAAAslE,EAAAA,EAAI,KACxFS,GAA0CrwD,EAAAA,EAAAA,UAC5C,eAAAswD,EAAA,OAAgD,QAAhDA,GAAMC,EAAAA,GAAAA,IAAUH,UAAgC,IAAAE,EAAAA,EAAI,EAAE,GACtD,CAACF,IAGsEv2D,EAAAR,IAA3BS,EAAAA,EAAAA,UAAwB,IAAG,GAApEy1D,EAAiB11D,EAAA,GAAE22D,EAAkB32D,EAAA,GACuDwF,EAAAhG,IAAjDS,EAAAA,EAAAA,UAAwBu2D,GAAyB,GAA5Fb,EAAkBnwD,EAAA,GAAEoxD,EAAmBpxD,EAAA,GAExCqxD,GAAoB1wD,EAAAA,EAAAA,UAAQ,WAC9B,OAtBM9W,EAAkB,GAsBSoc,EApB5BzkB,SAAQ,SAAAinB,GAAY,IAAA6oD,EACrBznE,EAAOzG,KAAK,CACRiU,GAAIoR,EAASrpB,MACboe,MAAoB,QAAf8zD,EAAE7oD,EAASE,YAAI,IAAA2oD,EAAAA,EAAI,IAEhC,IAEOznE,EAVuB,IACxBA,CAuBV,GAAG,CAACoc,IAEEsrD,GAAiBvsD,EAAAA,EAAAA,cAAY,WAC/B,IAAMwsD,EAAeC,EAAYC,EAASV,GAA2BK,GAKrE,OAH4B,IAAxBG,EAAalzE,QACbkzE,EAAapuE,KAAI6B,MAAjBusE,EAAY78D,GAAS08D,EAAkB7sE,MAAM,EAAG6sE,EAAkB/yE,UAE/DkzE,CACX,GAAG,CAACR,EAA0BK,IAExBnrD,GAAgBlB,EAAAA,EAAAA,cAAY,WAC9B,IAAMwsD,EAAeD,IAEfI,EAA6B,CAC/B,CACIt6D,GAAI,SACJmG,OAAOzG,EAAAA,EAAAA,UAAS,UAChBytB,MAAOgtC,IAITI,EAA4B,CAC9B,CACIv6D,GAAI,QACJmtB,MAAO6sC,EAAkB/rE,QAAO,SAAAia,GAAI,OAAKiyD,EAAa7rD,MAAK,SAAAksD,GAAW,OAAIA,EAAYx6D,KAAOkI,EAAKlI,EAAE,GAAC,MAI7G+5D,EAAoBO,GACpBR,EAAmBS,EACvB,GAAG,CAACL,EAAgBF,KAEpBz2D,EAAAA,EAAAA,YAAU,WACNsL,GACJ,GAAG,CAACA,KAEJtL,EAAAA,EAAAA,YAAU,WACNk3D,GACJ,GAAG,IAEH,IAoGUN,EAGAO,EApFJC,EAAyB,SAACrqD,EAA2BpI,EAAa7X,GACpE,OAAOigB,EAAW1d,KAAI,SAAAwe,GAClB,MAAoB,WAAhBA,EAASpR,GACT7Y,GAAAA,GAAA,GACOiqB,GAAQ,IACX+b,MAAkB,QAAX98B,EAAmB,GAAH+D,OAAAkJ,GAAO8T,EAAS+b,OAAK,CAAEjlB,IAAQkJ,EAAS+b,MAAMl/B,QAAO,SAAAjG,GAAC,OAAIA,EAAEgY,KAAOkI,EAAKlI,EAAE,MAGlGoR,CACX,GACJ,EAEMwpD,EAAmB,SAACtqD,EAA2BpI,GAAW,OAC5DoI,EAAW1d,KAAI,SAAAwe,GAAQ,OAAAjqB,GAAAA,GAAA,GAChBiqB,GAAQ,IACX+b,MAAO/b,EAAS+b,MAAMl/B,QAAO,SAAAjG,GAAC,OAAIA,EAAEgY,KAAOkI,EAAKlI,EAAE,KAAC,GACpD,EAED66D,EAAwB,SAACvqD,EAA2BpI,GACtD,OAAOoI,EAAW1d,KAAI,SAAAwe,GAClB,MAAoB,UAAhBA,EAASpR,GACT7Y,GAAAA,GAAA,GACOiqB,GAAQ,IACX+b,OAAO2tC,EAAAA,GAAAA,IAA+BlsD,EAAa,GAAFxa,OAAAkJ,GAAM8T,EAAS+b,OAAK,CAAEjlB,OAGxEkJ,CACX,GACJ,EAEMqpD,EAA4B,WAC9BzoE,YAAW,WACP,IAAI+oE,EAAa,EACjB,GAAItB,EAAgBhsD,QAAS,CACzB,IAAMutD,EAAgBvB,EAAgBhsD,QAAQ4jB,cAC1C,iCAEA2pC,IACAD,EACIC,EAAcC,wBAAwB/mE,GACjCyQ,OAAOu2D,WAAaF,EAAcC,wBAAwBn0D,OAAS,GAAK,GAErF2yD,EAAgBhsD,QAAQ0tD,SAAS,CAC7B/hE,KAAM2hE,EACNrrC,IAAK,GAEb,CACJ,GAAG,EACP,EAsBMgpC,EAAsB,SAAC3wE,GAAa,OACtCmmB,GAAwB,CAAC/S,EAAepT,KAAWoT,IAAkBpT,CAAK,EAExEsyE,EAAW,SAACzrD,GAA0B,OAAKA,EAAYwsD,SAAQ,SAAAlyE,GAAI,OAAIA,EAAKikC,KAAK,GAAC,EAElFitC,EAAc,SAACjtC,EAAgBkuC,GACjC,IAAMC,EAAkBD,EAAWzoE,KAAI,SAAA1J,GAAI,OAAIA,EAAK8W,EAAE,IACtD,OAAOmtB,EAAMl/B,QAAO,SAAAia,GAAI,OAAIozD,EAAgBnnE,SAAS+T,EAAKlI,GAAG,GACjE,EAeMu7D,GAZIpB,EAAeD,IAGfQ,EAF6BP,EAAa7rD,MAAK,SAAApG,GAAI,OAAIA,EAAKlI,KAAO7E,CAAa,IAMhF,KAHAk/D,EAASxB,GAAmB9nD,MACxB,SAAA7I,GAAI,OAAIA,IAASA,EAAKlI,KAAO7E,GAAiB+S,GAAwB,CAAChG,EAAKlI,GAAI7E,IAAgB,IAInG,GAAA/G,OAAAkJ,GAAI68D,GAAY,CAAEO,IAAYzsE,OAAOoK,UAI1CmjE,EAAuBD,EAAiBt0E,QAAU,GAAKozE,EAASxB,GAAmB5xE,OAAS,EAC5F2xE,IAAqD,QAArBO,EAACN,EAAkB,UAAE,IAAAM,GAAO,QAAPC,EAApBD,EAAsBhsC,aAAK,IAAAisC,IAA3BA,EAA6BnyE,QAC9D2uE,EAAuBoE,EAAkB/yE,UAAgC,QAA1BoyE,EAAKP,EAAmB,UAAE,IAAAO,GAAO,QAAPC,EAArBD,EAAuBlsC,aAAK,IAAAmsC,OAAP,EAArBA,EAA8BryE,QAClFw0E,EAA2B,CAC7BrD,0BAhH8B,WAC9BoB,GAAa,EACjB,EA+GInB,wBAxG4B,SAACnwD,GAC7B6xD,GAAoB,SAAA2B,GAAe,OAAId,EAAiBc,EAAiBxzD,EAAK,IAC9E4xD,GAAmB,SAAA6B,GAAW,OAAId,EAAsBc,EAAazzD,EAAK,GAC9E,EAsGIowD,aA7CiB,SAAChoD,GAClBypD,EAAoBzpD,EACxB,EA4CIioD,wBA1C4B,SAACjxE,GAC7BiyE,EAAkBjyE,EAAG,kBAAmB4yE,IAAiBjzE,QACzDwzE,IACA/xD,GAAU,EACd,EAuCI8vD,qBAhHyB,SAACtwD,GAC1B4xD,GAAmB,SAAA4B,GAAe,OAAId,EAAiBc,EAAiBxzD,EAAK,IAC7E6xD,GAAoB,SAAA6B,GAAW,OAAIjB,EAAuBiB,EAAa1zD,EAAM,MAAM,GACvF,EA8GIuwD,WAAAA,EACAthE,gBAAAA,EACAuhE,oBAAAA,EACAC,yBAxD6B,WAC7BrlE,aAAaC,QAAQ,qBAAsBJ,KAAKC,UAAU0lE,IAC1DU,GAAa,EACjB,EAsDIZ,6BAAAA,EACAhD,qBAAAA,EACAiD,kBAAAA,EACAC,mBAAAA,GAGE3d,EAAuB,CACzB,CACIn7C,GAAI,EACJ2nC,UAAWjnC,IAAAA,cAACm7D,GAAsBJ,IAEtC,CACIz7D,GAAI,EACJ2nC,UAAWjnC,IAAAA,cAAC+iC,GAAK,CAACM,qBAAqB,EAAOF,oBAAkB,EAAChC,6BAA6B,MAItG,OACInhC,IAAAA,cAAA,OAAKwB,UAAU,qBAAqB0X,IAAK6/C,GACpC8B,EAAiB3oE,KAAI,SAAA0L,GAAA,IAAG6H,EAAK7H,EAAL6H,MAAOnG,EAAE1B,EAAF0B,GAAE,OAC9BU,IAAAA,cAACuhC,GAAAA,EAAKC,WAAU,CACZ1zC,IAAKwR,EACLyhC,aAAc,SAAAn6C,GAAC,OAAIiyE,EAAkBjyE,EAAG,kBAAmB4yE,IAAiBjzE,OAAO,EACnFslB,SAAUmsD,EAAoB14D,IAE9BU,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMyC,GACH,IAErBq1D,GACG96D,IAAAA,cAACoe,GAAAA,GAAM,CACHtwB,IAAI,kBACJwb,QAzEc,WAC1B6E,IACAnG,GAAU,EACd,EAuEgB6C,QAAQ,WACRrJ,UAAU,4BACV0B,MAAOzM,EAAkB,QAAU,SAEnCuJ,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACm4D,YAAU,EAACl4D,MAAM,2DAClClD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eAIxChH,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbjI,WAAW4B,EAAAA,GAAAA,GAAK,qBAAsB,CAClC,iCAAkC20D,IAEtCruD,OAAQ3B,EACR6B,YAAY,EACZhI,QA7KkB,WAC1BoG,GAAU,GACV8wD,GAAa,EACjB,GA4KY94D,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GAChCqxD,EACG/3D,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CACf/vB,MACIzF,IAAAA,cAAA,OAAKwB,UAAU,6BACXxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mBAIxChH,IAAAA,cAACm7D,GAAsBJ,IAG3B/6D,IAAAA,cAACqrC,GAAQ,CACLzF,OAAQ0F,GACRrF,MAAOwU,EACPh1C,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBACnCm/B,UAAWnC,GAAAA,EACX+B,kBAAmB,WAAF,OAAQ9B,EAAAA,GAAAA,IAAyBxpC,EAAe,kBAAkB,MAKlGsN,GAAW/H,IAAAA,cAAC8zD,GAAwB,CAACr9D,gBAAiBA,IAGnE,EAEA,SAAeuJ,IAAAA,KAAWu4D,wgCCjS1B,IAAM8C,IAAQ56D,EAAAA,GAAAA,WAAS,WACnB,IAAwFuB,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAAjFs7D,EAA2Bt5D,EAAA,GAAEu5D,EAA2Bv5D,EAAA,GACzDw5D,EAAYx7D,IAAAA,OAA6B,MAC/CmK,GAIIhK,EAAAA,EAAAA,KAAUs7D,EAAAtxD,EAHVpV,OAAUsV,EAAYoxD,EAAZpxD,aAAcmE,EAAYitD,EAAZjtD,aAAYktD,EAAAvxD,EACpC/T,OAAUub,EAAgB+pD,EAAhB/pD,iBAAkBgqD,EAAcD,EAAdC,eACtBllE,EAAe0T,EAArB3T,GAAMC,gBAEV2X,GAcIvG,EAAAA,GAAAA,KAbApM,EAAc2S,EAAd3S,eACAhB,EAAa2T,EAAb3T,cACAkJ,EAAgByK,EAAhBzK,iBACAI,EAAcqK,EAAdrK,eACA8xB,EAAaznB,EAAbynB,cACAvgB,EAAgBlH,EAAhBkH,iBACA7J,EAAQ2C,EAAR3C,SACAtS,EAAOiV,EAAPjV,QACAnI,EAASod,EAATpd,UACA4S,EAAMwK,EAANxK,OACAm0B,EAAa3pB,EAAb2pB,cACa6jC,EAAiBxtD,EAA9BF,YACAgqB,EAAc9pB,EAAd8pB,eAEJhmB,EAAyCC,KAAjCjE,EAAWgE,EAAXhE,YAAa8C,EAAekB,EAAflB,gBACdwjB,EAILvyB,GAJyBmyB,GAA6C,mBAAoB,CACxFC,uBAAuB,EACvBC,YAAY,EACZC,gBAAgB,IAClB,GAJqB,GAOjBnlB,GAAiB0pB,EAAAA,GAAAA,IAA0B8iC,EAAmBnhE,EAAey9B,GAC7E0zB,EAA2Bx8C,EAAetB,OAAM,SAAAtG,GAAI,IAAAqkD,EAAA,OAAI9zB,SAAqB,QAAR8zB,EAAb9zB,EAAgBvwB,UAAK,IAAAqkD,OAAR,EAAbA,EAAuB/0B,SAAS,IAExFgI,EAAiD,IAA1B1vB,EAAe7oB,QAAgBsvC,GAAiB+1B,EAEvE52C,EAAUhV,IAAAA,SACZ,kBACIvE,EAAevJ,KAAI,SAAAgG,GAAuB,MAAoB,CAC1D0Y,KAD8B1Y,EAAZmE,aAElBhV,MAFkD6Q,EAAlB0L,OAGnC,GAAE,GACP,CAACnI,IAGCo9D,EAAoB74D,IAAAA,aACtB,SACIpZ,EACAi1E,EACAC,GACC,IAAAzsC,EACKhoC,EAA4F,QAAvFgoC,EAAGnhB,EAAYmC,MAAK,SAAAzS,GAAO,OAAAA,EAAJgT,OAAqBhqB,EAAEmW,OAA6Bg/D,WAAW,WAAC,IAAA1sC,OAAA,EAApFA,EAAsFhoC,MACpGokB,EAAS,CACL1O,OAAQ,CACJlR,KAAM,gBACNxE,MAAAA,MAGR20E,EAAAA,GAAAA,IAAiC30E,GAAS,GAAIw0E,EAAcj4D,EAAQk4D,EACxE,GACA,CAAC5tD,EAAazC,EAAU7H,IAGtBmG,EAAW/J,IAAAA,aAAkB,WAC/B,IAAMi8D,EAAoBT,aAAS,EAATA,EAAWzuD,QACrC,GAAIkvD,EAAmB,CACnB,IAAMC,EAAiBD,EAAkB1B,wBAAwB4B,OAC3DC,EAAqBn4D,OAAOC,YAAcb,GAChDk4D,EAA4BW,GAAkBE,EAClD,CACJ,GAAG,IAeH,OAbAp8D,IAAAA,WAAgB,WAEZ,OADA7G,IACOnI,CAEX,GAAG,CAAC2gB,EAAkBgqD,EAAc,SAEpC94D,EAAAA,EAAAA,YAAU,WACF2L,GACAwC,GAGR,GAAG,CAACxC,IAGAxO,IAAAA,cAACq8D,GAAS,CAACtyD,SAAUA,GAChBiL,EAAQzuB,QAAU2nB,EAAY3nB,SAAWioB,EACtCxO,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OAAKwB,UAAU,SACXxB,IAAAA,cAACu4D,GAAU,CACP99D,cAAeA,EACfo+D,kBAAmBA,EACnB3qD,YAAaA,EACbzX,gBAAiBA,IAErBuJ,IAAAA,cAACovB,GAAc,OACdktC,EAAAA,GAAAA,GAAiB7hE,IAAkBuF,IAAAA,cAACsZ,GAAW,MAChDtZ,IAAAA,cAACskC,GAAwB,KACrBtkC,IAAAA,cAACmtD,GAAe,OAEpBntD,IAAAA,cAAA,OAAKwB,UAAU,wBACXxB,IAAAA,cAAA,WACIwB,WAAW4B,EAAAA,GAAAA,GAAK,eAAgB,CAAE,mCAAoCW,IACtEyU,MAAO,CACHxU,OAAQF,GAAe,CAAEC,eAAAA,EAAgBH,OAAAA,EAAQD,iBAAAA,EAAkBlJ,cAAAA,KAEvEye,IAAKsiD,GAELx7D,IAAAA,cAACwuD,GAAU,QAGlBzqD,GAAkB/D,IAAAA,cAACu8D,GAAgB,OAExCv8D,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,mBAAoB,CAAE,iCAAkCkS,KACzEtV,IAAAA,cAACskC,GAAwB,CAACE,qBAAsB82B,EAA6B/2B,cAAY,GACrFvkC,IAAAA,cAACmtD,GAAe,CAAC5oB,cAAY,MAE/BjvB,GAAoBtV,IAAAA,cAAC22B,GAAc,SAEvCnC,SAAAA,EAAkBF,aAAcjqB,GAC9BrK,IAAAA,cAAC2zB,GAAe,CAACnrC,KAAK,aAAaiO,gBAAiBA,KAI5DuJ,IAAAA,cAACw/B,GAAAA,QAAQg9B,UAAS,MAEtBx8D,IAAAA,cAACy8D,GAAiB,MAClBz8D,IAAAA,cAAC08D,GAAmB,MACpB18D,IAAAA,cAAC28D,GAAkB,CACfx+B,aAAc,CAAC,YAAa,cAAe,aAAc,SACzDW,qBAAsBA,IAItC,IAEA,MCnKA,GDmKA,+PEvHA,SApCuB,SAAH5mC,GAA8D,IAAxD0kE,EAAW1kE,EAAX0kE,YAAaC,EAAc3kE,EAAd2kE,eAC7BC,EAAOD,EAAiBE,GAAAA,EAA2BC,GAAAA,EAEzD,OACIh9D,IAAAA,cAAA,OACIwB,UAAS,oBAAA9N,OAAsBkpE,EAAcK,GAAAA,GAASC,OAAOxpD,cAAgBupD,GAAAA,GAASE,KAAKzpD,gBAE3F1T,IAAAA,cAAA,OAAKwB,UAAU,OAAO,cAAY,uBAC9BxB,IAAAA,cAAC88D,EAAI,CAACv7D,SAAS,SAEnBvB,IAAAA,cAAA,OAAKwB,UAAU,WACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,EAACD,KAAK,KAAKE,MAAM,mCACtB25D,GAAkB78D,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sBAC7C61D,IACGD,EACG58D,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAE5BhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,wBAGxChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKo6D,UAAQ,EAACl6D,MAAM,mCAC1B25D,GACG78D,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mEAE9B61D,IACGD,EACG58D,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,8CAE5BhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,6CAMxD,yHC/Baq2D,GAA0B,SAAHnlE,GAKC,IAJjColE,EAAWplE,EAAXolE,YACA1pB,EAAW17C,EAAX07C,YACA2pB,EAAMrlE,EAANqlE,OACAC,EAAUtlE,EAAVslE,WAmBMC,EAhBEH,EACO,GAAP5pE,OAAU4pE,QAAAA,EAAe,EAAC,KAAA5pE,QAAIgqE,EAAAA,EAAAA,iBAAgBC,MAAMjqD,eAEpDkgC,GAAe4pB,EAEXx9D,IAAAA,cAAC49D,GAAAA,cAAa,CACVtnC,GAAG,OACHuZ,SAAU+D,EACV8pB,cAAeA,EAAAA,cACfjrB,WAAY+qB,EACZ1vE,IAAI,mBAIT,KAIX,OAAK8lD,IAAgB4pB,aAAU,EAAVA,EAA8B13E,SAAU8tD,GAAe2pB,EACjEv9D,IAAAA,cAACirB,GAAAA,EAAG,CAACzpB,UAAU,SAASkJ,OAAOgzD,EAAAA,EAAAA,iBAAgBR,OAAQryD,QAAQ,SAAS3H,MAAM,SAASF,KAAK,OAEhGy6D,EACHz9D,IAAAA,cAACirB,GAAAA,EAAG,CACAzpB,UAAU,QACVH,KACIrB,IAAAA,cAAC69D,GAAAA,EAAsC,CACnC/vE,IAAI,qBACJ0b,KAAK,6CAGbkB,MAAO+yD,EACP5yD,QAAQ,SACR7H,KAAK,OAET,IACR,ECvBA,SAxB2B,SAAH9K,GAAqE,IAA/Dq8C,EAAcr8C,EAAdq8C,eAAgBupB,EAAc5lE,EAAd4lE,eAC1C,OAAKvpB,GAAmBupB,EAGpB99D,IAAAA,cAACirB,GAAAA,EAAG,CACA/nB,MAAM,OACN1B,UAAU,mBACV,cAAY,sBACZkJ,MACI1K,IAAAA,cAAC+G,EAAAA,SAAQ,CACLC,kBAAkB,mDAClB1d,OAAQ,CACJirD,eAAAA,EACAupB,eAAAA,KAIZ5yC,UAAU,EACVloB,KAAK,KACL6H,QAAQ,SAlB+B,IAqBnD,8lECaA,IAAMkzD,GACI,OADJA,GAEK,QAGLC,GAAc,CAChBltC,YAAY,EACZmtC,sBAAsB,GAuN1B,SApNqB,SAAH/lE,GAWQ,IAAAgmE,EAAAC,EA4DZC,EA5DYC,EAAAnmE,EAVtBsJ,UAAAA,OAAS,IAAA68D,EAAG,gBAAeA,EAC3BC,EAAYpmE,EAAZomE,aACAljE,EAAQlD,EAARkD,SACAmjE,EAAgBrmE,EAAhBqmE,iBACAC,EAAetmE,EAAfsmE,gBACAC,EAAQvmE,EAARumE,SACAn1D,EAAOpR,EAAPoR,QACA1H,EAAO1J,EAAP0J,QACA88D,EAAUxmE,EAAVwmE,WACAlB,EAAUtlE,EAAVslE,WAEuDx7D,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAAhD2+D,EAAS38D,EAAA,GAAE48D,EAAY58D,EAAA,GACyBiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAAhD6+D,EAAS5wD,EAAA,GAAE6wD,EAAY7wD,EAAA,GAC6BqB,EAAArN,GAArBjC,IAAAA,UAAe,GAAM,GAApD++D,EAAWzvD,EAAA,GAAE0vD,EAAc1vD,EAAA,GACqCsI,EAAA3V,GAArBjC,IAAAA,UAAe,GAAM,GAAhEi/D,EAAiBrnD,EAAA,GAAEsnD,EAAoBtnD,EAAA,GAC9Cha,EACI0gE,EADIpiE,EAAS0B,EAAT1B,UAAWzB,EAAamD,EAAbnD,cAAe4B,EAAYuB,EAAZvB,aAAcV,EAAaiC,EAAbjC,cAAeG,EAAS8B,EAAT9B,UAAWU,EAASoB,EAATpB,UAAW+lD,EAAW3kD,EAAX2kD,YAErFj+C,EAAmCi+C,QAAAA,EAAe,CAAErB,YAAa,CAAC,EAAGC,UAAW,CAAC,GAAzED,EAAW58C,EAAX48C,YAAaC,EAAS78C,EAAT68C,UACfvoB,GAAc+B,EAAAA,EAAAA,WAAU,CAAEn+B,UAAAA,IAC1B2iE,GAAsB3W,EAAAA,EAAAA,kBAAiB/tD,QAAAA,EAAiB,GAAI,CAC9DkgC,UAAW/B,EACXwmC,eAAe,IAEbC,EAA2B,iBAAkBf,EAAwC,QAA5BJ,EAAGI,EAAanhB,oBAAY,IAAA+gB,OAAA,EAAzBA,EAA2BtqB,YAAc,KACrG0pB,EAAc,eAAgBgB,GAAgBA,EAAagB,YAAaC,EAAAA,EAAAA,gBAAejB,GAAgB,KACvGkB,EAAgB,GAAA9rE,OAAGyrE,EAAmB,KAAAzrE,QAAI80D,EAAAA,EAAAA,kBAAiB/tD,QAAAA,EAAiB,GAAI,CAClFkgC,UAAW/B,KACVzK,OACCsxC,EACF,sBAAuBnB,GAAeoB,EAAAA,EAAAA,eAA4C,QAA/BvB,EAACG,EAAaqB,yBAAiB,IAAAxB,EAAAA,EAAI,IAAM9hE,EAC1FujE,GAAYC,EAAAA,EAAAA,kBAAkBvB,EAA+B7hE,YAC7DqjE,GAAeC,EAAAA,EAAAA,sBAAqBtlE,GACpC8iE,IAAWzhE,IAAakkE,EAAAA,EAAAA,SAAQ1B,GAChC2B,GAAcC,EAAAA,GAAAA,IAAU5B,GACxB6B,GAAgBC,EAAAA,EAAAA,iBAAgB9B,GAChC+B,GAAclnC,EAAAA,EAAAA,eAAcmlC,KAAmCE,EAC/D8B,EAAwB9B,GAAmBO,EAC3CwB,EAAuB/B,GAAmBK,EAC1C2B,GAAqBV,IAAiBF,EACtCa,IAAsBC,EAAAA,EAAAA,mBAAkBlkE,QAAAA,EAAa,GAAIb,GACzD82C,IAAakuB,EAAAA,EAAAA,cAAankE,QAAAA,EAAa,IACvCokE,IAA+BC,EAAAA,EAAAA,2BAA0BrkE,QAAAA,EAAa,IACtEskE,GAA4BL,MAAyBhuB,KAAemuB,KAAiCrD,EACrGwD,KAA0BP,IAAuBA,IAAsBjD,KAAauD,GACpF3e,GAAYuc,EAAasC,GAAAA,QAAU,MAEnCC,GAAc,SAACC,GAEjBhC,EADegC,IAAcnD,GAEjC,EAEMoD,IAAgB5wC,EAAAA,GAAAA,gXAAY9pC,CAAC,CAC/BogD,aAAc,WAAF,OAAQo6B,GAAYlD,GAAe,EAC/Cj3B,cAAe,WAAF,OAAQm6B,GAAYlD,GAAgB,GAC9CC,KAGDoD,GAAc,SAACx6E,EAAwCy6E,GACzDz6E,EAAE06E,iBACF16E,EAAEi7C,kBACEw/B,GACA5C,SAAAA,EAAW73E,GACXo4E,GAAe,KAEfp9D,SAAAA,EAAUhb,GACVk4E,GAAa,GAErB,EASMyC,IANInD,EAAmB,GACrBld,SAAAA,EAAaoK,cAAc8S,EAAO/yE,KAAK,MACvC81D,SAAAA,EAAWmK,cAAc8S,EAAO/yE,KAAK,MACrC80E,GAAe/B,EAAO/yE,KAAK,MACxB+yE,GAGLoD,KAAgCD,GAAuBh7E,SAAWg3E,EAQxE,OANAv9D,IAAAA,WAAgB,WACRu9D,GAAUgB,GACVK,GAAa,EAErB,GAAG,CAACrB,EAAQgB,IAEP9jE,EAEDuF,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,GAAD1P,OAAI8N,EAAS,YAAY,CAAEigE,QAAS9C,KACpD3+D,IAAAA,cAACmiD,GAASj8C,GAAA,GACDq4D,EAAmB4C,GAAgB,CAAC,EAAC,CAC1C3/D,WAAW4B,EAAAA,GAAAA,GAAK5B,EAAW,CACvB,eAAgBy9D,EAChB,oBAAqBkB,EACrBuB,KAAMzzE,OAAOgyE,GAAe,EAC5B0B,IAAK1zE,OAAOgyE,IAAgB,IAEhC32D,QAASA,EACT0tD,YAAa,SAAApwE,GAAC,OAAIA,EAAE06E,gBAAgB,EACpCvjE,GAAI2gE,IAEJ1+D,IAAAA,cAAA,OAAKwB,UAAS,GAAA9N,OAAK8N,EAAS,WACxBxB,IAAAA,cAAA,OAAKwB,UAAS,GAAA9N,OAAK8N,EAAS,cACxBxB,IAAAA,cAAC4hE,GAAAA,eAAc,CAACp5E,KAAMowC,EAAc,GAAHllC,OAAM+G,EAAa,YAAaA,EAAeuI,KAAM,KACtFhD,IAAAA,cAAA,OAAKwB,UAAU,gBACVggE,IACGD,GAAuBrvE,KAAI,SAAAwY,GAAK,OAC5B1K,IAAAA,cAACirB,GAAAA,EAAG,CACAzpB,UAAU,kBACVkJ,MAAOA,EACP5c,IAAK4c,EACLG,QAAQ,SACR7H,KAAK,MACP,IAET+9D,IACG/gE,IAAAA,cAACq9D,GAAuBn3D,GAAA,CACpBo3D,YAAaA,EACbC,OAAQA,EACRC,WAAYA,GACRc,IAGXwC,IACG9gE,IAAAA,cAAC6hE,GAAkB,CACfttB,gBAAgButB,EAAAA,EAAAA,aAAWl8E,EAAAA,EAAAA,UAASm8E,SAAStvB,IAAc,KAAM,eACjEqrB,gBAAgBkE,EAAAA,EAAAA,YAAWD,SAAStvB,IAAc,IAAK,mBAKvEzyC,IAAAA,cAAA,OAAKwB,UAAS,GAAA9N,OAAK8N,EAAS,cACxBxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACvB,UAAU,aAAawB,KAAK,MAC7Bw8D,GAELx/D,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCAClBlD,IAAAA,cAACu2B,GAAAA,MAAK,CAAC33B,OAAQ1C,EAAWd,SAAUA,EAAUq7B,eAAa,MAGnEz2B,IAAAA,cAAA,OAAKwB,UAAS,GAAA9N,OAAK8N,EAAS,cACxBxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,UAAU,SAAS0B,MAAM,mCACpCu8D,GAELz/D,IAAAA,cAAC+C,GAAAA,EAAI,CAACvB,UAAU,SAASwB,KAAK,MAC1BhD,IAAAA,cAACu2B,GAAAA,MAAK,CAAC33B,OAAQqhE,EAAa7kE,SAAUA,EAAU6mE,UAAQ,EAACxrC,eAAa,OAIjF8nC,GACGv+D,IAAAA,cAAA,OAAKwB,UAAU,WACV2+D,GACGngE,IAAAA,cAAA,UACIwB,WAAW4B,EAAAA,GAAAA,GAAK,CAAE8+D,QAAS5B,IAC3BtlC,SAAU/sC,OAAQqwE,EAA+B6D,SAAW,GAAK3D,EACjEl1D,QAAS,SAAA1iB,GAAC,OAAIw6E,GAAYx6E,GAAG,EAAK,GAEjC05E,EACGtgE,IAAAA,cAAA,OAAKwB,UAAU,gBAAgB,cAAY,qBAE3CxB,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAC2T,GAAAA,EAAW,CACR1Q,MAAI,EACJqzB,GAAG,MACH90B,UAAU,QACV0B,MAAM,uCAELw6D,EAAAA,EAAAA,iBAAgB0E,QAEpB/C,GACGr/D,IAAAA,cAAC2T,GAAAA,EAAW,CACR1Q,MAAI,EACJqzB,GAAG,MACH90B,UAAU,QACV0B,MAAM,sCAENlD,IAAAA,cAAC49D,GAAAA,cAAa,CACV/tB,SAAUwvB,EACVzjE,OAAO,QACP8hE,cAAeA,EAAAA,cACfjrB,WAAY+qB,OAQxCx9D,IAAAA,cAAA,UACIwB,WAAW4B,EAAAA,GAAAA,GAAK,CAAE8+D,QAAS3B,IAC3BvlC,UAAWqlC,EACX/2D,QAAS83D,IAERb,EACGvgE,IAAAA,cAAA,OAAKwB,UAAU,gBAAgB,cAAY,qBAE3CxB,IAAAA,cAAC2T,GAAAA,EAAW,CACR1Q,MAAI,EACJqzB,GAAG,MACH90B,UAAU,QACV0B,MAAM,mDAELw6D,EAAAA,EAAAA,iBAAgBtiC,WAnHtB,IA4H/B,qTChMA,SAtDyB,SAAHljC,GAOQ,IAN1BmqE,EAAcnqE,EAAdmqE,eACAC,EAAapqE,EAAboqE,cACAlrC,EAAWl/B,EAAXk/B,YAAWmrC,EAAArqE,EACXoC,UAAAA,OAAS,IAAAioE,EAAG,GAAEA,EACdC,EAAiBtqE,EAAjBsqE,kBACGC,+WAAI98D,CAAAzN,EAAA0N,IAaP,OAXA5F,IAAAA,WAAgB,WACZ,IAAI0iE,EAIJ,OAHIL,GAAkBG,IAClBE,EAAcpxE,YAAW,kBAAMkxE,GAAkB,EAAM,GAAE,MAEtD,WACCE,GAAat5D,aAAas5D,EAClC,CAEJ,GAAG,IAEEpoE,EAAU/T,OAEXyZ,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GAAK,qBAAsB,CAClC,uCAAwCi/D,IAAmB/nE,EAAU,GAAGyf,cAAcje,aAGzFxB,EAAUpI,KAAI,SAAAyX,GACX,IAAqBrK,EAAOqK,EAASoQ,cAA7Bvb,YACR,OACIwB,IAAAA,cAAC2iE,GAAYz8D,GAAA,CACTpY,IAAKwR,EACLg/D,aAAc30D,EAASoQ,cACvBwkD,mBAAoBnnC,EACpBonC,gBAAkB70D,EAAgC+vB,kBAClD+kC,SAAU,WAAF,OAAQn/D,IAAMgjE,aAAa,EAAbA,EAAgBhjE,GAAG,EACzCsC,QAAS,WAAF,OAAQtC,IAAM83B,aAAW,EAAXA,EAAc93B,GAAG,EACtCo/D,WACIp/D,EACM,CACI2B,UAAU2hE,EAAAA,EAAAA,iBAAgBtjE,GAC1BqpD,MAAO,CACHka,gBAAgB,IAGxB,IAENJ,GAGhB,KA9BsB,IAiClC,60BCvDA,IAAMK,GAAwB,SAAH5qE,GAAwF,IAAlF6qE,EAAa7qE,EAAb6qE,cAAeC,EAAe9qE,EAAf8qE,gBAAiB1oE,EAASpC,EAAToC,UAAWc,EAAQlD,EAARkD,SAClE4mE,EAAa,SAACtxB,GAChB,GAAoB,iBAATA,EAAmB,CAC1B,IAAMuyB,EAAQvyB,EAAKl1B,MAAM,KACzB,MAAO,GAAP9nB,OAAUuvE,EAAM,GAAE,KAAAvvE,OAAIuvE,EAAM,GAAE,KAAAvvE,OAAIuvE,EAAM,GAC5C,CACA,OAAOr9E,EAAAA,EAAAA,UAAS8qD,GAAM90C,OAAO,cACjC,EAEMqzC,EAAQ30C,aAAS,EAATA,EAAWpI,KAAI,SAAAgxE,GAEzB,OAAIA,EAAQnpD,cAAcje,UACfkmE,EAAWkB,EAAQnpD,cAAcje,WAErConE,EAAQnpD,cAAcle,oBAAsBmmE,EAAWkB,EAAQnpD,cAAcle,mBACxF,IACMsnE,EAAWvmE,GAAO,IAAIwmE,IAAIn0B,IAEhC,OAAK30C,SAAAA,EAAW/T,OAEZyZ,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAA,OACIwB,WAAW4B,EAAAA,GAAAA,GACP,0BACA4/D,GAAmB,+CAGtBG,EAAYjxE,KAAI,SAAAgN,GAAI,OACjBc,IAAAA,cAAA,OAAKwB,UAAU,yBAAyB1T,IAAKoR,GACzCc,IAAAA,cAAC+C,GAAAA,EAAI,CAACuzB,GAAG,IAAI90B,UAAU,gCAAgCyB,MAAI,EAACD,KAAK,MAC5D9D,GAELc,IAAAA,cAACqjE,GAAgB,CACb/oE,UAAWA,EAAU/M,QAAO,SAAAoc,GAExB,OAAIA,EAASoQ,cAAcje,UAChBkmE,EAAWr4D,EAASoQ,cAAcje,aAAeoD,EAGxDyK,EAASoQ,cAAcle,oBACvBmmE,EAAWr4D,EAASoQ,cAAcle,sBAAwBqD,CAElE,IACA9D,SAAUA,IAEZ,KAGb2nE,GACG/iE,IAAAA,cAAA,OAAKwB,UAAU,oBAAoB,cAAY,wBAC3CxB,IAAAA,cAACsjE,GAAAA,EAAwB,CAAC/hE,SAAS,SAhCpB,IAqCnC,EAEA,SAAevB,IAAAA,KAAW8iE,23CCQ1B,SAtE2B,SAAH5qE,GAA+E,IAAzEqrE,EAAkBrrE,EAAlBqrE,mBAAoBC,EAAyBtrE,EAAzBsrE,0BACmBxhE,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA1DyjE,EAAczhE,EAAA,GAAE0hE,EAAiB1hE,EAAA,GACgDiM,EAAAhM,GAA5CjC,IAAAA,SAAyBujE,GAAmB,GAAjFI,EAAc11D,EAAA,GAAE21D,EAAiB31D,EAAA,GAOlCxC,EAAW,SAAC7kB,GACd,IAAMi9E,EAAqBj9E,EAAEmW,OAA0CuC,GAEnEqkE,EAAelwE,SAASowE,GACxBD,EAAiBhnE,GAAK+mE,EAAep2E,QAAO,SAAAia,GAAI,OAAIA,IAASq8D,CAAiB,MAE9ED,EAAkB,GAADlwE,OAAAkJ,GAAK+mE,GAAc,CAAEE,IAE9C,EAEA,OACI7jE,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuhC,GAAAA,EAAKuiC,SAAQ,CACVtiE,UAAU,eACVuiE,UAAQ,EACRN,eAAgBA,EAChBn6D,QAAS,WAAF,OAAQo6D,GAAmBD,EAAe,EACjD53D,WAAY83D,EAAep9E,OAC3Byc,KAAK,MAELhD,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACPhD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mBAE7B28D,EAAep9E,QAAUyZ,IAAAA,cAAC+C,GAAAA,EAAI,KAAC,IAAE4gE,EAAep9E,OAAO,MAE9DyZ,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CAACC,OAAQ+5D,EAAgB7hE,QA9BvB,WACvB8hE,GAAkB,GAClBE,EAAkBL,EACtB,EA2B+E55D,SAAS,OAAOC,YAAY,GAC/F5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,4BACvDhH,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,yBAC1B+hC,GAAAA,GAAoBrxC,KAAI,SAAA0L,GAAA,IAAG0jC,EAAS1jC,EAAT0jC,UAAWhiC,EAAE1B,EAAF0B,GAAE,OACrCU,IAAAA,cAACgkE,GAAAA,EAAQ,CACLx+B,QAASm+B,EAAelwE,SAAS6L,GACjC2kE,iBAAiB,QACjBziE,UAAU,eACVlC,GAAIA,EACJxR,IAAKwR,EACLoL,MAAO42B,EACP71B,SAAUA,EACVzI,KAAK,MACP,KAGVhD,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,aACVg9D,2BAA4BP,EAAep9E,OAC3C4gB,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UACrCK,SAAU,WAAF,OAAQm8D,EAA0BG,EAAe,GAE7D7lC,gBAAiB,CACb12B,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cACrCK,SAAU,WAAF,OAAQu8D,EAAkB,GAAG,GAEzCO,mCAAmC,MAM3D,+NCnDA,SAjB+B,SAAHjsE,GAAA,IAAMksE,EAAqBlsE,EAArBksE,sBAAuBC,EAAiBnsE,EAAjBmsE,kBAAiB,OACtErkE,IAAAA,cAAA,UAAQwB,UAAU,8BAA8B8H,QAAS,WAAF,OAAQ+6D,GAAkB,EAAK,GAClFrkE,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKxB,UAAU,6BACtBxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,YAE/Bo9D,GACGpkE,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCACjBkhE,GAGTpkE,IAAAA,cAACskE,GAAAA,EAAiC,CAC9B9iE,UAAU,2BACVgI,KAAK,6CAEJ,ikCCwDb,MC7EA,GDiBwB,SAAHtR,GAMG,IALpBqsE,EAAYrsE,EAAZqsE,aACA9qE,EAAgBvB,EAAhBuB,iBACAmI,EAAO1J,EAAP0J,QACA8H,EAAMxR,EAANwR,OACA86D,EAAwBtsE,EAAxBssE,yBAE0ExiE,EAAAC,GAAxBjC,IAAAA,WAAwB,GAAnEykE,EAAiBziE,EAAA,GAAE0iE,EAAoB1iE,EAAA,GACkDiM,EAAAhM,GAA1DjC,IAAAA,SAAuD,IAAG,GAAzF2kE,EAAW12D,EAAA,GAAE22D,EAAc32D,EAAA,GAsBlC,OACIjO,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CAACC,OAAQA,EAAQ9H,QAASA,EAAS+H,SAAS,OAAOC,YAAY,GAC5E5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,0BACvDhH,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,KAChBtH,IAAAA,cAACmvC,GAAAA,EAAU,CACP01B,mBAAiB,EACjBrjE,UAAU,4BACViS,OAAO,QACPqxD,aAAW,EACXC,gBAhBI,SAAC19E,GACrB,IAAM29E,EAAe39E,EAAM8mC,OACrB82C,EAAeD,EAAazZ,SAAS,KAC3CmZ,EAAqBO,EAAeD,EAAaxuD,UAAU,EAAGwuD,EAAaz+E,OAAS,GAAKy+E,EAC7F,EAaoBv5D,SAAUm5D,EACVM,cAAeC,GAAAA,GACfz1B,aAAc,SAAF9xC,GAAA,IAAKsB,EAAItB,EAAJsB,KAAI,OAAOsU,KAAKvgB,MAAMiM,EAAKkmE,gBAAkB5xD,KAAKvgB,OAAMrN,EAAAA,EAAAA,YAAW8X,WAAW,EAC/F4xC,QAAS,IAAI97B,QAGrBxT,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACVqvC,yBAA0BkuB,EAC1Bt9D,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UACrCK,SA1CJ,WACZm9D,EAAyBC,GACrBztE,MAAMkV,QAAQy4D,IAAgBA,EAAYp+E,QAC1CkT,EACI,CACIqE,MAAMlY,EAAAA,EAAAA,UAAS++E,EAAY,IAC3B5mE,GAAI4mE,EAAY,IAAK/+E,EAAAA,EAAAA,UAAS++E,EAAY,IAAMU,KAAOV,EAAY,IAAIW,MAAM,QAEjF,CAAE3sE,2BAA2B,IAGrC4rE,GACJ,MAoCJ,wuEErDA,IAAMgB,GAAiB,CACnB,CACIl+E,MAAO,IACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cAEvC,CACI3f,MAAO,QACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAEvC,CACI3f,MAAO,YACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eAEvC,CACI3f,MAAO,IACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iBAEvC,CACI3f,MAAO,KACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kBAEvC,CACI3f,MAAO,KACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,kBAEvC,CACI3f,MAAO,KACPqjB,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mBAkI3C,SA9HmB,SAAH9O,GAOG,IAsDGstE,EA5DlBpB,EAAqBlsE,EAArBksE,sBACA3qE,EAAgBvB,EAAhBuB,iBACAgsE,EAAavtE,EAAbutE,cACAjB,EAAwBtsE,EAAxBssE,yBACAkB,EAAiBxtE,EAAjBwtE,kBACAC,EAAUztE,EAAVytE,WAEiE3jE,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA1DyjE,EAAczhE,EAAA,GAAE0hE,EAAiB1hE,EAAA,GACyBiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAA1D4lE,EAAc33D,EAAA,GAAEo2D,EAAiBp2D,EAAA,GAGlC43D,EAA2BzB,GAAyBuB,GAD/B,IAErBG,KAAoB1B,IAAyBuB,GAkC7CI,EAAU,WACZN,EAAc,IACdjB,EAAyB,IACzBd,GAAkB,GAClBjqE,EACI,CACIsE,IAAInY,EAAAA,EAAAA,YAAW0/E,MAAM,OACrBtnE,UAAU,GAEd,CAAErF,2BAA2B,IAEjC+sE,GAAkB,EACtB,EAKA,OACI1lE,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAACuhC,GAAAA,EAAKuiC,SAAQ,CACVtiE,UAAU,eACVuiE,UAAQ,EACRN,eAAgBA,EAChBn6D,QAAS,WAAF,OAAQo6D,GAAmBD,EAAe,EACjD53D,SAAUi6D,EACV9iE,KAAK,MAELhD,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAZnBohE,IAAuG,QAAlFoB,EAAID,GAAel1D,MAAK,SAAA7I,GAAI,OAAIA,EAAKngB,SAAWs+E,GAnD9C,IAmD+E,WAAC,IAAAH,OAAA,EAA9EA,EAAgF96D,SAcrG1K,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbC,OAAQ+5D,EACR7hE,QAAS,WAAF,OAAQ8hE,GAAkB,EAAM,EACvC/5D,SAAS,OACTC,YAAY,GAEZ5J,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qBACvDhH,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,yBAC3BxB,IAAAA,cAACgmE,GAAAA,EAAU,CACPxkE,UAAU,sBACVykE,SAxEI,SAACr/E,GAA2C,IAAAs/E,EAC9D7+E,EAAQT,EAAEmW,OAAO1V,MACvB,GANuB,MAMnBA,EAAJ,CAIAo+E,EAAcp+E,GACdq8E,GAAkB,GAElB,IAAMyC,EAA4C,CAC9CC,MAAO,CACHtoE,MAAMlY,EAAAA,EAAAA,YAAWC,QAAQ,OACzBkY,IAAInY,EAAAA,EAAAA,YAAW0/E,MAAM,QAEzBe,UAAW,CACPvoE,MAAMlY,EAAAA,EAAAA,YAAWK,SAAS,EAAG,QAAQJ,QAAQ,OAC7CkY,IAAInY,EAAAA,EAAAA,YAAWK,SAAS,EAAG,QAAQq/E,MAAM,QAE7CgB,QAAS,CACLxoE,MAAMlY,EAAAA,EAAAA,YAAWC,QAAQ,OAAOI,SAASgI,OAAO5G,GAAQ,OAAOrB,IAAI,EAAG,KACtE+X,IAAInY,EAAAA,EAAAA,YAAW0/E,MAAM,SAI7B7rE,EAAgBhT,GAAAA,GAAC,CAAD,EACoB,QADpBy/E,EACNC,EAAoB9+E,UAAM,IAAA6+E,EAAAA,EAAIC,EAAmB,SAAW,CAAH,GAAGnoE,UAAU,IAC5E,CACIrF,2BAA2B,GAtBnC,MAFIotE,GA2BR,EA2CwBl6D,SAAUg6D,EACV7iE,KAAK,MAEJuiE,GAAerzE,KAAI,SAAA0L,GAAA,IAAGvW,EAAKuW,EAALvW,MAAOqjB,EAAK9M,EAAL8M,MAAK,OAC/B1K,IAAAA,cAACgmE,GAAAA,EAAWO,KAAI,CAACl/E,MAAOA,EAAOqjB,MAAOA,EAAO5c,IAAKzG,EAAOm/E,oBAAoB,SAAU,KAG/FxmE,IAAAA,cAACymE,GAAsB,CACnBrC,sBAAuBA,EACvBC,kBAAmBA,KAG3BrkE,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfC,UAAU,WACV42B,gBAAiB,CACb12B,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UACrCK,SAAU0+D,GAEd5B,mCAAmC,MAI9CyB,GACG5lE,IAAAA,cAAC0mE,GAAe,CACZnC,aAAc,WACVF,GAAkB,GAClBX,GAAkB,EACtB,EACAjqE,iBAAkBA,EAClBiQ,OAAQk8D,EACRhkE,QAAS,WAAF,OAAQyiE,GAAkB,EAAM,EACvCG,yBAA0BA,IAK9C,ECzIA,MCxCA,GDYwB,SAAHtsE,GAAA,IACjBkD,EAAQlD,EAARkD,SACAurE,EAAkBzuE,EAAlByuE,mBAAkBC,EAAA1uE,EAClB2uE,QAAAA,OAAO,IAAAD,GAAOA,EAAAE,EAAA5uE,EACd6uE,eAAAA,OAAc,IAAAD,EAAG,GAAEA,EACnBE,EAAe9uE,EAAf8uE,gBAAe,OAEfhnE,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,oBAAqBujE,GAAsB,UAAW,cAAY,wBACnF3mE,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,KAAM4jE,EAAS7jE,KAAK,KAAKxB,UAAU,4BACpCmlE,EACG3mE,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,qCAAqC1d,OAAQ,CAAEy9E,eAAAA,MAE3ErJ,EAAAA,EAAAA,iBAAgBuJ,mBAGxBjnE,IAAAA,cAAC+C,GAAAA,EAAI,CACDvB,WAAW4B,EAAAA,GAAAA,GAAK,4BAA6B,CACzC8jE,UAAWF,EAAkB,EAC7BG,UAAWH,EAAkB,IAEjC/jE,KAAM4jE,EACN7jE,KAAK,MAELhD,IAAAA,cAACu2B,GAAAA,MAAK,CAAC33B,OAAQooE,EAAiB5rE,SAAUA,EAAUq7B,eAAa,EAACwrC,UAAQ,KAE5E,EEzBV,SAX2B,SAAH/pE,GAA6C,IAAvC0kE,EAAW1kE,EAAX0kE,YAClBtiE,GAAcyvB,EAAAA,GAAAA,KAAdzvB,UACA8sE,EACJ9sE,EADI8sE,4BAA6BC,EACjC/sE,EADiC+sE,0BAA2BC,EAC5DhtE,EAD4DgtE,uBAAwBC,EACpFjtE,EADoFitE,yBAMxF,MAAO,CAAEhE,mBAHkB3G,EAAc2K,EAA2BD,EAGvCE,sBAFC5K,EAAcwK,EAA8BC,EAG9E,ECJA,SAPsB,WAClB,IAAQ/sE,GAAcyvB,EAAAA,GAAAA,KAAdzvB,UAGR,MAAO,CAAEqrE,WAF8ErrE,EAA/EqrE,WAEaF,cAFkEnrE,EAAnEmrE,cAEgBrB,sBAFmD9pE,EAApD8pE,sBAEwBI,yBAF4BlqE,EAA7BkqE,yBAG9D,sgCCgBA,IAAMiD,IAAmBhnE,EAAAA,GAAAA,WAAS,SAAAvI,GAAgF,IAAAwvE,EAAAC,EAA7EtF,EAAcnqE,EAAdmqE,eAAgBzF,EAAW1kE,EAAX0kE,YAAa4F,EAAiBtqE,EAAjBsqE,kBAC9DoF,EAAsDC,GAAmB,CAAEjL,YAAAA,IAAnE2G,EAAkBqE,EAAlBrE,mBAAoBiE,EAAqBI,EAArBJ,sBAC5BM,EAAuFC,KAA/EpC,EAAUmC,EAAVnC,WAAYF,EAAaqC,EAAbrC,cAAerB,EAAqB0D,EAArB1D,sBAAuBI,EAAwBsD,EAAxBtD,yBACoDxiE,EAAAC,GAA5DjC,IAAAA,SAAyD,IAAG,GAAvGgoE,EAAiBhmE,EAAA,GAAEimE,EAAoBjmE,EAAA,GACmBiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAA1D68D,EAAc5uD,EAAA,GAAEy3D,EAAiBz3D,EAAA,GAExC9D,GAAsChK,EAAAA,EAAAA,KAA9B/J,EAAM+T,EAAN/T,OAAQrB,EAAMoV,EAANpV,OAAQiM,EAASmJ,EAATnJ,UACqCknE,GAAzBtL,EAAc,CAAC,EAAIxmE,GAA/Cg8C,YAAAA,OAAW,IAAA81B,OAAG1hF,EAAS0hF,EACvB9sE,EAAarG,EAAbqG,SAEJk8B,EAMAt2B,EANAs2B,iBACA6wC,EAKAnnE,EALAmnE,gBACA9vE,EAIA2I,EAJA3I,WACAiqE,EAGAthE,EAHAshE,cACAlrC,EAEAp2B,EAFAo2B,YACSgxC,EACTpnE,EADA7H,QAEJkvE,E3K4B2B,WAC3B,IAAMC,EAAQtoE,IAAAA,WAAiBD,IAE/B,IAAKuoE,EACD,MAAM,IAAIp+E,MAAM,4DAGpB,OAAOo+E,CACX,C2K1BQC,GAAkBttE,aATlB1B,EAAU8uE,EAAV9uE,WACApB,EAAIkwE,EAAJlwE,KACgBqwE,EAAwBH,EAAxCzvE,eACAK,EAAYovE,EAAZpvE,aACAQ,EAAgB4uE,EAAhB5uE,iBACAZ,EAAQwvE,EAARxvE,SACY4vE,EAAyBJ,EAArChwE,WACSqwE,EAAgBL,EAAzBlvE,QACWwvE,EAAkBN,EAA7Br3E,UAEE43E,EAAkB5oE,IAAAA,SAAc,kBAAM7H,EAAKjG,KAAI,SAAA/I,GAAC,MAAK,CAAE4wB,cAAe5wB,EAAG,GAAE,GAAE,CAACgP,IAC9EmC,EAAY0F,IAAAA,SACd,kBAAO48D,EAAcgM,EAAkBtxC,CAAgB,GACvD,CAACA,EAAkBslC,EAAagM,IAK9BC,GAHqBjM,GACpB+I,IAAevB,IAA0Bb,EAAmBh9E,QAC5Dg9E,EAAmBh9E,UACoBq2E,EAAc/jE,EAAWsvE,GACjEW,EAAyBD,GAAkBhM,EAC3CkM,IACAf,EAAkBzhF,SAAWq2E,IAAoC,QAAzB8K,EAAKM,EAAkB,UAAE,IAAAN,GAAe,QAAfC,EAApBD,EAAsB3tD,qBAAa,IAAA4tD,OAAf,EAArBA,EAAwD3sD,SACpGguD,EAAoBpM,EAAc6L,IAA8BT,EAAkBzhF,OAAS8R,EAC3F4wE,GAAwBrM,MAAkB+I,IAAcvB,GAMxD8E,EAAgBtM,EAClB58D,IAAAA,cAAC8iE,GAAqB,CAClB1nE,SAAUA,EACVd,UAAW0tE,EACXjF,cAAe0F,EACfzF,gBAAiBiG,IAGrBjpE,IAAAA,cAACqjE,GAAgB,CACbjoE,SAAUA,EACVinE,eAAgBA,EAChBC,cAAe1F,OAAcp2E,EAAY87E,EACzClrC,YAAawlC,OAAcp2E,EAAY4wC,EACvC98B,UAAW0tE,EACXxF,kBAAmBA,EACnBhF,WAAYprB,IAqCpB,OAzBApyC,IAAAA,WAAgB,WACZ,IAAMlO,GAASq3E,EAAAA,GAAAA,IAAgB7uE,EAAWipE,GACtCA,EAAmBh9E,QACnB0hF,EAAqBn2E,GAChB8qE,GAAa8I,GAAmB5zE,EAAOvL,UAE5Cm/E,GAAkB,GAClBuC,EAAqB3tE,IAErBsiE,GACA8I,GAAmB5zE,EAAOvL,WAAao/E,GAAcvB,GAAyBb,EAAmBh9E,QACzG,GAAG,CAACq2E,EAAatiE,EAAWipE,EAAoBoC,EAAYvB,IAE5DpkE,IAAAA,WAAgB,WAGZ,OAFA48D,EAAc8L,GAAiB,GAAQN,IAEhC,WACCxL,IACArjE,IACAovE,IAER,CAEJ,GAAG,IAECK,IAAuBD,IAA4BD,EAC5C9oE,IAAAA,cAACw/B,GAAAA,QAAQg9B,UAAS,CAAC4M,cAAY,EAACC,cAAezM,IAEtD58D,IAAAA,cAAA,OACIwB,UAAS,mBAAA9N,OAAqBkpE,EAAcK,GAAAA,GAASC,OAAOxpD,cAAgBupD,GAAAA,GAASE,KAAKzpD,eAC1F3J,SAAU6yD,EA7DD,SAACh2E,GACVg2E,GAAa3jE,EAAarS,GAAG,EACrC,OA2D2CJ,IAEjCqiF,GACE7oE,IAAAA,cAAA,OAAKwB,UAAU,mCACVo7D,EACG58D,IAAAA,cAACspE,GAAU,CACP3D,WAAYA,EACZF,cAAeA,EACfhsE,iBAAkBA,EAClB2qE,sBAAuBA,EACvBI,yBAA0BA,EAC1BkB,kBAAmBA,IAGvB1lE,IAAAA,cAACupE,GAAkB,CACfhG,mBAAoBA,EACpBC,0BAtDU,SAACgG,GAC/BhC,EAAsBgC,GAClB5M,IACArjE,IACAivE,GAAyB,GAEjC,KAqDSM,EACG9oE,IAAAA,cAACypE,GAAc,CAAC7M,YAAaA,EAAaC,eAAgBA,IAE1DkM,GACI/oE,IAAAA,cAACA,IAAAA,SAAc,KACVipE,GACGjpE,IAAAA,cAAC0pE,GAAe,CACZ3C,eAAgBiB,EAAkBzhF,OAClC6U,SAAUA,EACVurE,mBAAoB/J,EACpBoK,iBAAiB2C,EAAAA,GAAAA,IAAwB3B,KAGhDkB,GAMzB,IAEA,ghCCxEA,MC9FA,IDWkBzoE,EAAAA,GAAAA,WAAS,WACvB,IAAiEuB,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAA1DqiE,EAAcrgE,EAAA,GAAEwgE,EAAiBxgE,EAAA,GACyCiM,EAAAhM,GAA/CjC,IAAAA,UAAe4pE,EAAAA,EAAAA,kCAAgC,GAA1EC,EAAS57D,EAAA,GAAE67D,EAAY77D,EAAA,GACvBumB,EAILvyB,GAJyBmyB,GAA6C,mBAAoB,CACxFC,uBAAuB,EACvBC,YAAY,EACZC,gBAAgB,IAClB,GAJqB,GAKjBvqB,GAAUC,EAAAA,GAAAA,cAEhBE,GAGIhK,EAAAA,EAAAA,KAFUkK,EAAYF,EAAtBpV,OAAUsV,aACJ5T,EAAe0T,EAArB3T,GAAMC,gBAGOzF,GACb+4B,EAAAA,GAAAA,KADAzvB,UAAatJ,UAGX+4E,EAAO,CACT,CACIzqE,GAAI29D,GAAAA,GAASE,KAAKzpD,cAClBjO,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACnCI,QAASpH,IAAAA,cAACynE,GAAgB,CAACpF,eAAgBA,EAAgBG,kBAAmBA,KAElF,CACIljE,GAAI29D,GAAAA,GAASC,OAAOxpD,cACpBjO,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WACnCI,QAASpH,IAAAA,cAACynE,GAAgB,CAAC7K,aAAW,MAuB9C,OAdA58D,IAAAA,WAAgB,WAOZ,OANAgqE,EAAAA,GAAAA,IAAqBD,EAAKF,GAAWvqE,IAEjCk1B,SAAAA,EAAkBD,gBAClBiuC,GAAkB,GAGf,WACyBx4D,EAAQE,SAASjJ,SAASkoC,WAAW,eACvCn4C,GAC9B,CAEJ,GAAG,IAGCgP,IAAAA,cAACq8D,GAAS,KACNr8D,IAAAA,cAAA,OAAKwB,UAAU,kBACXxB,IAAAA,cAAC8rB,GAAAA,EAAI4C,UAAS,CACVC,aAAa,OACbntB,UAAU,uBACVwB,KAAK,KACL4rB,iBAAkBi7C,EAClBh7C,YA3BI,SAACo7C,GACjBH,EAAaG,IACbD,EAAAA,GAAAA,IAAqBD,EAAKE,GAAgB3qE,GAC9C,GA0BgBU,IAAAA,cAAC8rB,GAAAA,EAAI8B,KAAI,KACJm8C,EAAK73E,KAAI,SAAAgG,GAAA,IAAGoH,EAAEpH,EAAFoH,GAAImG,EAAKvN,EAALuN,MAAK,OAClBzF,IAAAA,cAAC8rB,GAAAA,EAAIa,QAAO,CAAC7+B,IAAKwR,GAAKmG,EAAoB,KAGnDzF,IAAAA,cAAC8rB,GAAAA,EAAIxkB,QAAO,CAAC9F,UAAU,gCAClBuoE,EAAK73E,KAAI,SAAA0L,GAAA,IAAG0B,EAAE1B,EAAF0B,GAAI8H,EAAOxJ,EAAPwJ,QAAO,OACpBpH,IAAAA,cAAC8rB,GAAAA,EAAIC,MAAK,CAACj+B,IAAKwR,GAAK8H,EAAoB,SAKvDotB,SAAAA,EAAkBD,iBAAkBlqB,GAClCrK,IAAAA,cAAC2zB,GAAe,CACZnrC,KAAK,iBACLiO,gBAAiBA,EACjBw7B,SAAU,WAAF,OAAQuwC,GAAkB,EAAK,IAK3D,IEjEA,SA3B2B,SAAHtqE,GAAA,IACpBwS,EAAKxS,EAALwS,MACArjB,EAAK6Q,EAAL7Q,MACA6X,EAAIhH,EAAJgH,KACAwxC,EAAIx4C,EAAJw4C,KAAI,OAOJ1wC,IAAAA,cAAA,OAAKwB,UAAU,iCACXxB,IAAAA,cAAA,OAAKwB,UAAU,kCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCACjBwH,IAGT1K,IAAAA,cAAA,OAAKwB,UAAU,kCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAM3b,GACjB2Y,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCACjBhE,GAELc,IAAAA,cAAC2T,GAAAA,EAAW,CAACzQ,MAAM,mCAAmCwtC,IAExD,ECFV,MCtBA,GDCoB,SAAHx4C,GAQX,IAPFuN,EAAKvN,EAALuN,MACAvF,EAAQhI,EAARgI,SACAsB,EAAStJ,EAATsJ,UAMA,OACIxB,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,eAAgB5B,IAChCiE,GACGzF,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACzB,UAAU,SAC1BiE,GAGRvF,EAGb,6NEhBA,IAAMgqE,GAAuB,SAAChvD,GAC1B,GAAIA,EAAO,CACP,IAAMhc,EAAO,IAAIsU,KAAa,IAAR0H,GAChBivD,EAAa9E,KAAOnmE,GAI1B,MAAO,CACHA,MAJkB4iE,EAAAA,EAAAA,YAAWqI,EAAY,eAKzCz5B,MAJkBsxB,EAAAA,EAAAA,YAAW9mD,EAAO,kBAM5C,CACJ,EAuDA,MCvEA,GDkByB,SAAHhjB,GAA4D,IAAtD6hB,EAAa7hB,EAAb6hB,cAChBqwD,EACJrwD,EADIqwD,gBAAiBC,EACrBtwD,EADqBswD,yBAA0BC,EAC/CvwD,EAD+CuwD,eAAgB9vD,EAC/DT,EAD+DS,WAAY+vD,EAC3ExwD,EAD2EwwD,wBAGzEC,GAAY5hE,EAAAA,EAAAA,UACd,eAAA6hE,EAAA,MAAO,CACHC,MAAON,EAAkBF,GAAqBE,QAAmB5jF,EACjEmkF,KAAML,EAAiBJ,GAAqBI,QAAkB9jF,EAC9DmyB,MAAO6B,EAAa0vD,GAAqB1vD,QAAch0B,EACvDoyB,KAAKgyD,EAAAA,EAAAA,YAAW7wD,GAAiBmwD,GAA8C,QAA1BO,GAACG,EAAAA,EAAAA,YAAW7wD,UAAc,IAAA0wD,EAAAA,EAAI,QAAKjkF,EAC3F,GACD,CAACuzB,IAGC8wD,EAAaR,GAA2BS,EAAAA,EAAAA,UAAST,GAA4B,KAC7EU,EAAYR,GAA0BO,EAAAA,EAAAA,UAASP,GAA2B,KAEhF,OACIvqE,IAAAA,cAACgrE,GAAW,CAACvlE,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,yBAA2BxF,UAAU,sBACjFxB,IAAAA,cAAA,OAAKwB,UAAU,6BACVgpE,EAAU7xD,OACP3Y,IAAAA,cAACirE,GAAkB,CACfvgE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eACnC3f,MAAOmjF,EAAU7xD,MAAMzZ,KACvBwxC,KAAM85B,EAAU7xD,MAAM+3B,OAG7B85B,EAAUE,OAASG,GAChB7qE,IAAAA,cAACirE,GAAkB/kE,GAAA,CACfwE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eACnC3f,MAAOwjF,GACHL,EAAUE,QAGrBF,EAAU5xD,KACP5Y,IAAAA,cAACirE,GAAkB,CACfvgE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cACnC3f,MAAOmjF,EAAU5xD,IAAI1Z,KACrBwxC,KAAM85B,EAAU5xD,IAAI83B,OAG3B85B,EAAUG,MAAQI,GACf/qE,IAAAA,cAACirE,GAAkB/kE,GAAA,CACfwE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cACnC3f,MAAO0jF,GACHP,EAAUG,QAMtC,6lCEkCA,MCvGA,GDkB0B,SAAHzyE,GAAoE,IAAAgzE,EAAAhzE,EAA9D8R,QAAAA,OAAO,IAAAkhE,EAAG,GAAEA,EAAE9vE,EAAQlD,EAARkD,SAAUy6B,EAAa39B,EAAb29B,cACCpzB,EAAAR,IAAXS,EAAAA,EAAAA,UAAS,GAAE,GAA3CyoE,EAAY1oE,EAAA,GAAE2oE,EAAc3oE,EAAA,GAE7B4oE,EAAc72D,KAAKm4B,KAAK3iC,EAAQzjB,OADf,GAGjB+kF,EAAmBtrE,IAAAA,aAAkB,SAACurE,GACxCH,EAAeG,EAAWC,YAAc,EAC5C,GAAG,IAKH,IAAKxhE,EAAQzjB,OAAQ,OAAO,KAE5B,IAUM0/C,EAVgBj8B,EAAqBnY,QACvC,SAACC,EAAoB25E,EAA4BhkE,GAI7C,OAHMA,EAdS,GAeX3V,EAAOzG,KAAK2e,EAAQvd,MAAMgb,EAAOA,EAftB,IAiBR3V,CACX,GACA,IAGuBI,KAAI,SAACw5E,EAAOjkE,GAAK,MAAM,CAC9CnI,GAAImI,EACJw/B,UACIjnC,IAAAA,cAACA,IAAAA,SAAc,KACV0rE,EAAMx5E,KAAI,SAACsV,EAAMC,GAAK,OACnBzH,IAAAA,cAAA,OAAKlS,IAAG,uBAAA4F,OAAyB+T,GAASjG,UAAU,kCAChDxB,IAAAA,cAAA,OACIwB,UAAW4B,KAAK,kCAAmC,0CAEnDpD,IAAAA,cAAC2T,GAAAA,EAAW,CAACzQ,MAAM,kCAAkCF,KAAK,OACrD8+D,EAAAA,EAAAA,YAAWt6D,EAAKmkE,WAAY,gBAEjC3rE,IAAAA,cAAC2T,GAAAA,EAAW,CAACzQ,MAAM,oCACd8+D,EAAAA,EAAAA,YAAW/zE,OAAOuZ,EAAKmkE,eAGhC3rE,IAAAA,cAAA,OAAKwB,UAAU,mCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCACjBsE,EAAKnL,cAEV2D,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MACkC,IAAxCwR,KAAK6D,IAAIpqB,OAAOuZ,EAAK8jD,gBAChBtsD,EAAAA,EAAAA,UAAS,aAAY,GAAAtL,QAClB0I,EAAAA,EAAAA,aAAYpO,OAAOoN,GAAWpN,OAAOwZ,EAAK8jD,eAAe,GAAK,KAAA53D,OAAI0H,KAGjF,KAIrB,IAED,OACI4E,IAAAA,cAACgrE,GAAW,CAACvlE,MA/CbowB,EAAgB71B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,oBAAuBhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eA+CxDxF,UAAU,uBAC7CxB,IAAAA,cAAA,OACIwB,UAAW4B,KAAK,6BAA8B,CAC1C,2CAA4C4G,EAAQzjB,OA1D7C,KA6DXyZ,IAAAA,cAACqrC,GAAQ,CACL3F,UAAU,gCACVC,cAAewlC,EACftlC,cAAY,EACZI,MAAOA,EACPG,gBAAiBglC,KAGxBC,EAAc,GACXrrE,IAAAA,cAAC4rE,GAAAA,EAAU,CACPC,YAAaV,EAAe,EAC5BW,cAAe9hE,EAAQzjB,OACvBwlF,eAzEO,EA0EPC,aAAW,EACXC,kBAAmBX,EACnBzgE,QAAQ,WAK5B,EExFA,MCdA,GDQmB,SAAH3S,GAAA,IAAM6hB,EAAa7hB,EAAb6hB,cAAa,OAC/B/Z,IAAAA,cAACgrE,GAAW,CAACvlE,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,6BAC5ChH,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAM+W,EAActb,UACrB,EEelB,SAxB2B,WACvB,IAAM6pE,GAAQnoE,EAAAA,EAAAA,KACN+rE,EAAoC5D,EAApC4D,gBACAC,EADoC7D,EAAnB1uD,eACjBuyD,gBACAC,EAAuCF,EAAvCE,eAAgBjzE,EAAuB+yE,EAAvB/yE,QAASnI,EAAck7E,EAAdl7E,UAEzB+oB,EAAkBqyD,EAAlBryD,cACF3J,EAAW+7D,EAAgBpyD,EAAcvb,aACzC0L,GAAWhJ,EAAAA,GAAAA,eASjB,OAPA2B,EAAAA,EAAAA,YAAU,WACN,IAAMwpE,EAAgBniE,EAASjJ,SAASua,MAAM,KAAKlvB,MAC/C+/E,GAAiBtyD,EAAcvb,aAC/BrF,EAAQ4oE,SAASsK,GAEzB,GAAG,CAACniE,EAASjJ,SAAU9H,EAASnI,EAAW+oB,EAAcvb,cAElD,CACHub,cAAAA,EACA3J,SAAAA,EACA/X,YAAa0hB,EAAcvb,YAEnC,iECHA,UAhB6BiC,EAAAA,GAAAA,WAAS,WAClC,IAAQsZ,EAAkBuyD,KAAlBvyD,cACFwyD,GAAoBC,EAAAA,EAAAA,iBAAgBzyD,EAActf,eAClDsJ,GAAiBy0B,EAAAA,EAAAA,uBAAsBze,EAActf,eAE3D,OACIuF,IAAAA,cAAA,OAAKwB,UAAU,0BACXxB,IAAAA,cAACysE,GAAAA,EAAW,CACRC,wBAAyB3oE,EACzBwoE,kBAAmBA,EACnBI,6BAA2B,IAI3C,02CCKA,IAgCMC,GAAkB,SAACz0E,EAAqB00E,GAA6B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/D5N,EAA2CnnE,EAA3CmnE,WAAY6N,EAA+Bh1E,EAA/Bg1E,YAAa1yE,EAAkBtC,EAAlBsC,cAC3B2yE,EAAcn/E,OAAOqxE,GAAc,EAAIuN,EAAYQ,KAAOR,EAAYlP,MACtE2P,GAAsB90C,EAAAA,EAAAA,uBAAsB/9B,GAAc,GAAA/G,OACvDy5E,EAAW,KAAAz5E,OAAIm5E,EAAYlP,OAAK,GAAAjqE,OAChC4rE,EAAU,KAAA5rE,OAAI05E,GAEvB,OAAA3/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAe,CACJ,QAApBT,EAAA30E,EAAKq1E,uBAAe,IAAAV,GAApBA,EAAsBW,IAAM,GAAH/5E,OAAMyE,EAAKq1E,gBAAgBC,IAAG,MAAA/5E,OAAKm5E,EAAYa,IAAG,KAAM,GAC7D,QAApBX,EAAA50E,EAAKq1E,uBAAe,IAAAT,GAApBA,EAAsBY,KAAO,GAAHj6E,OAAMyE,EAAKq1E,gBAAgBG,KAAI,MAAAj6E,OAAKm5E,EAAYe,KAAI,KAAM,KAEvFf,EAAYgB,MACT11E,EAAK+D,WAAa/D,EAAKiD,SAAQ,GAAA1H,QACtB0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAK+D,WAAW,GAAK,KAAAxI,OAAIyE,EAAKiD,UAC5D,IACTyxE,EAAYiB,SACT7/E,OAAOqxE,GAAc,EACfgO,EAAmB,GAAA55E,OACK,QADLs5E,GAChBe,EAAAA,EAAAA,iBAAgB51E,UAAK,IAAA60E,EAAAA,EAAI,GAAE,KAAAt5E,OAAgD,QAAhDu5E,GAAIe,EAAAA,EAAAA,sBAAoBC,EAAAA,EAAAA,mBAAkB91E,WAAM,IAAA80E,EAAAA,EAAI,KAC3FJ,EAAYqB,iBAAmD,QAAnChB,EAAG/0E,EAAKg2E,mCAA2B,IAAAjB,EAAAA,EAAI,IACnEL,EAAYuB,iBAAmBj2E,EAAK4D,OAE7C,EAEMsyE,GAA0B,SAACl2E,EAAqB00E,GAA6B,IAAAyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzEC,EAAehC,GAAgBz0E,EAAM00E,GACrCgC,EA3Ce,SAAC12E,EAAqB00E,GAA6B,IAAAiC,EAGpE9zD,EAFJ,GAAsB,QAAlB8zD,EAAC32E,EAAKglD,oBAAY,IAAA2xB,GAAjBA,EAAmB1xB,WAAcjlD,EAAKiD,SAW3C,OAPI4f,GADA+zD,EAAAA,EAAAA,iBAAgB52E,GACP00E,EAAYmC,UACdC,EAAAA,GAAAA,GAAsB92E,GACpB00E,EAAYqC,QAEZrC,EAAYsC,OAGlB,CAAC,GAADz7E,QAAI0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAKglD,aAAaC,WAAW,GAAK,KAAA1pD,OAAIyE,EAAKiD,UAAQ,IAAA1H,OAAQsnB,EAAM,KAC3G,CA8B0Bo0D,CAAiBj3E,EAAM00E,GAE7C,OAAApmF,GAAAA,GAAAgH,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAY5vB,WAAa9kD,EAAK8jD,WAAa,IAAHvoD,OAAOyE,EAAK8jD,YAAe,IACnE4wB,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYwC,WAAal3E,EAAKikD,WAAU,GAAA1oD,QAChC0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAoBjD,EAAKikD,YAAY,GAAK,KAAA1oD,OAAIyE,EAAKiD,UACvE,IACFyzE,GAAaphF,GAAA,GAAOo/E,EAAYyC,gBAAkBT,IAAe,GAAAphF,GAAAA,GAAAA,GAAA,GACpEo/E,EAAY0C,YACO,QAAhBjB,EAAAn2E,EAAKoqD,mBAAW,IAAA+rB,GAAa,QAAbC,EAAhBD,EAAkBptB,mBAAW,IAAAqtB,GAA7BA,EAA+BjjB,cAAgBnzD,EAAKiD,SAAQ,GAAA1H,QACnD0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAKoqD,YAAYrB,YAAYoK,cAAc,GAAK,KAAA53D,OAAIyE,EAAKiD,UACvFyxE,EAAY2C,SACrB3C,EAAY4C,UACO,QAAhBjB,EAAAr2E,EAAKoqD,mBAAW,IAAAisB,GAAW,QAAXC,EAAhBD,EAAkBrtB,iBAAS,IAAAstB,GAA3BA,EAA6BnjB,cAAgBnzD,EAAKiD,SAAQ,GAAA1H,QACjD0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAKoqD,YAAYpB,UAAUmK,cAAc,GAAK,KAAA53D,OAAIyE,EAAKiD,UACrFyxE,EAAY2C,SACrB3C,EAAY6C,eACO,QAAhBhB,EAAAv2E,EAAKoqD,mBAAW,IAAAmsB,GAAU,QAAVC,EAAhBD,EAAkB/mB,gBAAQ,IAAAgnB,GAA1BA,EAA4BrjB,cAAgBnzD,EAAKiD,SAAQ,GAAA1H,QAChD0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAKoqD,YAAYoF,SAAS2D,cAAc,GAAK,KAAA53D,OAAIyE,EAAKiD,UACpF,IAElB,EAGMu0E,GAAuB,SAACx3E,EAAqB00E,GAA6B,IAAAvoE,EACpEsY,EAAsCzkB,EAAtCykB,QAASjhB,EAA6BxD,EAA7BwD,cAAea,EAAcrE,EAAdqE,UAC1BikE,GAAsBC,EAAAA,EAAAA,mBAAkBlkE,QAAAA,EAAa,GAAIb,GACzD82C,GAAakuB,EAAAA,EAAAA,cAAankE,QAAAA,EAAa,IACvCokE,GAA+BC,EAAAA,EAAAA,2BAA0BrkE,QAAAA,EAAa,IACtEozE,EAA2BnP,KAAyBhuB,IAAemuB,EAEnEgO,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAYgD,QAAqD,QAA9CvrE,EAAIsrE,EAA2B,MAAQhzD,SAAO,IAAAtY,EAAAA,EAAK,IACtEuoE,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBAAmBQ,EAAa/B,EAAYuB,kBAEjE,EAGM0B,GAAsB,SAAC33E,EAAqB00E,GAA6B,IAAAkD,EAAAC,EAAAC,EACrErB,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAYgD,QAAsB,QAAfE,EAAG53E,EAAKykB,eAAO,IAAAmzD,EAAAA,EAAI,IACtClD,EAAYqB,iBAAgB,GAAAx6E,OAAMk7E,EAAa/B,EAAYqB,kBAAiB,KAAAx6E,OAAIyE,EAAKiD,WACrFyxE,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAY0C,YACO,QAAhBS,EAAA73E,EAAKoqD,mBAAW,IAAAytB,GAAa,QAAbC,EAAhBD,EAAkB9uB,mBAAW,IAAA+uB,GAA7BA,EAA+B3kB,cAAgBnzD,EAAKiD,SAAQ,GAAA1H,QACnD0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAKoqD,YAAYrB,YAAYoK,cAAc,GAAK,KAAA53D,OAAIyE,EAAKiD,UACvFyxE,EAAY2C,QAE9B,EAGMU,GAAsB,SAAC/3E,EAAqB00E,GAA6B,IAAAsD,EACrEvB,EAAehC,GAAgBz0E,EAAM00E,GACrCuD,EAAqC,QAAxBD,GAAGpC,EAAAA,EAAAA,iBAAgB51E,UAAK,IAAAg4E,EAAAA,EAAI,GAC/C,OAAA1iF,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAQ,GAAAp6E,OAAM08E,EAAa,KAAA18E,QACnC08E,EAAgB,GAAIv4B,EAAAA,EAAAA,cAAahxD,EAAEixD,aAAcD,EAAAA,EAAAA,cAAahxD,EAAEkxD,gBAEpE80B,EAAYwD,QAASC,EAAAA,GAAAA,IAAgBn4E,IACrC00E,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBAAmBQ,EAAa/B,EAAYuB,kBAEjE,EA4BMmC,GAAuB,SAACp4E,EAAqB00E,GAA6B,IAAA2D,EAAAC,EACtE7B,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa,GAADl7E,OAAIm5E,EAAYU,gBACvDV,EAAYiB,SAAQ,GAAAp6E,OAA2B,QAA3B88E,GAAMzC,EAAAA,EAAAA,iBAAgB51E,UAAK,IAAAq4E,EAAAA,EAAI,GAAE,KAAA98E,OAAgD,QAAhD+8E,GAAIzC,EAAAA,EAAAA,sBAAoBC,EAAAA,EAAAA,mBAAkB91E,WAAM,IAAAs4E,EAAAA,EAAI,KACzG5D,EAAY6D,eACRlE,EAAAA,EAAAA,iBAAgBr0E,EAAKsC,gBAAiBqwE,EAAAA,EAAAA,UAAS3yE,EAAKkyE,2BAA4BiG,EAAAA,GAAAA,IAAgBn4E,KACjG,OACH00E,EAAYqB,iBAAgB,GAAAx6E,OAAMk7E,EAAa/B,EAAYqB,kBAAiB,KAAAx6E,OAAIyE,EAAKiD,WACrFyxE,EAAYgB,MAAQe,EAAa/B,EAAYgB,OAEtD,EAEM8C,GAAuB,SAACx4E,EAAqB00E,GAA6B,IAAA+D,EAAAC,EACtEjC,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa,GAADl7E,OAAIm5E,EAAYU,gBACvDV,EAAYiB,SAAQ,GAAAp6E,OAA2B,QAA3Bk9E,GAAM7C,EAAAA,EAAAA,iBAAgB51E,UAAK,IAAAy4E,EAAAA,EAAI,GAAE,KAAAl9E,OAAgD,QAAhDm9E,GAAI7C,EAAAA,EAAAA,sBAAoBC,EAAAA,EAAAA,mBAAkB91E,WAAM,IAAA04E,EAAAA,EAAI,KACzGhE,EAAYiE,aAAe34E,EAAK44E,cAChClE,EAAYmE,YAAc74E,EAAK84E,aAC/BpE,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBACTj2E,EAAK4D,QAAU5D,EAAKiD,SAAW,GAAH1H,QAAM0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAK4D,QAAQ,GAAK,KAAArI,OAAIyE,EAAKiD,UAAa,GAEjH,EAEM81E,GAAiB,SAAC/4E,EAAqB00E,GAA6B,IAAAsE,EAChEvC,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAYgD,QAAsB,QAAfsB,EAAGh5E,EAAKykB,eAAO,IAAAu0D,EAAAA,EAAI,IACtCtE,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBACTj2E,EAAK4D,QAAU5D,EAAKiD,SAAW,GAAH1H,QAAM0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAK4D,QAAQ,GAAK,KAAArI,OAAIyE,EAAKiD,UAAa,GAEjH,EAEMg2E,GAAqB,SAACj5E,EAAqB00E,GAA6B,IAAAwE,EAAAC,EAAAC,EAGtEC,EAFE5C,EAAehC,GAAgBz0E,EAAM00E,GACrC4E,EAAmBt5E,EAAKsC,eAAiBiY,EAAAA,eAAeg/D,QAS9D,OALIF,EADoB,QAAxBH,EAAIl5E,EAAKq1E,uBAAe,IAAA6D,GAApBA,EAAsB1D,KACX8D,EAAmB5E,EAAY8E,SAAW9E,EAAY+E,UAEtDH,EAAmB5E,EAAYgF,oBAAsBhF,EAAYiF,qBAGhFrkF,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAY5vB,WAA4B,QAAlBq0B,EAAGn5E,EAAK8jD,kBAAU,IAAAq1B,EAAAA,EAAI,IAC5CE,EAAuB,QAAfD,EAAGp5E,EAAKykB,eAAO,IAAA20D,EAAAA,EAAI,IAC3B1E,EAAYgB,MAAQe,EAAa/B,EAAYgB,OAEtD,EAkBMkE,GAAiB,SAAC55E,EAAqB00E,GAA6B,IAAAmF,EAAAC,EAzOvCp0B,EACzB3+C,EAyOA0vE,EAAehC,GAAgBz0E,EAAM00E,GAE3C,OAAApmF,GAAAA,GAAAA,GAAAgH,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAW,CACpBc,EAAa/B,EAAYiB,UACzB,CACIoE,QAASlyE,IAAAA,cAAoB+G,EAAAA,SAAU,CACnCjZ,IAAK,aACLkZ,kBAAmB,qCACnB1d,OAAQ,CACJ6oF,gBACwB3rF,IAApB2R,EAAKmnE,WAAwB,GAAA5rE,OACpB8gB,KAAKC,MAAMxmB,OAAOkK,EAAKmnE,YAAc,GAAE,KAAA5rE,OACtCzF,OAAOkK,EAAKmnE,YAAc,EAAIuN,EAAYQ,KAAOR,EAAYlP,QAEjEyU,EAAAA,EAAAA,qBAAoBj6E,SAK7C00E,EAAYgD,QAAsB,QAAfmC,EAAG75E,EAAKykB,eAAO,IAAAo1D,EAAAA,EAAI,IACnC75E,EAAKk6E,cAAa5kF,GAAA,GAAMo/E,EAAYyF,cAAgBn6E,EAAKk6E,eAAkB,CAAC,GAC5El6E,EAAKg6E,WAAU1kF,GAAA,GAAMo/E,EAAY0F,WAAuD,QAjQjE10B,EAiQiD1lD,EAAKg6E,WAhQ/EjzE,EAAO,IAAIsU,KAAiB,IAAZqqC,GAgQ6Bo0B,EApP5C,CAVe,GAAHv+E,OAAMwL,EAAKmX,aAAa3Y,WAAWsW,SAAS,EAAG,KAAI,KAAAtgB,OAAIwL,EAAKszE,eAAe,QAAS,CACnG/9B,MAAO,QACPG,SAAU,QACZ,KAAAlhD,OAAIwL,EAAKuzE,kBAEW,GAAH/+E,OAAMwL,EAAKwzE,cAAch1E,WAAWsW,SAAS,EAAG,KAAI,KAAAtgB,OAAIwL,EACtEyzE,gBACAj1E,WACAsW,SAAS,EAAG,KAAI,KAAAtgB,OAAIwL,EAAK0zE,gBAAgBl1E,WAAWsW,SAAS,EAAG,KAAI,gBAsPuB,IAAAi+D,EAAAA,EAAI,IAAO,CAAC,GAAC,GAAAxkF,GAAAA,GAAA,GACxGo/E,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBACTj2E,EAAK4D,QAAU5D,EAAKiD,SAAW,GAAH1H,QAAM0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAK4D,QAAQ,GAAK,KAAArI,OAAIyE,EAAKiD,UAAa,IAEjH,EAEMy3E,GAAmB,SAAC16E,EAAqB00E,GAC3C,IAAM+B,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBACTj2E,EAAK4D,QAAU5D,EAAKiD,SAAW,GAAH1H,QAAM0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAK4D,QAAQ,GAAK,KAAArI,OAAIyE,EAAKiD,UAAa,GAEjH,EACM03E,GAAmB,SAAC36E,EAAqB00E,GAA6B,IAAAkG,EAAAC,EAClEpE,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAAp/E,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAYoG,cAAgB,CAAmB,QAAnBF,EAAC56E,EAAK+6E,qBAAa,IAAAH,EAAAA,EAAI,GAAI,CAAEb,QAAqB,QAAdc,EAAE76E,EAAKykB,eAAO,IAAAo2D,EAAAA,EAAI,MAClFnG,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAC7ChB,EAAYuB,iBACTj2E,EAAK4D,QAAU5D,EAAKiD,SAAW,GAAH1H,QAAM0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAK4D,QAAQ,GAAK,KAAArI,OAAIyE,EAAKiD,UAAa,GAEjH,EAIM+3E,IAA2G1lF,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAA2lF,GAAG,CAAC,EAChH1gE,EAAAA,eAAeC,OAAOC,KAAOk9D,IAC7Bp9D,EAAAA,eAAeC,OAAOE,MAAQi9D,IAC9Bp9D,EAAAA,eAAeuqC,WAAWK,KAAO+wB,IACjC37D,EAAAA,eAAeuqC,WAAWC,GAAKmxB,IAC/B37D,EAAAA,eAAe2gE,WAAWC,MAAQpD,IAClCx9D,EAAAA,eAAe2gE,WAAWE,KAAOrD,IACjCx9D,EAAAA,eAAekuB,SAAS4yC,KAAOtD,IAC/Bx9D,EAAAA,eAAekuB,SAAS6yC,IAAMvD,IAC9Bx9D,EAAAA,eAAemuB,WAAW6yC,KAAOxD,IACjCx9D,EAAAA,eAAemuB,WAAW8yC,MAAQzD,IAAmBziF,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAA2lF,GACrD1gE,EAAAA,eAAeM,IAAM28D,IACrBj9D,EAAAA,eAAekhE,KAAOjE,IACtBj9D,EAAAA,eAAemhE,MAAQlE,IACvBj9D,EAAAA,eAAeK,KAAO48D,IACtBj9D,EAAAA,eAAeohE,MAAMC,UAAYpE,IACjCj9D,EAAAA,eAAeohE,MAAME,SAAWrE,IAChCj9D,EAAAA,eAAekyB,aA3Ka,SAACzsC,EAAqB00E,GAA6B,IAAAoH,EAAAC,EAAAC,EAC1EvF,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAApmF,GAAAA,GAAAgH,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eAAa9mF,GAAA,IAEzD0R,EAAKi8E,YAAcj8E,EAAK6gC,UAAOvrC,GAAA,GAC/Bo/E,EAAYiB,SAAWc,EAAa/B,EAAYiB,aACpD,GAAArgF,GAAAA,GAAA,GAEJo/E,EAAYwH,YAAcl8E,EAAKihD,YAAc,GAAH1lD,QAAMmmD,EAAAA,EAAAA,yBAAwB1hD,EAAKihD,aAAY,KAAM,IAC/FyzB,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAAMpnF,GAAA,IAE5B,QAAhBwtF,EAAA97E,EAAKoqD,mBAAW,IAAA0xB,OAAA,EAAhBA,EAAkB/yB,cAAWzzD,GAAA,GAC5Bo/E,EAAY0C,YACO,QAAhB2E,EAAA/7E,EAAKoqD,mBAAW,IAAA2xB,GAAa,QAAbC,EAAhBD,EAAkBhzB,mBAAW,IAAAizB,GAA7BA,EAA+B7oB,cAAgBnzD,EAAKiD,SAAQ,GAAA1H,QACnD0I,EAAAA,EAAAA,aAAYjE,EAAKiD,SAAUjD,EAAKoqD,YAAYrB,YAAYoK,cAAc,GAAK,KAAA53D,OAC1EyE,EAAKiD,UAETyxE,EAAY2C,UAItC,IAsJK98D,EAAAA,eAAeI,QAAQC,KAAOw9D,IAC9B79D,EAAAA,eAAeI,QAAQE,IAAMu9D,IAE7B79D,EAAAA,eAAe4hE,IAAIC,GAAK5D,IAAoBljF,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAA2lF,GAC5C1gE,EAAAA,eAAe4hE,IAAIE,IAAM7D,IACzBj+D,EAAAA,eAAe+hE,KAAKF,GAAK5D,IACzBj+D,EAAAA,eAAe+hE,KAAKD,IAAM7D,IAC1Bj+D,EAAAA,eAAegiE,MAAMx3B,GAAKg0B,IAC1Bx+D,EAAAA,eAAegiE,MAAMp3B,KAAO4zB,IAC5Bx+D,EAAAA,eAAeiiE,aAlGa,SAACx8E,EAAqB00E,GAA6B,IAAA+H,EAAAC,EAAAC,EAAAC,EAAAC,EAC1EpG,EAAehC,GAAgBz0E,EAAM00E,GAC3C,OAAApmF,GAAAA,GAAAgH,GAAAA,GAAAA,GAAA,GACKo/E,EAAYU,aAAeqB,EAAa/B,EAAYU,eACpDV,EAAYiB,SAAWc,EAAa/B,EAAYiB,WAChDjB,EAAY5vB,WAA4B,QAAlB23B,EAAGz8E,EAAK8jD,kBAAU,IAAA24B,EAAAA,EAAI,IAAEnnF,GAAAA,GAAA,GAEtB,QAApBonF,EAAA18E,EAAKq1E,uBAAe,IAAAqH,GAApBA,EAAsBlH,KAAOd,EAAY+E,UAAY/E,EAAYiF,qBAC7C,QADiEgD,EAClF38E,EAAK44E,oBAAY,IAAA+D,EAAAA,EAAI,IACJ,QAApBC,EAAA58E,EAAKq1E,uBAAe,IAAAuH,GAApBA,EAAsBpH,KAAOd,EAAY8E,SAAW9E,EAAYgF,oBAC7C,QADgEmD,EAChF78E,EAAK84E,mBAAW,IAAA+D,EAAAA,EAAI,KAAE,GAAAvnF,GAAA,GAE7Bo/E,EAAYgB,MAAQe,EAAa/B,EAAYgB,QAEtD,IAqFKn7D,EAAAA,eAAeg/D,QAAUN,IACzB1+D,EAAAA,eAAeuiE,OAAS7D,IACxB1+D,EAAAA,eAAewiE,MAAMniE,KAAOg/D,IAC5Br/D,EAAAA,eAAewiE,MAAMliE,IAAM++D,IAActkF,GAAAA,GAAAA,GAAAA,GAAAA,GAAA2lF,GACzC1gE,EAAAA,eAAeyiE,cAAcC,KAAOtC,IACpCpgE,EAAAA,eAAeyiE,cAAcE,IAAMvC,IACnCpgE,EAAAA,eAAe4iE,KAAO3E,IACtBj+D,EAAAA,eAAe6iE,aAAaH,KAAOvC,IACnCngE,EAAAA,eAAe6iE,aAAaF,IAAMxC,KAavC,SAVwB,SAAC94D,GACrB,IAAMukD,EAAevkD,EACrB,GAAKukD,EAAa7jE,cAAlB,CACA,IAAM+6E,EAAoBrC,GAAqB7U,EAAa7jE,eAE5D,MAAO,CACH64C,QAFYkiC,EAAoBA,EAAkBlX,GAAc/kC,EAAAA,EAAAA,oBAAqB,CAAC,EAFnD,CAM3C,+uCCnTA,MCnDA,GDQqB,SAAHrhC,GAA6C,IAAvC6hB,EAAa7hB,EAAb6hB,cACd07D,EAAeC,GAAgB37D,GAC/Bu5B,EAAUmiC,EAAeA,EAAaniC,QAAU,CAAC,EACvD,OACItzC,IAAAA,cAACgrE,GAAW,CAACvlE,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,mBAC5ChH,IAAAA,cAAA,OAAKwB,UAAU,iBACXxB,IAAAA,cAAA,OAAKwB,UAAU,wBACVza,OAAOklC,QAAQqnB,GAASphD,KAAI,SAAA0L,GAAA,IAAA0G,EAAArC,GAAArE,EAAA,GAAE9P,EAAGwW,EAAA,GAAEjd,EAAKid,EAAA,UACrCtE,IAAAA,cAAA,OAAKwB,UAAU,2BAA2B1T,IAAKA,GAC3CkS,IAAAA,cAAA,OAAKwB,UAAU,iCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKE,MAAM,mCACjBpV,IAGTkS,IAAAA,cAAA,OAAKwB,UAAU,iCACVxK,MAAMkV,QAAQ7kB,GACXA,EAAM6K,KAAI,SAACq+C,EAAK9oC,GAAK,IAAAkuE,EAAA,MACjB,CAAC,SAAU,UAAUliF,SAAQ5J,GAAQ0mD,IACjCvwC,IAAAA,cAAC+C,GAAAA,EAAI,CAACjV,IAAG,GAAA4F,OAAK5F,EAAG,KAAA4F,OAAI+T,GAASzE,KAAK,MAC9ButC,GAGLvwC,IAAAA,cAAC2T,GAAAA,EAAW,CACR7lB,IAAG,GAAA4F,OAAK5F,EAAG,KAAA4F,OAAI+T,GACfzE,KAAK,KACLE,MAAM,mCAEO,QAF0ByyE,EAEtCplC,aAAG,EAAHA,EAAK2hC,eAAO,IAAAyD,EAAAA,EAAI,GAExB,IAGL31E,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAM3b,IAGvB,MAM9B,gqBElDA,IAAMuuF,GAAgB,CAClBC,qBAAqB,EACrBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,oBAAoB,GAGXC,GAA2B,SAAC/lE,GAkCrC,OAjCYziB,GAAAA,GAAAA,GAAAA,GAAAA,GAAA,GACPilB,EAAAA,eAAekyB,YAAc,CAC1BixC,qBAAqB,EACrBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,oBAAoB,IAEvBtjE,EAAAA,eAAeuqC,WAAWC,GAAK,CAC5B24B,qBAAqB,EACrBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,oBAAoB,IAEvBtjE,EAAAA,eAAeuqC,WAAWK,KAAO,CAC9Bu4B,qBAAqB,EACrBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,oBAAoB,IAEvBtjE,EAAAA,eAAeC,OAAOC,KAAO,CAC1BijE,qBAAqB,EACrBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,oBAAoB,IAEvBtjE,EAAAA,eAAeC,OAAOE,MAAQ,CAC3BgjE,qBAAqB,EACrBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,oBAAoB,IAId9lE,IAAwC0lE,EAC1D,qnCCJA,MCrCA,GDQgC,SAAH19E,GAAqF,IAA/Eg+E,EAAch+E,EAAdg+E,eAAgBC,EAAYj+E,EAAZi+E,aAAcC,EAAYl+E,EAAZk+E,aACNp0E,EAAAC,GAArBjC,IAAAA,UAAe,GAAM,GAAhDmE,EAASnC,EAAA,GAAEq0E,EAAYr0E,EAAA,GAC9B,OACIhC,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,UAAQsJ,QAAS,WAAF,OAAQ+sE,GAAclyE,EAAU,GAC3CnE,IAAAA,cAACs2E,GAAAA,EAAkC,CAAC9sE,KAAK,8CAE7CxJ,IAAAA,cAACi1B,GAAAA,EAAK,CACFE,iBAAe,EACfE,6BAA2B,EAC3BH,SAAU/wB,EACVmxB,YAAa+gD,EACb9gD,mBAAoBv1B,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,WAChDijC,iCAA+B,EAC/BtoC,UAAQ,EACRyzB,eAAa,GAEbp1B,IAAAA,cAACi1B,GAAAA,EAAMO,OAAM,CAAC/vB,MAAOywE,IACrBl2E,IAAAA,cAACi1B,GAAAA,EAAMQ,KAAI,KACPz1B,IAAAA,cAAA,OAAKwB,UAAU,yCACXxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAMmzE,GAChBC,GAAgBp2E,IAAAA,cAAC2mD,GAAAA,EAAc,CAAC5rD,QAASq7E,EAAcpzE,KAAK,KAAKgY,OAAO,YAMjG,EEQA,UAlCsCva,EAAAA,GAAAA,WAAS,SAAAvI,GAA8D,IAAAq+E,EAAAr+E,EAA3D0D,OAAAA,OAAM,IAAA26E,EAAG,QAAOA,EAEzC9jC,GADFtyC,EAAAA,EAAAA,KAAX/J,OACAg8C,YAGavC,GAFKy8B,KAAlBvyD,cAEwCojC,cAAgB,CAAC,GAAzDvJ,YACR,OAAK/D,GAAY4C,EAAW3sD,QAAU+pD,EAC3B,KAIP7vC,IAAAA,cAACirB,GAAAA,EAAG,CACAzpB,UAAU,0BACV,cAAY,6BACZH,KACIrB,IAAAA,cAAC69D,GAAAA,EAAsC,CACnC/vE,IAAI,qBACJ0b,KAAK,6CAGbkB,MACI1K,IAAAA,cAAC49D,GAAAA,cAAa,CACV/tB,SAAUA,EACVj0C,OAAQA,EACR8hE,cAAenkC,EAAAA,gBACfkZ,WAAYA,IAGpBzvC,KAAK,KACL6H,QAAQ,UAGpB,sqDClBA,IAAM2rE,IAAqB/1E,EAAAA,GAAAA,WACvB,SAAAvI,GAAuG,IAAAu+E,EAAAC,EAAAtzB,EAAAuzB,EAAAC,EAAAC,EAApGnsE,EAAKxS,EAALwS,MAAOosE,EAAkB5+E,EAAlB4+E,mBAAkBC,EAAA7+E,EAAE8+E,qBAAAA,OAAoB,IAAAD,GAAQA,EAAE1vF,EAAK6Q,EAAL7Q,MAAOmB,EAAI0P,EAAJ1P,KACGwZ,EAAAC,GAA9BjC,IAAAA,SAAerI,QAAQtQ,IAAO,GAA3D4vF,EAAUj1E,EAAA,GAAEk1E,EAAal1E,EAAA,GAC2BiM,EAAAhM,GAArBjC,IAAAA,UAAe,GAAM,GAApDm3E,EAAWlpE,EAAA,GAAEmpE,EAAcnpE,EAAA,GACqBqB,EAAArN,GAArBjC,IAAAA,UAAe,GAAM,GAAhDq3E,EAAS/nE,EAAA,GAAE+vC,EAAY/vC,EAAA,GAC2CsI,EAAA3V,GAAjCjC,IAAAA,WAAiC,GAAlEs3E,EAAY1/D,EAAA,GAAE2/D,EAAe3/D,EAAA,GACmBuwB,EAAAlmC,GAArBjC,IAAAA,UAAe,GAAM,GAAhD0R,EAASy2B,EAAA,GAAEqvC,EAAYrvC,EAAA,GAC9BsvC,EAAoCnL,KAA5BvyD,EAAa09D,EAAb19D,cAAe3J,EAAQqnE,EAARrnE,SACf3V,EAA+Csf,EAA/Ctf,cAAeW,EAAgC2e,EAAhC3e,SAAUgmD,EAAsBrnC,EAAtBqnC,kBACzB7yD,EAAyE6hB,EAAzE7hB,kBAAmBmpF,EAAsDtnE,EAAtDsnE,iBAAkBC,EAAoCvnE,EAApCunE,gCACvCC,GAAqBxX,EAAAA,EAAAA,iBAAgBrmD,GACrChW,GAAiBy0B,EAAAA,EAAAA,uBAAsB/9B,GACvCo9E,GAAe3X,EAAAA,GAAAA,IAAUnmD,GAE/B/Z,IAAAA,WAAgB,WAKZ,OAJI3Y,IACAkwF,EAAgBlwF,GAChB6vF,EAAcv/E,QAAQtQ,KAEnB,kBAAMswF,GAAiC,CAClD,GAAG,CAACA,EAAiCtwF,IAErC,IAAMywF,EAAqBF,EACrBG,EAAavjE,KAAK6D,IAAIhxB,GAEtB2wF,EAAW,mBAAHtkF,OAAsBlL,GAC9ByvF,EAA2D,QAAnCxB,EAA8B,QAA9BC,EAAGnoF,EAAkBypF,UAAS,IAAAtB,OAAA,EAA3BA,EAA8B,UAAE,IAAAD,EAAAA,EAAI,GAE/DyB,EAAuBN,EACzB53E,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sFAC5B,KAEEovE,EAAY3oF,GAAAA,GAAAA,GAAA,GACbilB,EAAAA,eAAekyB,YACZ5kC,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sEAE/B0L,EAAAA,eAAeuqC,WAAWC,GAAKg7B,GAC/BxlE,EAAAA,eAAeuqC,WAAWK,KAAO46B,GAgChC91B,EAAY55D,IAAuC,QAAnC46D,EAAKhC,SAAyB,QAARu1B,EAAjBv1B,EAAoB54D,UAAK,IAAAmuF,OAAR,EAAjBA,EAA2BnqC,WAAG,IAAA4W,EAAAA,EAAI,GACvDf,EAAY75D,IAAuC,QAAnCouF,EAAKx1B,SAAyB,QAARy1B,EAAjBz1B,EAAoB54D,UAAK,IAAAquF,OAAR,EAAjBA,EAA2BvqC,WAAG,IAAAsqC,EAAAA,EAAI,GAEvDuB,EAAkB,WACpB,IAAMC,EAAuB,gBAAT5vF,GAAyBwW,EAAAA,EAAAA,UAAS,gBAAiBA,EAAAA,EAAAA,UAAS,aAChF,OAAKs4E,EAGDl1B,IAAck1B,GAAgBl1B,GACvBpjD,EAAAA,EAAAA,UAAS,uEAAwE,CACpFo5E,YAAAA,EACAh2B,UAAAA,IAGJC,IAAci1B,GAAgBj1B,GACvBrjD,EAAAA,EAAAA,UAAS,oDAAqD,CACjEo5E,YAAAA,EACA/1B,UAAAA,IAGD41B,GAdIj5E,EAAAA,EAAAA,UAAS,yCAA0C,CAAEo5E,YAAAA,GAepE,EAEMC,EAAgB3mE,EAAYymE,IAAoB,GAuBtD,OACIn4E,IAAAA,cAAA,OAAKwB,UAAU,mCACXxB,IAAAA,cAAA,OAAKwB,UAAU,wBACXxB,IAAAA,cAAA,QAAMwB,UAAU,+BACZxB,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,MAAM0H,GACjB1K,IAAAA,cAACs4E,GAAuB,CACpBpC,eAAgBxrE,EAChByrE,aAAcW,EACdV,aAAcA,EAAa37E,IAA+C,OAGhFu8E,IACGjzE,GAAkB3I,EACf4E,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,OACN5G,EAAAA,EAAAA,aAAYhB,EAAU28E,GAAY,GAAM,IAAE38E,GAG/C4E,IAAAA,cAACulC,GAAAA,EAAY,CACTvK,SAAU88C,EACVtyC,QAASyxC,EACTxrE,SAnFG,SAACpkB,GAOjB,IAAAkxF,GANPZ,IACItwF,IACA+vF,GAAe,GACfG,EAAgB,IAChBl4B,GAAa,GACbm4B,GAAa,KAEI,QAAjBe,EAAAnoE,EAAS3E,gBAAQ,IAAA8sE,GAAjBA,EAAA7vF,KAAA0nB,EAAoB,CAChBvkB,KAAM,uBAAF6H,OAAyBlL,GAC7BnB,MAAAA,IAEJqwF,IACAR,GAAeD,GAEvB,KAuEaW,GAAsBZ,GAAwBh3E,IAAAA,cAACw4E,GAA6B,QAE/Ez0E,GAAkBkzE,GAAc77E,GAC9B4E,IAAAA,cAACqpC,GAAAA,EAAS,CACNx+B,QAAQ,OACRqT,UAAU,KACV8c,SAAUm8C,EACVttC,cAAc,SACdxiD,MAAK,GAAAqM,QAAK0I,EAAAA,EAAAA,aACNhB,EACQ,aAAR5S,GAAuBuvF,EAAaA,GACpC,GACH,KAAArkF,OAAI0H,GACLkO,QAAS,WACLquE,IACAJ,EAAgBQ,GAChBX,GAAe,GACfI,GAAa,EACjB,EACAiB,QAAS,WAAF,OAAQrB,GAAe,EAAK,IAG3Cp3E,IAAAA,cAACuG,GAAAA,EAAYkD,KAAI,CACbG,YAAY,EACZF,OAAQytE,EACRxtE,SAAS,OACT/H,QAAS,WACLy9C,GAAa,GACb+3B,GAAe,GACfI,GAAa,EACjB,GAEAx3E,IAAAA,cAACuG,GAAAA,EAAYC,OAAM,CAACE,mBAAiB,GACjC1G,IAAAA,cAACuG,GAAAA,EAAYivB,OAAM,CAAC/vB,MAAOiF,IAC3B1K,IAAAA,cAACuG,GAAAA,EAAYe,QAAO,CAAC9F,UAAU,8CAC1B21E,GACGn3E,IAAAA,cAAC0jD,GAAAA,EAAqB,CAClBla,eAAa,EACbE,WAAW,EACXloC,UAAU,qBACV8nC,WAAW,eACXG,UAAUyY,EAAAA,EAAAA,kBAAiB9mD,GAC3BL,QAASs9E,EACT10B,cAAe11D,OAAOqpF,GAAgB,GAAK,EAC3CzrF,KAAMrD,EACN+gD,cAAY,EACZ99B,SAhJX,SACb7kB,GACC,IAAA8xF,EACOrxF,EAAUT,EAAEmW,OAAZ1V,MACRkwF,EAAgBlwF,GAChBmwF,GAAa,GACI,QAAjBkB,EAAAtoE,EAAS3E,gBAAQ,IAAAitE,GAAjBA,EAAAhwF,KAAA0nB,EAAoB,CAChBvkB,KAAM,mBAAF6H,OAAqBlL,GACzBnB,MAAAA,GAER,EAuI4B82B,aAAanf,EAAAA,EAAAA,UAAS,UACtB4qC,MAAO,YACP5uB,OAAQq9D,EAAgB,QAAU,UAClCxuC,cAAc,SACdF,UAAU,UACVia,UAAU/E,EAAAA,EAAAA,wBAAuBzjD,GACjC/T,MAAOiwF,EACPzsE,QAAQ,WAGbgtE,GACC73E,IAAAA,cAAC0pE,GAAe,CACZtuE,UAAUyjD,EAAAA,EAAAA,wBAAuBzjD,GACjCyrE,SAAS,EACTG,gBAAiB6Q,KAI7B73E,IAAAA,cAACuG,GAAAA,EAAYU,OAAM,CACfgjC,iCAAiC,EACjC9iC,cAAe,CACXC,QAASpH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,SACrCK,SAjHT,WACXmwE,GAAa,GACb,IAAMmB,EAAwBR,IAC9B,GAAIQ,EAAJ,CAA2B,IAAAC,EACN,QAAjBA,EAAAxoE,EAAS3E,gBAAQ,IAAAmtE,GAAjBA,EAAAlwF,KAAA0nB,EAAoB,CAChBvkB,KAAMmsF,EACN3wF,MAAOsxF,GAGf,KANA,CAOe,IAAAE,EAAf,GAAIxB,EACiB,QAAjBwB,EAAAzoE,EAAS3E,gBAAQ,IAAAotE,GAAjBA,EAAAnwF,KAAA0nB,EAAoB,CAChBvkB,KAAM,uBAAF6H,OAAyBlL,GAC7BnB,OAAO,IAEXg4D,GAAa,GAEjBq4B,IACAN,GAAe,EATf,CAUJ,OAqGJ,IAGJ,MChPA,GDgPA,GE5NA,UAhBmB32E,EAAAA,GAAAA,WAAS,WAAM,IAAAq4E,EAAAC,EACtBh/D,EAAkBuyD,KAAlBvyD,cACAwoC,EAAgBxoC,EAAhBwoC,YAER,OADgC0zB,GAAoD,QAA5B6C,EAAC/+D,EAActf,qBAAa,IAAAq+E,EAAAA,EAAI,IAAhFjD,oBAEJ71E,IAAAA,cAACw2E,GAAkB,CACf9rE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBACnC8vE,mBACI92E,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,iGAEhC3f,MAAOk7D,SAAwB,QAAbw2B,EAAXx2B,EAAarB,mBAAW,IAAA63B,OAAb,EAAXA,EAA0BztB,aACjC9iE,KAAK,gBAET,IACR,ICGA,UAjBiBiY,EAAAA,GAAAA,WAAS,WAAM,IAAAq4E,EAAAE,EACpBj/D,EAAkBuyD,KAAlBvyD,cACAwoC,EAAgBxoC,EAAhBwoC,YAGR,OAF8B0zB,GAAoD,QAA5B6C,EAAC/+D,EAActf,qBAAa,IAAAq+E,EAAAA,EAAI,IAA9E/C,kBAGJ/1E,IAAAA,cAACw2E,GAAkB,CACf9rE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cACnC8vE,mBACI92E,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,+FAEhC3f,MAAOk7D,SAAsB,QAAXy2B,EAAXz2B,EAAapB,iBAAS,IAAA63B,OAAX,EAAXA,EAAwB1tB,aAC/B9iE,KAAK,cAET,IACR,ICMA,UAnByBiY,EAAAA,GAAAA,WAAS,WAAM,IAAAq4E,EAC5B/+D,EAAkBuyD,KAAlBvyD,cACA+7D,EAA8BG,GAAoD,QAA5B6C,EAAC/+D,EAActf,qBAAa,IAAAq+E,EAAAA,EAAI,IAAtFhD,0BAIR,OAFkB1V,EAAAA,EAAAA,iBAAgBrmD,IAEd+7D,IAA6BpsE,EAAAA,EAAAA,QAAOqQ,GACpD/Z,IAAAA,cAACgrE,GAAW,KACRhrE,IAAAA,cAACw2E,GAAkB,CACf9rE,MAAO1K,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,sBACnC8vE,mBACI92E,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,2HAEhCgwE,sBAAoB,KAG5B,IACR,mSCPA,IAAMiC,IAAwBx4E,EAAAA,GAAAA,WAAS,SAAAvI,GAA0C,IAAvC6hB,EAAa7hB,EAAb6hB,cAElCm/D,EAMAn/D,EANAm/D,UACA99E,EAKA2e,EALA3e,SACAoD,EAIAub,EAJAvb,YAAW26E,EAIXp/D,EAHAojC,aAA6BkiB,QAAjB,IAAA8Z,EAA8C,CAAC,EAACA,GAA5CvlC,YAChBuuB,EAEApoD,EAFAooD,OACA1nE,EACAsf,EADAtf,cAGJ0P,GAAoChK,EAAAA,EAAAA,KAA5B+rE,EAAe/hE,EAAf+hE,gBACA95B,EADuBjoC,EAAN/T,OACjBg8C,YACAkwB,EAAkD4J,EAAlD5J,cAAelrC,EAAmC80C,EAAnC90C,YAAasC,EAAsBwyC,EAAtBxyC,kBAC9BT,GAAmBE,EAAAA,EAAAA,eAAcpf,GACjC69D,GAAqBxX,EAAAA,EAAAA,iBAAgBrmD,GACrC8b,GAAgBkqC,EAAAA,EAAAA,sBAAqBtlE,GAErC2+E,GAAc7/C,EAAAA,EAAAA,mBACd8/C,EAAsBC,GAAAA,GAAYl9E,YAAY88E,GAAa,EAAG,CAChE99E,SAAUA,IAERm+E,EAA2BtrF,OAAOk0E,GAAU,GAAKyV,EACjD4B,EAAcD,EAA2B,GAAK,GAAH7lF,OAAM2lF,EAAmB,KAAA3lF,OAAI0H,GACxEsP,EAAQ,GAAHhX,OAAM0lF,EAAYh+C,MAAK,KAAA1nC,OAAI8lF,GAChCC,EAA4B,CAC9Bv2E,MAAO,cACPF,KAAM,KACN63B,WAAW,GAGf,OACI76B,IAAAA,cAAA,OAAKwB,UAAU,sCACVq0B,EACG71B,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAA,QAAMwB,UAAU,2CACZxB,IAAAA,cAACoe,GAAAA,GAAMlY,GAAA,CACHwE,MAAOA,EACPowB,UAAWpB,EACXsB,SAAUu+C,EACVjwE,QAAS,WAAF,OAAQ8tB,EAAY54B,EAAY,GACnCi7E,KAGX7B,GACG53E,IAAAA,cAAA,QAAMwB,UAAU,2CACZxB,IAAAA,cAACoe,GAAAA,GAAMlY,GAAA,CACHoD,QAAS,WAAF,OAAQg5D,EAAc9jE,EAAY,EACzCkM,MACI1K,IAAAA,cAAAA,IAAAA,SAAA,KACKo5E,EAAYhX,OAAQ,IACrBpiE,IAAAA,cAAC49D,GAAAA,cAAa,CACVtnC,GAAG,OACHuZ,SAAUwvB,EACVzjE,OAAO,QACP8hE,cAAenkC,EAAAA,gBACfkZ,WAAYL,KAIxBpX,SAAU/sC,OAAOk0E,IAAW,EAC5Bt3D,QAAQ,aACJ4uE,MAMpBz5E,IAAAA,cAAA,QAAMwB,UAAU,2CACZxB,IAAAA,cAACoe,GAAAA,GAAMlY,GAAA,CACHwE,MACIuuB,EAAgB,GAAAvlC,OACP0lF,EAAYh+C,MAAK,KAAA1nC,OAAI2lF,EAAmB,KAAA3lF,OAAI0H,GAC/Cg+E,EAAYM,mBAEtB5+C,UAAWpB,GAAqBT,EAChC8B,UAAQ,EACRzxB,QAAS2vB,EAAmB,kBAAM7B,EAAY54B,EAAY,OAAGhY,EAC7Dw0C,UAAW/B,EACXpuB,QAAQ,WACJ4uE,KAM5B,IAEA,MCvGA,GDuGA,GE3CA,MC5DA,GDuB8B,SAAHvhF,GAAgF,IAA1EyhF,EAAUzhF,EAAVyhF,WAAY5/D,EAAa7hB,EAAb6hB,cAAeq4B,EAAWl6C,EAAXk6C,YAChDz2C,EAAwCoe,EAAxCpe,cAAeG,EAAyBie,EAAzBje,UAAWU,EAAcud,EAAdvd,UAC5Bw8B,IAAYl9B,IAAakkE,EAAAA,EAAAA,SAAQjmD,GACjC0mD,GAAsBC,EAAAA,EAAAA,mBAAkBlkE,QAAAA,EAAa,GAAIb,GACzD82C,GAAakuB,EAAAA,EAAAA,cAAankE,QAAAA,EAAa,IACvCokE,GAA+BC,EAAAA,EAAAA,2BAA0BrkE,QAAAA,EAAa,IAG5E,OAFoBikE,KAAyBhuB,IAAemuB,IAAiC5nC,EAKzFh5B,IAAAA,cAAA,OAAKwB,WAAW4B,EAAAA,GAAAA,GAAK,kBAAmBu2E,IACpC35E,IAAAA,cAAA,OAAKwB,UAAU,yBACXxB,IAAAA,cAAC2T,GAAAA,EAAW,CAAC3Q,KAAK,KAAKxB,UAAU,gBAC7BxB,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,6BAEhChH,IAAAA,cAAC2T,GAAAA,EAAW,CAAC1Q,MAAI,EAACD,KAAK,KAAKxB,UAAU,iBACjCsgE,EAAAA,EAAAA,aAAWl8E,EAAAA,EAAAA,UAASm8E,SAAStvB,GAAc,KAAM,eACjD,MACAuvB,EAAAA,EAAAA,YAAWD,SAAStvB,GAAc,IAAK,iBAGhDzyC,IAAAA,cAAC+C,GAAAA,EAAI,CAACE,MAAI,EAACD,KAAK,KAAKxB,UAAU,gBAAgB80B,GAAG,OAC9Ct2B,IAAAA,cAACmU,GAAAA,EAA8B,CAAC3K,KAAK,mDACrCxJ,IAAAA,cAAC49D,GAAAA,cAAa,CACVtnC,GAAG,OACH90B,UAAU,2BACVquC,SAAUkyB,SAAStvB,GAAc,IACjCirB,cAAeA,EAAAA,cACfjrB,WAAYL,EACZtkD,IAAI,qBAtBK,IA2B7B,iHEtBA,MCrCA,IDM8B2S,EAAAA,GAAAA,WAAS,WACnC,IAAQkoD,GAAUznD,EAAAA,GAAAA,eAAVynD,MACF3+C,GAAUC,EAAAA,GAAAA,cAER2vE,GADWz5E,EAAAA,EAAAA,KAAX/J,OACAwjF,eASR,OACI55E,IAAAA,cAAA,UAAQwB,UAAU,qCACdxB,IAAAA,cAACA,IAAAA,SAAc,CAAC65E,SAAU75E,IAAAA,cAAA,aACtBA,IAAAA,cAACgxB,GAAAA,EAAU,CACPnmB,QAAQ,WACRxJ,KAAMrB,IAAAA,cAAC85E,GAAAA,EAA8B,CAAC91E,OAAO,OAAOoC,MAAM,OAAO,cAAY,QAAQtY,IAAI,UACzF0T,UAAU,QACV0B,MAAM,cACNoG,QAfG,WAEf,QAD2B1X,EAAAA,EAAAA,eAAc+2D,IAASA,EAAMka,eAElD74D,EAAQ+vE,SACRH,EAAe5vE,EACzB,IAYYhK,IAAAA,cAAC+C,GAAAA,EAAI,CAACC,KAAK,KAAKC,MAAI,EAACC,MAAM,sCACvBlD,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,uBAKhD,wgCENA,IAAMgzE,IAAkBv5E,EAAAA,GAAAA,WAAS,WAAM,IAAAw5E,EAAAnB,EACnCrB,EAAsCnL,KAA9BvyD,EAAa09D,EAAb19D,cAAe1hB,EAAUo/E,EAAVp/E,WACfmG,EAAsDub,EAAtDvb,YAAapD,EAAyC2e,EAAzC3e,SAAUX,EAA+Bsf,EAA/Btf,cAAe8nD,EAAgBxoC,EAAhBwoC,YAC9CrqD,EAAmCqqD,QAAAA,EAAe,CAAErB,YAAa,CAAC,EAAGC,UAAW,CAAC,GAAzED,EAAWhpD,EAAXgpD,YAAaC,EAASjpD,EAATipD,UACgEn/C,EAAAC,GAA1CjC,IAAAA,SAAuC,IAAG,GAA9Ek6E,EAAcl4E,EAAA,GAAEm4E,EAAgBn4E,EAAA,GAE/BowC,GADWjyC,EAAAA,EAAAA,KAAX/J,OACAg8C,YACRgoC,EAAmDnE,GAAyBx7E,QAAAA,EAAiB,IAArFo7E,EAAmBuE,EAAnBvE,oBAAqBE,EAAiBqE,EAAjBrE,kBACvBsE,GAAUlhD,EAAAA,EAAAA,eAAcpf,GAQxBugE,EAAwBt6E,IAAAA,aAAkB,SAACV,GACxCA,GACL3E,EAAAA,GAAG4/E,sBAAsBj7E,GACpBtV,MAAK,SAACkQ,GACHigF,EAAwCjgF,EAASsgF,wBALjD1+D,MAAK,SAACt0B,EAAGu0B,GAAC,OAAK9tB,OAAO8tB,aAAC,EAADA,EAAG4vD,YAAc19E,OAAOzG,aAAC,EAADA,EAAGmkF,WAAW,IAMhE,IAAE,OACK,kBAAM,IAAI,GACzB,GAAG,IAMH,GAJA3rE,IAAAA,WAAgB,WACZs6E,EAAsB97E,EAC1B,GAAG,CAACA,EAAa0iD,aAAW,EAAXA,EAAaoK,aAAcnK,aAAS,EAATA,EAAWmK,aAAcgvB,IAEjEjiF,EAAY,OAAO2H,IAAAA,cAACw/B,GAAAA,QAAQg9B,UAAS,CAACie,qBAAmB,IAE7D,IAAM3a,GAAeC,EAAAA,EAAAA,sBAAqBhmD,EAActf,eAElDigF,GAAYta,EAAAA,EAAAA,iBAAgBrmD,GAC5B4gE,IACDzhD,EAAAA,EAAAA,oBAAmBnf,KAChB2mD,EAAAA,EAAAA,mBAA0C,QAAzBuZ,EAAClgE,aAAa,EAAbA,EAAevd,iBAAS,IAAAy9E,EAAAA,EAAI,GAAIlgE,EAAcpe,kBACpE+N,EAAAA,EAAAA,QAAOqQ,GACX6gE,EAA0D3E,GAC3B,QADmD6C,EAC9E/+D,EAActf,qBAAa,IAAAq+E,EAAAA,EAAI,IAD3B9C,EAAkB4E,EAAlB5E,mBAAoBF,EAAyB8E,EAAzB9E,0BAGtB+E,EAAmB/a,GAAgB4a,EACrCI,GACApxE,EAAAA,EAAAA,QAAOqQ,KAAmB87D,GAAuBE,KAAuBsE,GAAWvE,GAKvF,OAHIt9C,EAAAA,EAAAA,uBAAsBze,EAActf,iBACpCqgF,GAAqBpxE,EAAAA,EAAAA,QAAOqQ,IAAkBpiB,QAAQ4qD,IAGtDviD,IAAAA,cAAAA,IAAAA,SAAA,KACIA,IAAAA,cAAC+6E,GAAqB,MACtB/6E,IAAAA,cAAA,OACIwB,UAAW8J,KAAW,mBAAoB,CACtC,gCAAiCqvE,GAAkBE,EACnD,+BAAgCF,IAAmBE,KAGvD76E,IAAAA,cAACg7E,GAAqB,CAACjhE,cAAeA,EAAeq4B,YAAaA,IAClEpyC,IAAAA,cAAC2iE,GAAY,CAACrE,aAAcvkD,EAAeyjD,WAAYprB,EAAah3C,SAAUA,IAC9E4E,IAAAA,cAACi7E,GAAoB,MACrBj7E,IAAAA,cAACwmD,GAAgB,MAChBs0B,GACG96E,IAAAA,cAACgrE,GAAW,KACRhrE,IAAAA,cAAC2sD,GAAU,MACX3sD,IAAAA,cAACk7E,GAAQ,OAGjBl7E,IAAAA,cAACm7E,GAAY,CAACphE,cAAeA,IAC7B/Z,IAAAA,cAACstD,GAAU,CAACvzC,cAAeA,IAC3B/Z,IAAAA,cAACo7E,GAAgB,CAACrhE,cAAeA,IAChCi8D,GAAsBkE,EAAe3zF,OAAS,GAC3CyZ,IAAAA,cAACq7E,GAAiB,CAACrxE,QAASkwE,EAAgB9+E,SAAUA,EAAUy6B,cAAeiqC,KAGtF6a,GAAkB36E,IAAAA,cAACi5E,GAAqB,CAACl/D,cAAeA,IAGrE,IAEA,MC3GA,GD2GA,GEtEA,SA3B6C,CACzC,CACIpP,KAAMxJ,EAAAA,OAAOC,MACb6lC,UAAWo0B,GACXigB,OAAO,EACPhV,SAAS,GAEb,CACI37D,KAAMxJ,EAAAA,OAAO8J,iBACbg8B,UAAWs0C,GACXC,kBAAkB,EAClBlV,SAAS,GAEb,CACI37D,KAAMxJ,EAAAA,OAAOiP,SACb62B,UAAW+yC,GACXwB,kBAAkB,EAClBlV,SAAS,GAEb,CAEI37D,KAAM,KACNs8B,WAAWw0C,EAAAA,EAAAA,OAAK,kBAAM,kEAAyB,IAC/CnV,SAAS,0QCGjB,UAAe7lE,EAAAA,GAAAA,WAhCU,WACrB,IAAA0J,GAAsChK,EAAAA,EAAAA,KAA9BpL,EAAMoV,EAANpV,OAAQqB,EAAM+T,EAAN/T,OAAQ4K,EAASmJ,EAATnJ,UAChBqJ,EAAiBtV,EAAjBsV,aACAsH,EAAqBvb,EAArBub,iBACAxY,EAAuB6H,EAAvB7H,QAASnI,EAAcgQ,EAAdhQ,UAQjB,OANAgP,IAAAA,WAAgB,WAEZ,OADA7G,IACOnI,CAEX,GAAG,IAGCgP,IAAAA,cAAC07E,EAAAA,SAAQ,CAAC7B,SAAU75E,IAAAA,cAAC27E,GAAAA,SAAQ,OACzB37E,IAAAA,cAAC47E,GAAAA,OAAM,KACFC,GAAa3pF,KAAI,SAAC4pF,EAAOr0E,GAAK,OAC3BzH,IAAAA,cAAC+7E,GAAAA,mBAAkB71E,GAAA,CACfpY,IAAK2Z,EACL4C,aAAcA,EACdqmD,SAAU/+C,EACVqqE,aAAcC,GAAAA,QACdC,uBAAqB,EACrB/6E,OAAQ06E,GACR99E,GAAG,IACC+9E,GACN,KAKtB,i4BC1BA,IAAMK,IAAwB17E,EAAAA,GAAAA,WAAS,WAAM,IAAAy9B,EACzC/zB,GAIIhK,EAAAA,EAAAA,KAAUu7D,EAAAvxD,EAHV/T,OAAUmO,EAAcm3D,EAAdn3D,eAAgB+3B,EAAkBo/B,EAAlBp/B,mBACpB93B,EAAwC2F,EAA9C3T,GAAMgO,yCACI6F,EAAYF,EAAtBpV,OAAUsV,aAEd+D,GACIvG,EAAAA,GAAAA,KADIguB,EAAaznB,EAAbynB,cAAekC,EAAa3pB,EAAb2pB,cAAexpC,EAAiB6f,EAAjB7f,kBAAmB2f,EAAWE,EAAXF,YAAazT,EAAa2T,EAAb3T,cAAey9B,EAAc9pB,EAAd8pB,eAE7Ene,EAAkBuyD,KAAlBvyD,cACAoQ,GAAgBC,EAAAA,GAAAA,KAAhBD,YACAlpB,GAAaC,EAAAA,GAAAA,eAAbD,SAER/I,EAA0BqM,GAAkB,CAAC,EAArCG,EAAIxM,EAAJwM,KAAM3J,EAAO7C,EAAP6C,QACRqhF,IAAsBxqF,EAAAA,EAAAA,eAAc2S,GACpCi1B,EAAiBn1B,GAAyB,CAAEE,eAAAA,EAAgBC,yCAAAA,IAMlE5G,EAAoG,QAApGsgC,EAAoEnG,GAL7Ce,EAAAA,GAAAA,IAA0B5qB,EAAazT,EAAey9B,GAKoB,WAAG,IAAAgG,EAAAA,EAAI,CAAC,EAAjGpH,EAASl5B,EAATk5B,UAAWwH,EAAW1gC,EAAX0gC,YAAsB+9C,EAAsBz+E,EAA/B7C,QAC1BuhF,EACFxlD,IAAcwH,IAAgBv3C,OAAOqF,KAAKmC,GAAmBqf,MAAK,SAAA9f,GAAG,OAAIS,EAAkBT,GAAKvH,MAAM,IAUpGg2F,KAPGH,IAAuBE,KACxBr7E,IAAaE,EAAAA,OAAOC,MAAeg7E,IAAuB5iD,GAAmB8iD,IAC7Er7E,IAAaE,EAAAA,OAAO8J,mBAAoBf,SAASjJ,SAASkoC,WAAW,gBAC9DizC,GAKTI,EAAwBD,GAA8B73E,IAASN,GAC/Dq4E,EACFvyE,SAASjJ,SAASkoC,WAAW,eAAiBtT,IAAiBuqC,EAAAA,EAAAA,iBAAgBrmD,GACzE,QACA,OACJ2iE,EAAe,CACjBC,YAAY39E,EAAAA,EAAAA,UAAS,QACrB49E,cAAe,WAAF,OAAQ34E,OAAOiS,MAAK2mE,EAAAA,EAAAA,cAAa,yBAAyB,GAAM,GAqBjF,OAlBA78E,IAAAA,WAAgB,WACRu8E,GACApyD,oWAAW1jC,CAAC,CACRsU,QAASA,QAAAA,EAAWshF,EACpBrhE,OAAQ,OACR2P,gBAAgB,EAChB+E,gBAAgB,EAChBotD,iBAAkBxgD,EAClB9jB,MAAO,CACHmX,aAActlB,EAAeoyE,EAAkB,OAC/Cr2E,MAAO,wCAEPo2E,EAAwBE,EAAe,CAAC,GAIxD,GAAG,CAACH,EAA4BC,IAEzBx8E,IAAAA,cAACi/B,GAAAA,EAAkB,KAC9B,IAEA,MCzEA,GDyEA,suBERA,MCjEA,GDoBY,SAAH/mC,GAAkC,IAA5B6kF,EAAW7kF,EAAX6kF,YACL7rF,GAAa8rF,EAAAA,EAAAA,GAAUD,EAAY7rF,WAAY6rF,EAAYpiF,IA2BjE,OAzBAqF,IAAAA,WAAgB,WACZ,OAAO,kBAAM9O,EAAWsF,GAAGymF,kBAAiB,EAAM,CACtD,GAAG,CAAC/rF,IAEJ8O,IAAAA,iBAAsB,WAAM,IAAAk9E,EAAAC,EAClBC,EAAO1sD,SAAS0sD,KAChBC,EAAQD,EAAKE,iBAAiB,0BAC9BC,EAA0C,QAA3BL,EAAIG,EAAMA,EAAM92F,OAAS,UAAE,IAAA22F,GAA0B,QAA1BC,EAAxBD,EAA8Cz/C,YAAI,IAAA0/C,OAA1B,EAAxBA,EAAoD1pF,SAAS,WAC/E+pF,EAAgB5gF,GAAIygF,GAAO9vF,QAAO,SAAAkwF,GAAI,IAAAC,EAAA,OAAKD,SAA8B,QAA1BC,EAAJD,EAA0BhgD,YAAI,IAAAigD,OAA1B,EAALA,EAAiCjqF,SAAS,UAAU,IAEpG,IAAI8pF,EAAJ,CAEA,IAAMI,EAAsBH,aAAa,EAAbA,EAAetrF,KAAI,SAAAurF,GAAI,OAAIA,aAAI,EAAJA,EAAMG,WAAU,EAAK,IAG5E,OAFAD,EAAoBl0F,SAAQ,SAAAg0F,GAAI,OAAIL,EAAKS,YAAYJ,EAAK,IAEnD,kBAAME,aAAmB,EAAnBA,EAAqBl0F,SAAQ,SAAAg0F,GAAI,OAAIL,EAAKU,YAAYL,EAAK,GAAC,CAL9C,CAM/B,GAAG,IAEHz9E,IAAAA,WAAgB,WACRiE,OAAOiG,SAASjJ,WAAaE,EAAAA,OAAOC,QACpC28E,EAAAA,GAAAA,KAGR,GAAG,CAAC95E,OAAOiG,SAASjJ,WAGhBjB,IAAAA,cAACg+E,EAAAA,EAAe,CAAC1V,MAAOp3E,GACpB8O,IAAAA,cAACC,GAAoB,KACjBD,IAAAA,cAACi+E,EAAAA,EAAe,CAAC3V,MAAOp3E,GACpB8O,IAAAA,cAACk+E,GAAAA,EAAqB,KAClBl+E,IAAAA,cAACm+E,GAAAA,EAAgB,KACbn+E,IAAAA,cAACQ,GAAa,MACdR,IAAAA,cAACo+E,GAAM,MACPp+E,IAAAA,cAACm8E,GAAqB,UAOlD,o7CEYA,SApEwB17E,EAAAA,EAAAA,WAAS,SAAAvI,GAAyC,IAAtC6hB,EAAa7hB,EAAb6hB,cAEtB4oB,GACNxiC,EAAAA,EAAAA,KADA3J,GAAMmsC,UAEJ07C,EAAsB17C,EAAY,GAAK,IACc3gC,EAAAC,EAApBjC,IAAAA,UAAe,GAAK,GAApDs+E,EAAYt8E,EAAA,GAAEu8E,EAAcv8E,EAAA,GAE7Bw8E,EAAe,SAAC53F,GACdA,GACAA,EAAE06E,kBACa,YAAX16E,EAAE4B,MAAkC,YAAX5B,EAAE4B,MAAyD,UAAlC5B,EAA0BkH,MAC5EywF,GAAgBD,IAGpBC,GAAgBD,EAExB,EAEA,OACIt+E,IAAAA,cAAA,OAAKwB,UAAU,qBACXxB,IAAAA,cAAC88D,EAAAA,KAAI,CAACz7D,KAAK,iBAAiBG,UAAU,yBAAyBwB,KAAM,KACrEhD,IAAAA,cAAA,OACIwB,UAAU,4BACV8H,QAASq5B,EAAY67C,OAAeh4F,EACpCskC,UAAW0zD,GAEXx+E,IAAAA,cAAC+C,EAAAA,KAAI,CACDC,KAAK,KACLxB,UAAW8J,IAAW,yBAA0B,CAC5C,oCAAqCgzE,GAAgB37C,EACrD,mDAAoD87C,EAAAA,aAAeH,GAAgB37C,MAGtF5oB,EAActb,UACZ,KAENsb,aAAa,EAAbA,EAAetb,WAAYsb,EAActb,SAASlY,OAAS83F,GACxDr+E,IAAAA,cAAC+C,EAAAA,KAAI,CAACuzB,GAAG,IAAImH,KAAK,IAAIz6B,KAAK,KAAKsG,QAASk1E,EAAch9E,UAAU,0BAC5D88E,GAAgB37C,EACb3iC,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,cAE5BhH,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,gBAK5ChH,IAAAA,cAACi1B,EAAAA,MAAK,CACFzzB,UAAU,2BACVuG,QAAS46B,IAAc27C,EACvB74E,MAAOzF,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,eACnC03E,gBAAgB,EAChBC,+BAA6B,EAC7BC,OAAK,EACLtpD,YAAakpD,GAEbx+E,IAAAA,cAACi1B,EAAAA,MAAMQ,KAAI,KACPz1B,IAAAA,cAAC+C,EAAAA,KAAI,CAACC,KAAK,MAAM+W,EAActb,WAEnCuB,IAAAA,cAACi1B,EAAAA,MAAMhuB,OAAM,KACTjH,IAAAA,cAACoe,EAAAA,OAAM,CAAC5c,UAAU,kCAAkCq9E,SAAO,EAACC,OAAK,EAACx1E,QAASk1E,GACvEx+E,IAAAA,cAAC+G,EAAAA,SAAQ,CAACC,kBAAkB,UAMpD,IC3CA,QAtBsB,SAAH9O,GAAA,IAAA6mF,EAAA7mF,EAAM6C,QAAAA,OAAO,IAAAgkF,EAAG,GAAEA,EAAEC,EAAY9mF,EAAZ8mF,aAAY,OAC9CjkF,EACGiF,IAAAA,cAAA,OAAKwB,UAAU,WACXxB,IAAAA,cAAA,OAAKwB,UAAU,gBACXxB,IAAAA,cAAA,OAAKoG,MAAM,KAAKpC,OAAO,KAAKi7E,QAAQ,aAChCj/E,IAAAA,cAAA,KAAGwJ,KAAK,OAAO01E,SAAS,WACpBl/E,IAAAA,cAAA,UAAQm/E,GAAG,IAAIC,GAAG,IAAIt4F,EAAE,IAAI0iB,KAAK,YACjCxJ,IAAAA,cAAA,QACIwJ,KAAK,OACL01E,SAAS,UACT/1F,EAAE,oLAKlB6W,IAAAA,cAAA,OAAKwB,UAAU,gBAAgBzG,GAC/BiF,IAAAA,cAAA,OAAKwB,UAAU,gBAAgB8H,QAAS01E,GACpCh/E,IAAAA,cAAC88D,EAAAA,KAAI,CAACz7D,KAAK,cAhBZ,IAmBV,ECJL,MCxBA,EDUgB,SAAHnJ,GAAgE,IAA1D6hB,EAAa7hB,EAAb6hB,cAAes+D,EAAangF,EAAbmgF,cAAegH,EAAWnnF,EAAXmnF,YACvCC,IAAavlE,EAActb,SACjC,OACIuB,IAAAA,cAACu/E,EAAAA,EAAO,CAACC,WAAYF,EAAU99E,UAAU,qBAAqBi+E,QAAQ,wBAC/D1lE,EAActf,eACbuF,IAAAA,cAAA,OAAKwB,UAAU,YACXxB,IAAAA,cAAC0/E,EAAe,CAAC3lE,cAAeA,KAGxC/Z,IAAAA,cAAC2/E,EAAa,CAAC5kF,QAASs9E,EAAe2G,aAAcK,IAGjE,+HEjBaO,GAAen/E,EAAAA,EAAAA,WAAS,WACjC,IAAA0J,GAAgChK,EAAAA,EAAAA,KAAxB+rE,EAAe/hE,EAAf+hE,gBACAvpC,EADmBx4B,EAAF3T,GACjBmsC,UACAypC,EAAmBF,EAAnBE,eACAryD,EAA4EqyD,EAA5EryD,cAAeI,EAA6DiyD,EAA7DjyD,YAAaC,EAAgDgyD,EAAhDhyD,eAAgBC,EAAgC+xD,EAAhC/xD,kBAAmBC,EAAa8xD,EAAb9xD,SAEvE,OACIta,IAAAA,cAAC6/E,EAAAA,EAAM,CACHxlE,kBAAmBA,EACnBC,SAAUA,EACVqoB,UAAWA,EACX5oB,cAAeA,EACfI,YAAaA,EACbC,eAAgBA,GAG5B,IAEa0lE,GAAgBr/E,EAAAA,EAAAA,WAAS,WAClC,IAAQyrE,GAAoB/rE,EAAAA,EAAAA,KAApB+rE,gBACAE,EAAmEF,EAAnEE,eAAoCiT,EAA+BnT,EAAnD6T,mBAAiC1H,EAAkBnM,EAAlBmM,cACjDt+D,EAAkBqyD,EAAlBryD,cAER,OAAO/Z,IAAAA,cAACggF,EAAO,CAACjmE,cAAeA,EAAes+D,cAAeA,EAAegH,YAAaA,GAC7F,IAGaY,EAAkB,WAC3B,OAAOjgF,IAAAA,cAACkgF,EAAAA,EAAU,CAACF,QAAShgF,IAAAA,cAAC8/E,EAAa,MAAKK,kBAAkB,GACrE,EACaC,EAAqB,WAAH,OAASpgF,IAAAA,cAACqgF,EAAAA,EAAa,CAACC,OAAQtgF,IAAAA,cAAC4/E,EAAY,OAAO,6XC7B7EW,EAA6B,SAAHroF,GAAsD,IAAhD6hB,EAAa7hB,EAAb6hB,cAClCnc,EAAiEmc,QAAAA,EAAiB,CAAC,EAA3Etf,EAAamD,EAAbnD,cAAe+lF,EAAU5iF,EAAV4iF,WAAYrO,EAAUv0E,EAAVu0E,WAAYE,EAAaz0E,EAAby0E,cACzCoO,EAAgB,QAAQrvE,KAAK3W,QAAAA,EAAiB,IAGhDimF,EAAqBlsE,KAAK83B,IAAIr+C,OAAOuyF,GAAavyF,OAAOokF,IAK7D,OAJIoO,IACAC,EAAqBlsE,KAAKg4B,IAAIv+C,OAAOuyF,GAAavyF,OAAOokF,KAIzDryE,IAAAA,cAACA,IAAAA,SAAc,KACXA,IAAAA,cAAC2gF,EAAAA,EAAW,CACRC,sBAAoB,EACpBC,cAAe,CACXC,iBAAkB,MAClBttF,EAAGvF,OAAOkkF,GACVppF,EAAG23F,GAEPK,qBAAsB,CAClBv/E,UAAW,4CAAF9N,OAA8C+sF,EAAgB,YAAc,aAG7FzgF,IAAAA,cAAC2gF,EAAAA,EAAW,CACRC,sBAAoB,EACpBC,cAAe,CACXC,iBAAkB,MAClBttF,EAAGvF,OAAOkkF,GACVppF,EAAGkF,OAAOokF,IAEd0O,qBAAsB,CAAEv/E,UAAW,sBAInD,EAEA,QAAexB,IAAAA,KAAWugF,gHCyG1B,SAlIoB9/E,EAAAA,EAAAA,WAChB,SAAAvI,GAUM,IAwCQ8oF,EAjDVC,EAAkB/oF,EAAlB+oF,mBACAvU,EAAuBx0E,EAAvBw0E,wBACAH,EAAiBr0E,EAAjBq0E,kBACAI,EAA2Bz0E,EAA3By0E,4BAOMvrE,GAAQyG,EAAAA,EAAAA,KACdsC,GAAwChK,EAAAA,EAAAA,KAAhC+rE,EAAe/hE,EAAf+hE,gBAAiB91E,EAAM+T,EAAN/T,OAAQI,EAAE2T,EAAF3T,GACzBmL,GAAas1B,EAAAA,EAAAA,KAAbt1B,SACAyqE,EAA0DF,EAA1DE,eAAgB8U,EAA0ChV,EAA1CgV,YAAazxB,EAA6Byc,EAA7Bzc,iBAAkB0xB,EAAWjV,EAAXiV,OAC/CC,EACJhV,EADIgV,gBAAiB/mE,EACrB+xD,EADqB/xD,kBAAmBgnE,EACxCjV,EADwCiV,eAAgBC,EACxDlV,EADwDkV,kBAAmBxyB,EAC3Esd,EAD2Etd,cAAe/0C,EAC1FqyD,EAD0FryD,cAE1EnW,EAAyCmW,EAArDtd,WAAoB8kF,EAAiCxnE,EAAjCwnE,cAAehxE,EAAkBwJ,EAAlBxJ,cACrCixE,EAAwC,UAAhBN,GAA2C,mBAAhBA,EACjDO,EAA4DrrF,EAA5DqrF,oBAAqB9vE,EAAuCvb,EAAvCub,iBAAkBy9C,EAAqBh5D,EAArBg5D,iBACvCF,EAAwD14D,EAAxD04D,wBAAyBD,EAA+Bz4D,EAA/By4D,2BACjCrxD,EAA4DwjF,GAAmB,CAAC,EAAxEM,EAAS9jF,EAAT8jF,UAAW/yB,EAAU/wD,EAAV+wD,WAAYgzB,EAAW/jF,EAAX+jF,YAAa/yB,EAAWhxD,EAAXgxD,YACtCgzB,EAAgBX,GAAsBzqF,EAAGC,gBACzCorF,IACA9nE,UAAAA,EAAe0mD,sBAAwBqhB,EAAAA,EAAAA,oBAAmB/nE,KAAoBA,EAAcif,SAQ5F+oD,EAAkD,UADlCC,EAAAA,EAAAA,qBAAoBP,GACK51F,KACzC0kE,EAAW,CACbG,SAAU/+C,EACVg/C,MAAOixB,IAAkBG,EAA2B,OAAS,QAC7Dp4E,SAAUulD,EAA0B,SAAW,OAC/CsB,UAAWvB,EACXgzB,kBAAkB,EAClBxxB,8BAA8B,GAE5ByxB,EAAkBV,GAAyBJ,EAAkBA,EAAgBc,qBAAkB17F,EAC/F27F,EAAYZ,EAAgBA,EAAcY,UAAY,GACpDhyB,EAAyD/uD,EAAzD+uD,SAAUG,EAA+ClvD,EAA/CkvD,YAAaD,GAAkCjvD,EAAlCivD,cAAeD,GAAmBhvD,EAAnBgvD,eAExCgyB,GAAwB,WAC1B,OAAQzgF,GAAY0Y,CACxB,EAeMgoE,IAAmBjrE,EAAAA,EAAAA,aAAYuqE,GAE/BW,MAAc1X,EAAAA,EAAAA,YAAW7wD,GACzBwoE,IACFC,EAAAA,EAAAA,2BAA0BhsF,EAAGisF,cAAeC,EAAAA,EAAAA,0BAAyBlsF,EAAGmsC,WAE5E,OACI3iC,IAAAA,cAACqxD,EAAAA,GAAU,CACP/xD,GAAG,SACH6xD,SAAUkwB,EACV9vB,cAAe6wB,KAA0BhC,EAAAA,QAAqB55F,EAC9DmrE,qBAAsB,KACtBE,UAAWlD,EACXg0B,SAAUjB,EACVP,OAAQA,EACRx/E,SAAUA,EACVswD,yBAA0BtwD,EAC1BuwD,oBAAoB,EACpBtD,YAAaA,EACbyD,WAAYhC,GACZiC,cAAenC,EACfoC,oBAAqBnC,GACrBoB,UAAW7vD,EAAW,OAAInb,EAC1B4rE,QAASzwD,EAAW,OAAInb,EACxBgsE,iBAAkBlC,EAClBC,SAAUA,EACVqyB,WAAYf,EAAyB9nE,EAAcpe,cAAgBgmF,EACnEkB,cAAeX,EACfxvB,oBAAqBjD,EACrB7rD,OAAQA,EACRk/E,SAAUX,EACVxvB,WAAY4vB,GAAwB,kBAAMviF,IAAAA,cAACA,IAAAA,SAAc,KAAG,EAAGigF,EAAAA,GAC/DrtB,mBAAoBxD,EACpB2zB,gBAEMrW,KAA6BgV,GAAazzF,OAAO0zF,GAAe1zF,OAAOo0F,IAE7EnvB,yBAAyB,EACzBK,yBAA0BmZ,EAC1BlZ,aAnDEwtB,EAAe,CACjBhyD,IAAKrtB,EAAW,GAAK,IACrBw6D,OAAQimB,KAA0B,IAAM,KAGxCzgF,IACAq/E,EAAa7kB,OAAS,GACtB6kB,EAAahyD,IAAM,IAGhBgyD,GA0CHgC,kBAAmBrhF,EACnBshF,uBAC8D,aAA1DjV,EAAAA,EAAAA,sBAAoBC,EAAAA,EAAAA,mBAAkBl0D,KACb,SAAzBA,EAAciB,OAElBkoE,gCAAiCxW,EACjCpO,aAAcvkD,EACdu3C,gBAAiBgwB,IACjB7tB,QAAS6uB,GACTnwB,yBAA0Bwa,EAC1BwW,sBAAsB,GAErBr0B,EAAc58D,KAAI,SAAAoS,GAAA,IAAG8+E,EAAc9+E,EAAd8+E,eAAgBvC,EAAav8E,EAAbu8E,cAAewC,EAAS/+E,EAAT++E,UAAW76F,EAAI8b,EAAJ9b,KAAI,OAChEwX,IAAAA,cAAC2gF,EAAAA,EAAW,CACR7yF,IAAKu1F,EACLxC,cAAeA,EACfE,qBAAsBqC,EACtBE,sBAAgC,eAAT96F,GAAkC,cAATA,IAA2C,IAAlB+nB,GAC3E,IAELg8D,IAAqBxyD,aAAa,EAAbA,EAAeo4D,aACjCnyE,IAAAA,cAACugF,EAA0B,CAACxmE,cAAeA,IAI3D,mJCxIEwpE,EAAiB,SAAC7yC,EAA8BuE,GAClD,IAAMuuC,EAAcne,IAAO30B,GAC3B,OAAO8yC,EAAYC,OAAOjvE,KAAKm4B,KAAK62C,EAAYC,SAAWxuC,GAAYA,EAC3E,EAEayuC,EAAkB,SAC3BtxC,EACAnG,EACAuG,EACAD,GAEA,IAAK,IAAIjrD,EAAI,EAAGA,EAAIkrD,EAAkBjsD,OAAQe,IAC1C,GAAI2kD,EAAc03C,QAAQnxC,EAAkBlrD,KAAO2kD,EAAc23C,SAASrxC,EAAmBjrD,IACzF,OAAOi8F,EAAet3C,EAAe,GAAGrwC,OAAO,SAIvD,IAAK,IAAItU,EAAI,EAAGA,EAAIkrD,EAAkBjsD,OAAQe,IAAK,CAC/C,IAAMu8F,EAA0Bxe,IAAO7yB,EAAkBlrD,IACzD,GAAIu8F,EAAwBF,QAAQvxC,GAChC,OAAOmxC,EAAeM,EAAyB,GAAGjoF,OAAO,QAEjE,CAEA,OAAO2nF,EAAenxC,EAAa,GAAGx2C,OAAO,QACjD,EAEay4C,EAAgB,SACzBjC,EACAI,EACAD,GAEA,IAAMuxC,EAAa,CACfnrE,MAAO65B,EAAkBtgD,KAAI,SAAA6hD,GAAS,OAClC3B,EAAYwxC,SAAS7vC,GAAasxB,IAAOtxB,GAAWE,QAAU7B,CAAW,IAE7Ex5B,IAAK25B,GAOT,OAJIuxC,EAAWnrE,MAAMpyB,OAAS,IAC1Bu9F,EAAWnrE,MAAM,GAAK4qE,EAAeO,EAAWnrE,MAAM,GAAI,IAGvDmrE,CACX,2HCpDa7U,EAAwB,SAACl1D,GAA4B,IAAAo/D,EAAA,QAClC,QAA3BA,EAACp/D,EAAcojC,oBAAY,IAAAg8B,IAA1BA,EAA4BvlC,cAC9B75B,EAAcojC,aAAavJ,YAAemwC,EAAAA,EAAWtvF,MAAwB3O,MAAM","sources":["webpack://@deriv/trader/../reports/src/Stores/Modules/Profit/Helpers/format-request.ts","webpack://@deriv/trader/../reports/src/Stores/base-store.js","webpack://@deriv/trader/../reports/src/Stores/Modules/Profit/profit-store.js","webpack://@deriv/trader/../reports/src/Stores/Modules/Profit/Helpers/format-response.ts","webpack://@deriv/trader/../reports/src/Stores/Modules/Statement/Helpers/format-response.ts","webpack://@deriv/trader/../reports/src/Stores/Modules/Statement/statement-store.js","webpack://@deriv/trader/../reports/src/Stores/useReportsStores.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Notifications/notifications.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Notifications/index.ts","webpack://@deriv/trader/../hooks/src/useLocalStorageData.ts","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats-row.tsx","webpack://@deriv/trader/./src/AppV2/Utils/layout-utils.tsx","webpack://@deriv/trader/./src/AppV2/Components/StreamIframe/stream-iframe.tsx","webpack://@deriv/trader/./src/AppV2/Components/StreamIframe/index.ts","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats.tsx","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/index.ts","webpack://@deriv/trader/./src/AppV2/Components/BottomNav/bottom-nav.tsx","webpack://@deriv/trader/./src/AppV2/Components/BottomNav/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useDtraderQuery.ts","webpack://@deriv/trader/./src/AppV2/Utils/contract-type.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useContractsForCompany.ts","webpack://@deriv/trader/./src/AppV2/Utils/client.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useActiveSymbols.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketOpeningTimeBanner/market-opening-time-banner.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketOpeningTimeBanner/index.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketCountdownTimer/market-countdown-timer.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCountdownTimer/index.ts","webpack://@deriv/trader/./src/AppV2/Utils/closed-market-message-utils.ts","webpack://@deriv/trader/./src/AppV2/Components/ClosedMarketMessage/closed-market-message.tsx","webpack://@deriv/trader/./src/AppV2/Components/ClosedMarketMessage/index.ts","webpack://@deriv/trader/./src/AppV2/Components/CurrentSpot/current-spot-display.tsx","webpack://@deriv/trader/./src/AppV2/Components/CurrentSpot/current-spot.tsx","webpack://@deriv/trader/./src/AppV2/Components/CurrentSpot/index.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolsSearchField/symbols-search-field.tsx","webpack://@deriv/trader/./src/AppV2/Components/SymbolsSearchField/index.ts","webpack://@deriv/trader/./src/AppV2/Utils/sort-symbols-utils.ts","webpack://@deriv/trader/./src/AppV2/Utils/symbol-categories-utils.ts","webpack://@deriv/trader/./src/AppV2/Utils/market-icons.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolIconsMapper/symbol-icons-mapper.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategoryItem/market-category-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategoryItem/index.ts","webpack://@deriv/trader/./src/AppV2/Components/FavoriteSymbols/no-favorite-symbols.tsx","webpack://@deriv/trader/./src/AppV2/Components/FavoriteSymbols/favorite-symbols.tsx","webpack://@deriv/trader/./src/AppV2/Components/FavoriteSymbols/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useGetFavoriteSymbols.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketCategory/market-category.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategory/index.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketCategoryTab/market-category-tab.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategories/market-categories.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategories/index.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolNotFound/symbol-not-found.tsx","webpack://@deriv/trader/./src/AppV2/Components/SymbolNotFound/index.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolSearchResults/symbol-search-results.tsx","webpack://@deriv/trader/./src/AppV2/Components/SymbolSearchResults/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useGetSymbolSearchResults.ts","webpack://@deriv/trader/./src/AppV2/Components/ActiveSymbolsList/active-symbols-list.tsx","webpack://@deriv/trader/./src/AppV2/Components/ActiveSymbolsList/index.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketSelector/market-selector.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketSelector/index.ts","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/guide-tooltip.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/steps-config.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/guide-container.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/onboarding-video.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/onboarding-guide.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/index.ts","webpack://@deriv/trader/./src/AppV2/Components/PurchaseButton/purchase-button-content.tsx","webpack://@deriv/trader/./src/AppV2/Components/PurchaseButton/purchase-button.tsx","webpack://@deriv/trader/./src/AppV2/Components/PurchaseButton/index.ts","webpack://@deriv/trader/../hooks/src/useIsHubRedirectionEnabled.ts","webpack://@deriv/trader/./src/AppV2/Components/ServiceErrorSheet/service-error-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServiceErrorSheet/service-error-sheet.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServiceErrorSheet/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useTradeError.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeErrorSnackbar/trade-error-snackbar.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeErrorSnackbar/index.ts","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide-definition-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/Description/trade-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide-content.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide-description-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/trade-parameters-container.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AccumulatorsInformation/accumulators-information.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AccumulatorsInformation/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AllowEquals/allow-equals.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AllowEquals/index.ts","webpack://@deriv/trader/./src/AppV2/Components/Carousel/carousel.tsx","webpack://@deriv/trader/./src/AppV2/Components/Carousel/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/barrier-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/barrier-input.tsx","webpack://@deriv/trader/./src/AppV2/Components/Carousel/carousel-header.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/barrier.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/BarrierInfo/barrier-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/BarrierInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/chips.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/hourpicker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/duration-wheel-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/datepicker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/timepicker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/day.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/container.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/duration.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParamDefinition/trade-param-definition.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParamDefinition/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/GrowthRate/growth-rate-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/GrowthRate/growth-rate.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/GrowthRate/index.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/digit.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/last-digit-selector.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/last-digit-prediction.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Multiplier/multiplier-wheel-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Multiplier/multiplier.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Multiplier/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersDealCancellationInfo/multipliers-deal-cancellation-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersDealCancellationInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersExpirationInfo/multipliers-expiration-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersExpirationInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutInfo/payout-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPoint/payout-per-point-wheel.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPoint/payout-per-point.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPoint/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPointInfo/payout-per-point-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPointInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/deal-cancellation.tsx","webpack://@deriv/trader/./src/AppV2/Hooks/useIsVirtualKeyboardOpen.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/take-profit-and-stop-loss-input.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/take-profit-and-stop-loss-container.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/risk-management-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/risk-management-content.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/risk-management.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useFetchProposalData.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/stake-details.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/stake-input.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/stake.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Strike/strike-wheel.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Strike/strike.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Strike/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TakeProfit/take-profit.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TakeProfit/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TradeTypeTabs/trade-type-tabs.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TradeTypeTabs/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/trade-parameters.tsx","webpack://@deriv/trader/./src/AppV2/Hooks/useDefaultSymbol.ts","webpack://@deriv/trader/./src/AppV2/Containers/Chart/trade-chart.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/TradeTypesSelectionGuide/trade-types-selection-guide.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/TradeTypesSelectionGuide/index.ts","webpack://@deriv/trader/./src/AppV2/Components/DraggableList/draggable-list-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/DraggableList/draggable-list.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeTypeList/trade-type-list-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeTypeList/trade-type-list.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/trade-types-content.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/trade-types.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/trade.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/index.ts","webpack://@deriv/trader/./src/AppV2/Components/EmptyPositions/empty-positions.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-card-status-timer.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/forward-starting-tag.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-card.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-card-list.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-cards-sections.tsx","webpack://@deriv/trader/./src/AppV2/Components/Filter/contract-type-filter.tsx","webpack://@deriv/trader/./src/AppV2/Components/Filter/custom-time-filter-button.tsx","webpack://@deriv/trader/./src/AppV2/Components/DatePicker/date-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/DatePicker/index.ts","webpack://@deriv/trader/./src/AppV2/Components/Filter/time-filter.tsx","webpack://@deriv/trader/./src/AppV2/Components/TotalProfitLoss/total-profit-loss.tsx","webpack://@deriv/trader/./src/AppV2/Components/TotalProfitLoss/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useTradeTypeFilter.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useTimeFilter.ts","webpack://@deriv/trader/./src/AppV2/Containers/Positions/positions-content.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Positions/positions.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Positions/index.ts","webpack://@deriv/trader/./src/AppV2/Components/EntryExitDetails/entry-exit-details-row.tsx","webpack://@deriv/trader/./src/AppV2/Components/CardWrapper/card-wrapper.tsx","webpack://@deriv/trader/./src/AppV2/Components/CardWrapper/index.ts","webpack://@deriv/trader/./src/AppV2/Components/EntryExitDetails/entry-exit-details.tsx","webpack://@deriv/trader/./src/AppV2/Components/EntryExitDetails/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TakeProfitHistory/take-profit-history.tsx","webpack://@deriv/trader/./src/AppV2/Components/TakeProfitHistory/index.ts","webpack://@deriv/trader/./src/AppV2/Components/PayoutInfo/payout-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/PayoutInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useContractDetails.ts","webpack://@deriv/trader/./src/AppV2/Containers/Chart/contract-details-chart.tsx","webpack://@deriv/trader/./src/AppV2/Hooks/useOrderDetails.ts","webpack://@deriv/trader/./src/AppV2/Components/OrderDetails/order-details.tsx","webpack://@deriv/trader/./src/AppV2/Components/OrderDetails/index.ts","webpack://@deriv/trader/./src/AppV2/Utils/contract-details-config.ts","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementInfoModal/risk-management-info-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementInfoModal/index.ts","webpack://@deriv/trader/./src/AppV2/Components/DealCancellationRemainingTime/deal-cancellation-remaining-time.tsx","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementItem/risk-management-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementItem/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TakeProfit/take-profit.tsx","webpack://@deriv/trader/./src/AppV2/Components/StopLoss/stop-loss.tsx","webpack://@deriv/trader/./src/AppV2/Components/DealCancellation/deal-cancellation.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsFooter/contract-details-footer.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsFooter/index.ts","webpack://@deriv/trader/./src/AppV2/Components/ForwardStartingBanner/forward-starting-banner.tsx","webpack://@deriv/trader/./src/AppV2/Components/ForwardStartingBanner/index.ts","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsHeader/contract-details-header.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsHeader/index.ts","webpack://@deriv/trader/./src/AppV2/Containers/ContractDetails/contract-details.tsx","webpack://@deriv/trader/./src/AppV2/Containers/ContractDetails/index.ts","webpack://@deriv/trader/./src/AppV2/Routes/routes.tsx","webpack://@deriv/trader/./src/AppV2/Routes/router.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServicesErrorSnackbar/services-error-snackbar.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServicesErrorSnackbar/index.ts","webpack://@deriv/trader/./src/AppV2/app.tsx","webpack://@deriv/trader/./src/AppV2/index.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/info-box-longcode.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/contract-error.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/info-box.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/index.ts","webpack://@deriv/trader/./src/Modules/Contract/Containers/contract-replay-widget.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/reset-contract-chart-elements.tsx","webpack://@deriv/trader/./src/Modules/Contract/Containers/replay-chart.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/end-time.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/logic.ts"],"sourcesContent":["import { epochToMoment, toMoment } from '@deriv/shared';\n\ntype TDateToOrFrom = number | null;\ntype TPartialFetchTime = boolean | number;\n\nconst getDateTo = (date_to: TDateToOrFrom) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (\n    should_load_partially: boolean,\n    partial_fetch_time: TPartialFetchTime,\n    date_from: TDateToOrFrom,\n    date_to: TDateToOrFrom\n) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (\n    date_from: TDateToOrFrom,\n    should_load_partially: boolean,\n    partial_fetch_time: TPartialFetchTime,\n    date_to: TDateToOrFrom\n) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return !!date_from || should_load_partially;\n    }\n    return should_load_partially ? partial_fetch_time || date_from : !!date_from || false;\n};\n\nconst getDateBoundaries = (\n    date_from: TDateToOrFrom,\n    date_to: TDateToOrFrom,\n    partial_fetch_time: TPartialFetchTime,\n    should_load_partially = false\n) => ({\n    // eslint-disable-next-line max-len\n    ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to) && {\n        date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to),\n    }),\n    ...((date_to || should_load_partially) && { date_to: getDateTo(date_to) }),\n});\n\nexport default getDateBoundaries;\n","import { action, intercept, makeObservable, observable, reaction, toJS, when } from 'mobx';\n\nimport { isEmptyObject, isProduction, Validator } from '@deriv/shared';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import debounce from 'lodash.debounce';\nimport { action, computed, observable, makeObservable, override } from 'mobx';\nimport { filterDisabledPositions, toMoment, WS } from '@deriv/shared';\n\nimport getDateBoundaries from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    data = [];\n    date_from = null;\n    date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    error = '';\n    has_loaded_all = false;\n    is_loading = true;\n    filtered_date_range;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    client_loginid = '';\n\n    constructor({ root_store }) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super({ root_store });\n\n        makeObservable(this, {\n            data: observable,\n            date_from: observable,\n            date_to: observable,\n            error: observable,\n            has_loaded_all: observable,\n            is_loading: observable,\n            filtered_date_range: observable,\n            client_loginid: observable,\n            is_empty: computed,\n            has_selected_date: computed,\n            fetchNextBatch: action.bound,\n            profitTableResponseHandler: action.bound,\n            handleScroll: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n            totals: computed,\n            accountSwitcherListener: action.bound,\n            clearTable: action.bound,\n            clearDateFilter: action.bound,\n            handleDateChange: action.bound,\n        });\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(is_mounting) {\n        return !!is_mounting || (!this.has_loaded_all && !this.is_loading);\n    }\n\n    async fetchNextBatch(shouldFilterContractTypes, isMounting) {\n        if (!this.shouldFetchNextBatch(isMounting)) return;\n        this.is_loading = true;\n        const dateParams = getDateBoundaries(this.date_from, this.date_to, 0, false);\n        const params = shouldFilterContractTypes\n            ? {\n                  ...getDateBoundaries(\n                      this.root_store.modules.positions?.dateFrom,\n                      this.root_store.modules.positions?.dateTo,\n                      0,\n                      false\n                  ),\n                  contract_type: this.root_store.modules.positions.filteredContractTypes,\n              }\n            : dateParams;\n\n        const response = await WS.profitTable(batch_size, this.data.length, params);\n\n        this.profitTableResponseHandler(response);\n    }\n\n    profitTableResponseHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction =>\n                formatProfitTableTransactions(\n                    transaction,\n                    this.root_store.client.currency,\n                    this.root_store.active_symbols.active_symbols\n                )\n            )\n            .filter(filterDisabledPositions);\n\n        this.data = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading = false;\n    }\n\n    fetchOnScroll = debounce((left, shouldFilterContractTypes) => {\n        if (left < 1500) {\n            this.fetchNextBatch(shouldFilterContractTypes);\n        }\n    }, delay_on_scroll_time);\n\n    handleScroll(event, shouldFilterContractTypes) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll, shouldFilterContractTypes);\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = this.is_loading || !is_online;\n    }\n\n    async onMount(shouldFilterContractTypes) {\n        this.assertHasValidCache(this.client_loginid, this.clearDateFilter, WS.forgetAll.bind(null, 'proposal'));\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        await WS.wait('authorize');\n\n        /* Caching won't work for profit_table because date filtering happens based on `buy_time` of a contract.\n        If we already have a cache for a period and if we sell a contract that was purchased in that period\n        then the sold contract won't be there in profit_table when visited again unless we fetch it again.\n        Caching will only work if the date filtering happens based on `sell_time` of a contract in BE. */\n        this.fetchNextBatch(shouldFilterContractTypes, true);\n    }\n\n    /* DO NOT call clearDateFilter() upon unmounting the component, date filters should stay\n    as we change tab or click on any contract for later references as discussed with UI/UX and QA */\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach(transaction => {\n            profit_loss += parseFloat(transaction.profit_loss.replace(/,/g, ''));\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    clearTable() {\n        this.data = [];\n        this.has_loaded_all = false;\n        this.is_loading = false;\n    }\n\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    }\n\n    handleDateChange(date_values, { date_range, shouldFilterContractTypes } = {}) {\n        const { from, to, is_batch } = date_values;\n\n        this.filtered_date_range = date_range;\n\n        if (from) {\n            this.date_from = toMoment(from).unix();\n        } else if (is_batch) {\n            this.date_from = null;\n        }\n\n        if (to) this.date_to = toMoment(to).unix();\n\n        if (shouldFilterContractTypes) {\n            this.root_store.modules.positions.setDateFrom(this.date_from);\n            this.root_store.modules.positions.setDateTo(this.date_to);\n        }\n\n        this.clearTable();\n        this.fetchNextBatch(shouldFilterContractTypes);\n    }\n}\n","import { formatMoney, toMoment, getSymbolDisplayName, getMarketInformation } from '@deriv/shared';\nimport { ActiveSymbols, ProfitTable } from '@deriv/api-types';\n\nexport type TTransaction = NonNullable<NonNullable<ProfitTable>['transactions']>[number];\n\nexport const formatProfitTableTransactions = (\n    transaction: TTransaction,\n    currency: string,\n    active_symbols: ActiveSymbols = []\n) => {\n    const format_string = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time =\n        transaction.purchase_time && `${toMoment(Number(transaction.purchase_time)).format(format_string)}`;\n    const purchase_time_unix = transaction.purchase_time;\n    const sell_time = transaction.sell_time && `${toMoment(Number(transaction.sell_time)).format(format_string)}`;\n    const payout = transaction.payout ?? NaN;\n    const sell_price = transaction.sell_price ?? NaN;\n    const buy_price = transaction.buy_price ?? NaN;\n    const profit_loss = formatMoney(currency, Number(sell_price - buy_price), true);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode ?? '').underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout,\n            sell_price,\n            buy_price,\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n            purchase_time_unix,\n        },\n    };\n};\n","import { formatMoney, toTitleCase, toMoment, getMarketInformation, getSymbolDisplayName } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols, Statement } from '@deriv/api-types';\n\nexport const formatStatementTransaction = (\n    transaction: NonNullable<Statement['transactions']>[number],\n    currency: string,\n    active_symbols: ActiveSymbols = []\n) => {\n    const { action_type, app_id, contract_id, longcode, purchase_time, withdrawal_details } = transaction;\n    const format_string = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time = toMoment(transaction.transaction_time).format(format_string);\n    const payout = transaction.payout ?? NaN;\n    const amount = transaction.amount ?? NaN;\n    const balance = transaction.balance_after ?? NaN;\n    const should_exclude_currency = true;\n    const shortcode = ['buy', 'sell'].includes(action_type ?? '') ? transaction.shortcode : null;\n    const display_name = shortcode\n        ? getSymbolDisplayName(active_symbols, getMarketInformation(shortcode).underlying)\n        : '';\n\n    return {\n        action: localize(toTitleCase(action_type ?? '')), // 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date: transaction_time,\n        display_name,\n        refid: transaction.transaction_id,\n        payout: isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount: isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc: longcode?.replace(/\\n/g, '<br />'),\n        id: contract_id,\n        app_id,\n        shortcode,\n        action_type,\n        purchase_time,\n        transaction_time: transaction.transaction_time,\n        ...(withdrawal_details && {\n            withdrawal_details,\n            longcode,\n        }),\n    };\n};\n","import debounce from 'lodash.debounce';\nimport { action, computed, observable, makeObservable, override } from 'mobx';\nimport { filterDisabledPositions, toMoment, WS } from '@deriv/shared';\n\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries from '../Profit/Helpers/format-request';\nimport BaseStore from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    data = [];\n    is_loading = true;\n    has_loaded_all = false;\n    date_from = null;\n    date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    error = '';\n    action_type = 'all';\n    filtered_date_range;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    client_loginid = '';\n\n    account_statistics = {};\n\n    constructor({ root_store }) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super({ root_store });\n\n        makeObservable(this, {\n            data: observable,\n            is_loading: observable,\n            has_loaded_all: observable,\n            date_from: observable,\n            date_to: observable,\n            error: observable,\n            action_type: observable,\n            filtered_date_range: observable,\n            client_loginid: observable,\n            account_statistics: observable,\n            is_empty: computed,\n            has_selected_date: computed,\n            clearTable: action.bound,\n            clearDateFilter: action.bound,\n            fetchNextBatch: action.bound,\n            statementHandler: action.bound,\n            handleDateChange: action.bound,\n            handleFilterChange: action.bound,\n            handleScroll: action.bound,\n            accountSwitcherListener: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n        });\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    clearTable() {\n        this.data = [];\n        this.has_loaded_all = false;\n        this.is_loading = false;\n    }\n\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return !should_load_partially && this.partial_fetch_time;\n        return true;\n    }\n\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const optional_arguments = getDateBoundaries(\n            this.date_from,\n            this.date_to,\n            this.partial_fetch_time,\n            should_load_partially\n        );\n\n        if (this.action_type !== 'all') {\n            optional_arguments.action_type = this.action_type;\n        }\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            optional_arguments\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction =>\n                formatStatementTransaction(\n                    transaction,\n                    this.root_store.client.currency,\n                    this.root_store.active_symbols.active_symbols\n                )\n            )\n            .filter(filterDisabledPositions);\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    handleDateChange(date_values, { date_range } = {}) {\n        const { from, to, is_batch } = date_values;\n\n        this.filtered_date_range = date_range;\n\n        if (from) {\n            this.date_from = toMoment(from).unix();\n        } else if (is_batch) {\n            this.date_from = null;\n        }\n\n        if (to) this.date_to = toMoment(to).unix();\n\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    handleFilterChange(filterValue = {}) {\n        this.action_type = filterValue;\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce(left => {\n        if (left < 1500) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = this.is_loading || !is_online;\n    }\n\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.client_loginid ? this.clearTable : () => null,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        await WS.wait('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    /* DO NOT call clearDateFilter() upon unmounting the component, date filters should stay\n    as we change tab or click on any contract for later references as discussed with UI/UX and QA */\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport ProfitStores from './Modules/Profit/profit-store';\nimport StatementStores from './Modules/Statement/statement-store';\nimport { formatProfitTableTransactions } from './Modules/Profit/Helpers/format-response';\n\ntype TOverrideProfitStore = Omit<ProfitStores, 'data' | 'date_from' | 'totals' | 'handleDateChange'> & {\n    date_from: number;\n    data: ReturnType<typeof formatProfitTableTransactions>[];\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    totals: { [key: string]: unknown };\n};\n\ntype TOverrideStatementStore = Omit<\n    StatementStores,\n    | 'account_statistics'\n    | 'action_type'\n    | 'data'\n    | 'date_from'\n    | 'date_to'\n    | 'filtered_date_range'\n    | 'handleDateChange'\n    | 'handleFilterChange'\n    | 'handleScroll'\n    | 'suffix_icon'\n> & {\n    account_statistics: { total_deposits: number; total_withdrawals: number };\n    action_type: string;\n    data: { [key: string]: string }[];\n    date_from: number;\n    date_to: number;\n    filtered_date_range: {\n        duration: number;\n        label: string;\n        onClick?: () => void;\n        value?: string;\n    };\n    handleDateChange: () => void;\n    handleFilterChange: () => void;\n    handleScroll: React.UIEventHandler<HTMLDivElement>;\n    suffix_icon: string;\n};\n\nexport type TReportsStore = {\n    profit_table: TOverrideProfitStore;\n    statement: TOverrideStatementStore;\n};\n\nconst ReportsStoreContext = React.createContext<TReportsStore | null>(null);\n\nexport const ReportsStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const root_store = useStore();\n    const memoizedValue = React.useMemo(() => {\n        return {\n            profit_table: new ProfitStores({ root_store }),\n            statement: new StatementStores({ root_store }),\n        } as unknown as TReportsStore;\n    }, [root_store]);\n\n    return <ReportsStoreContext.Provider value={memoizedValue}>{children}</ReportsStoreContext.Provider>;\n};\n\nexport const useReportsStore = () => {\n    const store = React.useContext(ReportsStoreContext);\n\n    if (!store) {\n        throw new Error('useReportsStore must be used within ReportsStoreProvider');\n    }\n\n    return store;\n};\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { useNotifications, NotificationBanners } from '@deriv-com/quill-ui';\nimport { StandaloneFlagCheckeredFillIcon } from '@deriv/quill-icons';\nimport { routes } from '@deriv/shared';\nimport { useLocation } from 'react-router-dom';\n\nconst Notifications = observer(() => {\n    const { addBanner, banners, removeBanner } = useNotifications();\n    const { portfolio } = useStore();\n    const { setAddNotificationBannerCallback } = portfolio;\n    const { pathname } = useLocation();\n\n    React.useEffect(() => {\n        if (banners.length > 1) removeBanner(banners[0].id);\n        if (pathname === routes.trade) return;\n        banners.forEach(({ type, id }) => {\n            if (!type) {\n                // Sell notifications have type and Purchase ones do not.\n                removeBanner(id);\n            }\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [banners, pathname]);\n\n    React.useEffect(() => {\n        const addNotificationBannerCallback = (params: Parameters<typeof addBanner>[0], result: string) =>\n            addBanner({\n                icon: (\n                    <StandaloneFlagCheckeredFillIcon\n                        iconSize='sm'\n                        className={`trade-notification--${result}`}\n                        key='contract-closed'\n                    />\n                ),\n                ...params,\n            });\n\n        setAddNotificationBannerCallback(addNotificationBannerCallback);\n\n        return () => setAddNotificationBannerCallback();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <NotificationBanners\n            autohideTimeout={4000}\n            banners={banners}\n            className='trade-notification'\n            isMobile\n            onClose={removeBanner}\n            zIndex={100}\n        />\n    );\n});\n\nexport default Notifications;\n","import './notifications.scss';\nimport Notifications from './notifications';\n\nexport default Notifications;\n","import React from 'react';\nimport { getLocalStorage } from '@deriv/utils';\n\n/**\n * Hook that manages a localStorage value as a React state.\n * @template T - The generic type of the localStorage value.\n * @param {string} key - The localStorage key.\n * @param {T} [fallback_value] - Optional fallback value if the key does not exist or has no value.\n * @returns - An array containing the current value, a function to update the value, and a function to clear the value.\n */\nconst useLocalStorageData = <T>(\n    key: string,\n    fallback_value?: T\n): [T | null, React.Dispatch<React.SetStateAction<T | null>>, VoidFunction] => {\n    const [data, setData] = React.useState<T | null>(getLocalStorage(key) ?? fallback_value ?? null);\n\n    React.useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(data));\n    }, [key, data]);\n\n    const clearData = () => {\n        localStorage.removeItem(key);\n        setData(fallback_value ?? null);\n    };\n\n    return [data, setData, clearData];\n};\n\nexport default useLocalStorageData;\n","import React, { useEffect, useState } from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport clsx from 'clsx';\n\nconst StatsRow = ({\n    rows,\n    animation_class,\n    is_moving_transaction,\n    className,\n}: {\n    rows: number[];\n    animation_class?: string;\n    is_moving_transaction: boolean;\n    className: string;\n}) => {\n    const [animationKey, setAnimationKey] = useState<number>(0);\n\n    useEffect(() => {\n        setAnimationKey(prevKey => prevKey + 1);\n    }, [animation_class]);\n\n    return (\n        <>\n            <div className={`${className}__stat`}>\n                <Text\n                    size='sm'\n                    bold\n                    className={animation_class}\n                    data-testid='accumulator-first-stat'\n                    color='quill-typography__color--prominent'\n                    key={animationKey}\n                >\n                    {rows[0]}\n                </Text>\n            </div>\n            {rows.slice(1)?.map((el: number, i: number) => (\n                <div\n                    key={i + 1}\n                    className={clsx(`${className}__stat`, {\n                        'slide-right': is_moving_transaction && i == 0,\n                    })}\n                >\n                    <Text size='sm'>{el}</Text>\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default StatsRow;\n","import { TCommonStoreServicesError } from '@deriv/stores/types';\n\nimport { getTradeParams } from './trade-params-utils';\n\nexport const HEIGHT = {\n    ADVANCED_FOOTER: 136,\n    ADDITIONAL_INFO: 30,\n    BOTTOM_NAV: 56,\n    CHART_STATS: 56,\n    HEADER: 40,\n    PADDING: 24,\n};\n\nexport const ASPECT_RATIO = 0.5625;\n\nexport const isTradeParamVisible = ({\n    component_key,\n    contract_type,\n    has_cancellation,\n    symbol,\n}: {\n    component_key: string;\n    contract_type: string;\n    has_cancellation: boolean;\n    symbol: string;\n}) => {\n    const params = getTradeParams(symbol, has_cancellation)?.[contract_type] ?? {};\n    return component_key in params;\n};\n\nexport const getChartHeight = ({\n    contract_type,\n    has_cancellation,\n    is_accumulator,\n    symbol,\n}: {\n    contract_type: string;\n    has_cancellation: boolean;\n    is_accumulator: boolean;\n    symbol: string;\n}) => {\n    const height = window.innerHeight - HEIGHT.HEADER - HEIGHT.BOTTOM_NAV - HEIGHT.ADVANCED_FOOTER - HEIGHT.PADDING;\n    const isVisible = (component_key: string) =>\n        isTradeParamVisible({ component_key, symbol, has_cancellation, contract_type });\n\n    if (is_accumulator) return height - HEIGHT.CHART_STATS;\n    if (\n        isVisible('expiration') ||\n        isVisible('mult_info_display') ||\n        isVisible('payout_per_point_info') ||\n        isVisible('allow_equals') ||\n        isVisible('payout')\n    )\n        return height - HEIGHT.ADDITIONAL_INFO;\n    return height;\n};\n\nexport const SERVICE_ERROR = {\n    INSUFFICIENT_BALANCE: 'InsufficientBalance',\n    INVALID_CONTRACT_PROPOSAL: 'InvalidContractProposal',\n    AUTHORIZATION_REQUIRED: 'AuthorizationRequired',\n    PLEASE_AUTHENTICATE: 'PleaseAuthenticate',\n    PENDING_VERIFICATION: 'PendingVerification',\n    COMPANY_WIDE_LIMIT_EXCEEDED: 'CompanyWideLimitExceeded',\n};\n\nexport const checkIsServiceModalError = ({\n    services_error,\n    is_mf_verification_pending_modal_visible,\n}: {\n    services_error: TCommonStoreServicesError;\n    is_mf_verification_pending_modal_visible?: boolean;\n}) => {\n    const { code, type } = services_error || {};\n    // Error modal is shown only for next four types. For the rest - snackbar.\n    const is_insufficient_balance = code === SERVICE_ERROR.INSUFFICIENT_BALANCE;\n    const is_authorization_required = code === SERVICE_ERROR.AUTHORIZATION_REQUIRED && type === 'buy';\n    const is_account_verification_required = code === SERVICE_ERROR.PLEASE_AUTHENTICATE;\n    return (\n        is_insufficient_balance ||\n        is_authorization_required ||\n        is_account_verification_required ||\n        !!is_mf_verification_pending_modal_visible\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Skeleton } from '@deriv-com/quill-ui';\nimport { ASPECT_RATIO } from 'AppV2/Utils/layout-utils';\n\ntype TStreamIframeProps = Pick<React.ComponentProps<'iframe'>, 'height' | 'width' | 'onLoad'> & {\n    autoplay?: boolean;\n    controls?: boolean;\n    letterbox_color?: string;\n    loop?: boolean;\n    muted?: boolean;\n    preload?: string;\n    src: string;\n    test_id?: string;\n    title?: string;\n};\n\nconst StreamIframe = ({\n    autoplay = true,\n    controls = false,\n    letterbox_color = 'transparent',\n    loop = true,\n    muted = true,\n    preload = 'auto',\n    src,\n    test_id,\n    title,\n    ...props\n}: TStreamIframeProps) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n\n    const params = [\n        `letterboxColor=${encodeURIComponent(letterbox_color)}`,\n        `muted=${muted}`,\n        `preload=${preload}`,\n        `loop=${loop}`,\n        `autoplay=${autoplay}`,\n        `controls=${controls}`,\n    ].join('&');\n\n    return (\n        <div className={clsx('stream__wrapper', is_loading && 'stream__wrapper--is-loading')}>\n            {is_loading && <Skeleton.Square height={`calc(100vw * ${ASPECT_RATIO})`} />}\n            <iframe\n                allowFullScreen={false}\n                className='stream__iframe'\n                width='100%'\n                height='100%'\n                src={`https://iframe.cloudflarestream.com/${src}?${params}`}\n                data-testid={test_id}\n                title={title}\n                onLoad={() => setIsLoading(false)}\n                {...props}\n            />\n        </div>\n    );\n};\n\nexport default StreamIframe;\n","import './stream-iframe.scss';\nimport StreamIframe from './stream-iframe';\n\nexport default StreamIframe;\n","import React from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { UNIFIED_MODE_VIDEO_ID } from 'Modules/Trading/Helpers/video-config';\nimport StreamIframe from '../StreamIframe';\n\nconst AccumulatorStatsDescription = ({ onActionSheetClose }: { onActionSheetClose: () => void }) => {\n    return (\n        <ActionSheet.Portal showHandlebar shouldCloseOnDrag handleBarPosition='absolute'>\n            <div className='stats-description'>\n                <StreamIframe src={UNIFIED_MODE_VIDEO_ID.accumulator_stats} title='accumulator_stats' />\n                <div className='stats-description__content'>\n                    <div className='stats-description__content__title'>\n                        <Text size='lg' bold color='quill-typography__color--prominent'>\n                            <Localize i18n_default_text='Stats' />\n                        </Text>\n                    </div>\n                    <div className='stats-description__content__description'>\n                        <Text>\n                            <Localize i18n_default_text='Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.' />\n                        </Text>\n                    </div>\n                </div>\n            </div>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Got it' />,\n                    onAction: onActionSheetClose,\n                }}\n            />\n        </ActionSheet.Portal>\n    );\n};\n\nexport default AccumulatorStatsDescription;\n","import React from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport StatsRow from './accumulator-stats-row';\nimport { Localize } from '@deriv/translations';\n\nconst AccumulatorStatsModal = ({\n    rows,\n    animation_class,\n    is_moving_transaction,\n}: {\n    rows: number[][];\n    animation_class?: string;\n    is_moving_transaction: boolean;\n}) => {\n    return (\n        <ActionSheet.Portal shouldCloseOnDrag>\n            <div className='stats-sheet'>\n                <div className='stats-sheet__title'>\n                    <Text size='lg' bold color='quill-typography__color--prominent'>\n                        <Localize i18n_default_text='Stats' />\n                    </Text>\n                </div>\n                <Text>\n                    <Localize i18n_default_text='History of tick counts' />\n                </Text>\n            </div>\n            <ActionSheet.Content>\n                <div className='stats-sheet__stats'>\n                    <StatsRow\n                        rows={rows[0]}\n                        animation_class={animation_class}\n                        is_moving_transaction={is_moving_transaction}\n                        className='stats-sheet__stats'\n                    />\n                </div>\n                {rows.slice(1).map((item: number[], index: number) => (\n                    <div key={index} className='stats-sheet__stats'>\n                        {item.map((item: number, innerIndex: number) => (\n                            <div key={`${index}-${innerIndex}`} className='stats-sheet__stats__number'>\n                                <Text size='sm'>{item}</Text>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </ActionSheet.Content>\n        </ActionSheet.Portal>\n    );\n};\n\nexport default AccumulatorStatsModal;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport { LabelPairedChevronUpSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport StatsRow from './accumulator-stats-row';\nimport AccumulatorStatsDescription from './accumulator-stats-description';\nimport AccumulatorStatsModal from './accumulator-stats-modal';\n\nconst AccumulatorStats = observer(() => {\n    const { ticks_history_stats = {} } = useTraderStore();\n    const [is_open, setIsOpen] = useState(false);\n    const [is_open_description, setIsOpenDescription] = useState(false);\n    const [animation_class, setAnimationClass] = useState('');\n    const [last_value, setLastValue] = useState<number | null>(null);\n    const [is_moving_transaction, setIsMovingTransition] = useState(false);\n\n    const ticks_history = useMemo(() => {\n        return ticks_history_stats?.ticks_stayed_in ?? [];\n    }, [ticks_history_stats]);\n\n    const rows: number[][] = useMemo(() => {\n        const row_size = 5;\n        return ticks_history.reduce<number[][]>((acc, _el, index) => {\n            if (index % row_size === 0) {\n                acc.push(ticks_history.slice(index, index + row_size));\n            }\n            return acc;\n        }, []);\n    }, [ticks_history]);\n\n    const onActionSheetClose = () => {\n        setIsOpen(false);\n        setIsOpenDescription(false);\n    };\n\n    useEffect(() => {\n        let success_timeout: ReturnType<typeof setTimeout> | undefined,\n            error_timeout: ReturnType<typeof setTimeout> | undefined,\n            transition_timeout: ReturnType<typeof setTimeout> | undefined;\n\n        if (rows[0] && rows[0].length > 0) {\n            setAnimationClass('');\n            clearTimeout(success_timeout);\n            clearTimeout(error_timeout);\n            clearTimeout(transition_timeout);\n\n            const is_same_value = last_value === rows[0][1];\n\n            is_same_value\n                ? (error_timeout = setTimeout(() => setAnimationClass('animate-error'), 0))\n                : (success_timeout = setTimeout(() => setAnimationClass('animate-success'), 0));\n\n            setIsMovingTransition(is_same_value);\n            if (is_same_value) {\n                transition_timeout = setTimeout(() => setIsMovingTransition(false), 600);\n            }\n\n            setLastValue(rows[0][0]);\n        }\n\n        return () => {\n            clearTimeout(success_timeout);\n            clearTimeout(error_timeout);\n            clearTimeout(transition_timeout);\n        };\n    }, [rows[0]?.[0], ticks_history]);\n\n    if (rows.length === 0) {\n        return null;\n    }\n    return (\n        <div>\n            <div className='accumulators-stats-v2'>\n                <div className='accumulators-stats-v2__container'>\n                    <button\n                        className='accumulators-stats-v2__container__heading'\n                        onClick={() => setIsOpenDescription(true)}\n                    >\n                        <Text size='sm'>\n                            <Localize i18n_default_text='Stats' />\n                        </Text>\n                    </button>\n                    <div className='accumulators-stats-v2__container__divider' />\n                    <div className='accumulators-stats-v2__container__stats'>\n                        <StatsRow\n                            rows={[...rows[0], ...(rows[1] || [])]}\n                            animation_class={animation_class}\n                            is_moving_transaction={is_moving_transaction}\n                            className='accumulators-stats-v2__container__stats'\n                        />\n                    </div>\n                    <button className='accumulators-stats-v2__container__expand' onClick={() => setIsOpen(true)}>\n                        <LabelPairedChevronUpSmBoldIcon\n                            data-testid='expand-stats-icon'\n                            fill='var(--semantic-color-monochrome-textIcon-normal-high)'\n                        />\n                    </button>\n                </div>\n            </div>\n            <ActionSheet.Root\n                isOpen={is_open || is_open_description}\n                onClose={onActionSheetClose}\n                position='left'\n                className='accumulator-stats-sheet-wrapper'\n                expandable={false}\n            >\n                {is_open && (\n                    <AccumulatorStatsModal\n                        rows={rows}\n                        is_moving_transaction={is_moving_transaction}\n                        animation_class={animation_class}\n                    />\n                )}\n                {is_open_description && <AccumulatorStatsDescription onActionSheetClose={onActionSheetClose} />}\n            </ActionSheet.Root>\n        </div>\n    );\n});\n\nexport default AccumulatorStats;\n","import './accumulator-stats.scss';\nimport Stats from './accumulator-stats';\n\nexport default Stats;\n","import React from 'react';\nimport classNames from 'classnames';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { Localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\nimport {\n    StandaloneChartAreaFillIcon,\n    StandaloneChartAreaRegularIcon,\n    StandaloneClockThreeFillIcon,\n    StandaloneClockThreeRegularIcon,\n} from '@deriv/quill-icons';\nimport { Badge, Navigation } from '@deriv-com/quill-ui';\nimport { useStore } from '@deriv/stores';\nimport { useHistory, useLocation } from 'react-router';\n\ntype BottomNavProps = {\n    children: React.ReactNode;\n    className?: string;\n    onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n};\n\nconst BottomNav = observer(({ children, className, onScroll }: BottomNavProps) => {\n    const history = useHistory();\n    const location = useLocation();\n    const { client, portfolio } = useStore();\n    const { active_positions_count } = portfolio;\n    const { is_logged_in } = client;\n\n    const bottomNavItems = [\n        {\n            icon: <StandaloneChartAreaRegularIcon iconSize='sm' />,\n            activeIcon: <StandaloneChartAreaFillIcon iconSize='sm' />,\n            label: <Localize i18n_default_text='Trade' />,\n            path: routes.trade,\n        },\n        {\n            icon:\n                active_positions_count > 0 ? (\n                    <Badge\n                        variant='notification'\n                        position='top-right'\n                        label={active_positions_count.toString()}\n                        color='danger'\n                        size='sm'\n                        contentSize='sm'\n                        className='bottom-nav-item__position-badge'\n                    >\n                        <StandaloneClockThreeRegularIcon iconSize='sm' />\n                    </Badge>\n                ) : (\n                    <StandaloneClockThreeRegularIcon iconSize='sm' />\n                ),\n            activeIcon:\n                active_positions_count > 0 ? (\n                    <Badge\n                        variant='notification'\n                        position='top-right'\n                        label={active_positions_count.toString()}\n                        color='danger'\n                        size='sm'\n                        contentSize='sm'\n                        className='bottom-nav-item__position-badge'\n                    >\n                        <StandaloneClockThreeFillIcon iconSize='sm' />\n                    </Badge>\n                ) : (\n                    <StandaloneClockThreeFillIcon iconSize='sm' />\n                ),\n            label: (\n                <React.Fragment>\n                    <span className='user-guide__anchor' />\n                    <Localize i18n_default_text='Positions' />\n                </React.Fragment>\n            ),\n            path: routes.trader_positions,\n        },\n    ];\n\n    const navIndex = bottomNavItems.findIndex(item => item.path === location.pathname);\n    const [selectedIndex, setSelectedIndex] = React.useState(navIndex > -1 ? navIndex : 0);\n\n    const handleSelect = (index: number) => {\n        setSelectedIndex(index);\n        history.push(bottomNavItems[index].path);\n    };\n\n    return (\n        <div className={classNames('bottom-nav', className)}>\n            <div className='bottom-nav-selection' onScroll={onScroll}>\n                {children}\n            </div>\n            {is_logged_in ? (\n                <Navigation.Bottom className='bottom-nav-container' onChange={(_, index) => handleSelect(index)}>\n                    {bottomNavItems.map((item, index) => (\n                        <Navigation.BottomAction\n                            key={index}\n                            index={index}\n                            activeIcon={<></>}\n                            icon={index === selectedIndex ? item.activeIcon : item.icon}\n                            label={item.label}\n                            selected={index === selectedIndex}\n                            showLabel\n                            className={clsx(\n                                'bottom-nav-item',\n                                index === selectedIndex && 'bottom-nav-item--active',\n                                item.path === routes.trader_positions && 'bottom-nav-item--positions'\n                            )}\n                        />\n                    ))}\n                </Navigation.Bottom>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n});\n\nexport default BottomNav;\n","import BottomNav from './bottom-nav';\nimport './bottom-nav.scss';\n\nexport default BottomNav;\n","import { WS } from '@deriv/shared';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { TServerError } from 'Types';\n\ntype QueryResult<T> = {\n    data: null | T;\n    error: TServerError | null;\n    is_fetching: boolean;\n    refetch: () => void;\n};\n\ntype QueryOptions = {\n    wait_for_authorize?: boolean;\n    enabled?: boolean;\n};\n\n// Cache object to store the results\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst cache: Record<string, any> = {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ongoing_requests: Record<string, Promise<any> | undefined> = {};\n\nconst getKey = (keys: string | string[]) => (Array.isArray(keys) ? keys.join('-') : keys);\n\nexport const useDtraderQuery = <Response>(\n    keys: string | string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request: Record<string, any>,\n    options: QueryOptions = {}\n): QueryResult<Response> => {\n    const key = getKey(keys);\n    const { enabled = true } = options;\n    const [data, setData] = useState<Response | null>(cache[key] || null);\n    const [error, setError] = useState<TServerError | null>(null);\n    const [is_fetching, setIsFetching] = useState(!cache[key] && enabled);\n    const is_mounted = useRef(false);\n    const request_string = JSON.stringify(request);\n\n    const { wait_for_authorize = true } = options;\n\n    useEffect(() => {\n        is_mounted.current = true;\n\n        return () => {\n            is_mounted.current = false;\n        };\n    }, []);\n\n    const fetchData = useCallback(() => {\n        setIsFetching(true);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let send_promise: Promise<any> | undefined;\n\n        if (ongoing_requests[key]) {\n            send_promise = ongoing_requests[key];\n        } else {\n            const request = JSON.parse(request_string);\n            send_promise = wait_for_authorize ? WS.authorized.send(request) : WS.send(request);\n            ongoing_requests[key] = send_promise;\n        }\n\n        send_promise\n            ?.then((result: Response) => {\n                if (!is_mounted.current) return;\n\n                cache[key] = result;\n                setData(result);\n                setIsFetching(false);\n            })\n            .catch((err: TServerError) => {\n                if (!is_mounted.current) return;\n\n                setError(err);\n                setIsFetching(false);\n            })\n            .finally(() => {\n                delete ongoing_requests[key];\n            });\n    }, [key, request_string, wait_for_authorize]);\n\n    useEffect(() => {\n        if (enabled && !cache[key]) {\n            fetchData();\n        }\n    }, [key, fetchData, enabled]);\n\n    useEffect(() => {\n        if (enabled && data !== cache[key]) {\n            setData(cache[key]);\n        }\n    }, [enabled, key, data]);\n\n    const refetch = useCallback(() => {\n        cache[key] = null;\n        fetchData();\n    }, [fetchData, key]);\n\n    return { data, error, is_fetching, refetch };\n};\n\nexport const invalidateDTraderCache = (keys: string | string[]) => {\n    const key = getKey(keys);\n    cache[key] = null;\n};\n","import { isRiseFallContract, isTurbosContract, isVanillaContract } from '@deriv/shared';\n\nexport const checkContractTypePrefix = (values: string[]): boolean => {\n    return [isVanillaContract, isTurbosContract, isRiseFallContract].some(contractTypeCheck =>\n        values.every(value => contractTypeCheck(value))\n    );\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useStore } from '@deriv/stores';\nimport { cloneObject, getContractCategoriesConfig, getContractTypesConfig, setTradeURLParams } from '@deriv/shared';\nimport { TConfig, TContractTypesList } from 'Types';\nimport { useDtraderQuery } from './useDtraderQuery';\nimport { isLoginidDefined } from 'AppV2/Utils/client';\nimport { getTradeTypesList } from 'AppV2/Utils/trade-types-utils';\nimport { TContractType } from 'Modules/Trading/Components/Form/ContractType/types';\nimport { checkContractTypePrefix } from 'AppV2/Utils/contract-type';\n\ntype TContractsForCompanyResponse = {\n    contracts_for_company: {\n        available: {\n            barrier_category: string;\n            contract_category: string;\n            contract_category_display: string;\n            contract_display: string;\n            contract_type: string;\n            default_stake: number;\n            sentiment: string;\n        }[];\n        hit_count: number;\n    };\n};\n\nconst useContractsForCompany = () => {\n    const [contract_types_list, setContractTypesList] = React.useState<TContractTypesList | []>([]);\n\n    const [trade_types, setTradeTypes] = React.useState<TContractType[]>([]);\n    const { contract_type, onChange, setContractTypesListV2, setDefaultStake, processContractsForV2, symbol } =\n        useTraderStore();\n    const { client } = useStore();\n    const { loginid, is_switching, landing_company_shortcode } = client;\n    const prev_landing_company_shortcode_ref = React.useRef(landing_company_shortcode);\n\n    const isQueryEnabled = useCallback(() => {\n        if (isLoginidDefined(loginid) && !landing_company_shortcode) return false;\n        if (is_switching) return false;\n        return true;\n    }, [loginid, is_switching, landing_company_shortcode]);\n\n    const {\n        data: response,\n        error,\n        is_fetching,\n    } = useDtraderQuery<TContractsForCompanyResponse>(\n        ['contracts_for_company', loginid ?? '', landing_company_shortcode],\n        {\n            contracts_for_company: 1,\n            landing_company: landing_company_shortcode,\n        },\n        {\n            enabled: isQueryEnabled(),\n        }\n    );\n\n    const contract_categories = getContractCategoriesConfig();\n    const available_categories = cloneObject(contract_categories);\n    const contract_types = getContractTypesConfig();\n    const [available_contract_types, setAvailableContractTypes] = React.useState<\n        ReturnType<typeof getContractTypesConfig> | undefined\n    >();\n\n    const is_fetching_ref = useRef(is_fetching);\n\n    const isContractTypeAvailable = useCallback(\n        (trade_types: TContractType[]) => {\n            return trade_types.some(\n                type => checkContractTypePrefix([contract_type, type.value]) || contract_type === type.value\n            );\n        },\n        [contract_type]\n    );\n\n    const getTradeTypes = useCallback((categories: TContractTypesList) => {\n        return Array.isArray(categories) && categories.length === 0\n            ? []\n            : getTradeTypesList(categories as TContractTypesList);\n    }, []);\n\n    const getNewContractType = useCallback(\n        (trade_types: TContractType[]) => {\n            if (!isContractTypeAvailable(trade_types) && trade_types.length > 0) {\n                return trade_types[0].value;\n            }\n            return contract_type;\n        },\n        [contract_type, isContractTypeAvailable]\n    );\n\n    const processNewContractType = useCallback(\n        (new_contract_type: string) => {\n            const has_contract_type_changed = contract_type != new_contract_type && new_contract_type;\n            if (has_contract_type_changed) {\n                onChange({\n                    target: {\n                        name: 'contract_type',\n                        value: new_contract_type,\n                    },\n                });\n            }\n            setTradeURLParams({ contractType: new_contract_type });\n        },\n        [contract_type, onChange]\n    );\n\n    useEffect(() => {\n        setAvailableContractTypes(undefined);\n        setContractTypesList([]);\n        is_fetching_ref.current = true;\n    }, [loginid]);\n\n    useEffect(() => {\n        try {\n            const { contracts_for_company } = response || {};\n            const available_contract_types: ReturnType<typeof getContractTypesConfig> = {};\n            is_fetching_ref.current = false;\n\n            if (!error && contracts_for_company?.available.length) {\n                contracts_for_company.available.forEach(contract => {\n                    const type = Object.keys(contract_types).find(\n                        key =>\n                            contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                            (contract.contract_type !== 'PUT' || contract_types[key].barrier_count === 1) // To distinguish betweeen Rise/Fall & Higher/Lower\n                    );\n\n                    if (!type) return; // ignore unsupported contract types\n\n                    if (!available_contract_types[type]) {\n                        // extend contract_categories to include what is needed to create the contract list\n                        const category =\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            ) ?? '';\n\n                        const sub_cats = available_categories[category]?.categories;\n\n                        if (!sub_cats) return;\n\n                        sub_cats[(sub_cats as string[]).indexOf(type)] = {\n                            value: type,\n                            text: contract_types[type].title,\n                            barrier_category: contract.barrier_category,\n                        };\n\n                        available_contract_types[type] = cloneObject(contract_types[type]);\n                    }\n                    const config: TConfig = available_contract_types[type].config || {};\n                    config.barrier_category =\n                        contract_types[type].barrier_count === 0\n                            ? 'euro_atm'\n                            : (contract.barrier_category as TConfig['barrier_category']);\n                    config.default_stake = contract.default_stake;\n                    if (type === contract_type) setDefaultStake(contract.default_stake);\n                    available_contract_types[type].config = config;\n                });\n\n                setContractTypesListV2(available_categories);\n                setContractTypesList(available_categories);\n                setAvailableContractTypes(available_contract_types);\n\n                const trade_types = getTradeTypes(available_categories);\n                setTradeTypes(trade_types);\n\n                const new_contract_type = getNewContractType(trade_types);\n                processNewContractType(new_contract_type);\n\n                if (landing_company_shortcode !== prev_landing_company_shortcode_ref.current) {\n                    onChange({\n                        target: {\n                            name: 'symbol',\n                            value: symbol,\n                        },\n                    }).then(() => {\n                        processContractsForV2();\n                        prev_landing_company_shortcode_ref.current = landing_company_shortcode;\n                    });\n                }\n            }\n        } catch (err) {\n            /* eslint-disable no-console */\n            console.error(err);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response]);\n\n    const resetTradeTypes = () => {\n        setTradeTypes([]);\n    };\n\n    return { trade_types, contract_types_list, available_contract_types, is_fetching_ref, resetTradeTypes };\n};\n\nexport default useContractsForCompany;\n","export const isLoginidDefined = (loginid: string | undefined) => {\n    return loginid && loginid !== 'null';\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport {\n    CONTRACT_TYPES,\n    TRADE_TYPES,\n    getContractTypesConfig,\n    isTurbosContract,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols, ActiveSymbolsResponse } from '@deriv/api-types';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport useContractsForCompany from './useContractsForCompany';\nimport { useDtraderQuery } from './useDtraderQuery';\n\nconst useActiveSymbols = () => {\n    const { client, common } = useStore();\n    const { loginid, is_switching } = client;\n    const { showError, current_language } = common;\n    const {\n        active_symbols: symbols_from_store,\n        contract_type,\n        is_vanilla,\n        is_turbos,\n        setActiveSymbolsV2,\n    } = useTraderStore();\n    const [activeSymbols, setActiveSymbols] = useState<ActiveSymbols | []>(symbols_from_store);\n\n    const { available_contract_types, is_fetching_ref: is_contracts_loading_ref } = useContractsForCompany();\n\n    const trade_types_with_barrier_category = [\n        TRADE_TYPES.RISE_FALL,\n        TRADE_TYPES.RISE_FALL_EQUAL,\n        TRADE_TYPES.HIGH_LOW,\n    ] as string[];\n\n    const getContractTypesList = () => {\n        if (is_turbos) return [CONTRACT_TYPES.TURBOS.LONG, CONTRACT_TYPES.TURBOS.SHORT];\n        if (is_vanilla) return [CONTRACT_TYPES.VANILLA.CALL, CONTRACT_TYPES.VANILLA.PUT];\n        return getContractTypesConfig()[contract_type]?.trade_types ?? [];\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { barrier_category } = (available_contract_types?.[contract_type]?.config || {}) as any;\n\n    const isQueryEnabled = useCallback(() => {\n        if (!available_contract_types || is_contracts_loading_ref.current || is_switching) return false;\n        return true;\n    }, [available_contract_types, is_switching, is_contracts_loading_ref]);\n\n    const getContractType = () => {\n        if (isTurbosContract(contract_type)) {\n            return 'turbos';\n        } else if (isVanillaContract(contract_type)) {\n            return 'vanilla';\n        }\n        return contract_type;\n    };\n\n    const { data: response } = useDtraderQuery<ActiveSymbolsResponse>(\n        ['active_symbols', loginid ?? '', getContractType(), current_language],\n        {\n            active_symbols: 'brief',\n            contract_type: getContractTypesList(),\n            ...(trade_types_with_barrier_category.includes(contract_type) && barrier_category\n                ? { barrier_category: [barrier_category] }\n                : {}),\n        },\n        {\n            enabled: isQueryEnabled(),\n        }\n    );\n\n    useEffect(\n        () => {\n            const process = async () => {\n                if (!response) return;\n\n                const { active_symbols = [], error } = response;\n                if (error) {\n                    showError({ message: localize('Trading is unavailable at this time.') });\n                } else if (!active_symbols?.length) {\n                    setActiveSymbols([]);\n                } else {\n                    setActiveSymbols(active_symbols);\n                    setActiveSymbolsV2(active_symbols);\n                }\n            };\n            process();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [response]\n    );\n\n    return { activeSymbols };\n};\n\nexport default useActiveSymbols;\n","import React from 'react';\nimport { convertTimeFormat, toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { CaptionText } from '@deriv-com/quill-ui';\n\ntype TMarketOpeningTimeBanner = {\n    opening_time: string;\n    days_offset: number;\n    current_language: string;\n};\n\nconst MarketOpeningTimeBanner = ({ opening_time, days_offset, current_language }: TMarketOpeningTimeBanner) => {\n    const formatted_opening_time = convertTimeFormat(opening_time);\n    const target_date = toMoment(new Date()).locale(current_language.toLowerCase()).add(days_offset, 'days');\n    const opening_date = target_date.format('DD MMM YYYY');\n\n    return (\n        <CaptionText bold className='market-opening-time-banner'>\n            <Localize\n                i18n_default_text='{{formatted_opening_time}} (GMT), {{opening_date}}'\n                values={{\n                    formatted_opening_time,\n                    opening_date,\n                }}\n            />\n        </CaptionText>\n    );\n};\n\nexport default MarketOpeningTimeBanner;\n","import './market-opening-time-banner.scss';\nimport MarketOpeningTimeBanner from './market-opening-time-banner';\n\nexport default MarketOpeningTimeBanner;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { LabelPairedStopwatchMdBoldIcon } from '@deriv/quill-icons';\n\ntype TMarketCountDownTimer = {\n    time_left: {\n        days?: number;\n        hours?: number;\n        minutes?: number;\n        seconds?: number;\n    };\n};\n\nconst MarketCountdownTimer = ({ time_left }: TMarketCountDownTimer) => {\n    let timer_components = '';\n\n    if (Object.keys(time_left).length) {\n        const hours = (Number(time_left.days) * 24 + Number(time_left.hours)).toString().padStart(2, '0');\n        const minutes = Number(time_left.minutes).toString().padStart(2, '0');\n        const seconds = Number(time_left.seconds).toString().padStart(2, '0');\n        timer_components = `${hours}:${minutes}:${seconds}`;\n    }\n\n    return (\n        <div className='market-countdown-timer'>\n            <LabelPairedStopwatchMdBoldIcon fill='var(--component-textIcon-static-prominentDark)' />\n            <Text bold size='md' className='market-countdown-timer-text'>\n                {timer_components}\n            </Text>\n        </div>\n    );\n};\n\nexport default MarketCountdownTimer;\n","import './market-countdown-timer.scss';\nimport MarketCountdownTimer from './market-countdown-timer';\n\nexport default MarketCountdownTimer;\n","import { TradingTimesResponse } from '@deriv/api-types';\n\nexport const calculateTimeLeft = (remaining_time_to_open: number) => {\n    const difference = remaining_time_to_open - Date.now();\n    return difference > 0\n        ? {\n              days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n              hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n              minutes: Math.floor((difference / 1000 / 60) % 60),\n              seconds: Math.floor((difference / 1000) % 60),\n          }\n        : {};\n};\n\nexport const getSymbol = (\n    target_symbol: string,\n    trading_times: NonNullable<DeepRequired<TradingTimesResponse['trading_times']>>\n) => {\n    let symbol;\n    const { markets } = trading_times;\n    for (let i = 0; i < markets.length; i++) {\n        const { submarkets } = markets[i];\n        if (submarkets) {\n            for (let j = 0; j < submarkets.length; j++) {\n                const { symbols } = submarkets[j];\n                symbol = symbols?.find(item => item.symbol === target_symbol);\n                if (symbol !== undefined) return symbol;\n            }\n        }\n    }\n};\n","import React from 'react';\nimport { useIsMounted, WS, isMarketClosed, toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TradingTimesRequest } from '@deriv/api-types';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport MarketOpeningTimeBanner from '../MarketOpeningTimeBanner';\nimport MarketCountdownTimer from '../MarketCountdownTimer';\nimport { CaptionText } from '@deriv-com/quill-ui';\nimport clsx from 'clsx';\nimport { calculateTimeLeft, getSymbol } from 'AppV2/Utils/closed-market-message-utils';\n\ntype TWhenMarketOpens = {\n    days_offset: number;\n    opening_time: string;\n    remaining_time_to_open: number;\n};\n\nconst days_to_check_before_exit = 7;\n\nconst getTradingTimes = async (target_time: TradingTimesRequest['trading_times']) => {\n    const data = await WS.tradingTimes(target_time);\n    if (data.error) {\n        return { api_initial_load_error: data.error.message };\n    }\n    return data;\n};\n\nconst ClosedMarketMessage = observer(() => {\n    const { common } = useStore();\n    const { current_language } = common;\n    const { symbol, prepareTradeStore, is_market_closed } = useTraderStore();\n    const { activeSymbols } = useActiveSymbols();\n\n    const isMounted = useIsMounted();\n    const [when_market_opens, setWhenMarketOpens] = React.useState<TWhenMarketOpens>({} as TWhenMarketOpens);\n    const [time_left, setTimeLeft] = React.useState(calculateTimeLeft(when_market_opens?.remaining_time_to_open));\n    const [is_loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        if (is_market_closed) {\n            setLoading(true);\n            const whenMarketOpens = async (\n                days_offset: number,\n                target_symbol: string\n            ): Promise<void | Record<string, unknown>> => {\n                if (days_offset > days_to_check_before_exit) return {};\n                let remaining_time_to_open;\n                const target_date = toMoment(new Date()).add(days_offset, 'days');\n                const api_response = await getTradingTimes(target_date.format('YYYY-MM-DD'));\n                if (!api_response.api_initial_load_error) {\n                    const returned_symbol = getSymbol(target_symbol, api_response.trading_times);\n                    const open = returned_symbol?.times.open as string[];\n                    const close = returned_symbol?.times.close as string[];\n                    const is_closed_all_day = open?.length === 1 && open[0] === '--' && close[0] === '--';\n                    if (is_closed_all_day) {\n                        return whenMarketOpens(days_offset + 1, target_symbol);\n                    }\n                    const date_str = target_date.toISOString().substring(0, 11);\n                    const getUTCDate = (hour: string) => new Date(`${date_str}${hour}Z`);\n                    for (let i = 0; i < open?.length; i++) {\n                        const diff = +getUTCDate(open[i]) - Date.now();\n                        if (diff > 0) {\n                            remaining_time_to_open = +getUTCDate(open[i]);\n                            if (isMounted() && target_symbol === symbol) {\n                                return setWhenMarketOpens({\n                                    days_offset,\n                                    opening_time: open[i],\n                                    remaining_time_to_open,\n                                });\n                            }\n                        }\n                    }\n                    whenMarketOpens(days_offset + 1, target_symbol);\n                }\n            };\n\n            whenMarketOpens(0, symbol);\n        }\n        setTimeLeft({});\n        setWhenMarketOpens({} as TWhenMarketOpens);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [activeSymbols, symbol]);\n\n    React.useEffect(() => {\n        let timer: ReturnType<typeof setTimeout>;\n        if (when_market_opens?.remaining_time_to_open) {\n            timer = setTimeout(() => {\n                setTimeLeft(calculateTimeLeft(when_market_opens.remaining_time_to_open));\n                if (+new Date(when_market_opens.remaining_time_to_open) - +new Date() < 1000) {\n                    setLoading(true);\n                    prepareTradeStore(false);\n                }\n            }, 1000);\n        }\n        return () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n    }, [time_left, when_market_opens, prepareTradeStore]);\n\n    if (!(when_market_opens && Object.keys(time_left).length) || !is_market_closed) return null;\n\n    const { opening_time, days_offset } = when_market_opens;\n\n    if (is_loading) setLoading(false);\n\n    return (\n        <div className={clsx('closed-market-message--container', { 'closed-market-message--loading': is_loading })}>\n            <div className='closed-market-message--left'>\n                <CaptionText className='closed-market-message--left-message'>\n                    <Localize i18n_default_text='This market will reopen at' />\n                </CaptionText>\n                <MarketOpeningTimeBanner\n                    opening_time={opening_time}\n                    days_offset={days_offset}\n                    current_language={current_language}\n                />\n            </div>\n            <MarketCountdownTimer time_left={time_left} />\n        </div>\n    );\n});\n\nexport default ClosedMarketMessage;\n","import './closed-market-message.scss';\nimport ClosedMarketMessage from './closed-market-message';\n\nexport default ClosedMarketMessage;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Heading, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { usePrevious } from '@deriv/components';\n\ntype TCurrentSpotDisplayProps = {\n    has_tick_count?: boolean;\n    spot: string | null;\n    tick: number | null;\n};\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n} as const;\nconst TOTAL_ANIMATION_TIME = 80;\n\nconst CurrentSpotDisplay = ({ has_tick_count, spot, tick }: TCurrentSpotDisplayProps) => {\n    const last_digit = Number(spot?.slice(-1));\n    const prev_spot = usePrevious(spot);\n    const prev_last_digit = Number(prev_spot?.slice(-1));\n\n    const [should_enter_from_top, setShouldEnterFromTop] = React.useState(false);\n    const [should_enter_from_bottom, setShouldEnterFromBottom] = React.useState(false);\n    const [next_displayed_last_digit, setNextDisplayedLastDigit] = React.useState(last_digit);\n    const [displayed_last_digit, setDisplayedLastDigit] = React.useState(last_digit);\n\n    const last_digit_ref = React.useRef(prev_last_digit);\n    const spin_interval_id = React.useRef<ReturnType<typeof setInterval>>();\n    const spin_timeout_id = React.useRef<ReturnType<typeof setTimeout>>();\n    const spinning_wrapper_ref = React.useRef<HTMLDivElement>(null);\n\n    const spinLastDigit = (\n        action: typeof ACTIONS[keyof typeof ACTIONS],\n        interval_ms: number,\n        start: number,\n        end: number\n    ) => {\n        clearInterval(spin_interval_id.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && last_digit_ref.current < end) {\n                last_digit_ref.current = (last_digit_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && last_digit_ref.current > end) {\n                last_digit_ref.current = Math.abs(last_digit_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && last_digit_ref.current < start + 10) {\n                last_digit_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? last_digit_ref.current === start + 10 : last_digit_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setNextDisplayedLastDigit(last_digit_ref.current % 10);\n        }, interval_ms);\n        spin_interval_id.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (isNaN(prev_last_digit) || isNaN(last_digit) || !spot) return;\n\n        const diff = Math.abs(Number(prev_last_digit) - last_digit);\n        const timeout_speed = diff > 0 ? Math.floor(TOTAL_ANIMATION_TIME / diff) : TOTAL_ANIMATION_TIME;\n        const should_increment = Number(prev_last_digit) <= last_digit;\n\n        spinning_wrapper_ref.current?.style.setProperty('--animation-time', `${timeout_speed}ms`);\n\n        if (should_increment) {\n            setShouldEnterFromTop(true);\n        } else {\n            setShouldEnterFromBottom(true);\n        }\n\n        spin_timeout_id.current = setTimeout(() => {\n            setShouldEnterFromTop(false);\n            setShouldEnterFromBottom(false);\n            setDisplayedLastDigit(last_digit_ref.current % 10);\n        }, TOTAL_ANIMATION_TIME);\n\n        const getAction = () => {\n            let action: typeof ACTIONS[keyof typeof ACTIONS] = ACTIONS.ADD10;\n            if (Number(prev_last_digit) < last_digit) {\n                action = ACTIONS.INC;\n            } else if (Number(prev_last_digit) > last_digit) {\n                action = ACTIONS.DEC;\n            }\n            return action;\n        };\n        last_digit_ref.current = Number(prev_last_digit);\n        spinLastDigit(getAction(), timeout_speed, Number(prev_last_digit), last_digit);\n\n        return () => {\n            clearTimeout(spin_timeout_id.current);\n            clearInterval(spin_interval_id.current);\n        };\n    }, [spot, prev_last_digit, last_digit]);\n\n    if (!spot) return null;\n    return (\n        <div className='current-spot__display'>\n            {has_tick_count && (\n                <Text size='xl' color='quill-typography__color--prominent'>\n                    <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: tick }} />\n                </Text>\n            )}\n            <div className='current-spot'>\n                <Text size='xl' bold color='quill-typography__color--prominent'>\n                    {spot.slice(0, -1)}\n                </Text>\n                <div className='current-spot__last-digit-container'>\n                    <div\n                        ref={spinning_wrapper_ref}\n                        className={clsx(\n                            'current-spot__last-digit-wrapper',\n                            should_enter_from_top && 'current-spot__last-digit-wrapper--enter-from-top',\n                            should_enter_from_bottom && 'current-spot__last-digit-wrapper--enter-from-bottom'\n                        )}\n                    >\n                        {should_enter_from_top && (\n                            <Heading.H2 color='quill-typography__color--prominent' className='current-spot__last-digit'>\n                                {next_displayed_last_digit}\n                            </Heading.H2>\n                        )}\n                        <Heading.H2 color='quill-typography__color--prominent' className='current-spot__last-digit'>\n                            {displayed_last_digit}\n                        </Heading.H2>\n                        {should_enter_from_bottom && (\n                            <Heading.H2 color='quill-typography__color--prominent' className='current-spot__last-digit'>\n                                {next_displayed_last_digit}\n                            </Heading.H2>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(CurrentSpotDisplay);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport clsx from 'clsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Skeleton, usePrevious } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { isContractElapsed } from '@deriv/shared';\nimport { toJS } from 'mobx';\nimport { TickSpotData } from '@deriv/api-types';\nimport CurrentSpotDisplay from './current-spot-display';\nimport { isDigitContractWinning } from 'AppV2/Utils/trade-params-utils';\n\nconst STATUS = {\n    LOST: 'lost',\n    WON: 'won',\n};\n\nconst CurrentSpot = observer(() => {\n    const contract_switching_timer = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const { contract_trade } = useStore();\n    const { last_contract, prev_contract } = contract_trade;\n    const {\n        contract_info = {},\n        digits_info = {},\n        display_status,\n        is_digit_contract,\n        is_ended,\n    } = last_contract.contract_info?.entry_tick || !prev_contract ? last_contract : prev_contract;\n    const { tick_data, symbol } = useTraderStore();\n    const { contract_id, entry_tick, date_start, contract_type, tick_stream, underlying } = contract_info;\n    const prev_contract_id = usePrevious(contract_id);\n    const last_contract_ticks = last_contract.contract_info?.tick_stream?.length;\n    const prev_last_contract_ticks = usePrevious(last_contract_ticks);\n\n    let tick = tick_data;\n\n    const is_contract_elapsed = isContractElapsed(contract_info, tick);\n    const is_prev_contract_elapsed = isContractElapsed(prev_contract?.contract_info, tick);\n    const status = !is_contract_elapsed && !!tick ? display_status : null;\n\n    // tick from contract_info.tick_stream differs from a ticks_history API tick.\n    if (date_start && !is_contract_elapsed) {\n        if (tick_stream?.length) {\n            const { epoch, tick: latest_stream_tick, tick_display_value } = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: latest_stream_tick,\n                bid: latest_stream_tick,\n                epoch,\n                pip_size: tick_display_value?.split('.')[1].length,\n                quote: latest_stream_tick,\n                current_tick: tick_stream.length,\n            } as TickSpotData;\n        }\n    }\n    const current_tick = tick && 'current_tick' in tick ? (tick.current_tick as number) : null;\n    // 'won' or 'lost' status exists after contract expiry:\n    const is_digit_contract_ended = is_ended && is_digit_contract;\n    const is_won = is_digit_contract_ended && status === STATUS.WON;\n    const is_lost = is_digit_contract_ended && status === STATUS.LOST;\n    const digits_array = Object.keys(digits_info)\n        .sort((a, b) => +a - +b)\n        .map(spot_time => digits_info[+spot_time]);\n    // last_contract_digit refers to digit and spot values from last digit contract in contracts array:\n    const last_contract_digit = React.useMemo(() => digits_array.slice(-1)[0] || {}, [digits_array]);\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_quote_price =\n        tick?.quote && latest_tick_pip_size ? tick.quote.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_quote_price ? +(latest_tick_quote_price.split('').pop() || '') : null;\n    // latest_digit refers to digit and spot values from the latest price:\n    const latest_digit = React.useMemo(\n        () =>\n            is_won || is_lost\n                ? (last_contract_digit as { digit: number | null; spot: string | null })\n                : { digit: latest_tick_digit, spot: latest_tick_quote_price },\n        [is_won, is_lost, latest_tick_digit, latest_tick_quote_price, last_contract_digit]\n    );\n\n    const [displayed_tick, setDisplayedTick] = React.useState<number | null>(current_tick);\n    const [displayed_spot, setDisplayedSpot] = React.useState<string | null>(latest_digit.spot);\n    const [should_enter_from_top, setShouldEnterFromTop] = React.useState(false);\n\n    const barrier = !is_contract_elapsed && !!tick ? Number(contract_info.barrier) : null;\n    const is_winning = isDigitContractWinning(contract_type, barrier, latest_digit.digit);\n    const has_contract = is_digit_contract && status && latest_digit.spot && !!entry_tick;\n    const has_open_contract = has_contract && !is_ended;\n    const has_relevant_tick_data = underlying === symbol || !underlying;\n    const should_show_tick_count = has_contract && has_relevant_tick_data;\n    const should_enter_from_left =\n        !prev_contract?.contract_info ||\n        !!(is_prev_contract_elapsed && last_contract_ticks === 1 && !prev_last_contract_ticks);\n\n    const setNewData = React.useCallback(() => {\n        setDisplayedTick(current_tick);\n        setDisplayedSpot(latest_digit.spot);\n    }, [current_tick, latest_digit.spot]);\n\n    React.useEffect(() => {\n        const has_multiple_contracts =\n            prev_contract?.contract_info && !is_prev_contract_elapsed && last_contract.contract_info?.entry_tick;\n        const is_next_contract_opened = prev_contract_id && contract_id && prev_contract_id !== contract_id;\n        if (has_multiple_contracts && is_next_contract_opened) {\n            setShouldEnterFromTop(true);\n            contract_switching_timer.current = setTimeout(() => {\n                setShouldEnterFromTop(false);\n                setNewData();\n            }, 240); // equal to animation duration\n        } else if (!should_enter_from_top) {\n            setNewData();\n        }\n    }, [\n        contract_id,\n        is_prev_contract_elapsed,\n        last_contract,\n        prev_contract,\n        prev_contract_id,\n        setNewData,\n        should_enter_from_top,\n    ]);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(contract_switching_timer.current);\n        };\n    }, []);\n\n    return (\n        <div\n            className={clsx(\n                'trade__current-spot',\n                should_show_tick_count && 'trade__current-spot--has-contract',\n                should_show_tick_count && should_enter_from_left && 'trade__current-spot--enter-from-left',\n                !should_show_tick_count && is_contract_elapsed && 'trade__current-spot--enter-from-right',\n                has_open_contract && is_winning && 'trade__current-spot--winning',\n                is_won && 'trade__current-spot--won',\n                has_open_contract && !is_winning && 'trade__current-spot--losing',\n                is_lost && 'trade__current-spot--lost'\n            )}\n        >\n            {tick && has_relevant_tick_data && displayed_spot ? (\n                <div\n                    className={clsx(\n                        'current-spot__wrapper',\n                        should_enter_from_top && 'current-spot__wrapper--enter-from-top'\n                    )}\n                >\n                    {should_enter_from_top && (\n                        <CurrentSpotDisplay\n                            has_tick_count={!!has_contract}\n                            spot={latest_digit.spot}\n                            tick={current_tick}\n                        />\n                    )}\n                    <CurrentSpotDisplay has_tick_count={!!has_contract} spot={displayed_spot} tick={displayed_tick} />\n                </div>\n            ) : (\n                <Skeleton width={128} height={32} />\n            )}\n        </div>\n    );\n});\n\nexport default CurrentSpot;\n","import CurrentSpot from './current-spot';\nimport './current-spot.scss';\n\nexport default CurrentSpot;\n","import React, { useRef, useEffect } from 'react';\nimport { Button, SearchField } from '@deriv-com/quill-ui';\nimport clsx from 'clsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getContractTypesConfig } from '@deriv/shared';\n\nexport type TSymbolsSearchField = {\n    isSearching: boolean;\n    setIsSearching: (input: boolean) => void;\n    searchValue: string;\n    setSearchValue: (input: string) => void;\n};\n\nconst SymbolsSearchField = observer(\n    ({ isSearching, setIsSearching, searchValue, setSearchValue }: TSymbolsSearchField) => {\n        const { ui } = useStore();\n        const { is_dark_mode_on } = ui;\n        const { contract_type } = useTraderStore();\n        const contract_name = getContractTypesConfig()[contract_type]?.title;\n        const inputRef = useRef<HTMLInputElement | null>(null);\n\n        useEffect(() => {\n            const inputElement = inputRef.current;\n\n            if (inputElement) {\n                const handleFocus = () => setIsSearching(true);\n                inputElement.addEventListener('focus', handleFocus);\n\n                return () => {\n                    inputElement.removeEventListener('focus', handleFocus);\n                };\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const handleClear = () => {\n            setSearchValue('');\n            setIsSearching(false);\n        };\n\n        return (\n            <div\n                className={clsx('symbols-search-field__container', {\n                    'symbols-search-field--is-focused': isSearching,\n                })}\n            >\n                <SearchField\n                    inputSize='sm'\n                    placeholder={localize('Search markets on ') + contract_name}\n                    variant='fill'\n                    ref={inputRef}\n                    value={searchValue}\n                    onChange={e => {\n                        setSearchValue(e.target.value);\n                    }}\n                />\n                {isSearching && (\n                    <Button\n                        variant='tertiary'\n                        label={<Localize i18n_default_text='Cancel' />}\n                        size='sm'\n                        color={is_dark_mode_on ? 'white' : 'black'}\n                        onClick={handleClear}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default SymbolsSearchField;\n","import './symbols-search-field.scss';\nimport SymbolsSearchField from './symbols-search-field';\n\nexport default SymbolsSearchField;\n","import { ActiveSymbols } from '@deriv/api-types';\n\ntype MarketOrderMap = {\n    [key: string]: number;\n};\n\nconst sortSymbols = (symbolsList: ActiveSymbols) => {\n    const marketSortingOrder = ['synthetic_index', 'forex', 'indices', 'cryptocurrency', 'commodities'];\n    const marketOrderMap: MarketOrderMap = marketSortingOrder.reduce(\n        (acc: MarketOrderMap, market: string, index: number) => {\n            acc[market] = index;\n            return acc;\n        },\n        {}\n    );\n\n    return symbolsList.slice().sort((a, b) => {\n        const marketOrderA = marketOrderMap[a.market] !== undefined ? marketOrderMap[a.market] : symbolsList.length;\n        const marketOrderB = marketOrderMap[b.market] !== undefined ? marketOrderMap[b.market] : symbolsList.length;\n        if (marketOrderA !== marketOrderB) {\n            return marketOrderA - marketOrderB;\n        }\n        return a.submarket_display_name.localeCompare(b.submarket_display_name);\n    });\n};\n\nexport default sortSymbols;\n","import { ActiveSymbols } from '@deriv/api-types';\nimport { localize } from '@deriv/translations';\nimport sortSymbols from './sort-symbols-utils';\n\ntype SubmarketGroup = {\n    submarket_display_name: string;\n    items: ActiveSymbols;\n};\n\ntype SubgroupGroup = {\n    subgroup_display_name: string;\n    submarkets: Record<string, SubmarketGroup>;\n};\n\nexport type MarketGroup = {\n    market: string;\n    market_display_name: string;\n    subgroups: Record<string, SubgroupGroup>;\n};\n\nexport const categorizeSymbols = (symbols: ActiveSymbols): Record<string, MarketGroup> => {\n    if (symbols.length === 0) {\n        return {};\n    }\n    // Categorize ActiveSymbols array into object categorized by markets\n    const sortedSymbols = sortSymbols(symbols);\n    let categorizedSymbols = sortedSymbols.reduce((acc: Record<string, MarketGroup>, symbol: ActiveSymbols[0]) => {\n        const { market, market_display_name, subgroup, subgroup_display_name, submarket, submarket_display_name } =\n            symbol;\n\n        acc[market] ??= { market, market_display_name, subgroups: {} };\n\n        acc[market].subgroups[subgroup] ??= {\n            subgroup_display_name,\n            submarkets: {},\n        };\n\n        acc[market].subgroups[subgroup].submarkets[submarket] ??= {\n            submarket_display_name,\n            items: [],\n        };\n\n        acc[market].subgroups[subgroup].submarkets[submarket].items.push(symbol);\n\n        return acc;\n    }, {});\n    // Sort categorizedSymbols by submarket_display_name\n    Object.keys(categorizedSymbols).forEach(market => {\n        Object.keys(categorizedSymbols[market].subgroups).forEach(subgroup => {\n            const submarkets = categorizedSymbols[market].subgroups[subgroup].submarkets;\n            const sortedSubmarkets = Object.entries(submarkets)\n                .sort(([, a], [, b]) => a.submarket_display_name.localeCompare(b.submarket_display_name))\n                .reduce((sortedAcc, [key, value]) => {\n                    sortedAcc[key] = value;\n                    return sortedAcc;\n                }, {} as Record<string, SubmarketGroup>);\n            categorizedSymbols[market].subgroups[subgroup].submarkets = sortedSubmarkets;\n        });\n    });\n\n    //format the all submarkets into a single subgroup objects, renaming keys, and subgroup_display_name if they are 'none'\n    const allCategory = Object.values(categorizedSymbols).reduce((result, item) => {\n        Object.keys(item.subgroups).forEach(key => {\n            const newKey = key === 'none' ? item.market : key;\n            const newName = key === 'none' ? item.market_display_name : item.subgroups[key].subgroup_display_name;\n\n            result[newKey] = {\n                subgroup_display_name: newName,\n                submarkets: item.subgroups[key].submarkets,\n            };\n        });\n\n        return result;\n    }, {} as Record<string, SubgroupGroup>);\n\n    // Assign a new category called 'all' with the same data shape as the rest of the categories for rendering\n    categorizedSymbols = {\n        favorites: {\n            market: 'favorites',\n            market_display_name: localize('Favourites'),\n            subgroups: {},\n        },\n        all: {\n            market: 'all',\n            market_display_name: localize('All'),\n            subgroups: { ...allCategory } as Record<string, SubgroupGroup>,\n        },\n        /// spread the rest of the categories into final object\n        ...categorizedSymbols,\n    };\n\n    return categorizedSymbols;\n};\n","import {\n    MarketCommodityGoldusdIcon,\n    MarketCommodityPalladiumusdIcon,\n    MarketCommodityPlatinumusdIcon,\n    MarketCommoditySilverusdIcon,\n    MarketCryptocurrencyBtcusdIcon,\n    MarketCryptocurrencyEthusdIcon,\n    MarketDerivedAudBasketIcon,\n    MarketDerivedBearIcon,\n    MarketDerivedBoom1000Icon,\n    MarketDerivedBoom300Icon,\n    MarketDerivedBoom500Icon,\n    MarketDerivedBoom600Icon,\n    MarketDerivedBoom900Icon,\n    MarketDerivedBullIcon,\n    MarketDerivedCrash1000Icon,\n    MarketDerivedCrash300Icon,\n    MarketDerivedCrash500Icon,\n    MarketDerivedCrash600Icon,\n    MarketDerivedCrash900Icon,\n    MarketDerivedEurBasketIcon,\n    MarketDerivedGbpBasketIcon,\n    MarketDerivedGoldBasketIcon,\n    MarketDerivedJump100Icon,\n    MarketDerivedJump10Icon,\n    MarketDerivedJump25Icon,\n    MarketDerivedJump50Icon,\n    MarketDerivedJump75Icon,\n    MarketDerivedRangeBreak100Icon,\n    MarketDerivedRangeBreak200Icon,\n    MarketDerivedStepIndices100Icon,\n    MarketDerivedStepIndices200Icon,\n    MarketDerivedStepIndices300Icon,\n    MarketDerivedStepIndices400Icon,\n    MarketDerivedStepIndices500Icon,\n    MarketDerivedUsdBasketIcon,\n    MarketDerivedVolatility1001sIcon,\n    MarketDerivedVolatility100Icon,\n    MarketDerivedVolatility101sIcon,\n    MarketDerivedVolatility10Icon,\n    MarketDerivedVolatility1501sIcon,\n    MarketDerivedVolatility151sIcon,\n    MarketDerivedVolatility2501sIcon,\n    MarketDerivedVolatility251sIcon,\n    MarketDerivedVolatility25Icon,\n    MarketDerivedVolatility301sIcon,\n    MarketDerivedVolatility501sIcon,\n    MarketDerivedVolatility50Icon,\n    MarketDerivedVolatility751sIcon,\n    MarketDerivedVolatility75Icon,\n    MarketDerivedVolatility901sIcon,\n    MarketForexAudcadIcon,\n    MarketForexAudchfIcon,\n    MarketForexAudjpyIcon,\n    MarketForexAudnzdIcon,\n    MarketForexAudusdIcon,\n    MarketForexEuraudIcon,\n    MarketForexEurcadIcon,\n    MarketForexEurchfIcon,\n    MarketForexEurgbpIcon,\n    MarketForexEurjpyIcon,\n    MarketForexEurnzdIcon,\n    MarketForexEurusdIcon,\n    MarketForexGbpaudIcon,\n    MarketForexGbpcadIcon,\n    MarketForexGbpchfIcon,\n    MarketForexGbpjpyIcon,\n    MarketForexGbpnokIcon,\n    MarketForexGbpnzdIcon,\n    MarketForexGbpusdIcon,\n    MarketForexNzdjpnIcon,\n    MarketForexNzdusdIcon,\n    MarketForexUsdcadIcon,\n    MarketForexUsdchfIcon,\n    MarketForexUsdjpyIcon,\n    MarketForexUsdmxnIcon,\n    MarketForexUsdnokIcon,\n    MarketForexUsdplnIcon,\n    MarketForexUsdsekIcon,\n    MarketIndicesAustralia200Icon,\n    MarketIndicesEuro50Icon,\n    MarketIndicesFrance40Icon,\n    MarketIndicesGerman40Icon,\n    MarketIndicesHongKong50Icon,\n    MarketIndicesJapan225Icon,\n    MarketIndicesNetherlands25Icon,\n    MarketIndicesSwiss20Icon,\n    MarketIndicesUk100Icon,\n    MarketIndicesUs500Icon,\n    MarketIndicesUsTech100Icon,\n    MarketIndicesWallStreet30Icon,\n} from '@deriv/quill-icons';\nimport type { IconTypes } from '@deriv/quill-icons';\n\nexport const marketIcons: {\n    [key: string]: IconTypes;\n} = {\n    frxAUDCAD: MarketForexAudcadIcon,\n    frxAUDCHF: MarketForexAudchfIcon,\n    frxAUDJPY: MarketForexAudjpyIcon,\n    frxAUDNZD: MarketForexAudnzdIcon,\n    frxAUDUSD: MarketForexAudusdIcon,\n    WLDAUD: MarketDerivedAudBasketIcon,\n    RDBEAR: MarketDerivedBearIcon,\n    BOOM1000: MarketDerivedBoom1000Icon,\n    BOOM600: MarketDerivedBoom600Icon,\n    BOOM900: MarketDerivedBoom900Icon,\n    BOOM300N: MarketDerivedBoom300Icon,\n    BOOM500: MarketDerivedBoom500Icon,\n    RDBULL: MarketDerivedBullIcon,\n    CRASH1000: MarketDerivedCrash1000Icon,\n    CRASH600: MarketDerivedCrash600Icon,\n    CRASH900: MarketDerivedCrash900Icon,\n    CRASH300N: MarketDerivedCrash300Icon,\n    CRASH500: MarketDerivedCrash500Icon,\n    frxXAGUSD: MarketCommoditySilverusdIcon,\n    frxXAUUSD: MarketCommodityGoldusdIcon,\n    frxXPDUSD: MarketCommodityPalladiumusdIcon,\n    frxXPTUSD: MarketCommodityPlatinumusdIcon,\n    cryBTCUSD: MarketCryptocurrencyBtcusdIcon,\n    cryETHUSD: MarketCryptocurrencyEthusdIcon,\n    WLDEUR: MarketDerivedEurBasketIcon,\n    WLDGBP: MarketDerivedGbpBasketIcon,\n    WLDXAU: MarketDerivedGoldBasketIcon,\n    JD10: MarketDerivedJump10Icon,\n    JD100: MarketDerivedJump100Icon,\n    JD25: MarketDerivedJump25Icon,\n    JD50: MarketDerivedJump50Icon,\n    JD75: MarketDerivedJump75Icon,\n    stpRNG: MarketDerivedStepIndices100Icon,\n    stpRNG2: MarketDerivedStepIndices200Icon,\n    stpRNG3: MarketDerivedStepIndices300Icon,\n    stpRNG4: MarketDerivedStepIndices400Icon,\n    stpRNG5: MarketDerivedStepIndices500Icon,\n    RB100: MarketDerivedRangeBreak100Icon,\n    RB200: MarketDerivedRangeBreak200Icon,\n    WLDUSD: MarketDerivedUsdBasketIcon,\n    '1HZ10V': MarketDerivedVolatility101sIcon,\n    '1HZ100V': MarketDerivedVolatility1001sIcon,\n    '1HZ150V': MarketDerivedVolatility1501sIcon,\n    '1HZ250V': MarketDerivedVolatility2501sIcon,\n    '1HZ25V': MarketDerivedVolatility251sIcon,\n    '1HZ50V': MarketDerivedVolatility501sIcon,\n    '1HZ75V': MarketDerivedVolatility751sIcon,\n    '1HZ15V': MarketDerivedVolatility151sIcon,\n    '1HZ30V': MarketDerivedVolatility301sIcon,\n    '1HZ90V': MarketDerivedVolatility901sIcon,\n    frxEURAUD: MarketForexEuraudIcon,\n    frxEURCAD: MarketForexEurcadIcon,\n    frxEURCHF: MarketForexEurchfIcon,\n    frxEURGBP: MarketForexEurgbpIcon,\n    frxEURJPY: MarketForexEurjpyIcon,\n    frxEURNZD: MarketForexEurnzdIcon,\n    frxEURUSD: MarketForexEurusdIcon,\n    frxGBPAUD: MarketForexGbpaudIcon,\n    frxGBPCAD: MarketForexGbpcadIcon,\n    frxGBPCHF: MarketForexGbpchfIcon,\n    frxGBPJPY: MarketForexGbpjpyIcon,\n    frxGBPNOK: MarketForexGbpnokIcon,\n    frxGBPNZD: MarketForexGbpnzdIcon,\n    frxGBPUSD: MarketForexGbpusdIcon,\n    frxNZDJPY: MarketForexNzdjpnIcon,\n    frxNZDUSD: MarketForexNzdusdIcon,\n    frxUSDCAD: MarketForexUsdcadIcon,\n    frxUSDCHF: MarketForexUsdchfIcon,\n    frxUSDJPY: MarketForexUsdjpyIcon,\n    frxUSDMXN: MarketForexUsdmxnIcon,\n    frxUSDNOK: MarketForexUsdnokIcon,\n    frxUSDPLN: MarketForexUsdplnIcon,\n    frxUSDSEK: MarketForexUsdsekIcon,\n    OTC_AS51: MarketIndicesAustralia200Icon,\n    OTC_SX5E: MarketIndicesEuro50Icon,\n    OTC_FCHI: MarketIndicesFrance40Icon,\n    OTC_GDAXI: MarketIndicesGerman40Icon,\n    OTC_HSI: MarketIndicesHongKong50Icon,\n    OTC_N225: MarketIndicesJapan225Icon,\n    OTC_AEX: MarketIndicesNetherlands25Icon,\n    OTC_SSMI: MarketIndicesSwiss20Icon,\n    OTC_FTSE: MarketIndicesUk100Icon,\n    OTC_SPC: MarketIndicesUs500Icon,\n    OTC_NDX: MarketIndicesUsTech100Icon,\n    OTC_DJI: MarketIndicesWallStreet30Icon,\n    R_10: MarketDerivedVolatility10Icon,\n    R_100: MarketDerivedVolatility100Icon,\n    R_25: MarketDerivedVolatility25Icon,\n    R_50: MarketDerivedVolatility50Icon,\n    R_75: MarketDerivedVolatility75Icon,\n} as const;\n","import React from 'react';\nimport { marketIcons } from 'AppV2/Utils/market-icons';\n\ntype TSymbolIconsMapper = {\n    symbol: string;\n};\n\nconst SymbolIconsMapper = ({ symbol }: TSymbolIconsMapper) => {\n    const iconSize = 'md';\n\n    const IconComponent = marketIcons[symbol as keyof typeof marketIcons];\n    return IconComponent ? <IconComponent iconSize={iconSize} /> : null;\n};\n\nexport default SymbolIconsMapper;\n","import React, { useState, useEffect, forwardRef, Ref } from 'react';\nimport { Tag, Text, useSnackbar } from '@deriv-com/quill-ui';\nimport { StandaloneStarFillIcon, StandaloneStarRegularIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport SymbolIconsMapper from '../SymbolIconsMapper/symbol-icons-mapper';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useModulesStore } from 'Stores/useModulesStores';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\n\ntype TMarketCategoryItem = {\n    item: ActiveSymbols[0];\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n};\n\nconst MarketCategoryItem = forwardRef(\n    ({ item, selectedSymbol, setSelectedSymbol, setIsOpen }: TMarketCategoryItem, ref: Ref<HTMLDivElement>) => {\n        const [isFavorite, setIsFavorite] = useState(false);\n        const { onChange: onSymbolChange } = useTraderStore();\n        const { markets } = useModulesStore();\n        const { favoriteSymbols, setFavoriteSymbols, removeFavoriteSymbol } = markets;\n        const { addSnackbar } = useSnackbar();\n\n        useEffect(() => {\n            setIsFavorite(favoriteSymbols.includes(item.symbol));\n        }, [favoriteSymbols, item.symbol]);\n\n        const handleSelect = async (symbol: string) => {\n            setSelectedSymbol(symbol);\n            await onSymbolChange({ target: { name: 'symbol', value: symbol } });\n            setIsOpen(false);\n        };\n\n        const toggleFavorites = (symbol: string) => {\n            if (!symbol) return;\n            const symbolIndex = favoriteSymbols.indexOf(symbol);\n\n            if (symbolIndex !== -1) {\n                removeFavoriteSymbol(symbol);\n                addSnackbar({\n                    icon: <StandaloneStarRegularIcon fill='var(--component-snackbar-icon-neutral)' iconSize='sm' />,\n                    message: <Localize i18n_default_text='Removed from favourites' />,\n                    hasCloseButton: false,\n                });\n            } else {\n                setFavoriteSymbols([...favoriteSymbols, symbol]);\n                addSnackbar({\n                    icon: <StandaloneStarFillIcon fill='var(--core-color-solid-mustard-700)' iconSize='sm' />,\n                    message: <Localize i18n_default_text='Added to favourites' />,\n                    hasCloseButton: false,\n                });\n            }\n            setIsFavorite(favoriteSymbols.includes(symbol));\n        };\n\n        const handleSelectDecorator = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n            const symbol = (e?.currentTarget as HTMLElement).getAttribute('data-symbol') || '';\n            clickAndKeyEventHandler(() => handleSelect(symbol), e);\n        };\n\n        const toggleFavoritesDecorator = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n            const symbol = (e?.currentTarget as HTMLElement).getAttribute('data-symbol') || '';\n            clickAndKeyEventHandler(() => toggleFavorites(symbol), e);\n        };\n\n        return (\n            <div\n                className={clsx('market-category-item', {\n                    'market-category-item--selected': selectedSymbol === item.symbol,\n                })}\n                ref={ref}\n            >\n                <span\n                    className='market-category-item-left'\n                    data-symbol={item.symbol}\n                    onClick={handleSelectDecorator}\n                    onKeyDown={handleSelectDecorator}\n                >\n                    <SymbolIconsMapper symbol={item.symbol} />\n                    <Text\n                        size='sm'\n                        className={clsx('market-category-item-symbol', {\n                            'market-category-item-symbol--selected': selectedSymbol === item.symbol,\n                        })}\n                    >\n                        <span>{item.display_name}</span>\n                    </Text>\n                    {!item.exchange_is_open && (\n                        <Tag\n                            label={<Localize key='exchange-closed' i18n_default_text='CLOSED' />}\n                            color='error'\n                            variant={selectedSymbol === item.symbol ? 'outline' : 'fill'}\n                            showIcon={false}\n                        />\n                    )}\n                </span>\n                <span onClick={toggleFavoritesDecorator} onKeyDown={toggleFavoritesDecorator} data-symbol={item.symbol}>\n                    {isFavorite ? (\n                        <StandaloneStarFillIcon fill='var(--core-color-solid-mustard-700)' iconSize='sm' />\n                    ) : (\n                        <StandaloneStarRegularIcon\n                            fill={\n                                selectedSymbol === item.symbol\n                                    ? 'var(--semantic-color-slate-solid-textIcon-inverse-highest)'\n                                    : 'var(--semantic-color-monochrome-textIcon-normal-mid)'\n                            }\n                            iconSize='sm'\n                        />\n                    )}\n                </span>\n            </div>\n        );\n    }\n);\n\nMarketCategoryItem.displayName = 'MarketCategoryItem';\n\nexport default observer(MarketCategoryItem);\n","import './market-category-item.scss';\nimport MarketCategoryItem from './market-category-item';\n\nexport default MarketCategoryItem;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { StandaloneStarFillIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\n\nconst NoFavoriteSymbols = () => (\n    <div className='favorite-symbols--no-fav'>\n        <StandaloneStarFillIcon fill='var(--semantic-color-slate-solid-surface-static-midLowest)' iconSize='2xl' />\n        <Text size='lg' bold color='quill-typography__color--subtle'>\n            <Localize i18n_default_text='No favourites' />\n        </Text>\n        <Text size='sm' color='quill-typography__color--subtle'>\n            <Localize i18n_default_text='Your favourite markets will appear here.' />\n        </Text>\n    </div>\n);\n\nexport default NoFavoriteSymbols;\n","import React from 'react';\nimport MarketCategoryItem from '../MarketCategoryItem';\nimport { useGetFavoriteSymbols } from 'AppV2/Hooks/useGetFavoriteSymbols';\nimport NoFavoriteSymbols from './no-favorite-symbols';\nimport { observer } from '@deriv/stores';\n\ntype TFavoriteSymbols = {\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n};\n\nconst FavoriteSymbols = observer(({ selectedSymbol, setSelectedSymbol, setIsOpen }: TFavoriteSymbols) => {\n    const favoriteSymbols = useGetFavoriteSymbols();\n\n    return (\n        <React.Fragment>\n            {favoriteSymbols.length > 0 ? (\n                <div className='favorite-symbols__container'>\n                    {favoriteSymbols.map(symbol => (\n                        <MarketCategoryItem\n                            key={symbol?.display_name}\n                            item={symbol}\n                            selectedSymbol={selectedSymbol}\n                            setSelectedSymbol={setSelectedSymbol}\n                            setIsOpen={setIsOpen}\n                        />\n                    ))}\n                </div>\n            ) : (\n                <NoFavoriteSymbols />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default FavoriteSymbols;\n","import './favorite-symbols.scss';\nimport FavoriteSymbols from './favorite-symbols';\n\nexport default FavoriteSymbols;\n","import React, { useMemo } from 'react';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport sortSymbols from 'AppV2/Utils/sort-symbols-utils';\nimport { useModulesStore } from 'Stores/useModulesStores';\n\nexport const useGetFavoriteSymbols = () => {\n    const { activeSymbols } = useActiveSymbols();\n    const { markets } = useModulesStore();\n    const { favoriteSymbols } = markets;\n\n    const clientFavoriteList = useMemo(() => {\n        return favoriteSymbols\n            ?.map(client_fav_symbol => activeSymbols.find(symbol_info => symbol_info.symbol === client_fav_symbol))\n            .filter((symbol_info): symbol_info is ActiveSymbols[0] => symbol_info !== undefined);\n    }, [activeSymbols, favoriteSymbols]);\n\n    const sortedFavoriteSymbols = useMemo(() => {\n        return sortSymbols(clientFavoriteList);\n    }, [clientFavoriteList]);\n\n    return sortedFavoriteSymbols;\n};\n","import React, { useRef, useEffect } from 'react';\nimport { MarketGroup } from 'AppV2/Utils/symbol-categories-utils';\nimport { Tab, Text, CaptionText } from '@deriv-com/quill-ui';\nimport MarketCategoryItem from '../MarketCategoryItem';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport FavoriteSymbols from '../FavoriteSymbols';\nimport { usePrevious } from '@deriv/components';\n\ntype TMarketCategory = {\n    category: MarketGroup;\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n    isOpen: boolean;\n};\n\nconst MarketCategory = ({ category, selectedSymbol, setSelectedSymbol, setIsOpen, isOpen }: TMarketCategory) => {\n    const itemRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});\n    const prevSymbol = usePrevious(selectedSymbol);\n\n    useEffect(() => {\n        if (isOpen && category.market === 'all' && selectedSymbol && itemRefs.current[selectedSymbol] && !prevSymbol) {\n            itemRefs.current[selectedSymbol]?.scrollIntoView({ block: 'center' });\n        }\n    }, [isOpen, category.market, selectedSymbol, prevSymbol]);\n\n    return (\n        <Tab.Panel key={category.market_display_name}>\n            {category.market !== 'favorites' ? (\n                Object.entries(category.subgroups).map(([subgroupKey, subgroup]) => (\n                    <div key={subgroupKey} className='market-category-content__container'>\n                        {subgroupKey !== 'none' && (\n                            <div className='market-category-title__container'>\n                                <Text size='sm' className='market-category-title'>\n                                    {category.subgroups[subgroupKey].subgroup_display_name}\n                                </Text>\n                            </div>\n                        )}\n                        {Object.entries(subgroup.submarkets).map(([submarketKey, submarket]) => (\n                            <div className='market-category-body' key={submarketKey}>\n                                <CaptionText size='sm' className='market-category-subtitle'>\n                                    {submarket.submarket_display_name}\n                                </CaptionText>\n                                <div className='market-category-items'>\n                                    {submarket.items.map((item: ActiveSymbols[0]) => (\n                                        <MarketCategoryItem\n                                            key={item.display_name}\n                                            ref={\n                                                item.symbol === selectedSymbol\n                                                    ? el => (itemRefs.current[item.symbol] = el)\n                                                    : undefined\n                                            }\n                                            item={item}\n                                            selectedSymbol={selectedSymbol}\n                                            setSelectedSymbol={setSelectedSymbol}\n                                            setIsOpen={setIsOpen}\n                                        />\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ))\n            ) : (\n                <div>\n                    <FavoriteSymbols\n                        selectedSymbol={selectedSymbol}\n                        setSelectedSymbol={setSelectedSymbol}\n                        setIsOpen={setIsOpen}\n                    />\n                </div>\n            )}\n        </Tab.Panel>\n    );\n};\n\nexport default MarketCategory;\n","import './market-category.scss';\nimport MarketCategory from './market-category';\n\nexport default MarketCategory;\n","import React from 'react';\nimport { Tab } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { MarketGroup } from 'AppV2/Utils/symbol-categories-utils';\n\ntype TMarketCategoryTab = {\n    category: MarketGroup;\n};\n\nconst MarketCategoryTab = ({ category }: TMarketCategoryTab) => {\n    return (\n        <Tab.Trigger key={category.market_display_name}>\n            {category.market === 'indices' ? (\n                <Localize i18n_default_text='Stocks & indices' />\n            ) : (\n                category.market_display_name\n            )}\n        </Tab.Trigger>\n    );\n};\n\nexport default MarketCategoryTab;\n","import React from 'react';\nimport { Tab } from '@deriv-com/quill-ui';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport { categorizeSymbols } from 'AppV2/Utils/symbol-categories-utils';\nimport MarketCategory from '../MarketCategory';\nimport MarketCategoryTab from '../MarketCategoryTab/market-category-tab';\nimport { observer } from '@deriv/stores';\n\ntype TMarketCategories = {\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n    isOpen: boolean;\n    marketCategoriesRef: React.RefObject<HTMLDivElement>;\n};\n\nconst MarketCategories = observer(\n    ({ selectedSymbol, setSelectedSymbol, setIsOpen, isOpen, marketCategoriesRef }: TMarketCategories) => {\n        const { activeSymbols } = useActiveSymbols();\n        const categorizedSymbols = categorizeSymbols(activeSymbols);\n\n        return (\n            <React.Fragment>\n                <Tab.List>\n                    {Object.values(categorizedSymbols).map(category => (\n                        <MarketCategoryTab key={category.market} category={category} />\n                    ))}\n                </Tab.List>\n                <Tab.Content className='market-categories__list' ref={marketCategoriesRef}>\n                    {Object.values(categorizedSymbols).map(category => (\n                        <MarketCategory\n                            key={category.market}\n                            category={category}\n                            selectedSymbol={selectedSymbol}\n                            setSelectedSymbol={setSelectedSymbol}\n                            setIsOpen={setIsOpen}\n                            isOpen={isOpen}\n                        />\n                    ))}\n                </Tab.Content>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default MarketCategories;\n","import './market-categories.scss';\nimport MarketCategories from './market-categories';\n\nexport default MarketCategories;\n","import { Text } from '@deriv-com/quill-ui';\nimport { Localize, localize } from '@deriv/translations';\nimport React from 'react';\n\nconst SymbolNotFound = ({ searchTerm }: { searchTerm?: string }) => {\n    return (\n        <div className='symbol-not-found__container'>\n            <div className='symbol-not-found__content'>\n                <Text size='lg' bold color='quill-typography__color--subtle'>\n                    {localize('No results for {{searchTerm}}', {\n                        searchTerm,\n                        interpolation: { escapeValue: false },\n                    })}\n                </Text>\n                <Text size='sm' color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='Try searching for something else.' />\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default SymbolNotFound;\n","import './symbol-not-found.scss';\nimport SymbolNotFound from './symbol-not-found';\n\nexport default SymbolNotFound;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport SymbolNotFound from '../SymbolNotFound';\nimport { useGetSymbolSearchResults } from 'AppV2/Hooks/useGetSymbolSearchResults';\nimport { observer } from '@deriv/stores';\nimport MarketCategoryItem from '../MarketCategoryItem';\n\ntype TSymbolSearchResults = {\n    searchValue: string;\n    setSearchValue: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n    setSelectedSymbol: (input: string) => void;\n};\nconst SymbolSearchResults = observer(({ searchValue, setIsOpen, setSelectedSymbol }: TSymbolSearchResults) => {\n    const searchResults = useGetSymbolSearchResults(searchValue);\n\n    return (\n        <div className='symbol-search-results__container'>\n            {searchValue === '' && (\n                <Text size='sm' color='quill-typography__color--subtle' className='symbol-search-results--suggestion'>\n                    <Localize i18n_default_text='Try searching for markets or keywords' />\n                </Text>\n            )}\n            {searchValue !== '' &&\n                (searchResults.length > 0 ? (\n                    searchResults.map(symbol => (\n                        <MarketCategoryItem\n                            key={symbol?.display_name}\n                            item={symbol}\n                            selectedSymbol={''}\n                            setSelectedSymbol={setSelectedSymbol}\n                            setIsOpen={setIsOpen}\n                        />\n                    ))\n                ) : (\n                    <SymbolNotFound searchTerm={searchValue} />\n                ))}\n        </div>\n    );\n});\n\nexport default SymbolSearchResults;\n","import './symbol-search-results.scss';\nimport SymbolSearchResults from './symbol-search-results';\n\nexport default SymbolSearchResults;\n","import React, { useMemo } from 'react';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport sortSymbols from 'AppV2/Utils/sort-symbols-utils';\n\nexport const useGetSymbolSearchResults = (searchValue: string) => {\n    const { activeSymbols } = useActiveSymbols();\n\n    const searchResults = useMemo(() => {\n        if (searchValue.trim() === '') return [];\n        return activeSymbols.filter(symbol => symbol.display_name.toLowerCase().includes(searchValue.toLowerCase()));\n    }, [searchValue, activeSymbols]);\n\n    const sortedSearchResults = useMemo(() => {\n        return sortSymbols(searchResults);\n    }, [searchResults]);\n\n    return sortedSearchResults;\n};\n","import { ActionSheet, Tab } from '@deriv-com/quill-ui';\nimport { observer } from '@deriv/stores';\nimport React, { useState, useEffect, useRef } from 'react';\nimport SymbolsSearchField from '../SymbolsSearchField';\nimport MarketCategories from '../MarketCategories';\nimport SymbolSearchResults from '../SymbolSearchResults';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { sendMarketTypeToAnalytics } from '../../../Analytics';\n\ntype TActiveSymbolsList = {\n    isOpen: boolean;\n    setIsOpen: (input: boolean) => void;\n};\n\nconst ActiveSymbolsList = observer(({ isOpen, setIsOpen }: TActiveSymbolsList) => {\n    const { setTickData, setDigitStats, symbol, contract_type } = useTraderStore();\n    const [isSearching, setIsSearching] = useState(false);\n    const [selectedSymbol, setSelectedSymbol] = useState(symbol);\n    const [searchValue, setSearchValue] = useState('');\n\n    const marketCategoriesRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        setSelectedSymbol(symbol);\n        setTickData(null);\n        setDigitStats([]);\n    }, [setDigitStats, setTickData, symbol]);\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Root isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <ActionSheet.Portal shouldCloseOnDrag fullHeightOnOpen>\n                    <SymbolsSearchField\n                        searchValue={searchValue}\n                        setSearchValue={setSearchValue}\n                        isSearching={isSearching}\n                        setIsSearching={setIsSearching}\n                    />\n                    <Tab.Container\n                        contentStyle='hug'\n                        size='md'\n                        className='active-symbols-list__content'\n                        selectedTabIndex={1}\n                        onChangeTab={index => {\n                            if (index !== 1) {\n                                marketCategoriesRef.current?.scrollTo({ top: 0 });\n                            }\n                        }}\n                    >\n                        {isSearching ? (\n                            <SymbolSearchResults\n                                searchValue={searchValue}\n                                setSearchValue={setSearchValue}\n                                setIsOpen={setIsOpen}\n                                setSelectedSymbol={(symbol: string) => {\n                                    sendMarketTypeToAnalytics(symbol, contract_type);\n                                    setSelectedSymbol(symbol);\n                                }}\n                            />\n                        ) : (\n                            <MarketCategories\n                                selectedSymbol={selectedSymbol}\n                                setSelectedSymbol={(symbol: string) => {\n                                    sendMarketTypeToAnalytics(symbol, contract_type);\n                                    setSelectedSymbol(symbol);\n                                }}\n                                setIsOpen={setIsOpen}\n                                isOpen={isOpen}\n                                marketCategoriesRef={marketCategoriesRef}\n                            />\n                        )}\n                    </Tab.Container>\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default ActiveSymbolsList;\n","import './active-symbols-list.scss';\nimport ActiveSymbolsList from './active-symbols-list';\n\nexport default ActiveSymbolsList;\n","import React, { useEffect, useState } from 'react';\nimport ActiveSymbolsList from '../ActiveSymbolsList';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport SymbolIconsMapper from '../SymbolIconsMapper/symbol-icons-mapper';\nimport { CaptionText, Skeleton, Tag, Text, useSnackbar } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { LabelPairedChevronDownMdRegularIcon } from '@deriv/quill-icons';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getMarketNamesMap } from '@deriv/shared';\nimport useContractsForCompany from 'AppV2/Hooks/useContractsForCompany';\nimport { TContractType } from 'Modules/Trading/Components/Form/ContractType/types';\n\nconst MarketSelector = observer(() => {\n    const [isOpen, setIsOpen] = useState(false);\n    const { activeSymbols } = useActiveSymbols();\n    const { symbol: storeSymbol, tick_data, is_market_closed, contract_type } = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n    const { trade_types } = useContractsForCompany();\n\n    const currentSymbol = activeSymbols.find(({ symbol }) => symbol === storeSymbol);\n\n    const contract_name = trade_types?.find((item: TContractType) => item.value === contract_type)?.text;\n\n    useEffect(() => {\n        if (!currentSymbol) {\n            const symbol_name = getMarketNamesMap()[storeSymbol as keyof typeof getMarketNamesMap] || storeSymbol;\n            const message = contract_name ? (\n                <Localize\n                    i18n_default_text={`${symbol_name} is unavailable for ${contract_name}.`}\n                    values={{\n                        symbol_name,\n                        contract_name,\n                    }}\n                />\n            ) : (\n                <Localize\n                    i18n_default_text={`${symbol_name} is unavailable.`}\n                    values={{\n                        symbol_name,\n                    }}\n                />\n            );\n\n            symbol_name &&\n                addSnackbar({\n                    message,\n                    status: 'neutral',\n                    hasCloseButton: true,\n                    hasFixedHeight: false,\n                    style: {\n                        marginBottom: '0',\n                        width: 'calc(100% - var(--core-spacing-800)',\n                    },\n                });\n        }\n    }, [currentSymbol, storeSymbol, contract_name]);\n\n    const { pip_size, quote } = tick_data ?? {};\n    const current_spot = quote?.toFixed(pip_size);\n    const current_spot_replacement = is_market_closed ? (\n        <Text>-</Text>\n    ) : (\n        <Skeleton.Square height={18} width={64} rounded />\n    );\n\n    // For closed markets exchange_is_open === 0\n    if (typeof currentSymbol?.exchange_is_open === 'undefined')\n        return <Skeleton.Square height={42} width={240} rounded />;\n\n    return (\n        <React.Fragment>\n            <div className='market-selector__container' onClick={() => setIsOpen(true)}>\n                <div className='market-selector'>\n                    <SymbolIconsMapper symbol={storeSymbol} />\n                    <div className='market-selector-info'>\n                        <div className='market-selector-info__label'>\n                            <Text bold>{currentSymbol?.display_name}</Text>\n                            {!currentSymbol?.exchange_is_open && (\n                                <Tag\n                                    label={<Localize key='closed' i18n_default_text='CLOSED' />}\n                                    color='error'\n                                    variant='fill'\n                                    showIcon={false}\n                                    size='sm'\n                                />\n                            )}\n                            <LabelPairedChevronDownMdRegularIcon fill='var(--component-textIcon-normal-default' />\n                        </div>\n                        {current_spot ? (\n                            <CaptionText className='market-selector-info__price'>{current_spot}</CaptionText>\n                        ) : (\n                            current_spot_replacement\n                        )}\n                    </div>\n                </div>\n            </div>\n            <ActiveSymbolsList isOpen={isOpen} setIsOpen={setIsOpen} />\n        </React.Fragment>\n    );\n});\n\nexport default MarketSelector;\n","import './market-selector.scss';\nimport MarketSelector from './market-selector';\n\nexport default MarketSelector;\n","import React from 'react';\nimport { Button, CaptionText, IconButton, Text } from '@deriv-com/quill-ui';\nimport { LabelPairedChevronsUpXlBoldIcon, LabelPairedXmarkSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { TooltipRenderProps } from 'react-joyride';\nimport { useSwipeable } from 'react-swipeable';\n\nexport interface GuideTooltipProps extends TooltipRenderProps {\n    setStepIndex: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst GuideTooltip = ({ isLastStep, primaryProps, skipProps, step, tooltipProps, setStepIndex }: GuideTooltipProps) => {\n    const swipe_handlers = useSwipeable({\n        onSwipedUp: () => {\n            document.querySelector('.trade__chart')?.scrollIntoView();\n            setStepIndex((prev: number) => prev + 1);\n        },\n        preventDefaultTouchmoveEvent: true,\n        trackTouch: true,\n        trackMouse: true,\n    });\n\n    if (step.title === 'scroll-icon') {\n        return (\n            <div {...swipe_handlers} className='guide-tooltip__wrapper-scroll'>\n                <LabelPairedChevronsUpXlBoldIcon className='guide-tooltip--bounce' />\n                <Text size='sm' bold className='guide-tooltip__wrapper-scroll-text'>\n                    <Localize i18n_default_text='Swipe up to see the chart' />\n                </Text>\n            </div>\n        );\n    }\n\n    return (\n        <div {...tooltipProps} className='guide-tooltip__wrapper'>\n            <div>\n                {step.title && (\n                    <div className='guide-tooltip__header'>\n                        <CaptionText bold className='guide-tooltip__header__title'>\n                            {step.title}\n                        </CaptionText>\n                        <IconButton\n                            onClick={skipProps.onClick}\n                            icon={\n                                <LabelPairedXmarkSmBoldIcon\n                                    fill='var(--component-textIcon-inverse-prominent)'\n                                    key='close-button'\n                                />\n                            }\n                            className='guide-tooltip__close'\n                            size='sm'\n                            color='white-black'\n                            variant='tertiary'\n                        />\n                    </div>\n                )}\n                {step.content && <CaptionText className='guide-tooltip__content'>{step.content}</CaptionText>}\n            </div>\n            <Button\n                onClick={e => {\n                    setStepIndex((prev: number) => prev + 1);\n                    primaryProps.onClick(e);\n                }}\n                color='white-black'\n                className='guide-tooltip__button'\n                variant='secondary'\n                size='sm'\n                label={isLastStep ? <Localize i18n_default_text='Done' /> : <Localize i18n_default_text='Next' />}\n            />\n        </div>\n    );\n};\n\nexport default GuideTooltip;\n","import React from 'react';\nimport { Step } from 'react-joyride';\nimport { Localize } from '@deriv/translations';\n\nconst STEPS = [\n    {\n        content: <Localize i18n_default_text='Scroll left or right to explore trade types.' />,\n        offset: 0,\n        spotlightPadding: 2,\n        target: '.trade__trade-types',\n        title: <Localize i18n_default_text='Explore trade types (1/6)' />,\n    },\n    {\n        content: <Localize i18n_default_text='View available markets here.' />,\n        offset: 4,\n        placement: 'bottom-start' as Step['placement'],\n        spotlightPadding: 8,\n        target: '.market-selector__container',\n        title: <Localize i18n_default_text='Choose a market (2/6)' />,\n    },\n    {\n        content: <Localize i18n_default_text='Specify your trade parameters.' />,\n        offset: 4,\n        spotlightPadding: 8,\n        target: '.trade-params',\n        title: <Localize i18n_default_text='Open your trade (3/6)' />,\n    },\n    {\n        content: '',\n        disableBeacon: false,\n        offset: 0,\n        spotlightPadding: 0,\n        styles: {\n            spotlight: {\n                display: 'none',\n            },\n            arrow: {\n                display: 'none',\n            },\n        },\n        target: '#react-joyride-portal',\n        title: 'scroll-icon',\n    },\n    {\n        content: <Localize i18n_default_text='Track market trends with our interactive charts.' />,\n        spotlightPadding: 8,\n        offset: 4,\n        target: '.trade__chart-tooltip',\n        title: <Localize i18n_default_text='Analyse with charts (4/6)' />,\n        placement: 'bottom' as Step['placement'],\n    },\n    {\n        content: <Localize i18n_default_text='Scroll left or right to adjust your trade parameters.' />,\n        disableScrolling: false,\n        offset: -4,\n        target: '.trade__parameter',\n        title: <Localize i18n_default_text='Make quick adjustments (5/6)' />,\n    },\n    {\n        content: <Localize i18n_default_text='View your positions here.' />,\n        offset: -4,\n        target: '.user-guide__anchor',\n        title: <Localize i18n_default_text='Check your positions (6/6)' />,\n    },\n];\n\nexport default STEPS;\n","import React from 'react';\nimport Joyride, { CallBackProps, STATUS } from 'react-joyride';\nimport GuideTooltip from './guide-tooltip';\nimport STEPS from './steps-config';\n\ntype TGuideContainerProps = {\n    should_run: boolean;\n    onFinishGuide: () => void;\n};\n\ntype TFinishedStatuses = CallBackProps['status'][];\n\nconst GuideContainer = ({ should_run, onFinishGuide }: TGuideContainerProps) => {\n    const [step_index, setStepIndex] = React.useState(0);\n\n    const callbackHandle = (data: CallBackProps) => {\n        const { status, step, index } = data;\n        if (index === 0) {\n            step.disableBeacon = true;\n        }\n        const finished_statuses: TFinishedStatuses = [STATUS.FINISHED, STATUS.SKIPPED];\n\n        if (finished_statuses.includes(status)) onFinishGuide();\n    };\n\n    return (\n        <Joyride\n            continuous\n            callback={callbackHandle}\n            disableCloseOnEsc\n            disableOverlayClose\n            disableScrolling\n            floaterProps={{\n                styles: {\n                    arrow: {\n                        length: 4,\n                        spread: 8,\n                        display: step_index === 3 ? 'none' : 'inline-flex',\n                    },\n                },\n            }}\n            run={should_run}\n            showSkipButton\n            steps={STEPS}\n            spotlightPadding={0}\n            scrollToFirstStep\n            styles={{\n                options: {\n                    arrowColor: 'var(--component-textIcon-normal-prominent)',\n                    overlayColor: 'var(--core-color-opacity-black-600)',\n                },\n                spotlight: {\n                    borderRadius: 'unset',\n                },\n            }}\n            stepIndex={step_index}\n            tooltipComponent={props => <GuideTooltip {...props} setStepIndex={setStepIndex} />}\n        />\n    );\n};\n\nexport default React.memo(GuideContainer);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Skeleton } from '@deriv-com/quill-ui';\nimport { getUrlBase } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { ASPECT_RATIO } from 'AppV2/Utils/layout-utils';\n\ntype TOnboardingVideoProps = {\n    type: 'trade_page' | 'positions_page' | 'trade_page_dark' | 'positions_page_dark';\n};\n\nconst OnboardingVideo = ({ type }: TOnboardingVideoProps) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        (extension: string) =>\n            getUrlBase(`/public/videos/user-onboarding-guide-${type.replaceAll('_', '-')}.${extension}`),\n        [type]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n\n    return (\n        <div className={clsx('guide__player__wrapper', is_loading && 'guide__player__wrapper--is-loading')}>\n            {is_loading && <Skeleton.Square height={`calc(100vw * ${ASPECT_RATIO})`} />}\n            <video\n                autoPlay\n                className='guide__player'\n                data-testid='dt_onboarding_guide_video'\n                muted\n                loop\n                onLoadedData={() => setIsLoading(false)}\n                playsInline\n                preload='auto'\n            >\n                {/* a browser will select a source with extension it recognizes */}\n                <source src={mp4_src} type='video/mp4' />\n                <Localize i18n_default_text='Unfortunately, your browser does not support the video.' />\n            </video>\n        </div>\n    );\n};\n\nexport default OnboardingVideo;\n","import React from 'react';\nimport { Modal } from '@deriv-com/quill-ui';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport GuideContainer from './guide-container';\nimport OnboardingVideo from './onboarding-video';\n\ntype TOnboardingGuideProps = {\n    callback?: () => void;\n    is_dark_mode_on?: boolean;\n    type?: 'trade_page' | 'positions_page';\n};\n\nconst OnboardingGuide = ({ type = 'trade_page', is_dark_mode_on, callback }: TOnboardingGuideProps) => {\n    const [is_modal_open, setIsModalOpen] = React.useState(false);\n    const [should_run_guide, setShouldRunGuide] = React.useState(false);\n    const guide_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n    const is_button_clicked_ref = React.useRef(false);\n\n    const [guide_dtrader_v2, setGuideDtraderV2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n\n    const is_trade_page_guide = type === 'trade_page';\n\n    const onFinishGuide = React.useCallback(() => {\n        setShouldRunGuide(false);\n        setGuideDtraderV2({ ...guide_dtrader_v2, [type]: true });\n        callback?.();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setGuideDtraderV2]);\n\n    const onGuideSkip = () => {\n        if (is_button_clicked_ref.current) return;\n        onFinishGuide();\n        setIsModalOpen(false);\n    };\n\n    const onGuideStart = () => {\n        is_button_clicked_ref.current = true;\n        setShouldRunGuide(true);\n        setIsModalOpen(false);\n    };\n\n    const modal_content = {\n        image: <OnboardingVideo type={is_dark_mode_on ? `${type}_dark` : type} />,\n        title: <Localize i18n_default_text='View your positions' />,\n        content: (\n            <Localize i18n_default_text='You can view your open and closed positions here. Tap an item for more details.' />\n        ),\n        button_label: <Localize i18n_default_text='Got it' />,\n        primaryButtonCallback: onGuideSkip,\n        ...(is_trade_page_guide\n            ? {\n                  title: <Localize i18n_default_text='Welcome to the new Deriv Trader' />,\n                  content: (\n                      <Localize i18n_default_text='Enjoy a smoother, more intuitive trading experience. Here’s a quick tour to get you started.' />\n                  ),\n                  button_label: <Localize i18n_default_text=\"Let's begin\" />,\n                  primaryButtonCallback: onGuideStart,\n              }\n            : {}),\n    };\n\n    React.useEffect(() => {\n        if (!guide_dtrader_v2?.[type]) guide_timeout_ref.current = setTimeout(() => setIsModalOpen(true), 800);\n\n        return () => clearTimeout(guide_timeout_ref.current);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [guide_dtrader_v2?.[type]]);\n\n    return (\n        <React.Fragment>\n            <Modal\n                isOpened={is_modal_open}\n                isNonExpandable\n                isMobile\n                showHandleBar\n                shouldCloseModalOnSwipeDown\n                toggleModal={onGuideSkip}\n                primaryButtonLabel={modal_content.button_label}\n                primaryButtonCallback={modal_content.primaryButtonCallback}\n            >\n                <Modal.Header image={modal_content.image} title={modal_content.title} />\n                <Modal.Body>{modal_content.content}</Modal.Body>\n            </Modal>\n            {is_trade_page_guide && <GuideContainer should_run={should_run_guide} onFinishGuide={onFinishGuide} />}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(OnboardingGuide);\n","import './onboarding-guide.scss';\nimport OnboardingGuide from './onboarding-guide';\n\nexport default OnboardingGuide;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getLocalizedBasis } from '@deriv/shared';\nimport { Money } from '@deriv/components';\n\ntype TPurchaseButtonContent = {\n    has_no_button_content?: boolean;\n    info: ReturnType<typeof useTraderStore>['proposal_info'][0] | Record<string, never>;\n    is_reverse?: boolean;\n} & Pick<\n    ReturnType<typeof useTraderStore>,\n    'currency' | 'has_open_accu_contract' | 'is_multiplier' | 'is_vanilla' | 'is_turbos'\n>;\n\nconst PurchaseButtonContent = ({\n    currency,\n    has_open_accu_contract,\n    has_no_button_content,\n    info,\n    is_multiplier,\n    is_turbos,\n    is_vanilla,\n    is_reverse,\n}: TPurchaseButtonContent) => {\n    if (has_no_button_content) return null;\n\n    const { payout, stake } = getLocalizedBasis();\n\n    const getAmount = () => {\n        const { stake, obj_contract_basis } = info;\n        return is_multiplier ? stake : obj_contract_basis?.value;\n    };\n    const getTextBasis = () => (is_multiplier ? stake : payout);\n\n    const text_basis = getTextBasis();\n    const amount = getAmount();\n    const is_content_empty = !text_basis || !amount;\n\n    return (\n        <CaptionText\n            size='sm'\n            className={clsx(\n                'purchase-button__information__wrapper',\n                is_reverse && 'purchase-button__information__wrapper--reverse',\n                is_content_empty && 'purchase-button__information__wrapper--disabled-placeholder'\n            )}\n            data-testid='dt_purchase_button_wrapper'\n        >\n            {!is_content_empty && (\n                <React.Fragment>\n                    <CaptionText\n                        as='span'\n                        size='sm'\n                        className={clsx(!has_open_accu_contract && 'purchase-button__information__item')}\n                        color='quill-typography__color--prominent'\n                    >\n                        {text_basis}\n                    </CaptionText>\n                    <CaptionText\n                        as='span'\n                        size='sm'\n                        className={clsx(!has_open_accu_contract && 'purchase-button__information__item')}\n                        color='quill-typography__color--prominent'\n                    >\n                        <Money\n                            amount={amount}\n                            currency={currency}\n                            should_format={!is_turbos && !is_vanilla}\n                            show_currency\n                        />\n                    </CaptionText>\n                </React.Fragment>\n            )}\n        </CaptionText>\n    );\n};\n\nexport default PurchaseButtonContent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Button, useNotifications, useSnackbar } from '@deriv-com/quill-ui';\nimport { useDevice } from '@deriv-com/ui';\nimport {\n    getCardLabelsV2,\n    getContractTypeDisplay,\n    getIndicativePrice,\n    hasContractEntered,\n    isAccumulatorContract,\n    isOpen,\n    isValidToSell,\n    MT5_ACCOUNT_STATUS,\n} from '@deriv/shared';\nimport { useMFAccountStatus } from '@deriv/hooks';\nimport PurchaseButtonContent from './purchase-button-content';\nimport { getTradeTypeTabsList } from 'AppV2/Utils/trade-params-utils';\nimport { StandaloneStopwatchRegularIcon } from '@deriv/quill-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { usePrevious } from '@deriv/components';\nimport { checkIsServiceModalError } from 'AppV2/Utils/layout-utils';\nimport { sendDtraderV2PurchaseToAnalytics } from '../../../Analytics';\n\nconst BASIS_STAKE = 'stake';\nconst BASIS_PAYOUT = 'payout';\nconst BASIS_NAME = 'basis';\n\nconst PurchaseButton = observer(() => {\n    const [loading_button_index, setLoadingButtonIndex] = React.useState<number | null>(null);\n    const [error_info, setErrorInfo] = React.useState<{ has_error: boolean; message: string | null }>({\n        has_error: false,\n        message: null,\n    });\n    const { isMobile } = useDevice();\n    const { addBanner } = useNotifications();\n    const { addSnackbar } = useSnackbar();\n    const {\n        portfolio: { all_positions, onClickSell, open_accu_contract, active_positions },\n        client: { is_logged_in },\n        common: { services_error },\n        ui: { is_mf_verification_pending_modal_visible, setIsMFVericationPendingModal },\n    } = useStore();\n    const {\n        basis,\n        basis_list,\n        contract_type,\n        currency,\n        has_open_accu_contract,\n        is_accumulator,\n        is_multiplier,\n        is_purchase_enabled,\n        is_touch,\n        is_trade_enabled_v2,\n        is_turbos,\n        is_vanilla_fx,\n        is_vanilla,\n        proposal_info,\n        purchase_info,\n        onPurchaseV2,\n        onChange,\n        symbol,\n        trade_type_tab,\n        trade_types,\n    } = useTraderStore();\n\n    const [is_sell_button_visible, setIsSellButtonVisibile] = React.useState(is_accumulator && has_open_accu_contract);\n    const [animation_duration, setAnimationDuration] = React.useState(450);\n    const prev_has_open_accu_contract = usePrevious(\n        !!open_accu_contract &&\n            !!active_positions.find(\n                ({ contract_info, type }) => isAccumulatorContract(type) && contract_info.underlying === symbol\n            )\n    );\n    const mf_account_status = useMFAccountStatus();\n    const basis_options = React.useMemo(\n        () => (basis_list.length ? basis_list.map(item => item.value) : []),\n        [basis_list]\n    );\n\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const purchase_button_content_props = {\n        currency,\n        has_open_accu_contract,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n    };\n    const has_no_button_content =\n        is_vanilla ||\n        is_vanilla_fx ||\n        is_turbos ||\n        is_high_low ||\n        is_touch ||\n        (is_accumulator && !has_open_accu_contract);\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const active_accu_contract = is_accumulator\n        ? all_positions.find(\n              ({ contract_info, type }) =>\n                  isAccumulatorContract(type) && contract_info.underlying === symbol && !contract_info.is_sold\n          )\n        : undefined;\n    const is_valid_to_sell = active_accu_contract?.contract_info\n        ? hasContractEntered(active_accu_contract.contract_info) &&\n          isOpen(active_accu_contract.contract_info) &&\n          isValidToSell(active_accu_contract.contract_info)\n        : false;\n    const current_stake =\n        (is_valid_to_sell && active_accu_contract && getIndicativePrice(active_accu_contract.contract_info)) || null;\n    const cardLabels = getCardLabelsV2();\n    const is_modal_error = checkIsServiceModalError({ services_error, is_mf_verification_pending_modal_visible });\n    const is_accu_sell_disabled = !is_valid_to_sell || active_accu_contract?.is_sell_requested;\n\n    const getButtonType = (index: number, trade_type: string) => {\n        const tab_index = getTradeTypeTabsList(contract_type).findIndex(tab => tab.contract_type === trade_type);\n        const button_index = tab_index < 0 ? index : tab_index;\n        return button_index ? 'sell' : 'purchase';\n    };\n\n    const addNotificationBannerCallback = (params: Parameters<typeof addBanner>[0], contract_id: number) => {\n        sendDtraderV2PurchaseToAnalytics(contract_type, symbol, contract_id);\n        return addBanner({\n            icon: (\n                <StandaloneStopwatchRegularIcon\n                    iconSize='sm'\n                    className='trade-notification--purchase'\n                    key='contract-opened'\n                />\n            ),\n            ...params,\n        });\n    };\n\n    React.useEffect(() => {\n        if (is_purchase_enabled) setLoadingButtonIndex(null);\n    }, [is_purchase_enabled]);\n\n    React.useEffect(() => {\n        const shouldSwitchToStake =\n            basis === BASIS_PAYOUT && basis_options.length > 1 && basis_options.includes(BASIS_STAKE);\n        if (shouldSwitchToStake) {\n            onChange({ target: { value: BASIS_STAKE, name: BASIS_NAME } });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [basis, basis_options]);\n\n    React.useEffect(() => {\n        const is_animated =\n            (!prev_has_open_accu_contract && has_open_accu_contract) ||\n            (prev_has_open_accu_contract && !has_open_accu_contract && is_accumulator);\n        setAnimationDuration(is_animated ? 450 : 0);\n\n        setIsSellButtonVisibile(is_accumulator ? has_open_accu_contract : false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_accumulator, has_open_accu_contract]);\n\n    React.useEffect(() => {\n        // Check each proposal info object directly for errors\n        if (proposal_info && contract_types.length === Object.keys(proposal_info).length) {\n            let message = '';\n            // Using some() to break out of the loop once we find the first error\n            const has_error = Object.values(proposal_info).some(info => {\n                if (info.has_error && info.message) {\n                    message = info.message || '';\n                    return true; // This breaks out of the loop\n                }\n                return false;\n            });\n            setErrorInfo({ has_error, message: message || '' });\n        }\n    }, [proposal_info]);\n\n    React.useEffect(() => {\n        if (error_info.has_error && error_info.message) {\n            addSnackbar({\n                message: error_info.message,\n                status: 'fail',\n                hasCloseButton: true,\n                hasFixedHeight: false,\n                style: {\n                    marginBottom: is_logged_in ? '48px' : '-8px',\n                    width: 'calc(100% - var(--core-spacing-800)',\n                },\n            });\n\n            // Clear the error state after showing the snackbar\n            setErrorInfo({ has_error: false, message: null });\n        }\n    }, [error_info.has_error]);\n\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={!is_sell_button_visible}\n                timeout={animation_duration}\n                classNames='slide'\n                key='purchase-button'\n                unmountOnExit\n                mountOnEnter\n            >\n                <div\n                    className={clsx('purchase-button__wrapper', {\n                        'purchase-button__wrapper__un-auth': !is_logged_in,\n                    })}\n                >\n                    {contract_types.map((trade_type, index) => {\n                        const info = proposal_info?.[trade_type] || {};\n                        const is_single_button = contract_types.length === 1;\n                        const is_loading = loading_button_index === index;\n                        const is_disabled =\n                            !is_trade_enabled_v2 || info.has_error || (!!purchase_info.error && !is_modal_error);\n\n                        return (\n                            <React.Fragment key={trade_type}>\n                                <Button\n                                    color={getButtonType(index, trade_type)}\n                                    size='lg'\n                                    label={getContractTypeDisplay(trade_type, {\n                                        isHighLow: is_high_low,\n                                        showButtonName: true,\n                                    })}\n                                    fullWidth\n                                    className={clsx(\n                                        'purchase-button',\n                                        is_loading && 'purchase-button--loading',\n                                        is_single_button && 'purchase-button--single'\n                                    )}\n                                    isLoading={is_loading}\n                                    isOpaque\n                                    disabled={is_disabled && !is_loading}\n                                    onClick={() => {\n                                        if (is_multiplier && mf_account_status === MT5_ACCOUNT_STATUS.PENDING) {\n                                            setIsMFVericationPendingModal(true);\n                                        } else {\n                                            setLoadingButtonIndex(index);\n                                            onPurchaseV2(trade_type, isMobile, addNotificationBannerCallback);\n                                        }\n                                    }}\n                                >\n                                    {!is_loading && (\n                                        <PurchaseButtonContent\n                                            {...purchase_button_content_props}\n                                            has_no_button_content={has_no_button_content}\n                                            info={info}\n                                            is_reverse={!!index}\n                                        />\n                                    )}\n                                </Button>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            </CSSTransition>\n            <CSSTransition\n                in={is_sell_button_visible}\n                timeout={animation_duration}\n                classNames='slide'\n                key='sell-button'\n                unmountOnExit\n                mountOnEnter\n            >\n                <div className='purchase-button__wrapper'>\n                    <Button\n                        color='black-white'\n                        size='lg'\n                        label={\n                            is_accu_sell_disabled\n                                ? `${cardLabels.CLOSE}`\n                                : `${cardLabels.CLOSE} ${current_stake} ${currency}`\n                        }\n                        fullWidth\n                        isOpaque\n                        isLoading={active_accu_contract?.is_sell_requested}\n                        className='purchase-button purchase-button--single'\n                        disabled={!is_valid_to_sell}\n                        onClick={() => onClickSell(active_accu_contract?.contract_info.contract_id)}\n                    />\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n});\n\nexport default PurchaseButton;\n","import PurchaseButton from './purchase-button';\nimport './purchase-button.scss';\n\nexport default PurchaseButton;\n","import Cookies from 'js-cookie';\n\nimport { useRemoteConfig } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst useIsHubRedirectionEnabled = () => {\n    const { data } = useRemoteConfig(true);\n    const hub_enabled_country_list = (data?.hub_enabled_country_list as string[]) ?? [];\n    const { client } = useStore();\n    const { account_settings, clients_country } = client;\n\n    const cookieCountry = JSON.parse(Cookies.get('client_information') || '{}')?.residence;\n    const userCountry = cookieCountry || account_settings?.country_code;\n\n    const isHubRedirectionEnabled =\n        Array.isArray(hub_enabled_country_list) && userCountry && hub_enabled_country_list.includes(userCountry);\n\n    const isChangingToHubAppId =\n        Array.isArray(hub_enabled_country_list) &&\n        clients_country &&\n        hub_enabled_country_list.includes(clients_country);\n\n    return {\n        isHubRedirectionEnabled,\n        isChangingToHubAppId,\n        isHubRedirectionLoaded: !!hub_enabled_country_list.length,\n    };\n};\n\nexport default useIsHubRedirectionEnabled;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\nimport { SERVICE_ERROR } from 'AppV2/Utils/layout-utils';\n\ntype ServiceErrorProps = {\n    error_type: string | null;\n    services_error_message?: string;\n};\n\nconst ServiceErrorDescription: React.FC<ServiceErrorProps> = ({ error_type, services_error_message }) => {\n    const getContent = () => {\n        switch (error_type) {\n            case SERVICE_ERROR.INSUFFICIENT_BALANCE:\n                return {\n                    title: <Localize i18n_default_text='Insufficient balance' />,\n                    text: services_error_message || <Localize i18n_default_text='An error occurred.' />,\n                };\n            case SERVICE_ERROR.AUTHORIZATION_REQUIRED:\n                return {\n                    title: <Localize i18n_default_text='Start trading with us' />,\n                    text: <Localize i18n_default_text='Log in or create a free account to place a trade.' />,\n                };\n            case SERVICE_ERROR.PLEASE_AUTHENTICATE:\n                return {\n                    title: <Localize i18n_default_text='Account verification required' />,\n                    text: (\n                        <Localize i18n_default_text='Please submit your proof of identity and proof of address to verify your account and continue trading.' />\n                    ),\n                };\n            case SERVICE_ERROR.PENDING_VERIFICATION:\n                return {\n                    title: <Localize i18n_default_text='Pending verification' />,\n                    text: (\n                        <Localize i18n_default_text='You cannot trade as your documents are still under review. We will notify you by email once your verification is approved.' />\n                    ),\n                };\n            default:\n                return {};\n        }\n    };\n    const { title, text } = getContent() || {};\n\n    return (\n        <>\n            <Text size='lg' bold className='service-error-sheet__body__heading'>\n                {title}\n            </Text>\n            <Text>{text}</Text>\n        </>\n    );\n};\n\nexport default ServiceErrorDescription;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { getDomainUrl, isEmptyObject, redirectToLogin, redirectToSignUp, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { getLanguage, Localize } from '@deriv/translations';\nimport { ActionSheet } from '@deriv-com/quill-ui';\n\nimport { checkIsServiceModalError, SERVICE_ERROR } from 'AppV2/Utils/layout-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useIsHubRedirectionEnabled } from '@deriv/hooks';\n\nimport ServiceErrorDescription from './service-error-description';\n\nconst ServiceErrorSheet = observer(() => {\n    const [is_open, setIsOpen] = useState(false);\n    const { common, client, ui } = useStore();\n    const { is_mf_verification_pending_modal_visible, setIsMFVericationPendingModal } = ui;\n    const { has_wallet, is_virtual } = client;\n    const { services_error, resetServicesError } = common;\n    const { clearPurchaseInfo, requestProposal: resetPurchase } = useTraderStore();\n    const history = useHistory();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    const { code, message, type } = services_error || {};\n    const is_insufficient_balance = code === SERVICE_ERROR.INSUFFICIENT_BALANCE;\n    const is_authorization_required = code === SERVICE_ERROR.AUTHORIZATION_REQUIRED && type === 'buy';\n    const is_account_verification_required = code === SERVICE_ERROR.PLEASE_AUTHENTICATE;\n    const should_show_error_modal =\n        (!isEmptyObject(services_error) || is_mf_verification_pending_modal_visible) &&\n        checkIsServiceModalError({ services_error, is_mf_verification_pending_modal_visible });\n\n    const onClose = () => {\n        setIsOpen(false);\n        if (services_error.type === 'buy') {\n            if (is_insufficient_balance) {\n                return;\n            }\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const getActionButtonProps = () => {\n        if (is_insufficient_balance) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Deposit now' />,\n                    onAction: () => {\n                        resetServicesError();\n                        if (!is_virtual) {\n                            if (has_wallet && isHubRedirectionEnabled) {\n                                const PRODUCTION_REDIRECT_URL = `https://hub.${getDomainUrl()}/tradershub`;\n                                const STAGING_REDIRECT_URL = `https://staging-hub.${getDomainUrl()}/tradershub`;\n                                const redirectUrl =\n                                    process.env.NODE_ENV === 'production'\n                                        ? PRODUCTION_REDIRECT_URL\n                                        : STAGING_REDIRECT_URL;\n\n                                const url_query_string = window.location.search;\n                                const url_params = new URLSearchParams(url_query_string);\n                                const account_currency =\n                                    window.sessionStorage.getItem('account') || url_params.get('account');\n\n                                window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=wallet${account_currency ? `&account=${account_currency}` : ''}`;\n                            } else {\n                                history?.push?.(has_wallet ? routes.wallets_deposit : routes.cashier_deposit);\n                            }\n                        } else {\n                            onClose();\n                        }\n                    },\n                },\n            };\n        }\n        if (is_authorization_required) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Create free account' />,\n                    onAction: () => {\n                        resetServicesError();\n                        redirectToSignUp();\n                    },\n                },\n                secondaryAction: {\n                    content: <Localize i18n_default_text='Login' />,\n                    onAction: () => {\n                        resetServicesError();\n                        redirectToLogin(false, getLanguage());\n                    },\n                },\n            };\n        }\n        if (is_account_verification_required) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Submit Proof' />,\n                    onAction: () => {\n                        resetServicesError();\n                        history.push(routes.proof_of_identity);\n                    },\n                },\n            };\n        }\n        if (is_mf_verification_pending_modal_visible) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Got it' />,\n                    onAction: () => {\n                        resetServicesError();\n                        setIsMFVericationPendingModal(false);\n                        onClose();\n                    },\n                },\n            };\n        }\n    };\n\n    const getErrorType = () => {\n        if (is_insufficient_balance) return SERVICE_ERROR.INSUFFICIENT_BALANCE;\n        if (is_authorization_required) return SERVICE_ERROR.AUTHORIZATION_REQUIRED;\n        if (is_account_verification_required) return SERVICE_ERROR.PLEASE_AUTHENTICATE;\n        if (is_mf_verification_pending_modal_visible) return SERVICE_ERROR.PENDING_VERIFICATION;\n        return null;\n    };\n\n    useEffect(() => {\n        setIsOpen(should_show_error_modal);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_error_modal]);\n\n    useEffect(() => {\n        if (!is_open && code) resetServicesError();\n        if (!is_open) setIsMFVericationPendingModal(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_open]);\n\n    if (!should_show_error_modal) return null;\n\n    return (\n        <ActionSheet.Root\n            className='service-error-sheet'\n            isOpen={is_open}\n            onClose={onClose}\n            expandable={false}\n            position='left'\n        >\n            <ActionSheet.Portal showHandlebar shouldCloseOnDrag>\n                <div className='service-error-sheet__body'>\n                    <ServiceErrorDescription error_type={getErrorType()} services_error_message={message} />\n                </div>\n                <ActionSheet.Footer\n                    className='service-error-sheet__footer'\n                    alignment='vertical'\n                    primaryButtonColor='coral'\n                    {...getActionButtonProps()}\n                />\n            </ActionSheet.Portal>\n        </ActionSheet.Root>\n    );\n});\n\nexport default ServiceErrorSheet;\n","import './service-error-sheet.scss';\nimport ServiceErrorSheet from './service-error-sheet';\n\nexport default ServiceErrorSheet;\n","import React from 'react';\n\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nexport type TErrorFields = 'take_profit' | 'stop_loss' | 'date_start' | 'stake' | 'amount';\n\nconst useTradeError = ({ error_fields }: { error_fields: TErrorFields[] }) => {\n    const { contract_type, proposal_info, validation_errors, trade_type_tab, trade_types } = useTraderStore();\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n\n    const {\n        has_error: proposal_has_error,\n        error_field: proposal_error_field,\n        message: proposal_error_message,\n    } = proposal_info?.[contract_types[0]] ?? {};\n\n    const checkErrorForField = (field: TErrorFields) => {\n        const validation_has_error = validation_errors?.[field]?.length > 0;\n        const is_error_matching_field = (proposal_has_error && proposal_error_field === field) || validation_has_error;\n\n        const message = proposal_error_message ?? validation_errors?.[field]?.[0] ?? '';\n\n        return { is_error_matching_field, message };\n    };\n\n    const error = error_fields\n        .map(field => checkErrorForField(field)) // Mapping each param to its error result\n        .find(result => result.is_error_matching_field); // Find the first match\n\n    // If an error was found, return the error; otherwise return no error\n    return error || { is_error_matching_field: false, message: '' };\n};\n\nexport default useTradeError;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { SnackbarController, useSnackbar } from '@deriv-com/quill-ui';\nimport useTradeError, { TErrorFields } from '../../Hooks/useTradeError';\n\nconst TradeErrorSnackbar = observer(\n    ({ error_fields, should_show_snackbar }: { error_fields: TErrorFields[]; should_show_snackbar?: boolean }) => {\n        const {\n            client: { is_logged_in },\n        } = useStore();\n        const { addSnackbar } = useSnackbar();\n        const { is_error_matching_field: has_error, message } = useTradeError({\n            error_fields, // array with BE error_fields, for which we will track errors.\n        });\n\n        React.useEffect(() => {\n            if (has_error && should_show_snackbar) {\n                addSnackbar({\n                    message,\n                    status: 'fail',\n                    hasCloseButton: true,\n                    hasFixedHeight: false,\n                    style: {\n                        marginBottom: is_logged_in ? '48px' : '-8px',\n                        width: 'calc(100% - var(--core-spacing-800)',\n                    },\n                });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [has_error, should_show_snackbar]);\n\n        return <SnackbarController />;\n    }\n);\n\nexport default TradeErrorSnackbar;\n","import TradeErrorSnackbar from './trade-error-snackbar';\n\nexport default TradeErrorSnackbar;\n","import React from 'react';\nimport { ActionSheet, Heading, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { getTermDefinition } from 'AppV2/Utils/contract-description-utils';\n\ntype TGuideDefinitionModal = {\n    contract_type: string;\n    term: string;\n    onClose: () => void;\n};\n\nconst GuideDefinitionModal = ({ contract_type, term, onClose }: TGuideDefinitionModal) => (\n    <ActionSheet.Root isOpen={!!term} onClose={onClose} position='left' expandable={false}>\n        <ActionSheet.Portal shouldCloseOnDrag>\n            <ActionSheet.Content className='definition__wrapper'>\n                <Heading.H4 className='definition__title'>{term}</Heading.H4>\n                <Text as='div'>{getTermDefinition({ term, contract_type })}</Text>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Got it' />,\n                    onAction: onClose,\n                }}\n                className='definition__button'\n            />\n        </ActionSheet.Portal>\n    </ActionSheet.Root>\n);\n\nexport default GuideDefinitionModal;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { makeLazyLoader, moduleLoader } from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\n\ntype TContractDescription = {\n    onTermClick: (term: string) => void;\n};\n\nconst AccumulatorsTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"accumulators-trade-description\" */ './ContractDescription/accumulators-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst MultiplierTradeDescriptions = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"multipliers-trade-description\" */ './ContractDescription/multipliers-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst VanillasTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"vanillas-trade-description\" */ './ContractDescription/vanillas-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst TurbosTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"turbos-trade-description\" */ './ContractDescription/turbos-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst RiseFallTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"rise-fall-trade-description\" */ './ContractDescription/rise-fall-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst HigherLowerTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"higher-lower-trade-description\" */ './ContractDescription/higher-lower-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst TouchNoTouchTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"touch-no-touch-trade-description\" */ './ContractDescription/touch-no-touch-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst MatchesDiffersTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"matches-differs-trade-description\" */ './ContractDescription/matches-differs-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst EvenOddTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"even-odd-trade-description\" */ './ContractDescription/even-odd-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst OverUnderTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"over-under-trade-description\" */ './ContractDescription/over-under-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst TradeDescription = ({\n    contract_type,\n    onTermClick,\n}: {\n    contract_type: string;\n    onTermClick: (term: string) => void;\n}) => {\n    let trade_type_template;\n    switch (contract_type) {\n        case CONTRACT_LIST.ACCUMULATORS:\n            trade_type_template = <AccumulatorsTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.RISE_FALL:\n            trade_type_template = <RiseFallTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.MULTIPLIERS:\n            trade_type_template = <MultiplierTradeDescriptions onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.VANILLAS:\n            trade_type_template = <VanillasTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.TURBOS:\n            trade_type_template = <TurbosTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.HIGHER_LOWER:\n            trade_type_template = <HigherLowerTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.TOUCH_NO_TOUCH:\n            trade_type_template = <TouchNoTouchTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.MATCHES_DIFFERS:\n            trade_type_template = <MatchesDiffersTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.EVEN_ODD:\n            trade_type_template = <EvenOddTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.OVER_UNDER:\n            trade_type_template = <OverUnderTradeDescription onTermClick={onTermClick} />;\n            break;\n        default:\n            trade_type_template = (\n                <Text as='p'>\n                    <Localize i18n_default_text='Description not found.' />\n                </Text>\n            );\n            break;\n    }\n    return <React.Fragment>{trade_type_template}</React.Fragment>;\n};\n\nexport default TradeDescription;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Chip, Text } from '@deriv-com/quill-ui';\nimport TradeDescription from './Description/trade-description';\nimport VideoPreview from './Description/video-preview';\n\ntype TGuideContent = {\n    contract_list: { tradeType: React.ReactNode; id: string }[];\n    onChipSelect: (id: string) => void;\n    onTermClick: (term: string) => void;\n    selected_contract_type: string;\n    show_guide_for_selected_contract?: boolean;\n    show_description_in_a_modal?: boolean;\n    toggleVideoPlayer: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n    video_src: string;\n};\n\nconst GuideContent = ({\n    contract_list,\n    onChipSelect,\n    onTermClick,\n    selected_contract_type,\n    show_guide_for_selected_contract,\n    show_description_in_a_modal = true,\n    toggleVideoPlayer,\n    video_src,\n}: TGuideContent) => (\n    <React.Fragment>\n        {!show_guide_for_selected_contract && (\n            <div className='guide__menu'>\n                {contract_list.map(({ tradeType, id }: { tradeType: React.ReactNode; id: string }) => (\n                    <Chip.Selectable\n                        key={id}\n                        onChipSelect={() => onChipSelect(id)}\n                        selected={id === selected_contract_type}\n                    >\n                        <Text size='sm'>{tradeType}</Text>\n                    </Chip.Selectable>\n                ))}\n            </div>\n        )}\n        <div\n            className={clsx('guide__contract-description', {\n                'guide__contract-description--without-btn': !show_description_in_a_modal,\n            })}\n            key={selected_contract_type}\n        >\n            <TradeDescription contract_type={selected_contract_type} onTermClick={onTermClick} />\n            <VideoPreview\n                contract_type={selected_contract_type}\n                toggleVideoPlayer={toggleVideoPlayer}\n                video_src={video_src}\n            />\n        </div>\n    </React.Fragment>\n);\n\nexport default GuideContent;\n","import React from 'react';\nimport { ActionSheet, Heading } from '@deriv-com/quill-ui';\nimport { VideoPlayer } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\nimport { getDescriptionVideoIds } from 'AppV2/Utils/contract-description-utils';\nimport GuideContent from './guide-content';\nimport ReactDOM from 'react-dom';\n\ntype TGuideDescriptionModal = {\n    contract_list: { tradeType: React.ReactNode; id: string }[];\n    is_dark_mode_on?: boolean;\n    is_open?: boolean;\n    onChipSelect: (id: string) => void;\n    onClose: () => void;\n    onTermClick: (term: string) => void;\n    selected_contract_type: string;\n    show_guide_for_selected_contract?: boolean;\n    show_description_in_a_modal?: boolean;\n};\n\nconst PortalModal = ({ isOpen, children }: { isOpen: boolean; children: React.ReactNode }) => {\n    if (!isOpen) return null;\n\n    return ReactDOM.createPortal(\n        <div className='modal-player' aria-modal='true'>\n            <div\n                className='modal-player__container'\n                onClick={e => e.stopPropagation()}\n                onKeyDown={e => e.stopPropagation()}\n            >\n                {children}\n            </div>\n        </div>,\n        document.body\n    );\n};\n\nconst GuideDescriptionModal = ({\n    contract_list,\n    is_dark_mode_on,\n    is_open,\n    onChipSelect,\n    onClose,\n    onTermClick,\n    selected_contract_type,\n    show_guide_for_selected_contract,\n    show_description_in_a_modal = true,\n}: TGuideDescriptionModal) => {\n    const [is_video_player_opened, setIsVideoPlayerOpened] = React.useState(false);\n    const modal_ref = React.useRef<HTMLDialogElement>(null);\n\n    const video_src = getDescriptionVideoIds(selected_contract_type, is_dark_mode_on);\n\n    const toggleVideoPlayer = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        clickAndKeyEventHandler(() => setIsVideoPlayerOpened(!is_video_player_opened), e);\n    };\n\n    const guide_content_props = {\n        contract_list,\n        onChipSelect,\n        onTermClick,\n        selected_contract_type,\n        show_guide_for_selected_contract,\n        show_description_in_a_modal,\n        toggleVideoPlayer,\n        video_src,\n    };\n\n    React.useEffect(() => {\n        if (modal_ref.current) is_video_player_opened ? modal_ref.current.showModal() : modal_ref.current.close();\n    }, [is_video_player_opened]);\n\n    return (\n        <React.Fragment>\n            {show_description_in_a_modal ? (\n                <ActionSheet.Root isOpen={is_open} onClose={onClose} position='left' expandable={false}>\n                    <ActionSheet.Portal shouldCloseOnDrag>\n                        <ActionSheet.Content className='guide__wrapper__content'>\n                            <Heading.H4 className='guide__title'>\n                                {show_guide_for_selected_contract ? (\n                                    selected_contract_type\n                                ) : (\n                                    <Localize i18n_default_text='Trade types' />\n                                )}\n                            </Heading.H4>\n                            <GuideContent {...guide_content_props} />\n                        </ActionSheet.Content>\n                        <ActionSheet.Footer\n                            alignment='vertical'\n                            primaryAction={{\n                                content: <Localize i18n_default_text='Got it' />,\n                                onAction: onClose,\n                            }}\n                            className='guide__button'\n                        />\n                    </ActionSheet.Portal>\n                </ActionSheet.Root>\n            ) : (\n                <div className='guide__wrapper__content--separate'>\n                    <GuideContent {...guide_content_props} />\n                </div>\n            )}\n            <PortalModal isOpen={is_video_player_opened}>\n                <VideoPlayer\n                    className='modal-player__wrapper'\n                    data_testid='dt_video_player'\n                    is_v2\n                    is_mobile\n                    increased_drag_area\n                    src={video_src}\n                    onModalClose={toggleVideoPlayer}\n                    muted={true}\n                    hide_volume_control={true}\n                />\n            </PortalModal>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(GuideDescriptionModal);\n","import React from 'react';\n\nimport { LabelPairedPresentationScreenSmRegularIcon } from '@deriv/quill-icons';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { Button, Text } from '@deriv-com/quill-ui';\n\nimport useContractsForCompany from 'AppV2/Hooks/useContractsForCompany';\nimport { AVAILABLE_CONTRACTS, CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { sendOpenGuideToAnalytics } from '../../../Analytics';\n\nimport GuideDefinitionModal from './guide-definition-modal';\nimport GuideDescriptionModal from './guide-description-modal';\n\ntype TGuide = {\n    has_label?: boolean;\n    is_open_by_default?: boolean;\n    show_guide_for_selected_contract?: boolean;\n    show_trigger_button?: boolean;\n    show_description_in_a_modal?: boolean;\n};\n\nconst Guide = observer(\n    ({\n        has_label,\n        is_open_by_default,\n        show_guide_for_selected_contract,\n        show_trigger_button = true,\n        show_description_in_a_modal = true,\n    }: TGuide) => {\n        const {\n            ui: { is_dark_mode_on },\n            common: { current_language },\n        } = useStore();\n        const { contract_type } = useTraderStore();\n        const contract_type_title = AVAILABLE_CONTRACTS.find(item => item.for.includes(contract_type))?.id ?? '';\n        const { trade_types } = useContractsForCompany();\n        const order = [\n            CONTRACT_LIST.RISE_FALL,\n            CONTRACT_LIST.ACCUMULATORS,\n            CONTRACT_LIST.MULTIPLIERS,\n            CONTRACT_LIST.VANILLAS,\n            CONTRACT_LIST.TURBOS,\n            CONTRACT_LIST.HIGHER_LOWER,\n            CONTRACT_LIST.TOUCH_NO_TOUCH,\n            CONTRACT_LIST.MATCHES_DIFFERS,\n            CONTRACT_LIST.EVEN_ODD,\n            CONTRACT_LIST.OVER_UNDER,\n        ];\n\n        const filtered_contract_list = AVAILABLE_CONTRACTS.filter(contract =>\n            trade_types.some((trade: { text?: string }) => trade.text === contract.id)\n        );\n\n        const ordered_contract_list = [...filtered_contract_list].sort(\n            (a, b) => order.findIndex(item => item === a.id) - order.findIndex(item => item === b.id)\n        );\n\n        const [is_description_opened, setIsDescriptionOpened] = React.useState(is_open_by_default);\n        const [selected_contract_type, setSelectedContractType] = React.useState(contract_type_title);\n        const [selected_term, setSelectedTerm] = React.useState<string>('');\n\n        const onChipSelect = React.useCallback((id: string) => setSelectedContractType(id ?? ''), []);\n\n        const onClose = React.useCallback(() => setIsDescriptionOpened(false), []);\n\n        React.useEffect(() => {\n            if (show_guide_for_selected_contract) setSelectedContractType(contract_type_title);\n        }, [show_guide_for_selected_contract, contract_type_title]);\n\n        React.useEffect(() => {\n            setIsDescriptionOpened(is_description_opened);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [is_open_by_default]);\n\n        return (\n            <React.Fragment>\n                {show_trigger_button && (\n                    <Button\n                        color={is_dark_mode_on ? 'white' : 'black'}\n                        icon={<LabelPairedPresentationScreenSmRegularIcon key='guide-button-icon' />}\n                        onClick={() => {\n                            sendOpenGuideToAnalytics(contract_type, 'main_trade_page');\n                            setIsDescriptionOpened(true);\n                        }}\n                        variant={has_label ? 'secondary' : 'tertiary'}\n                        key={current_language}\n                    >\n                        {has_label && (\n                            <Text size='sm' bold color='quill-typography__color--prominent'>\n                                <Localize i18n_default_text='Guide' />\n                            </Text>\n                        )}\n                    </Button>\n                )}\n                <GuideDescriptionModal\n                    contract_list={ordered_contract_list}\n                    is_dark_mode_on={is_dark_mode_on}\n                    is_open={is_description_opened}\n                    onChipSelect={(id: string) => {\n                        const selected_trade_type = ordered_contract_list.find(item => item.id === id);\n                        sendOpenGuideToAnalytics(selected_trade_type?.for?.[0] ?? '', 'trade_type_page');\n                        onChipSelect(id);\n                    }}\n                    onClose={onClose}\n                    onTermClick={setSelectedTerm}\n                    selected_contract_type={selected_contract_type}\n                    show_guide_for_selected_contract={show_guide_for_selected_contract}\n                    show_description_in_a_modal={show_description_in_a_modal}\n                />\n                <GuideDefinitionModal\n                    contract_type={selected_contract_type}\n                    term={selected_term}\n                    onClose={() => setSelectedTerm('')}\n                />\n            </React.Fragment>\n        );\n    }\n);\n\nexport default Guide;\n","import Guide from './guide';\nimport './guide.scss';\n\nexport default Guide;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\nimport Guide from '../Guide';\n\ntype TTradeParametersContainer = {\n    is_minimized?: boolean;\n    is_minimized_visible?: boolean;\n};\n\nconst TradeParametersContainer = ({\n    children,\n    is_minimized,\n    is_minimized_visible,\n}: React.PropsWithChildren<TTradeParametersContainer>) => {\n    const is_minimized_and_visible = is_minimized && is_minimized_visible;\n    return (\n        <section\n            className={clsx('', {\n                'trade-params--minimized': is_minimized_and_visible,\n                'trade-params': !is_minimized_and_visible,\n            })}\n        >\n            {!is_minimized_and_visible && (\n                <div className='trade-params__title'>\n                    <Text>\n                        <Localize i18n_default_text='Set your trade' />\n                    </Text>\n                    <Guide has_label show_guide_for_selected_contract />\n                </div>\n            )}\n            {children}\n        </section>\n    );\n};\n\nexport default React.memo(TradeParametersContainer);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { Localize } from '@deriv/translations';\nimport { Money, Skeleton } from '@deriv/components';\nimport { Text } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { CONTRACT_TYPES } from '@deriv/shared';\n\nconst AccumulatorsInformation = observer(() => {\n    const { currency, is_market_closed, maximum_payout, proposal_info } = useTraderStore();\n    const has_error = proposal_info[CONTRACT_TYPES.ACCUMULATOR]?.has_error;\n\n    if (has_error) return null;\n\n    return (\n        <div className='accumulators-info__wrapper'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Max. payout' />\n            </Text>\n            {maximum_payout ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    <Money amount={maximum_payout} show_currency currency={currency} />\n                </Text>\n            ) : (\n                <Skeleton width={100} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default AccumulatorsInformation;\n","import AccumulatorsInformation from './accumulators-information';\nimport './accumulators-information.scss';\n\nexport default AccumulatorsInformation;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, ToggleSwitch, Text, Heading } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\nimport { hasCallPutEqual, hasDurationForCallPutEqual } from 'Stores/Modules/Trading/Helpers/allow-equals';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst AllowEquals = observer(() => {\n    const {\n        contract_types_list,\n        contract_start_type,\n        duration_unit,\n        expiry_type,\n        is_equal,\n        is_market_closed,\n        onChange,\n    } = useTraderStore();\n\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const has_callputequal_duration = hasDurationForCallPutEqual(\n        contract_types_list,\n        duration_unit,\n        contract_start_type\n    );\n    const has_callputequal = hasCallPutEqual(contract_types_list);\n    const has_allow_equals = (has_callputequal_duration || expiry_type === 'endtime') && has_callputequal;\n\n    const onToggleSwitch = (is_enabled: boolean) => {\n        onChange({ target: { name: 'is_equal', value: Number(is_enabled) } });\n        setIsOpen(false);\n    };\n\n    const openDescription = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        if (is_market_closed) return;\n        clickAndKeyEventHandler(() => setIsOpen(true), e);\n    };\n\n    const closeDescription = () => setIsOpen(false);\n\n    if (!has_allow_equals) return null;\n\n    return (\n        <React.Fragment>\n            <div className='allow-equals__wrapper'>\n                <Text\n                    size='sm'\n                    className={clsx('allow-equals__title', is_market_closed && 'allow-equals__title--disabled')}\n                    onClick={openDescription}\n                    onKeyDown={openDescription}\n                >\n                    <Localize i18n_default_text='Allow equals' />\n                </Text>\n                <ToggleSwitch checked={!!is_equal} onChange={onToggleSwitch} disabled={is_market_closed} />\n            </div>\n            <ActionSheet.Root isOpen={is_open} onClose={closeDescription} position='left' expandable={false}>\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Content className='allow-equals__definition__wrapper'>\n                        <Heading.H4 className='allow-equals__definition__title'>\n                            <Localize i18n_default_text='Allow equals' />\n                        </Heading.H4>\n                        <Text as='div'>\n                            <Localize i18n_default_text='Win payout if exit spot is also equal to entry spot.' />\n                        </Text>\n                    </ActionSheet.Content>\n                    <ActionSheet.Footer\n                        alignment='vertical'\n                        primaryAction={{\n                            content: <Localize i18n_default_text='Got it' />,\n                            onAction: closeDescription,\n                        }}\n                        className='allow-equals__button'\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default AllowEquals;\n","import './allow-equals.scss';\nimport AllowEquals from './allow-equals';\n\nexport default AllowEquals;\n","import React from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport clsx from 'clsx';\nimport { getLanguage } from '@deriv/translations';\nimport CarouselHeader, { TQuillIcon } from './carousel-header';\n\ntype TCarousel = {\n    classname?: string;\n    current_index?: number;\n    header?: typeof CarouselHeader;\n    is_swipeable?: boolean;\n    is_infinite_loop?: boolean;\n    onNextButtonClick?: () => void;\n    onPreviousButtonClick?: () => void;\n    pages: { id: number; component: JSX.Element }[];\n    previous_icon?: TQuillIcon;\n    title?: React.ReactNode;\n    next_icon?: TQuillIcon;\n    setCurrentIndex?: (arg: number) => void;\n};\n\nconst Carousel = ({\n    classname,\n    current_index,\n    header,\n    is_swipeable,\n    is_infinite_loop,\n    onNextButtonClick,\n    onPreviousButtonClick,\n    pages,\n    previous_icon,\n    title,\n    next_icon,\n    setCurrentIndex,\n}: TCarousel) => {\n    const [internalIndex, setInternalIndex] = React.useState(0);\n\n    const HeaderComponent = header;\n\n    const isControlled = current_index !== undefined && setCurrentIndex !== undefined;\n    const index = isControlled ? current_index : internalIndex;\n    const lang = getLanguage();\n    const is_rtl = lang === 'AR';\n\n    const handleNextClick = () => {\n        if (!is_infinite_loop && index + 1 >= pages.length) return;\n        const newIndex = (index + 1) % pages.length;\n        isControlled ? setCurrentIndex?.(newIndex) : setInternalIndex(newIndex);\n        onNextButtonClick?.();\n    };\n\n    const handlePrevClick = () => {\n        if (!is_infinite_loop && index - 1 < 0) return;\n        const newIndex = (index - 1 + pages.length) % pages.length;\n        isControlled ? setCurrentIndex?.(newIndex) : setInternalIndex(newIndex);\n        onPreviousButtonClick?.();\n    };\n\n    const swipe_handlers = useSwipeable({\n        onSwipedLeft: handleNextClick,\n        onSwipedRight: handlePrevClick,\n    });\n\n    return (\n        <React.Fragment>\n            {HeaderComponent && (\n                <HeaderComponent\n                    current_index={index}\n                    onNextClick={handleNextClick}\n                    onPrevClick={handlePrevClick}\n                    previous_icon={previous_icon}\n                    next_icon={next_icon}\n                    title={title}\n                />\n            )}\n            <ul\n                className={clsx('carousel', classname)}\n                data-testid='dt_carousel'\n                {...(is_swipeable ? swipe_handlers : {})}\n            >\n                {pages.map(({ component, id }) => (\n                    <li\n                        className='carousel__item'\n                        style={{ transform: `translateX(${index * 100 * (is_rtl ? 1 : -1)}%)` }}\n                        key={id}\n                    >\n                        {component}\n                    </li>\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n};\n\nexport default Carousel;\n","import './carousel.scss';\nimport Carousel from './carousel';\n\nexport default Carousel;\n","import React from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\nconst BarrierDescription = ({ isDays }: { isDays: boolean }) => {\n    return (\n        <ActionSheet.Content className='barrier-params__description-content'>\n            {isDays ? (\n                <div className='content-section'>\n                    <Text bold>\n                        <Localize i18n_default_text='Fixed barrier:' />\n                    </Text>\n                    <Text>\n                        <Localize i18n_default_text='Barrier set at specific price.' />\n                    </Text>\n                </div>\n            ) : (\n                <>\n                    <div className='content-section'>\n                        <Text bold>\n                            <Localize i18n_default_text='Above spot:' />\n                        </Text>\n                        <Text>\n                            <Localize i18n_default_text='Barrier set above spot price.' />\n                        </Text>\n                    </div>\n                    <div className='content-section'>\n                        <Text bold>\n                            <Localize i18n_default_text='Below spot:' />\n                        </Text>\n                        <Text>\n                            <Localize i18n_default_text='Barrier set below spot price.' />\n                        </Text>\n                    </div>\n                    <div className='content-section'>\n                        <Text bold>\n                            <Localize i18n_default_text='Fixed barrier:' />\n                        </Text>\n                        <Text>\n                            <Localize i18n_default_text='Barrier set at specific price.' />\n                        </Text>\n                    </div>\n                </>\n            )}\n        </ActionSheet.Content>\n    );\n};\n\nexport default BarrierDescription;\n","import React from 'react';\nimport { ActionSheet, Chip, Text, TextField, TextFieldAddon } from '@deriv-com/quill-ui';\n\nimport { localize, Localize } from '@deriv/translations';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst chips_options = [\n    {\n        name: <Localize i18n_default_text='Above spot' />,\n    },\n    {\n        name: <Localize i18n_default_text='Below spot' />,\n    },\n    {\n        name: <Localize i18n_default_text='Fixed barrier' />,\n    },\n];\nconst BarrierInput = observer(\n    ({\n        setInitialBarrierValue,\n        isDays,\n        onClose,\n    }: {\n        setInitialBarrierValue: (val: string) => void;\n        isDays: boolean;\n        onClose: (val: boolean) => void;\n    }) => {\n        const { barrier_1, onChange, validation_errors, tick_data, setV2ParamsInitialValues } = useTraderStore();\n        const [option, setOption] = React.useState(0);\n        const [should_show_error, setShouldShowError] = React.useState(false);\n        const [previous_value, setPreviousValue] = React.useState(barrier_1);\n\n        // Constants for localStorage keys\n        const SPOT_BARRIER_KEY = 'deriv_spot_barrier_value';\n        const FIXED_BARRIER_KEY = 'deriv_fixed_barrier_value';\n\n        // Helper functions for localStorage\n        const getStoredValue = (key: string) => {\n            try {\n                const storedValue = localStorage.getItem(key);\n                return storedValue || '';\n            } catch (e) {\n                return '';\n            }\n        };\n\n        const storeValue = (key: string, value: string) => {\n            try {\n                localStorage.setItem(key, value);\n            } catch (e) {\n                // Ignore errors (e.g., localStorage not available)\n            }\n        };\n\n        // Add separate state variables for different barrier types\n        const [spot_barrier_value, setSpotBarrierValue] = React.useState(getStoredValue(SPOT_BARRIER_KEY) || '');\n        const [fixed_barrier_value, setFixedBarrierValue] = React.useState(getStoredValue(FIXED_BARRIER_KEY) || '');\n        const [is_focused, setIsFocused] = React.useState(false);\n        const { pip_size } = tick_data ?? {};\n        const barrier_ref = React.useRef<HTMLInputElement | null>(null);\n        const show_hidden_error = validation_errors?.barrier_1.length > 0 && (barrier_1 || should_show_error);\n\n        React.useEffect(() => {\n            setInitialBarrierValue(barrier_1);\n            setV2ParamsInitialValues({ name: 'barrier_1', value: barrier_1 });\n\n            // Initialize the appropriate barrier value based on the initial barrier_1\n            if (barrier_1.includes('-')) {\n                setOption(1);\n                const valueWithoutSign = barrier_1.replace(/^[+-]/, '');\n                setSpotBarrierValue(valueWithoutSign);\n                // Store in localStorage if not already there\n                if (!spot_barrier_value) {\n                    storeValue(SPOT_BARRIER_KEY, valueWithoutSign);\n                }\n            } else if (barrier_1.includes('+')) {\n                setOption(0);\n                const valueWithoutSign = barrier_1.replace(/^[+-]/, '');\n                setSpotBarrierValue(valueWithoutSign);\n                // Store in localStorage if not already there\n                if (!spot_barrier_value) {\n                    storeValue(SPOT_BARRIER_KEY, valueWithoutSign);\n                }\n            } else {\n                setOption(2);\n                setFixedBarrierValue(barrier_1);\n                // Store in localStorage if not already there\n                if (!fixed_barrier_value) {\n                    storeValue(FIXED_BARRIER_KEY, barrier_1);\n                }\n            }\n\n            onChange({ target: { name: 'barrier_1', value: barrier_1 } });\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        React.useEffect(() => {\n            const barrier_element = barrier_ref.current;\n            const checkFocus = () => {\n                setIsFocused(!!(barrier_element && barrier_element.contains(document.activeElement)));\n            };\n            document.addEventListener('focusin', checkFocus);\n            document.addEventListener('focusout', checkFocus);\n\n            return () => {\n                document.removeEventListener('focusin', checkFocus);\n                document.removeEventListener('focusout', checkFocus);\n            };\n        });\n\n        React.useEffect(() => {\n            if (is_focused) {\n                setShouldShowError(false);\n            }\n        }, [is_focused]);\n\n        const handleChipSelect = (index: number) => {\n            const previousOption = option; // Store the previous option before updating\n            setOption(index);\n            let newValue = '';\n\n            // Save current value to the appropriate state variable and localStorage\n            if (previousOption === 0 || previousOption === 1) {\n                // Coming from Above/Below spot, save to spot_barrier_value\n                const valueWithoutSign = barrier_1.replace(/^[+-]/, '');\n                setSpotBarrierValue(valueWithoutSign);\n                // Store in localStorage\n                storeValue(SPOT_BARRIER_KEY, valueWithoutSign);\n            } else if (previousOption === 2) {\n                // Coming from Fixed barrier, save to fixed_barrier_value\n                setFixedBarrierValue(barrier_1);\n                // Store in localStorage\n                storeValue(FIXED_BARRIER_KEY, barrier_1);\n            }\n\n            // Restore the appropriate value based on the tab we're switching to\n            if (index === 0 || index === 1) {\n                // Switching to Above/Below spot\n                const valueToUse = spot_barrier_value || '';\n                newValue = index === 0 ? `+${valueToUse}` : `-${valueToUse}`;\n            } else if (index === 2) {\n                // Switching to Fixed barrier\n                newValue = fixed_barrier_value || '';\n            }\n\n            if ((newValue.startsWith('+') || newValue.startsWith('-')) && newValue.charAt(1) === '.') {\n                newValue = `${newValue.charAt(0)}0${newValue.slice(1)}`;\n            } else if (newValue.startsWith('.')) {\n                newValue = `0${newValue}`;\n            }\n\n            setPreviousValue(newValue);\n            onChange({ target: { name: 'barrier_1', value: newValue } });\n        };\n\n        const handleOnChange = (e: { target: { name: string; value: string } }) => {\n            let value = e.target.value;\n            if (option === 0) value = `+${value}`;\n            if (option === 1) value = `-${value}`;\n\n            // Update the appropriate state variable based on the current tab\n            if (option === 0 || option === 1) {\n                // Above/Below spot - store without sign\n                const valueWithoutSign = value.replace(/^[+-]/, '');\n                setSpotBarrierValue(valueWithoutSign);\n                // Store in localStorage\n                storeValue(SPOT_BARRIER_KEY, valueWithoutSign);\n            } else if (option === 2) {\n                // Fixed barrier\n                setFixedBarrierValue(value);\n                // Store in localStorage\n                storeValue(FIXED_BARRIER_KEY, value);\n            }\n\n            onChange({ target: { name: 'barrier_1', value } });\n            setV2ParamsInitialValues({ name: 'barrier_1', value });\n            setPreviousValue(value);\n        };\n\n        return (\n            <>\n                <ActionSheet.Content>\n                    <div className='barrier-params'>\n                        {!isDays && (\n                            <div className='barrier-params__chips'>\n                                {chips_options.map((item, index) => (\n                                    <Chip.Selectable\n                                        key={index}\n                                        onClick={() => handleChipSelect(index)}\n                                        selected={index == option}\n                                    >\n                                        <Text size='sm'>{item.name}</Text>\n                                    </Chip.Selectable>\n                                ))}\n                            </div>\n                        )}\n\n                        <div>\n                            {option === 2 || isDays ? (\n                                <TextField\n                                    customType='commaRemoval'\n                                    name='barrier_1'\n                                    noStatusIcon\n                                    status={show_hidden_error ? 'error' : 'neutral'}\n                                    value={barrier_1}\n                                    allowDecimals\n                                    decimals={pip_size}\n                                    allowSign={false}\n                                    inputMode='decimal'\n                                    regex={/[^0-9.,]/g}\n                                    textAlignment='center'\n                                    onChange={handleOnChange}\n                                    placeholder={localize('Price')}\n                                    variant='fill'\n                                    message={show_hidden_error ? validation_errors?.barrier_1[0] : ''}\n                                    ref={barrier_ref}\n                                />\n                            ) : (\n                                <TextFieldAddon\n                                    fillAddonBorderColor='var(--semantic-color-slate-solid-surface-frame-mid)'\n                                    customType='commaRemoval'\n                                    name='barrier_1'\n                                    noStatusIcon\n                                    addonLabel={option == 0 ? '+' : '-'}\n                                    decimals={pip_size}\n                                    value={barrier_1.replace(/[+-]/g, '')}\n                                    allowDecimals\n                                    inputMode='decimal'\n                                    allowSign={false}\n                                    status={show_hidden_error ? 'error' : 'neutral'}\n                                    onChange={handleOnChange}\n                                    placeholder={localize('Distance to spot')}\n                                    regex={/[^0-9.,]/g}\n                                    variant='fill'\n                                    message={show_hidden_error ? validation_errors?.barrier_1[0] : ''}\n                                    ref={barrier_ref}\n                                />\n                            )}\n                            {(validation_errors?.barrier_1.length == 0 || !show_hidden_error) && (\n                                <div className='barrier-params__error-area' />\n                            )}\n                        </div>\n                        <div className='barrier-params__current-spot-wrapper'>\n                            <Text size='sm'>\n                                <Localize i18n_default_text='Current spot' />\n                            </Text>\n                            <Text size='sm'>{tick_data?.quote}</Text>\n                        </div>\n                    </div>\n                </ActionSheet.Content>\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    shouldCloseOnPrimaryButtonClick={false}\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction: () => {\n                            if (validation_errors.barrier_1.length === 0) {\n                                // Save the current values to localStorage before closing\n                                if (option === 0 || option === 1) {\n                                    const valueWithoutSign = barrier_1.replace(/^[+-]/, '');\n                                    storeValue(SPOT_BARRIER_KEY, valueWithoutSign);\n                                } else if (option === 2) {\n                                    storeValue(FIXED_BARRIER_KEY, barrier_1);\n                                }\n\n                                onClose(true);\n\n                                // This is a workaround to re-trigger any validation errors that were hidden behind the action sheet\n                                handleOnChange({\n                                    target: { name: 'barrier_1', value: barrier_1.replace(/[+-]/g, '') },\n                                });\n                            } else {\n                                setShouldShowError(true);\n                            }\n                        },\n                    }}\n                />\n            </>\n        );\n    }\n);\n\nexport default BarrierInput;\n","import React from 'react';\nimport { ActionSheet } from '@deriv-com/quill-ui';\nimport { LabelPairedArrowLeftMdRegularIcon, LabelPairedCircleInfoMdRegularIcon } from '@deriv/quill-icons';\n\nexport type TQuillIcon = typeof LabelPairedArrowLeftMdRegularIcon;\ntype TCarouselHeaderProps = {\n    current_index: number;\n    onNextClick: () => void;\n    onPrevClick: () => void;\n    previous_icon?: TQuillIcon;\n    next_icon?: TQuillIcon;\n    title?: React.ReactNode;\n};\n\nconst CarouselHeader = ({\n    current_index,\n    onNextClick,\n    onPrevClick,\n    previous_icon,\n    next_icon,\n    title,\n}: TCarouselHeaderProps) => {\n    const NextIcon = next_icon ?? LabelPairedCircleInfoMdRegularIcon;\n    const PreviousIcon = previous_icon ?? LabelPairedArrowLeftMdRegularIcon;\n\n    return (\n        <ActionSheet.Header\n            className='carousel-controls'\n            title={title}\n            icon={current_index ? <PreviousIcon onClick={onPrevClick} /> : <NextIcon onClick={onNextClick} />}\n            iconPosition={current_index ? 'left' : 'right'}\n        />\n    );\n};\n\nexport default CarouselHeader;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField, useSnackbar } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport Carousel from 'AppV2/Components/Carousel';\nimport BarrierDescription from './barrier-description';\nimport BarrierInput from './barrier-input';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Barrier = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        barrier_1,\n        onChange,\n        duration_unit,\n        is_market_closed,\n        setV2ParamsInitialValues,\n        v2_params_initial_values,\n        validation_errors,\n        proposal_info,\n        trade_type_tab,\n    } = useTraderStore();\n    const [is_open, setIsOpen] = React.useState(false);\n    const [initialBarrierValue, setInitialBarrierValue] = React.useState('');\n    const isDays = duration_unit == 'd';\n    const has_error =\n        validation_errors.barrier_1.length > 0 ||\n        (proposal_info?.[trade_type_tab]?.has_error && proposal_info?.[trade_type_tab]?.error_field === 'barrier');\n    const { addSnackbar } = useSnackbar();\n    const [barrier_error_shown, setBarrierErrorShown] = React.useState(false);\n\n    const onClose = React.useCallback(\n        (is_saved = false) => {\n            if (is_open) {\n                if (!is_saved) {\n                    onChange({ target: { name: 'barrier_1', value: initialBarrierValue } });\n                }\n                setV2ParamsInitialValues({ value: '', name: 'barrier_1' });\n                setIsOpen(false);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [initialBarrierValue, is_open]\n    );\n\n    React.useEffect(() => {\n        const has_error = proposal_info?.[trade_type_tab]?.has_error;\n        const error_field = proposal_info?.[trade_type_tab]?.error_field;\n        const message = proposal_info?.[trade_type_tab]?.message;\n\n        if (has_error && error_field === 'barrier' && !barrier_error_shown && !is_open && !is_minimized) {\n            addSnackbar({\n                message,\n                hasCloseButton: true,\n                status: 'fail',\n                style: { marginBottom: '48px' },\n            });\n            setBarrierErrorShown(true);\n        }\n    }, [proposal_info]);\n\n    React.useEffect(() => {\n        if (is_open) {\n            setBarrierErrorShown(false);\n        }\n    }, [is_open]);\n\n    const barrier_carousel_pages = [\n        {\n            id: 1,\n            component: (\n                <BarrierInput isDays={isDays} setInitialBarrierValue={setInitialBarrierValue} onClose={onClose} />\n            ),\n        },\n        {\n            id: 2,\n            component: <BarrierDescription isDays={isDays} />,\n        },\n    ];\n\n    return (\n        <>\n            <TextField\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                disabled={is_market_closed}\n                variant='fill'\n                readOnly\n                noStatusIcon\n                label={<Localize i18n_default_text='Barrier' key={`barrier${is_minimized ? '-minimized' : ''}`} />}\n                value={v2_params_initial_values.barrier_1 || barrier_1}\n                onClick={() => setIsOpen(true)}\n                status={has_error && !is_open ? 'error' : undefined}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        header={CarouselHeader}\n                        title={<Localize i18n_default_text='Barrier' />}\n                        pages={barrier_carousel_pages}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </>\n    );\n});\n\nexport default Barrier;\n","import Barrier from './barrier';\nimport './barrier.scss';\n\nexport default Barrier;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { Skeleton } from '@deriv/components';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\nconst BarrierInfo = observer(() => {\n    const { barrier_1, contract_type, is_market_closed, proposal_info } = useTraderStore();\n    const contract_key = contract_type.toUpperCase();\n    const has_error = proposal_info[contract_key]?.has_error;\n\n    if (has_error) return null;\n    return (\n        <div className='barrier-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Barrier' />\n            </Text>\n            {barrier_1 ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    {barrier_1}\n                </Text>\n            ) : (\n                <Skeleton width={50} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default BarrierInfo;\n","import BarrierInfo from './barrier-info';\nimport './barrier-info.scss';\n\nexport default BarrierInfo;\n","import { Chip, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\nconst DurationChips = ({\n    duration_units_list,\n    onChangeUnit,\n    unit,\n}: {\n    duration_units_list: { text: string; value: string }[];\n    onChangeUnit: (arg: string) => void;\n    unit: string;\n}) => {\n    const show_end_time = duration_units_list.length > 1;\n\n    if (!show_end_time) {\n        return <></>;\n    }\n\n    return (\n        <div className='duration-container__chips'>\n            {duration_units_list.map(\n                (item, index) =>\n                    item.value !== 'd' && (\n                        <Chip.Selectable\n                            key={`${item.text}-${index}`}\n                            selected={unit == item.value}\n                            className='duration-container__chips__chip'\n                            onClick={() => unit !== item.value && onChangeUnit(item.value)}\n                        >\n                            <Text size='sm'>{item.text}</Text>\n                        </Chip.Selectable>\n                    )\n            )}\n            {show_end_time && (\n                <Chip.Selectable\n                    key='end-time'\n                    selected={unit === 'd'}\n                    className='duration-container__chips__chip'\n                    onClick={() => onChangeUnit('d')}\n                >\n                    <Text size='sm'>\n                        <Localize i18n_default_text='End Time' />\n                    </Text>\n                </Chip.Selectable>\n            )}\n        </div>\n    );\n};\n\nexport default DurationChips;\n","import { WheelPickerContainer } from '@deriv-com/quill-ui';\nimport { localize } from '@deriv/translations';\nimport React, { useState, useEffect } from 'react';\n\ntype TimeOption = {\n    label: string;\n    value: number;\n};\n\nconst HourPicker = ({\n    setWheelPickerValue,\n    selected_hour,\n    selected_time,\n    duration_min_max,\n}: {\n    setWheelPickerValue: (index: number, value: string | number) => void;\n    selected_hour: number[];\n    selected_time: number[];\n    duration_min_max: Record<string, { min: number; max: number }>;\n}) => {\n    const [hours, setHours] = useState<TimeOption[]>([]);\n    const [minutes, setMinutes] = useState<TimeOption[]>([]);\n\n    useEffect(() => {\n        const min_seconds = Math.max(duration_min_max.intraday.min, 3600);\n        const max_seconds = duration_min_max.intraday.max;\n\n        const min_hours = Math.max(1, Math.ceil(min_seconds / 3600));\n        const max_hours = Math.floor(max_seconds / 3600);\n\n        const new_hours = Array.from({ length: max_hours - min_hours + 1 }, (_, i) => ({\n            label: `${i + min_hours} ${localize('h')}`,\n            value: i + min_hours,\n        }));\n        setHours(new_hours);\n\n        update_minutes(selected_hour[0] || min_hours, min_seconds, max_seconds);\n    }, [duration_min_max, selected_hour]);\n\n    const update_minutes = (selected_hour: number, min_seconds: number, max_seconds: number) => {\n        let min_minutes = 0;\n        let max_minutes = 59;\n\n        if (selected_hour === Math.ceil(min_seconds / 3600)) {\n            min_minutes = Math.ceil((min_seconds % 3600) / 60);\n        }\n\n        if (selected_hour === Math.floor(max_seconds / 3600)) {\n            max_minutes = Math.floor((max_seconds % 3600) / 60);\n        }\n\n        if (min_minutes > 0 && selected_hour * 3600 >= min_seconds) {\n            min_minutes = 0;\n        }\n\n        const new_minutes = Array.from({ length: max_minutes - min_minutes + 1 }, (_, i) => ({\n            label: `${i + min_minutes} ${localize('min')}`,\n            value: i + min_minutes,\n        }));\n        setMinutes(new_minutes);\n    };\n\n    const handle_value_change = (index: number, value: string | number) => {\n        setWheelPickerValue(index, value);\n        if (index === 0) {\n            update_minutes(Number(value), duration_min_max.intraday.min, duration_min_max.intraday.max);\n        }\n    };\n\n    const getDefaultValue = (options: TimeOption[], selected_value: number) => {\n        const option = options.find(opt => opt.value === selected_value);\n        return option ? option.label : options[0]?.label || `1 ${localize('h')}`;\n    };\n\n    return (\n        <WheelPickerContainer\n            data={[hours, minutes]}\n            defaultValue={[getDefaultValue(hours, selected_hour[0]), getDefaultValue(minutes, selected_time[1])]}\n            containerHeight='268px'\n            inputValues={[selected_hour[0] || hours[0]?.value, selected_time[1] || minutes[0]?.value]}\n            setInputValues={handle_value_change}\n        />\n    );\n};\n\nexport default HourPicker;\n","import { WheelPickerContainer } from '@deriv-com/quill-ui';\nimport { observer } from '@deriv/stores';\nimport { DURATION_UNIT, getOptionPerUnit } from 'AppV2/Utils/trade-params-utils';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport HourPicker from './hourpicker';\n\nconst DurationWheelPicker = observer(\n    ({\n        unit,\n        setWheelPickerValue,\n        selected_hour,\n        selected_time,\n    }: {\n        unit: string;\n        setWheelPickerValue: (index: number, value: string | number) => void;\n        selected_hour: number[];\n        selected_time: number[];\n    }) => {\n        const { duration_min_max, duration_units_list } = useTraderStore();\n        const options = React.useMemo(() => getOptionPerUnit(unit, duration_min_max), [unit, duration_min_max]);\n\n        const handleContainerHeight = () => {\n            if (unit === DURATION_UNIT.DAYS) {\n                return '228px';\n            }\n            return duration_units_list.length === 1 ? '230px' : '268px';\n        };\n        return (\n            <div\n                className={clsx('duration-container__wheel-picker-container', {\n                    'duration-container__wheel-picker-container__single':\n                        duration_units_list.length == 1 && unit !== DURATION_UNIT.DAYS,\n                })}\n            >\n                {unit !== DURATION_UNIT.HOURS ? (\n                    <WheelPickerContainer\n                        data={options}\n                        defaultValue={[String(selected_time)]}\n                        containerHeight={handleContainerHeight()}\n                        inputValues={selected_time}\n                        setInputValues={setWheelPickerValue}\n                    />\n                ) : (\n                    <HourPicker\n                        setWheelPickerValue={setWheelPickerValue}\n                        selected_hour={selected_hour}\n                        selected_time={selected_time}\n                        duration_min_max={duration_min_max}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default DurationWheelPicker;\n","import { DatePicker } from '@deriv-com/quill-ui';\nimport { toMoment, useIsMounted } from '@deriv/shared';\nimport React, { useEffect } from 'react';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TMarketEvent = {\n    dates: string[];\n    descrip: string;\n};\n\nconst DaysDatepicker = ({\n    start_date,\n    end_date,\n    setEndDate,\n}: {\n    start_date: Date;\n    setEndDate: (arg: Date) => void;\n    end_date: Date;\n}) => {\n    const [disabled_days, setDisabledDays] = React.useState<number[]>([]);\n    const { symbol } = useTraderStore();\n    const isMounted = useIsMounted();\n\n    const onChangeCalendarMonth = React.useCallback(\n        async (e = toMoment().format('YYYY-MM-DD')) => {\n            const new_market_events: TMarketEvent[] = [];\n            let new_disabled_days: number[] = [];\n\n            const [events, trading_days] = await Promise.all([\n                ContractType.getTradingEvents(e, symbol),\n                ContractType.getTradingDays(e, symbol),\n            ]);\n\n            if (trading_days) {\n                const all_days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'] as const;\n                new_disabled_days = all_days\n                    .map((day: (typeof all_days)[number], index) => (!trading_days.includes(day) ? index : -1))\n                    .filter(index => index !== -1);\n            }\n\n            events?.forEach(evt => {\n                const dates = evt.dates.split(', '); // convert dates str into array\n                new_market_events.push({\n                    dates,\n                    descrip: evt.descrip,\n                });\n            });\n\n            if (isMounted()) {\n                setDisabledDays(new_disabled_days);\n            }\n        },\n        [isMounted, symbol]\n    );\n\n    useEffect(() => {\n        onChangeCalendarMonth();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const getDisabledDays = ({ date }: { date: Date }) => {\n        const day = date.getDay();\n        return disabled_days.includes(day);\n    };\n    return (\n        <div className='duration-datepicker duration-container__date-picker'>\n            <DatePicker\n                className='date-picker'\n                hasFixedWidth={false}\n                minDate={new Date(start_date)}\n                maxDate={new Date(new Date().setFullYear(new Date().getFullYear() + 1))}\n                view='month'\n                value={end_date}\n                tileDisabled={getDisabledDays}\n                onChange={date => {\n                    if (date && date instanceof Date) {\n                        setEndDate(date);\n                    }\n                }}\n                wrapperClassName='duration-container__date-picker__sheet'\n            />\n        </div>\n    );\n};\n\nexport default DaysDatepicker;\n","import { CaptionText, Text, TimeWheelPickerContainer } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\nconst EndTimePicker = ({\n    end_time,\n    setEndTime,\n    current_gmt_time,\n    adjusted_start_time,\n}: {\n    end_time: string;\n    setEndTime: (arg: string) => void;\n    current_gmt_time: string;\n    adjusted_start_time: string;\n}) => {\n    return (\n        <div className='duration-container__time-picker'>\n            <TimeWheelPickerContainer\n                is12Hour={false}\n                startTimeIn24Format={adjusted_start_time}\n                minutesInterval={5}\n                selectedTime={end_time}\n                setSelectedValue={val => setEndTime(val as string)}\n                containerHeight='256px'\n                hoursInterval={1}\n            />\n            <div className='duration-container__endtime'>\n                <CaptionText color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='Current time' />\n                </CaptionText>\n                <Text size='sm'>{`${current_gmt_time} GMT`}</Text>\n            </div>\n        </div>\n    );\n};\n\nexport default EndTimePicker;\n","import { ActionSheet, Text, TextField, useSnackbar } from '@deriv-com/quill-ui';\nimport { LabelPairedCalendarSmRegularIcon, LabelPairedClockThreeSmRegularIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport React, { useEffect, useState } from 'react';\n\nimport DaysDatepicker from './datepicker';\nimport EndTimePicker from './timepicker';\nimport { useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { hasIntradayDurationUnit, setTime, toMoment } from '@deriv/shared';\nimport { getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\nimport {\n    getClosestTimeToCurrentGMT,\n    getDatePickerStartDate,\n    getProposalRequestObject,\n} from 'AppV2/Utils/trade-params-utils';\nimport { invalidateDTraderCache, useDtraderQuery } from 'AppV2/Hooks/useDtraderQuery';\nimport { ProposalResponse } from 'Stores/Modules/Trading/trade-store';\n\nconst timeToMinutes = (time: string) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n\nconst DayInput = ({\n    end_time,\n    expiry_time_input,\n    saved_expiry_date_v2,\n    setEndTime,\n    setExpiryTimeInput,\n    setUnsavedExpiryDateV2,\n    unsaved_expiry_date_v2,\n}: {\n    end_time: string;\n    expiry_time_input: string;\n    saved_expiry_date_v2: string;\n    setEndTime: (arg: string) => void;\n    setExpiryTimeInput: (arg: string) => void;\n    setUnsavedExpiryDateV2: (arg: string) => void;\n    unsaved_expiry_date_v2: string;\n}) => {\n    const [current_gmt_time, setCurrentGmtTime] = React.useState<string>('');\n    const [open, setOpen] = React.useState(false);\n    const [open_timepicker, setOpenTimePicker] = React.useState(false);\n    const [trigger_date, setTriggerDate] = useState(false);\n    const [is_disabled, setIsDisabled] = useState(false);\n    const [calendar_date_input, setCalendarDateInput] = useState(\n        new Date(saved_expiry_date_v2 || unsaved_expiry_date_v2)\n    );\n    const [payout_per_point, setPayoutPerPoint] = useState<number | undefined>();\n    const [barrier_value, setBarrierValue] = useState<string | undefined>();\n    const { common } = useStore();\n    const [day, setDay] = useState<number | null>(null);\n    const { server_time } = common;\n    const {\n        barrier_1,\n        contract_type,\n        duration_min_max,\n        duration_units_list,\n        duration,\n        expiry_date,\n        is_turbos,\n        market_close_times,\n        market_open_times,\n        start_date,\n        start_time,\n        symbol,\n        tick_data,\n        trade_types,\n    } = useTraderStore();\n    const trade_store = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n\n    const new_values = {\n        duration_unit: 'd',\n        duration: day || duration,\n        expiry_type: 'duration',\n        contract_type,\n        basis: 'stake',\n        amount: '5',\n        symbol,\n        ...(payout_per_point && { payout_per_point }),\n        ...(barrier_value && { barrier: barrier_value }),\n    };\n\n    const proposal_req = getProposalRequestObject({\n        new_values,\n        trade_store,\n        trade_type: Object.keys(trade_types)[0],\n    });\n\n    const { data: response } = useDtraderQuery<ProposalResponse>(\n        ['proposal', JSON.stringify(day), JSON.stringify(payout_per_point), JSON.stringify(barrier_value)],\n        {\n            ...proposal_req,\n            symbol,\n            ...(barrier_1 && !is_turbos && !barrier_value ? { barrier: Math.round(tick_data?.quote as number) } : {}),\n        },\n        {\n            enabled: trigger_date,\n        }\n    );\n\n    useEffect(() => {\n        if (response) {\n            if (response?.error?.code === 'ContractBuyValidationError') {\n                const details = response.error.details;\n\n                if (details?.field === 'payout_per_point' && details?.payout_per_point_choices) {\n                    const suggested_payout = details?.payout_per_point_choices[0];\n                    setPayoutPerPoint(suggested_payout);\n                    setTriggerDate(true);\n                    return;\n                }\n\n                if (details?.field === 'barrier' && details?.barrier_choices) {\n                    const suggested_barrier = details?.barrier_choices[0];\n                    setBarrierValue(suggested_barrier);\n                    setTriggerDate(true);\n                    return;\n                }\n            }\n\n            if (response?.error?.message && response?.error?.details?.field === 'duration') {\n                addSnackbar({\n                    message: <Localize i18n_default_text={response?.error?.message} />,\n                    status: 'fail',\n                    hasCloseButton: true,\n                    style: { marginBottom: '48px' },\n                });\n                setIsDisabled(true);\n            } else {\n                setIsDisabled(false);\n            }\n\n            if (response?.proposal?.date_expiry) {\n                setExpiryTimeInput(\n                    new Date((response?.proposal?.date_expiry as number) * 1000)\n                        .toISOString()\n                        .split('T')[1]\n                        .substring(0, 8)\n                );\n            }\n\n            invalidateDTraderCache([\n                'proposal',\n                JSON.stringify(day),\n                JSON.stringify(payout_per_point),\n                JSON.stringify(barrier_value),\n            ]);\n            setTriggerDate(false);\n        }\n    }, [response, setExpiryTimeInput, setUnsavedExpiryDateV2]);\n\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetimes = market_open_times.map(open_time => setTime(moment_expiry_date.clone(), open_time));\n    const market_close_datetimes = market_close_times.map(close_time =>\n        setTime(moment_expiry_date.clone(), close_time)\n    );\n    const server_datetime = toMoment(server_time);\n    const boundaries = getBoundaries(server_datetime.clone(), market_open_datetimes, market_close_datetimes);\n    const adjusted_start_time =\n        boundaries.start[0]?.clone().add(5, 'minutes').format('HH:mm') || getClosestTimeToCurrentGMT(5);\n\n    const formatted_date = new Date(unsaved_expiry_date_v2).toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n    });\n    const formatted_current_date = new Date().toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n        timeZone: 'GMT',\n    });\n\n    React.useEffect(() => {\n        const updateCurrentGmtTime = () => {\n            const now = new Date();\n            const gmt_time = now.toLocaleTimeString('en-GB', { timeZone: 'GMT', hour12: false });\n            setCurrentGmtTime(gmt_time);\n        };\n        updateCurrentGmtTime();\n        const interval = setInterval(updateCurrentGmtTime, 1000);\n        // Adjusts end_time to match adjusted_start_time only if end_time is less than adjusted_start_time\n        // and the difference is exactly 5 minutes, ensuring time remains valid.\n        if (\n            end_time !== '' &&\n            timeToMinutes(end_time) < timeToMinutes(adjusted_start_time) &&\n            Math.abs(timeToMinutes(adjusted_start_time) - timeToMinutes(end_time)) === 5 &&\n            !open_timepicker\n        ) {\n            setEndTime(adjusted_start_time);\n        }\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [end_time, adjusted_start_time]);\n\n    useEffect(() => {\n        if (formatted_date === formatted_current_date && !end_time) {\n            setEndTime(adjusted_start_time);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [unsaved_expiry_date_v2]);\n\n    let is_24_hours_contract = false;\n\n    const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n\n    const isSameDate =\n        // Get the year, month, and date directly from formatted_date string (dd MMM yyyy)\n        (() => {\n            const [dayStr, monthStr, yearStr] = formatted_date.split(' ');\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const year = Number(yearStr);\n            const month = months.indexOf(monthStr.slice(0, 3));\n            const date = Number(dayStr);\n\n            return year === server_time.year() && month === server_time.month() && date === server_time.date();\n        })();\n\n    is_24_hours_contract = (!!start_date || isSameDate) && has_intraday_duration_unit;\n\n    const handleDate = (date: Date) => {\n        const difference_in_time = date.getTime() - new Date().getTime();\n        const difference_in_days = Math.ceil(difference_in_time / (1000 * 3600 * 24));\n        const duration_days = difference_in_days <= 0 ? 1 : difference_in_days;\n        setDay(Number(duration_days));\n        setCalendarDateInput(date);\n        if (difference_in_days <= 0) {\n            setEndTime(adjusted_start_time);\n\n            const selected_date = new Date(date);\n\n            // Use local date parts (ignoring timezone adjustments)\n            const year = selected_date.getFullYear();\n            const month = String(selected_date.getMonth() + 1).padStart(2, '0');\n            const day = String(selected_date.getDate()).padStart(2, '0');\n\n            const output = `${year}-${month}-${day}`;\n\n            setUnsavedExpiryDateV2(output);\n        } else {\n            setEndTime('');\n            setUnsavedExpiryDateV2(\n                `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n            );\n        }\n        setTriggerDate(true);\n    };\n\n    return (\n        <div className='duration-container__days-input'>\n            <TextField\n                variant='fill'\n                readOnly\n                name='date'\n                data-testid='dt_date_input'\n                textAlignment='center'\n                value={formatted_date}\n                disabled={duration_units_list.filter(item => item.value === 'd').length === 0}\n                onClick={() => {\n                    setOpen(true);\n                }}\n                leftIcon={<LabelPairedCalendarSmRegularIcon width={24} height={24} />}\n            />\n\n            <TextField\n                variant='fill'\n                readOnly\n                textAlignment='center'\n                name='time'\n                value={`${(is_24_hours_contract ? end_time : isSameDate && expiry_time_input) || '23:59:59'} GMT`}\n                disabled={!is_24_hours_contract}\n                onClick={() => {\n                    setOpenTimePicker(true);\n                }}\n                leftIcon={<LabelPairedClockThreeSmRegularIcon width={24} height={24} />}\n            />\n\n            <div className='duration-container__days-input__expiry'>\n                <Text size='sm' color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='Expiry' />\n                </Text>\n                <Text size='sm'>{`\n                ${formatted_date} ${\n                    (formatted_date === formatted_current_date ? end_time : expiry_time_input) || '23:59:59'\n                } GMT`}</Text>\n            </div>\n            <ActionSheet.Root\n                isOpen={open || open_timepicker}\n                onClose={() => {\n                    setOpen(false);\n                    setOpenTimePicker(false);\n                    setIsDisabled(false);\n                }}\n                position='left'\n                expandable={false}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header\n                        title={\n                            open ? (\n                                <Localize i18n_default_text='Pick an end date' />\n                            ) : (\n                                <Localize i18n_default_text='Pick an end time' />\n                            )\n                        }\n                    />\n                    {open && (\n                        <DaysDatepicker\n                            start_date={\n                                new Date(\n                                    getDatePickerStartDate(\n                                        duration_units_list,\n                                        server_time,\n                                        start_time,\n                                        duration_min_max\n                                    )\n                                        ?.toISOString()\n                                        ?.split('T')?.[0]\n                                )\n                            }\n                            end_date={calendar_date_input}\n                            setEndDate={handleDate}\n                        />\n                    )}\n                    {open_timepicker && (\n                        <EndTimePicker\n                            setEndTime={setEndTime}\n                            end_time={end_time}\n                            current_gmt_time={current_gmt_time}\n                            adjusted_start_time={adjusted_start_time}\n                        />\n                    )}\n                    <ActionSheet.Footer\n                        alignment='vertical'\n                        shouldCloseOnPrimaryButtonClick={false}\n                        isPrimaryButtonDisabled={is_disabled}\n                        primaryAction={{\n                            content: <Localize i18n_default_text='Done' />,\n                            onAction: () => {\n                                if (!is_disabled) {\n                                    setOpen(false);\n                                    setOpenTimePicker(false);\n                                    const end_date = new Date(unsaved_expiry_date_v2).toLocaleDateString('en-GB', {\n                                        day: 'numeric',\n                                        month: 'short',\n                                        year: 'numeric',\n                                    });\n\n                                    if (end_date !== formatted_current_date) {\n                                        setEndTime('');\n                                    }\n                                    if (timeToMinutes(adjusted_start_time) > timeToMinutes(end_time)) {\n                                        setEndTime(adjusted_start_time);\n                                    }\n                                }\n                            },\n                        }}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </div>\n    );\n};\n\nexport default DayInput;\n","import React, { useState } from 'react';\nimport { ActionSheet } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport DurationChips from './chips';\nimport DurationWheelPicker from './duration-wheel-picker';\nimport DayInput from './day';\nimport { DURATION_UNIT } from 'AppV2/Utils/trade-params-utils';\n\nconst DurationActionSheetContainer = observer(\n    ({\n        end_time,\n        expiry_time_string,\n        saved_expiry_date_v2,\n        selected_hour,\n        setEndTime,\n        setExpiryTimeString,\n        setSavedExpiryDateV2,\n        setSelectedHour,\n        setUnit,\n        setUnsavedExpiryDateV2,\n        unit,\n        unsaved_expiry_date_v2,\n    }: {\n        selected_hour: number[];\n        setSelectedHour: (arg: number[]) => void;\n        unit: string;\n        setUnit: (arg: string) => void;\n        end_time: string;\n        setEndTime: (arg: string) => void;\n        expiry_time_string: string;\n        setExpiryTimeString: (arg: string) => void;\n        saved_expiry_date_v2: string;\n        setSavedExpiryDateV2: (arg: string) => void;\n        unsaved_expiry_date_v2: string;\n        setUnsavedExpiryDateV2: (arg: string) => void;\n    }) => {\n        const { duration, duration_units_list, onChangeMultiple } = useTraderStore();\n        const [selected_time, setSelectedTime] = useState([duration]);\n        const [expiry_time_input, setExpiryTimeInput] = React.useState(expiry_time_string);\n\n        React.useEffect(() => {\n            setUnsavedExpiryDateV2(saved_expiry_date_v2 || unsaved_expiry_date_v2);\n        }, []);\n\n        const onAction = () => {\n            setExpiryTimeString(expiry_time_input);\n            setSavedExpiryDateV2(unsaved_expiry_date_v2);\n            if (unit === DURATION_UNIT.HOURS) {\n                const minutes = selected_hour[0] * 60 + selected_hour[1];\n                const hour = Math.floor(duration / 60);\n                const min = duration % 60;\n                setSelectedHour([hour, min]);\n                setEndTime('');\n                onChangeMultiple({\n                    duration_unit: DURATION_UNIT.MINUTES,\n                    duration: Number(minutes),\n                    expiry_time: null,\n                    expiry_type: 'duration',\n                });\n            } else if (unit === DURATION_UNIT.DAYS) {\n                const difference_in_time = new Date(unsaved_expiry_date_v2).getTime() - new Date().getTime();\n                const difference_in_days = Math.ceil(difference_in_time / (1000 * 3600 * 24));\n                setSelectedHour([]);\n                if (end_time) {\n                    onChangeMultiple({\n                        expiry_time: end_time,\n                        expiry_type: 'endtime',\n                    });\n                } else {\n                    setEndTime('');\n                    onChangeMultiple({\n                        duration_unit: DURATION_UNIT.DAYS,\n                        duration: Number(difference_in_days),\n                        expiry_time: null,\n                        expiry_type: 'duration',\n                    });\n                }\n            } else {\n                setEndTime('');\n                setSelectedHour([]);\n                onChangeMultiple({\n                    duration_unit: unit,\n                    duration: Number(selected_time),\n                    expiry_time: null,\n                    expiry_type: 'duration',\n                });\n            }\n        };\n\n        const onChangeUnit = React.useCallback(\n            (value: string) => {\n                setUnit(value);\n                setSelectedTime([]);\n                if (value !== DURATION_UNIT.HOURS) {\n                    setSelectedHour([]);\n                }\n            },\n            [setUnit, setSelectedHour]\n        );\n\n        const setWheelPickerValue = (index: number, value: string | number) => {\n            const num_value = Number(value);\n            if (unit === DURATION_UNIT.HOURS) {\n                const arr = selected_hour;\n                arr[index] = num_value;\n                setSelectedHour(arr);\n            } else {\n                setSelectedTime([num_value]);\n            }\n        };\n\n        return (\n            <div className='duration-container'>\n                <ActionSheet.Header title={<Localize i18n_default_text='Duration' />} />\n                <DurationChips duration_units_list={duration_units_list} onChangeUnit={onChangeUnit} unit={unit} />\n                {unit !== DURATION_UNIT.DAYS && (\n                    <DurationWheelPicker\n                        unit={unit}\n                        setWheelPickerValue={setWheelPickerValue}\n                        selected_hour={selected_hour}\n                        selected_time={selected_time}\n                    />\n                )}\n\n                {unit === DURATION_UNIT.DAYS && (\n                    <DayInput\n                        end_time={end_time}\n                        expiry_time_input={expiry_time_input}\n                        saved_expiry_date_v2={saved_expiry_date_v2}\n                        setEndTime={setEndTime}\n                        setExpiryTimeInput={setExpiryTimeInput}\n                        setUnsavedExpiryDateV2={setUnsavedExpiryDateV2}\n                        unsaved_expiry_date_v2={unsaved_expiry_date_v2 || saved_expiry_date_v2}\n                    />\n                )}\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction,\n                    }}\n                />\n            </div>\n        );\n    }\n);\n\nexport default DurationActionSheetContainer;\n","import React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField, useSnackbar } from '@deriv-com/quill-ui';\nimport { getTomorrowDate, getUnitMap } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport DurationActionSheetContainer from './container';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { getDatePickerStartDate, getSmallestDuration } from 'AppV2/Utils/trade-params-utils';\nimport { useStore } from '@deriv/stores';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Duration = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        contract_type,\n        symbol,\n        duration_min_max,\n        duration_unit,\n        duration_units_list,\n        duration,\n        expiry_epoch,\n        expiry_time,\n        expiry_type,\n        is_market_closed,\n        onChangeMultiple,\n        proposal_info,\n        saved_expiry_date_v2,\n        setSavedExpiryDateV2,\n        setUnsavedExpiryDateV2,\n        start_time,\n        trade_type_tab,\n        trade_types,\n        unsaved_expiry_date_v2,\n        validation_errors,\n    } = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n    const { name_plural, name, name_singular } = getUnitMap()[duration_unit] ?? {};\n    const duration_unit_text = (duration === 1 ? name_singular : name_plural) ?? name;\n    const [selected_hour, setSelectedHour] = useState<number[]>([]);\n    const [is_open, setOpen] = useState(false);\n    const [expiry_time_string, setExpiryTimeString] = useState('');\n    const [expiry_date_string, setExpiryDateString] = useState('');\n    const [end_date, setEndDate] = useState<Date>(new Date());\n    const [end_time, setEndTime] = useState<string>('');\n    const [unit, setUnit] = useState(expiry_time ? 'd' : duration_unit);\n    const contract_type_object = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const has_error =\n        (proposal_info[contract_type_object[0]]?.has_error &&\n            proposal_info[contract_type_object[0]]?.error_field === 'duration') ||\n        (validation_errors?.duration?.length ?? 0) > 0;\n    const isInitialMount = useRef(true);\n    const { common, client } = useStore();\n    const { is_logged_in } = client;\n    const { server_time } = common;\n\n    useEffect(() => {\n        if (expiry_epoch && duration_unit !== 'd' && !saved_expiry_date_v2) {\n            // Set expiry time to end of day\n            setExpiryTimeString('23:59:59');\n\n            // Get tomorrow's date\n            const tomorrow_date = getTomorrowDate(server_time);\n            setExpiryDateString(tomorrow_date);\n            setSavedExpiryDateV2(tomorrow_date);\n        }\n        if (expiry_epoch && duration_unit === 'd' && !expiry_time_string) {\n            setExpiryTimeString(\n                new Date((expiry_epoch as number) * 1000).toISOString().split('T')[1].substring(0, 8) || ''\n            );\n\n            const new_date_string = new Date((expiry_epoch as number) * 1000).toISOString().split('T')[0];\n            setExpiryDateString(new Date((expiry_epoch as number) * 1000).toISOString().split('T')[0]);\n            setSavedExpiryDateV2(new_date_string);\n        }\n    }, [expiry_epoch]);\n\n    useEffect(() => {\n        if (duration_unit == 'd') {\n            const newDate = new Date();\n            newDate.setDate(newDate.getDate() + duration);\n            setEndDate(newDate);\n        }\n    }, [duration_unit]);\n\n    useEffect(() => {\n        if (isInitialMount.current) {\n            const timer = setTimeout(() => {\n                isInitialMount.current = false;\n            }, 500);\n            return () => clearTimeout(timer);\n        }\n\n        if (duration_unit === 'd') {\n            setEndDate(new Date());\n        }\n        const start_date = getDatePickerStartDate(duration_units_list, server_time, start_time, duration_min_max);\n        setEndDate(new Date(start_date));\n    }, [symbol, duration_min_max, duration_units_list, duration, duration_unit]);\n\n    useEffect(() => {\n        if (duration_unit === 'd') {\n            const result = getSmallestDuration(duration_min_max, duration_units_list);\n            if (result?.unit == 'd') {\n                setEndDate(new Date());\n            }\n\n            const start_duration = setTimeout(() => {\n                onChangeMultiple({\n                    duration_unit: result?.unit,\n                    duration: result?.value,\n                    expiry_time: null,\n                    expiry_type: 'duration',\n                });\n            }, 10);\n\n            const start_date = getDatePickerStartDate(duration_units_list, server_time, start_time, duration_min_max);\n            setEndDate(new Date(start_date));\n\n            return () => clearTimeout(start_duration);\n        }\n    }, [duration_units_list, duration_min_max, symbol, contract_type]);\n\n    const onClose = React.useCallback(() => setOpen(false), []);\n\n    const getInputValues = () => {\n        const formatted_date = saved_expiry_date_v2\n            ? new Date(saved_expiry_date_v2).toLocaleDateString('en-GB', {\n                  day: 'numeric',\n                  month: 'short',\n                  year: 'numeric',\n              })\n            : '';\n        if (expiry_type == 'duration') {\n            if (duration_unit === 'm' && duration > 59) {\n                const hours = Math.floor(duration / 60);\n                const minutes = duration % 60;\n                return `${hours} ${hours > 1 ? localize('hours') : localize('hour')} ${minutes ? `${minutes} ${minutes > 1 ? localize('minutes') : localize('minute')}` : ''} `;\n            } else if (duration_unit === 'd') {\n                if (!formatted_date) {\n                    return '';\n                }\n                return `${localize('Ends on')} ${formatted_date}, ${expiry_time_string || '23:59:59'} GMT`;\n            }\n            return `${duration} ${duration_unit_text}`;\n        }\n        if (expiry_time) {\n            return `${localize('Ends on')} ${formatted_date} ${expiry_time} GMT`;\n        }\n    };\n\n    useEffect(() => {\n        if (has_error && !is_minimized) {\n            const error_obj = proposal_info[contract_type_object[0]] || validation_errors?.duration?.[0];\n            if (error_obj?.error_field === 'duration') {\n                addSnackbar({\n                    message: error_obj.message,\n                    status: 'fail',\n                    hasCloseButton: true,\n                    hasFixedHeight: false,\n                    style: {\n                        marginBottom: is_logged_in ? '48px' : '-8px',\n                        width: 'calc(100% - var(--core-spacing-800)',\n                    },\n                });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [has_error, contract_type_object[0]]);\n\n    const handleHour = React.useCallback(() => {\n        if (expiry_time) {\n            setUnit('d');\n            setEndTime(expiry_time);\n        } else {\n            // eslint-disable-next-line no-lonely-if\n            if (duration_unit === 'm' && duration > 59) {\n                const hour = Math.floor(duration / 60);\n                const minutes = duration % 60;\n                setUnit('h');\n                setSelectedHour([hour, minutes]);\n            } else {\n                setSelectedHour([]);\n                setUnit(duration_unit);\n            }\n        }\n    }, [duration, duration_unit, expiry_time]);\n\n    useEffect(() => {\n        if (is_open) {\n            handleHour();\n        }\n    }, [is_open]);\n\n    return (\n        <>\n            <TextField\n                variant='fill'\n                key={`${duration}-$${duration_unit}`}\n                readOnly\n                label={<Localize i18n_default_text='Duration' key={`duration${is_minimized ? '-minimized' : ''}`} />}\n                value={getInputValues()}\n                noStatusIcon\n                disabled={is_market_closed}\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                onClick={() => setOpen(true)}\n                status={has_error ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <DurationActionSheetContainer\n                        selected_hour={selected_hour}\n                        setSelectedHour={setSelectedHour}\n                        unit={unit}\n                        setUnit={setUnit}\n                        expiry_time_string={expiry_time_string}\n                        setExpiryTimeString={setExpiryTimeString}\n                        end_time={end_time}\n                        setEndTime={setEndTime}\n                        saved_expiry_date_v2={saved_expiry_date_v2}\n                        setSavedExpiryDateV2={setSavedExpiryDateV2}\n                        unsaved_expiry_date_v2={unsaved_expiry_date_v2}\n                        setUnsavedExpiryDateV2={setUnsavedExpiryDateV2}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </>\n    );\n});\n\nexport default Duration;\n","import Duration from './duration';\nimport './duration.scss';\n\nexport default Duration;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\n\ntype TTradeParamDefinitionProps = {\n    classname?: string;\n    description?: React.ReactNode;\n    is_custom_description?: boolean;\n};\n\nconst TradeParamDefinition = ({ classname, description, is_custom_description }: TTradeParamDefinitionProps) => {\n    if (!description) return null;\n    return (\n        <ActionSheet.Content className={clsx('trade-param-definition', classname)}>\n            {is_custom_description ? description : <Text>{description}</Text>}\n        </ActionSheet.Content>\n    );\n};\n\nexport default TradeParamDefinition;\n","import './trade-param-definition.scss';\nimport TradeParamDefinition from './trade-param-definition';\n\nexport default TradeParamDefinition;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { ActionSheet, Text, WheelPicker } from '@deriv-com/quill-ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { getGrowthRatePercentage } from '@deriv/shared';\nimport { Skeleton } from '@deriv/components';\nimport type { TV2ParamsInitialValues } from 'Stores/Modules/Trading/trade-store';\n\ntype TGrowthRatePickerProps = {\n    accumulator_range_list?: number[];\n    growth_rate: number;\n    maximum_ticks: number;\n    setGrowthRate: (growth_rate: number) => void;\n    setV2ParamsInitialValues: ({ value, name }: { value: number | string; name: keyof TV2ParamsInitialValues }) => void;\n    should_show_details?: boolean;\n    tick_size_barrier_percentage: string;\n};\n\nconst debouncedSetGrowthRate = debounce((setGrowthRate, growth_rate) => {\n    setGrowthRate(growth_rate);\n}, 200);\n\nconst GrowthRatePicker = ({\n    accumulator_range_list = [],\n    growth_rate,\n    maximum_ticks,\n    setGrowthRate,\n    setV2ParamsInitialValues,\n    should_show_details,\n    tick_size_barrier_percentage,\n}: TGrowthRatePickerProps) => {\n    const initial_growth_rate = React.useRef<number>();\n    const selected_growth_rate = React.useRef<number>(growth_rate);\n    const data = accumulator_range_list.map(rate => ({ value: `${getGrowthRatePercentage(rate)}%` }));\n    const details_content = [\n        {\n            label: <Localize i18n_default_text='Barrier' />,\n            value: `±${tick_size_barrier_percentage}`,\n        },\n        {\n            label: <Localize i18n_default_text='Max duration' />,\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n        },\n    ];\n\n    React.useEffect(() => {\n        if (!initial_growth_rate.current && growth_rate) {\n            initial_growth_rate.current = growth_rate;\n            setV2ParamsInitialValues({ value: growth_rate, name: 'growth_rate' });\n        }\n        return () => {\n            if (initial_growth_rate.current && initial_growth_rate.current !== selected_growth_rate.current) {\n                setGrowthRate(initial_growth_rate.current);\n            }\n            debouncedSetGrowthRate.cancel();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleSave = () => {\n        initial_growth_rate.current = selected_growth_rate.current;\n        setV2ParamsInitialValues({ value: selected_growth_rate.current, name: 'growth_rate' });\n    };\n\n    const handlePickerValuesChange = (value: string | number) => {\n        const new_value = Number((value as string).slice(0, -1)) / 100;\n        if (new_value === selected_growth_rate.current) return;\n        debouncedSetGrowthRate(setGrowthRate, new_value);\n        selected_growth_rate.current = new_value;\n    };\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='growth-rate__picker'>\n                <div className='growth-rate__wheel-picker'>\n                    {accumulator_range_list.length ? (\n                        <WheelPicker\n                            data={data}\n                            selectedValue={`${getGrowthRatePercentage(selected_growth_rate.current)}%`}\n                            setSelectedValue={handlePickerValuesChange}\n                        />\n                    ) : (\n                        <Skeleton />\n                    )}\n                </div>\n                <div className='growth-rate__details'>\n                    {details_content.map(({ label, value }) => (\n                        <span key={value} className='growth-rate__details-item'>\n                            <Text color='quill-typography__color--subtle' size='sm'>\n                                {label}\n                            </Text>\n                            <div className='growth-rate__details-item-value'>\n                                {should_show_details ? (\n                                    <Text size='sm'>{value}</Text>\n                                ) : (\n                                    <Skeleton height={14} width={75} />\n                                )}\n                            </div>\n                        </span>\n                    ))}\n                </div>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: handleSave,\n                }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default GrowthRatePicker;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { CONTRACT_TYPES, getGrowthRatePercentage, isEmptyObject } from '@deriv/shared';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport GrowthRatePicker from './growth-rate-picker';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst GrowthRate = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        accumulator_range_list,\n        growth_rate,\n        is_purchase_enabled,\n        is_trade_enabled,\n        is_market_closed,\n        has_open_accu_contract,\n        maximum_ticks,\n        onChange,\n        proposal_info,\n        setV2ParamsInitialValues,\n        tick_size_barrier_percentage,\n        v2_params_initial_values,\n    } = useTraderStore();\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const is_small_screen = isSmallScreen();\n    const info = proposal_info?.[CONTRACT_TYPES.ACCUMULATOR] || {};\n    const is_proposal_data_available =\n        is_trade_enabled && !isEmptyObject(proposal_info) && !!info.id && is_purchase_enabled;\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    const handleGrowthRateChange = (rate: number) => {\n        onChange({ target: { name: 'growth_rate', value: rate } });\n    };\n    const onActionSheetClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <GrowthRatePicker\n                    accumulator_range_list={accumulator_range_list}\n                    maximum_ticks={maximum_ticks}\n                    growth_rate={growth_rate}\n                    setGrowthRate={handleGrowthRateChange}\n                    setV2ParamsInitialValues={setV2ParamsInitialValues}\n                    should_show_details={is_proposal_data_available}\n                    tick_size_barrier_percentage={tick_size_barrier_percentage}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize\n                            i18n_default_text='Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier_percentage}} from the previous spot price.'\n                            values={{\n                                growth_rate: getGrowthRatePercentage(growth_rate),\n                                tick_size_barrier_percentage,\n                            }}\n                        />\n                    }\n                />\n            ),\n        },\n    ];\n\n    React.useEffect(() => {\n        const initial_growth_rate = v2_params_initial_values?.growth_rate;\n        if (initial_growth_rate && growth_rate !== initial_growth_rate) handleGrowthRateChange(initial_growth_rate);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!growth_rate)\n        return (\n            <div className={classname}>\n                <Skeleton />\n            </div>\n        );\n    return (\n        <>\n            <TextField\n                className={classname}\n                disabled={has_open_accu_contract || is_market_closed}\n                label={\n                    <Localize i18n_default_text='Growth rate' key={`growth-rate${is_minimized ? '-minimized' : ''}`} />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                value={`${getGrowthRatePercentage(growth_rate)}%`}\n                variant='fill'\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onActionSheetClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx('growth-rate__carousel', is_small_screen && 'growth-rate__carousel--small')}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Growth rate' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </>\n    );\n});\n\nexport default GrowthRate;\n","import './growth-rate.scss';\nimport GrowthRate from './growth-rate';\n\nexport default GrowthRate;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText, Text, Skeleton } from '@deriv-com/quill-ui';\n\ntype TDigitsProps = {\n    is_active?: boolean;\n    is_disabled?: boolean;\n    is_max?: boolean;\n    is_min?: boolean;\n    digit: number;\n    digit_stats: number[];\n    onClick?: (digit: number) => void;\n};\n\nconst Digit = ({ digit, digit_stats = [], is_active, is_disabled, is_max, is_min, onClick }: TDigitsProps) => {\n    const stats = digit_stats.length ? digit_stats[digit] : null;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage.toFixed(1)) : null;\n\n    if (!digit && isNaN(digit)) return null;\n    return (\n        <div key={digit} className='digit'>\n            <button\n                className={clsx(is_active && 'active')}\n                disabled={is_disabled}\n                onClick={() => onClick?.(digit)}\n                name='last_digit'\n            >\n                <Text size='xl' color={is_disabled ? 'quill-typography__color--disabled' : ''}>\n                    {digit}\n                </Text>\n            </button>\n            {display_percentage ? (\n                <CaptionText\n                    size='sm'\n                    className={clsx('percentage', is_max && 'percentage--max', is_min && 'percentage--min')}\n                    data-testid='dt_digit_stats_percentage'\n                >\n                    {display_percentage}%\n                </CaptionText>\n            ) : (\n                <Skeleton.Square width={36} height={12} rounded />\n            )}\n        </div>\n    );\n};\n\nexport default Digit;\n","import React from 'react';\nimport Digit from './digit';\n\ntype TLastDigitSelectorProps = {\n    digits: number[];\n    digit_stats: number[];\n    is_disabled?: boolean;\n    onDigitSelect?: (digit: number) => void;\n    selected_digit?: number;\n};\n\nconst LastDigitSelector = ({\n    digits = [],\n    digit_stats,\n    is_disabled,\n    onDigitSelect,\n    selected_digit,\n}: TLastDigitSelectorProps) => (\n    <div className='last-digit-prediction__selector'>\n        {[...Array(2).keys()].map(row_key => (\n            <div key={row_key} className='last-digit-prediction__selector-row'>\n                {digits.slice(row_key * 5, (row_key + 1) * 5).map(digit => (\n                    <Digit\n                        key={digit}\n                        digit={digit}\n                        digit_stats={digit_stats}\n                        is_active={selected_digit === digit}\n                        is_disabled={is_disabled}\n                        is_max={digit_stats[digit] === Math.max(...digit_stats)}\n                        is_min={digit_stats[digit] === Math.min(...digit_stats)}\n                        onClick={onDigitSelect}\n                    />\n                ))}\n            </div>\n        ))}\n    </div>\n);\n\nexport default LastDigitSelector;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport clsx from 'clsx';\nimport { ActionSheet, CaptionText, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport LastDigitSelector from './last-digit-selector';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst displayed_digits = [...Array(10).keys()]; // digits array [0 - 9]\n\nconst LastDigitPrediction = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { digit_stats = [], is_market_closed, last_digit, onChange } = useTraderStore();\n    const [is_open, setIsOpen] = React.useState(false);\n    const [selected_digit, setSelectedDigit] = React.useState(last_digit);\n\n    React.useEffect(() => {\n        setSelectedDigit(last_digit);\n    }, [last_digit]);\n\n    const handleLastDigitChange = (digit: number) => {\n        onChange({ target: { name: 'last_digit', value: digit } });\n    };\n    const onSaveButtonClick = () => {\n        if (last_digit !== selected_digit) handleLastDigitChange(selected_digit);\n    };\n    const onActionSheetClose = React.useCallback(() => {\n        setIsOpen(false);\n        setSelectedDigit(last_digit);\n    }, [last_digit]);\n\n    if (is_minimized)\n        return (\n            <>\n                <TextField\n                    className={clsx('trade-params__option', 'trade-params__option--minimized')}\n                    disabled={is_market_closed}\n                    variant='fill'\n                    readOnly\n                    label={\n                        <Localize\n                            i18n_default_text='Last digit prediction'\n                            key={`last-digit-prediction${is_minimized ? '-minimized' : ''}`}\n                        />\n                    }\n                    value={last_digit}\n                    onClick={() => setIsOpen(true)}\n                />\n                <ActionSheet.Root\n                    isOpen={is_open}\n                    onClose={onActionSheetClose}\n                    position='left'\n                    expandable={false}\n                    shouldBlurOnClose={is_open}\n                >\n                    <ActionSheet.Portal shouldCloseOnDrag>\n                        <ActionSheet.Header title={<Localize i18n_default_text='Last digit prediction' />} />\n                        <ActionSheet.Content>\n                            <LastDigitSelector\n                                digits={displayed_digits}\n                                digit_stats={digit_stats}\n                                onDigitSelect={setSelectedDigit}\n                                selected_digit={selected_digit}\n                            />\n                        </ActionSheet.Content>\n                        <ActionSheet.Footer\n                            alignment='vertical'\n                            primaryAction={{\n                                content: <Localize i18n_default_text='Save' />,\n                                onAction: onSaveButtonClick,\n                            }}\n                        />\n                    </ActionSheet.Portal>\n                </ActionSheet.Root>\n            </>\n        );\n\n    return (\n        <div className={clsx('last-digit-prediction', is_market_closed && 'last-digit-prediction--disabled')}>\n            <CaptionText size='sm' className='last-digit-prediction__title'>\n                <Localize i18n_default_text='Last digit prediction' />\n            </CaptionText>\n            <LastDigitSelector\n                digits={displayed_digits}\n                digit_stats={digit_stats}\n                onDigitSelect={handleLastDigitChange}\n                selected_digit={last_digit}\n                is_disabled={is_market_closed}\n            />\n        </div>\n    );\n});\n\nexport default LastDigitPrediction;\n","import LastDigitPrediction from './last-digit-prediction';\nimport './last-digit-prediction.scss';\n\nexport default LastDigitPrediction;\n","import React, { useEffect } from 'react';\nimport { ActionSheet, Text, WheelPicker, Skeleton } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport debounce from 'lodash.debounce';\nimport { formatMoney } from '@deriv/shared';\n\ntype TMultiplierWheelPickerProps = {\n    multiplier: ReturnType<typeof useTraderStore>['multiplier'];\n    multiplier_range_list: ReturnType<typeof useTraderStore>['multiplier_range_list'];\n    currency: ReturnType<typeof useTraderStore>['currency'];\n    commission: ReturnType<typeof useTraderStore>['commission'];\n    setMultiplier: (multiplier: number) => void;\n};\n\nconst debouncedSetMultiplier = debounce((setMultiplier, multiplier) => {\n    setMultiplier(multiplier);\n}, 200);\n\nconst MultiplierWheelPicker = ({\n    multiplier,\n    multiplier_range_list = [],\n    currency,\n    commission,\n    setMultiplier,\n}: TMultiplierWheelPickerProps) => {\n    const multiplier_array = multiplier_range_list.map(item => ({ value: item.text }));\n    const initial_multiplier = React.useRef<number>(multiplier);\n    const selected_multiplier = React.useRef<number>(multiplier);\n\n    useEffect(() => {\n        return () => {\n            if (initial_multiplier.current && initial_multiplier.current !== selected_multiplier.current) {\n                setMultiplier(initial_multiplier.current);\n            }\n            debouncedSetMultiplier.cancel();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handlePickerValuesChange = (value: string | number) => {\n        const new_value = Number((value as string).slice(1));\n        if (new_value === selected_multiplier.current) return;\n        debouncedSetMultiplier(setMultiplier, new_value);\n        selected_multiplier.current = Number(new_value);\n    };\n\n    const handleSave = () => {\n        initial_multiplier.current = selected_multiplier.current;\n    };\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='multiplier__picker'>\n                <div className='multiplier__wheel-picker'>\n                    {multiplier_array.length ? (\n                        <WheelPicker\n                            data={multiplier_array}\n                            selectedValue={`x${selected_multiplier.current}`}\n                            setSelectedValue={handlePickerValuesChange}\n                        />\n                    ) : (\n                        <Skeleton.Square />\n                    )}\n                </div>\n                <div className='multiplier__commission'>\n                    <Text color='quill-typography__color--subtle' size='sm'>\n                        <Localize i18n_default_text='Commission' />\n                    </Text>\n                    <Text size='sm' as='div' className='multiplier__commission-value'>\n                        {commission ? (\n                            <React.Fragment>\n                                {formatMoney(currency, commission, true)} {currency}\n                            </React.Fragment>\n                        ) : (\n                            <Skeleton.Square width={60} height={14} />\n                        )}\n                    </Text>\n                </div>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                isPrimaryButtonDisabled={false}\n                shouldCloseOnPrimaryButtonClick\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: handleSave,\n                }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default MultiplierWheelPicker;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, Skeleton, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport MultiplierWheelPicker from './multiplier-wheel-picker';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Multiplier = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { multiplier, multiplier_range_list, commission, is_market_closed, onChange, currency } = useTraderStore();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const is_small_screen_device = isSmallScreen();\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    const handleMultiplierChange = (multiplier: number) => {\n        onChange({ target: { name: 'multiplier', value: multiplier } });\n    };\n\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <MultiplierWheelPicker\n                    multiplier={multiplier}\n                    multiplier_range_list={multiplier_range_list}\n                    currency={currency}\n                    commission={commission}\n                    setMultiplier={handleMultiplierChange}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize i18n_default_text='Multipliers amplify your potential profit if the market moves in your favour, with losses limited to your initial capital.' />\n                    }\n                />\n            ),\n        },\n    ];\n\n    if (!multiplier)\n        return (\n            <div className={classname}>\n                <Skeleton.Square />\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={classname}\n                disabled={is_market_closed}\n                variant='fill'\n                readOnly\n                label={\n                    <Localize i18n_default_text='Multiplier' key={`multiplier${is_minimized ? '-minimized' : ''}`} />\n                }\n                value={`x${multiplier}`}\n                onClick={() => setIsOpen(true)}\n            />\n            <ActionSheet.Root\n                expandable={false}\n                isOpen={isOpen}\n                position='left'\n                onClose={onClose}\n                shouldBlurOnClose={isOpen}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx(\n                            'multiplier__carousel',\n                            is_small_screen_device && 'multiplier__carousel--small'\n                        )}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Multiplier' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default Multiplier;\n","import Multiplier from './multiplier';\nimport './multiplier.scss';\n\nexport default Multiplier;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { Localize } from '@deriv/translations';\nimport { Money, Skeleton } from '@deriv/components';\nimport { Text } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { CONTRACT_TYPES } from '@deriv/shared';\n\ntype TMultipliersDealCancellationInfoProps = {\n    is_minimized?: boolean;\n};\n\nconst MultipliersDealCancellationInfo = observer(({ is_minimized }: TMultipliersDealCancellationInfoProps) => {\n    const { currency, is_market_closed, proposal_info } = useTraderStore();\n\n    const up_deal_cancellation_fee = proposal_info?.[CONTRACT_TYPES.MULTIPLIER.UP]?.cancellation?.ask_price;\n    const down_deal_cancellation_fee = proposal_info?.[CONTRACT_TYPES.MULTIPLIER.DOWN]?.cancellation?.ask_price;\n\n    const has_error =\n        proposal_info?.[CONTRACT_TYPES.MULTIPLIER.UP]?.has_error ||\n        proposal_info?.[CONTRACT_TYPES.MULTIPLIER.DOWN]?.has_error;\n\n    if (has_error) return null;\n\n    const renderFeeValue = (fee_value?: number) => {\n        return fee_value ? (\n            <Money amount={fee_value} show_currency currency={currency} />\n        ) : (\n            <Skeleton width={65} height={18} />\n        );\n    };\n\n    if (is_minimized) {\n        return (\n            <div className='multipliers-info__container multipliers-info__container--horizontal'>\n                <div className='multipliers-info__fee-row'>\n                    <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                        <Localize i18n_default_text='DC Fee' />\n                    </Text>\n                    <Text size='sm' bold as='div' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                        {renderFeeValue(up_deal_cancellation_fee)}\n                    </Text>\n                </div>\n                <div className='multipliers-info__fee-row'>\n                    <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                        <Localize i18n_default_text='DC Fee' />\n                    </Text>\n                    <Text size='sm' bold as='div' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                        {renderFeeValue(down_deal_cancellation_fee)}\n                    </Text>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className='multipliers-info__container multipliers-info__container--stacked'>\n            <div className='multipliers-info__row'>\n                <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    <Localize i18n_default_text='DC fee (Up)' />\n                </Text>\n                <Text size='sm' bold as='div' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    {renderFeeValue(up_deal_cancellation_fee)}\n                </Text>\n            </div>\n            <div className='multipliers-info__row'>\n                <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    <Localize i18n_default_text='DC fee (Down)' />\n                </Text>\n                <Text size='sm' bold as='div' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    {renderFeeValue(down_deal_cancellation_fee)}\n                </Text>\n            </div>\n        </div>\n    );\n});\n\nexport default MultipliersDealCancellationInfo;\n","import MultipliersDealCancellationInfo from './multipliers-deal-cancellation-info';\nimport './multipliers-deal-cancellation-info.scss';\n\nexport default MultipliersDealCancellationInfo;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { formatDuration, getDateFromNow, getDiffDuration } from '@deriv/shared';\n\nconst MultipliersExpirationInfo = observer(() => {\n    const { expiration, is_market_closed } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(\n        getDiffDuration(Number(start_time?.unix()), Number(expiration)),\n        'HH:mm'\n    );\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    return (\n        <div className='multipliers-expiration-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Expires on' />\n            </Text>\n            <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='{{date}} at {{timestamp}}' values={{ date, timestamp }} />\n            </Text>\n        </div>\n    );\n});\n\nexport default MultipliersExpirationInfo;\n","import MultipliersExpirationInfo from './multipliers-expiration-info';\nimport './multipliers-expiration-info.scss';\n\nexport default MultipliersExpirationInfo;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Money, Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst PayoutInfo = observer(() => {\n    const { currency, is_market_closed, proposal_info, trade_type_tab } = useTraderStore();\n    const { value: payout } = proposal_info[trade_type_tab]?.obj_contract_basis || {};\n    const has_error = proposal_info[trade_type_tab]?.has_error;\n\n    return (\n        <div className='payout-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Payout' />\n            </Text>\n            {payout ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    <Money amount={payout} show_currency currency={currency} />\n                </Text>\n            ) : has_error ? (\n                <Text size='sm' bold>\n                    - {currency}\n                </Text>\n            ) : (\n                <Skeleton width={60} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default PayoutInfo;\n","import PayoutInfo from './payout-info';\nimport './payout-info.scss';\n\nexport default PayoutInfo;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ActionSheet, Text, WheelPicker } from '@deriv-com/quill-ui';\nimport { Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getProposalRequestObject } from 'AppV2/Utils/trade-params-utils';\nimport { useDtraderQuery } from 'AppV2/Hooks/useDtraderQuery';\nimport { TTradeStore } from 'Types';\n\ntype TPayoutPerPointWheelProps = {\n    barrier?: string | number;\n    is_open?: boolean;\n    current_payout_per_point: string;\n    onPayoutPerPointSelect: (new_value: string | number) => void;\n    onClose: () => void;\n    payout_per_point_list: {\n        value: string;\n    }[];\n};\ntype TOnProposalResponse = TTradeStore['onProposalResponse'];\n\nconst PayoutPerPointWheel = observer(\n    ({\n        barrier,\n        current_payout_per_point,\n        is_open,\n        onPayoutPerPointSelect,\n        onClose,\n        payout_per_point_list,\n    }: TPayoutPerPointWheelProps) => {\n        const trade_store = useTraderStore();\n        const { trade_types } = trade_store;\n\n        const [value, setValue] = React.useState<string | number>(current_payout_per_point);\n        const [displayed_barrier_value, setDisplayedBarrierValue] = React.useState(barrier);\n\n        // For handling cases when user clicks on Save btn before we got response from API\n        const is_api_response_received_ref = React.useRef(false);\n\n        const new_values = { payout_per_point: String(value) };\n        const proposal_req = getProposalRequestObject({\n            new_values,\n            trade_store,\n            trade_type: Object.keys(trade_types)[0],\n        });\n        // Sending proposal without subscription to get a new barrier value\n        const { data: response } = useDtraderQuery<Parameters<TOnProposalResponse>[0]>(\n            [\n                'proposal',\n                ...Object.entries(new_values).flat().join('-'),\n                `${barrier}`,\n                Object.keys(trade_types)[0],\n                JSON.stringify(proposal_req),\n            ],\n            proposal_req,\n            {\n                enabled: is_open,\n            }\n        );\n\n        const onChange = (new_value: string | number) => {\n            // If a new value is equal to previous one, then we won't send API request\n            const is_equal = value === new_value;\n            is_api_response_received_ref.current = is_equal;\n            if (is_equal) return;\n\n            setValue(new_value);\n        };\n\n        const onSave = () => {\n            // Prevent from saving if user clicks before BE validation\n            if (!is_api_response_received_ref.current) return;\n            onPayoutPerPointSelect(value);\n            onClose();\n        };\n\n        React.useEffect(() => {\n            const onProposalResponse: TOnProposalResponse = response => {\n                const { error, proposal } = response;\n                const { barrier_spot_distance } = proposal ?? {};\n                // Currently we are not handling errors\n                if (barrier_spot_distance && !error) setDisplayedBarrierValue(barrier_spot_distance);\n\n                is_api_response_received_ref.current = true;\n            };\n\n            if (response) onProposalResponse(response);\n        }, [response]);\n\n        return (\n            <React.Fragment>\n                <ActionSheet.Content className='payout-per-point__wrapper' data-testid='dt_payout-per-point_wrapper'>\n                    <div className='payout-per-point__wheel-picker'>\n                        <WheelPicker data={payout_per_point_list} selectedValue={value} setSelectedValue={onChange} />\n                    </div>\n                    <div className='payout-per-point__barrier'>\n                        <Text color='quill-typography__color--subtle' size='sm'>\n                            <Localize i18n_default_text='Barrier' />\n                        </Text>\n                        <Text size='sm' as='div' className='payout-per-point__barrier__content'>\n                            {displayed_barrier_value ?? <Skeleton width={90} height={14} />}\n                        </Text>\n                    </div>\n                </ActionSheet.Content>\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction: onSave,\n                    }}\n                    shouldCloseOnPrimaryButtonClick={false}\n                />\n            </React.Fragment>\n        );\n    }\n);\n\nexport default PayoutPerPointWheel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport { Skeleton } from '@deriv/components';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport PayoutPerPointWheel from './payout-per-point-wheel';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst PayoutPerPoint = observer(({ is_minimized }: TTradeParametersProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const { barrier_1, currency, is_market_closed, payout_choices, payout_per_point, setPayoutPerPoint } =\n        useTraderStore();\n    const is_small_screen = isSmallScreen();\n    const currency_display_code = getCurrencyDisplayCode(currency);\n    const payout_per_point_list = [...payout_choices]\n        .sort((a, b) => Number(a) - Number(b))\n        .map((payout_per_point: string) => ({\n            value: payout_per_point,\n            label: `${payout_per_point} ${currency_display_code}`,\n        }));\n\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <PayoutPerPointWheel\n                    barrier={barrier_1}\n                    current_payout_per_point={payout_per_point}\n                    is_open={is_open}\n                    onPayoutPerPointSelect={\n                        setPayoutPerPoint as React.ComponentProps<typeof PayoutPerPointWheel>['onPayoutPerPointSelect']\n                    }\n                    onClose={onClose}\n                    payout_per_point_list={payout_per_point_list}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize i18n_default_text='The amount you choose to receive at expiry for every point of change between the final price and the barrier.' />\n                    }\n                />\n            ),\n        },\n    ];\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    if (!payout_per_point)\n        return (\n            <div className={classname}>\n                <Skeleton />\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            <TextField\n                disabled={is_market_closed}\n                className={classname}\n                label={\n                    <Localize\n                        i18n_default_text='Payout per point'\n                        key={`payout-per-point${is_minimized ? '-minimized' : ''}`}\n                    />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                variant='fill'\n                value={`${payout_per_point} ${currency_display_code}`}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx(\n                            'payout-per-point__carousel',\n                            is_small_screen && 'payout-per-point__carousel--small'\n                        )}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Payout per point' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default PayoutPerPoint;\n","import './payout-per-point.scss';\nimport PayoutPerPoint from './payout-per-point';\n\nexport default PayoutPerPoint;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { Skeleton } from '@deriv/components';\n\nconst PayoutPerPointInfo = observer(() => {\n    const { contract_type, currency, is_market_closed, proposal_info } = useTraderStore();\n    const contract_key = contract_type.toUpperCase();\n    const { value: payout_per_point } = proposal_info[contract_key]?.obj_contract_basis || {};\n    const has_error = proposal_info[contract_key]?.has_error;\n\n    if (has_error) return null;\n\n    return (\n        <div className='payout-per-point-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Payout per point' />\n            </Text>\n            {payout_per_point ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    {payout_per_point} {currency}\n                </Text>\n            ) : (\n                <Skeleton width={100} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default PayoutPerPointInfo;\n","import PayoutPerPointInfo from './payout-per-point-info';\nimport './payout-per-point-info.scss';\n\nexport default PayoutPerPointInfo;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { Localize } from '@deriv/translations';\nimport { Button, Skeleton, Text, ToggleSwitch, useSnackbar, WheelPicker } from '@deriv-com/quill-ui';\n\nimport { addUnit, getSnackBarText } from 'AppV2/Utils/trade-params-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TDealCancellationProps = {\n    closeActionSheet: () => void;\n};\n\nconst DealCancellation = observer(({ closeActionSheet }: TDealCancellationProps) => {\n    const {\n        has_cancellation,\n        has_take_profit,\n        has_stop_loss,\n        cancellation_range_list,\n        cancellation_duration,\n        onChangeMultiple,\n    } = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n\n    const [is_enabled, setIsEnabled] = React.useState(has_cancellation);\n    const [selected_value, setSelectedValue] = React.useState(cancellation_duration);\n\n    const data = cancellation_range_list.map(({ text, value }) => ({ label: addUnit({ value: text }), value }));\n\n    const onSave = () => {\n        if (has_cancellation === is_enabled && selected_value === cancellation_duration) {\n            closeActionSheet();\n            return;\n        }\n\n        if (is_enabled && (has_take_profit || has_stop_loss)) {\n            addSnackbar({\n                message: getSnackBarText({\n                    has_cancellation: is_enabled,\n                    has_stop_loss,\n                    has_take_profit,\n                    switching_cancellation: true,\n                }),\n                hasCloseButton: true,\n            });\n        }\n        // We should switch off TP and SL if DC is on and vice versa\n        onChangeMultiple({\n            has_cancellation: is_enabled,\n            ...(is_enabled ? { has_take_profit: false, has_stop_loss: false } : {}),\n            cancellation_duration: selected_value,\n        });\n        closeActionSheet();\n    };\n\n    return (\n        <React.Fragment>\n            <div className='deal-cancellation__container'>\n                <div className='deal-cancellation__toggle'>\n                    <Text>\n                        <Localize i18n_default_text='Deal cancellation' />\n                    </Text>\n                    <ToggleSwitch checked={is_enabled} onChange={setIsEnabled} />\n                </div>\n                <div className='deal-cancellation__wheel-picker'>\n                    {cancellation_range_list.length ? (\n                        <WheelPicker\n                            data={data}\n                            disabled={!is_enabled}\n                            selectedValue={selected_value}\n                            setSelectedValue={\n                                setSelectedValue as React.ComponentProps<typeof WheelPicker>['setSelectedValue']\n                            }\n                        />\n                    ) : (\n                        <Skeleton.Square />\n                    )}\n                </div>\n            </div>\n            <Button\n                color='black-white'\n                size='lg'\n                label={<Localize i18n_default_text='Save' />}\n                fullWidth\n                className='risk-management__save-button'\n                onClick={onSave}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default DealCancellation;\n","import React from 'react';\n\ntype TWindow = Window & { height?: number; scale?: number };\n\nconst useIsVirtualKeyboardOpen = (target_id: string) => {\n    const [is_focus, setIsFocus] = React.useState(false);\n    const [is_open, setIsOpen] = React.useState(false);\n\n    // A ratio of available screen space to all space, which corresponds with opened virtual keyboard\n    const RATIO = 0.75;\n\n    React.useEffect(() => {\n        const handleFocus = (e: FocusEvent) => {\n            const target = e.target;\n            const is_focus_in = e.type === 'focusin';\n\n            if (!target) return;\n            if ((target as HTMLElement).id === target_id) setIsFocus(is_focus_in);\n        };\n\n        const resizeHandler = (e: Event) => {\n            const target = e.target as TWindow;\n            if (!target || !target?.height || !target?.scale) return;\n            const has_keyboard_changed_viewport = (target.height * target.scale) / window.screen.height < RATIO;\n            setIsOpen(has_keyboard_changed_viewport);\n        };\n\n        document.addEventListener('focusin', handleFocus);\n        document.addEventListener('focusout', handleFocus);\n        window.visualViewport?.addEventListener('resize', resizeHandler);\n\n        return () => {\n            document.removeEventListener('focusin', handleFocus);\n            document.removeEventListener('focusout', handleFocus);\n            window.visualViewport?.removeEventListener('resize', resizeHandler);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return { is_key_board_visible: is_focus && is_open };\n};\n\nexport default useIsVirtualKeyboardOpen;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getCurrencyDisplayCode, getDecimalPlaces } from '@deriv/shared';\nimport { focusAndOpenKeyboard, getProposalRequestObject } from 'AppV2/Utils/trade-params-utils';\nimport { ActionSheet, CaptionText, Text, ToggleSwitch, TextFieldWithSteppers } from '@deriv-com/quill-ui';\nimport { Localize, localize } from '@deriv/translations';\nimport { TTradeStore } from 'Types';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { useDtraderQuery } from 'AppV2/Hooks/useDtraderQuery';\nimport useIsVirtualKeyboardOpen from 'AppV2/Hooks/useIsVirtualKeyboardOpen';\nimport useTradeError from 'AppV2/Hooks/useTradeError';\nimport { ExpandedProposal } from 'Stores/Modules/Trading/Helpers/proposal';\n\ntype TTakeProfitAndStopLossInputProps = {\n    classname?: string;\n    has_save_button?: boolean;\n    has_actionsheet_wrapper?: boolean;\n    initial_error_text?: React.ReactNode;\n    onActionSheetClose: () => void;\n    parent_ref?: React.MutableRefObject<{\n        has_take_profit?: boolean;\n        has_stop_loss?: boolean;\n        take_profit?: string;\n        tp_error_text?: string;\n        stop_loss?: string;\n        sl_error_text?: string;\n    }>;\n    parent_is_api_response_received_ref?: React.MutableRefObject<boolean>;\n    type?: 'take_profit' | 'stop_loss';\n};\ntype TOnProposalResponse = TTradeStore['onProposalResponse'];\n\nconst TakeProfitAndStopLossInput = ({\n    classname,\n    has_save_button = true,\n    has_actionsheet_wrapper = true,\n    initial_error_text,\n    onActionSheetClose,\n    parent_ref,\n    parent_is_api_response_received_ref,\n    type = 'take_profit',\n}: TTakeProfitAndStopLossInputProps) => {\n    const trade_store = useTraderStore();\n    const {\n        contract_type,\n        currency,\n        has_take_profit,\n        has_stop_loss,\n        is_accumulator,\n        take_profit,\n        stop_loss,\n        trade_types,\n        trade_type_tab,\n        onChangeMultiple,\n        validation_params,\n    } = trade_store;\n\n    const is_take_profit_input = type === 'take_profit';\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n\n    // For tracking errors, that are coming from proposal for take profit and stop loss\n    const { message } = useTradeError({ error_fields: [type] });\n\n    // For handling cases when user clicks on Save btn before we got response from API\n    const is_api_response_received = React.useRef(false);\n    const is_api_response_received_ref = parent_is_api_response_received_ref || is_api_response_received;\n\n    const [is_enabled, setIsEnabled] = React.useState(is_take_profit_input ? has_take_profit : has_stop_loss);\n    const [new_input_value, setNewInputValue] = React.useState(is_take_profit_input ? take_profit : stop_loss);\n    const [error_text, setErrorText] = React.useState('');\n    const [fe_error_text, setFEErrorText] = React.useState(initial_error_text ?? message ?? '');\n    const [max_length, setMaxLength] = React.useState(10);\n\n    // Refs for handling focusing and bluring input\n    const input_ref = React.useRef<HTMLInputElement>(null);\n    const focused_input_ref = React.useRef<HTMLInputElement>(null);\n    const focus_timeout = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const decimals = getDecimalPlaces(currency);\n    const currency_display_code = getCurrencyDisplayCode(currency);\n    const Component = has_actionsheet_wrapper ? ActionSheet.Content : 'div';\n\n    const min_value = validation_params[contract_types[0]]?.[type]?.min;\n    const max_value = validation_params[contract_types[0]]?.[type]?.max;\n    // Storing data from validation params (proposal) in state in case if we got a validation error from API and proposal stop streaming\n    const [info, setInfo] = React.useState<Record<string, string | undefined>>({ min_value, max_value });\n\n    const new_values = {\n        ...(is_take_profit_input ? { has_take_profit: is_enabled } : { has_stop_loss: is_enabled }),\n        has_cancellation: false,\n        ...(is_take_profit_input\n            ? { take_profit: is_enabled ? new_input_value : '' }\n            : { stop_loss: is_enabled ? new_input_value : '' }),\n    };\n\n    const proposal_req = getProposalRequestObject({\n        new_values,\n        trade_store,\n        trade_type: Object.keys(trade_types)[0],\n    });\n\n    // We need to exclude tp in case if type === sl and vise versa in limit order to validate them independently\n    if (is_take_profit_input && proposal_req.limit_order?.stop_loss) {\n        delete proposal_req.limit_order.stop_loss;\n    }\n    if (!is_take_profit_input && proposal_req.limit_order?.take_profit) {\n        delete proposal_req.limit_order.take_profit;\n    }\n\n    const { data: response } = useDtraderQuery<Parameters<TOnProposalResponse>[0]>(\n        [\n            'proposal',\n            ...Object.entries(new_values).flat().join('-'),\n            Object.keys(trade_types)[0],\n            JSON.stringify(proposal_req),\n        ],\n        proposal_req,\n        {\n            enabled: is_enabled,\n        }\n    );\n\n    const input_message =\n        info.min_value && info.max_value ? (\n            <Localize\n                i18n_default_text='Acceptable range: {{min_value}} to {{max_value}} {{currency}}'\n                values={{\n                    currency: currency_display_code,\n                    min_value: info.min_value,\n                    max_value: info.max_value,\n                }}\n            />\n        ) : (\n            ''\n        );\n\n    const updateParentRef = ({ field_name, new_value }: { field_name: string; new_value: React.ReactNode }) => {\n        if (!parent_ref?.current || !field_name) return;\n        parent_ref.current = { ...parent_ref.current, [field_name]: new_value };\n    };\n\n    const onToggleSwitch = (new_value: boolean) => {\n        is_api_response_received_ref.current = false;\n        setIsEnabled(new_value);\n        updateParentRef({ field_name: is_take_profit_input ? 'has_take_profit' : 'has_stop_loss', new_value });\n\n        if (new_value) {\n            clearTimeout(focus_timeout.current);\n            focus_timeout.current = focusAndOpenKeyboard(focused_input_ref.current, input_ref.current);\n        } else {\n            setFEErrorText('');\n            setErrorText('');\n            updateParentRef({ field_name: is_take_profit_input ? 'tp_error_text' : 'sl_error_text', new_value: '' });\n            input_ref.current?.blur();\n        }\n    };\n\n    React.useEffect(() => {\n        const onProposalResponse: TOnProposalResponse = response => {\n            const { error, proposal } = response;\n\n            const new_error = error?.message ?? '';\n            const is_error_field_match = error?.details?.field === type || !error?.details?.field;\n            setErrorText(is_error_field_match ? new_error : '');\n            updateParentRef({\n                field_name: is_take_profit_input ? 'tp_error_text' : 'sl_error_text',\n                new_value: is_error_field_match ? new_error : '',\n            });\n\n            // Recovery for min and max allowed values in case of error\n            if (!info.min_value || !info.max_value) {\n                const { min, max } = (proposal as ExpandedProposal)?.validation_params?.[type] ?? {};\n                setInfo(info =>\n                    (info.min_value !== min && min) || (info.max_value !== max && max)\n                        ? { min_value: min, max_value: max }\n                        : info\n                );\n            }\n            is_api_response_received_ref.current = true;\n        };\n\n        if (response) onProposalResponse(response);\n    }, [is_enabled, response]);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let value = String(e.target.value);\n        if (value.length > 1) value = /^[0-]+$/.test(value) ? '0' : value.replace(/^0*/, '').replace(/^\\./, '0.');\n\n        // If new value is equal to previous one, then we won't send API request\n        const is_equal = value === new_input_value;\n        is_api_response_received_ref.current = is_equal;\n        if (is_equal) return;\n        setFEErrorText('');\n        setNewInputValue(value);\n        updateParentRef({ field_name: type, new_value: value });\n    };\n\n    const onSave = () => {\n        // Prevent from saving if user clicks before BE validation\n        if (!is_api_response_received_ref.current && is_enabled) return;\n\n        if (error_text && is_enabled) return;\n        if (!new_input_value && is_enabled) {\n            setFEErrorText(\n                is_take_profit_input\n                    ? localize('Please enter a take profit amount.')\n                    : localize('Please enter a stop loss amount.')\n            );\n            return;\n        }\n\n        const is_tp_enabled = error_text ? false : is_enabled;\n        onChangeMultiple({\n            ...(is_take_profit_input ? { has_take_profit: is_tp_enabled } : { has_stop_loss: is_tp_enabled }),\n            ...(is_take_profit_input\n                ? {\n                      take_profit: error_text || new_input_value === '0' ? '' : new_input_value,\n                  }\n                : {\n                      stop_loss: error_text || new_input_value === '0' ? '' : new_input_value,\n                  }),\n            ...(is_tp_enabled ? { has_cancellation: false } : {}),\n        });\n        onActionSheetClose();\n    };\n\n    // scroll the page when a virtual keyboard pop up\n    const { is_key_board_visible: should_scroll } = useIsVirtualKeyboardOpen(type);\n\n    React.useEffect(() => {\n        if (should_scroll) window?.scrollTo({ top: 225, behavior: 'smooth' });\n    }, [should_scroll]);\n\n    React.useEffect(() => {\n        setFEErrorText(initial_error_text ?? '');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [initial_error_text]);\n\n    React.useEffect(() => {\n        setInfo(info =>\n            (info.min_value !== min_value && min_value) || (info.max_value !== max_value && max_value)\n                ? { min_value, max_value }\n                : info\n        );\n    }, [min_value, max_value]);\n\n    React.useEffect(() => () => clearTimeout(focus_timeout.current), []);\n\n    return (\n        <React.Fragment>\n            <Component className={clsx('take-profit__wrapper', classname)}>\n                <div className='take-profit__content'>\n                    <Text>\n                        {is_take_profit_input ? (\n                            <Localize i18n_default_text='Take profit' />\n                        ) : (\n                            <Localize i18n_default_text='Stop loss' />\n                        )}\n                    </Text>\n                    <ToggleSwitch checked={is_enabled} onChange={onToggleSwitch} />\n                </div>\n                <TextFieldWithSteppers\n                    allowDecimals\n                    customType='commaRemoval'\n                    className='text-field--custom'\n                    disabled={!is_enabled}\n                    decimals={decimals}\n                    data-testid={is_take_profit_input ? 'dt_tp_input' : 'dt_sl_input'}\n                    inputMode='decimal'\n                    id={type}\n                    message={is_enabled && (fe_error_text || error_text || input_message)}\n                    minusDisabled={Number(new_input_value) - 1 <= 0}\n                    name={type}\n                    noStatusIcon\n                    onChange={onInputChange}\n                    placeholder={localize('Amount')}\n                    ref={input_ref}\n                    regex={/[^0-9.,]/g}\n                    status={fe_error_text || error_text ? 'error' : 'neutral'}\n                    textAlignment='center'\n                    unitLeft={currency_display_code}\n                    variant='fill'\n                    value={new_input_value ?? ''}\n                    onBeforeInput={(e: React.FormEvent<HTMLInputElement>) => {\n                        if (\n                            ['.', ','].includes((e.nativeEvent as InputEvent)?.data ?? '') &&\n                            (new_input_value?.length ?? 0) <= 10\n                        ) {\n                            setMaxLength(decimals ? 11 + decimals : 10);\n                        } else if (!new_input_value?.includes('.')) {\n                            setMaxLength(10);\n                        }\n                    }}\n                    maxLength={max_length}\n                />\n                {!is_enabled && (\n                    <button\n                        className='take-profit__overlay'\n                        data-testid='dt_take_profit_overlay'\n                        onClick={() => onToggleSwitch(true)}\n                    />\n                )}\n                {/* this input with inline styles is needed to fix a focus issue in Safari */}\n                <input ref={focused_input_ref} style={{ height: 0, opacity: 0, display: 'none' }} inputMode='decimal' />\n                {is_accumulator && (\n                    <CaptionText color='quill-typography__color--subtle' className='take-profit__accu-information'>\n                        <Localize i18n_default_text='Note: Cannot be adjusted for ongoing accumulator contracts.' />\n                    </CaptionText>\n                )}\n            </Component>\n            {has_save_button && (\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction: onSave,\n                    }}\n                    shouldCloseOnPrimaryButtonClick={false}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default observer(TakeProfitAndStopLossInput);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Button, useSnackbar } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { getSnackBarText } from 'AppV2/Utils/trade-params-utils';\nimport TakeProfitAndStopLossInput from './take-profit-and-stop-loss-input';\n\ntype TTakeProfitAndStopLossContainerProps = {\n    closeActionSheet: () => void;\n    should_show_deal_cancellation?: boolean;\n};\n\nconst TakeProfitAndStopLossContainer = observer(({ closeActionSheet }: TTakeProfitAndStopLossContainerProps) => {\n    const {\n        has_take_profit,\n        has_cancellation,\n        has_stop_loss,\n        take_profit,\n        onChangeMultiple,\n        stop_loss,\n        validation_errors,\n    } = useTraderStore();\n\n    const { addSnackbar } = useSnackbar();\n\n    const [tp_error_text, setTPErrorText] = React.useState<React.ReactNode>(validation_errors?.take_profit?.[0] ?? '');\n    const tp_ref = React.useRef({ has_take_profit, take_profit, tp_error_text: validation_errors?.take_profit?.[0] });\n    const is_api_response_tp_received_ref = React.useRef(false);\n\n    const [sl_error_text, setSLErrorText] = React.useState<React.ReactNode>(validation_errors?.stop_loss?.[0] ?? '');\n    const sl_ref = React.useRef({ has_stop_loss, stop_loss, sl_error_text: validation_errors?.stop_loss?.[0] });\n    const is_api_response_sl_received_ref = React.useRef(false);\n\n    const onSave = () => {\n        // Prevent from saving if user clicks before we got response from API\n        if (!is_api_response_tp_received_ref.current && tp_ref.current.has_take_profit) return;\n        if (!is_api_response_sl_received_ref.current && sl_ref.current.has_stop_loss) return;\n\n        const {\n            has_take_profit: has_take_profit_current,\n            take_profit: take_profit_current,\n            tp_error_text: tp_error_text_current,\n        } = tp_ref.current;\n        const {\n            has_stop_loss: has_stop_loss_current,\n            stop_loss: stop_loss_current,\n            sl_error_text: sl_error_text_current,\n        } = sl_ref.current;\n\n        const is_tp_empty = !take_profit_current && has_take_profit_current;\n        const is_sl_empty = !stop_loss_current && has_stop_loss_current;\n        if (is_tp_empty) setTPErrorText(<Localize i18n_default_text='Please enter a take profit amount.' />);\n        if (is_sl_empty) setSLErrorText(<Localize i18n_default_text='Please enter a stop loss amount.' />);\n        if ((tp_error_text_current && has_take_profit_current) || (sl_error_text_current && has_stop_loss_current))\n            return;\n        if (is_sl_empty || is_tp_empty) return;\n\n        // Show notification, that DC will be disabled if TP or SL is enabled\n        const is_tp_enabled = tp_error_text_current ? false : has_take_profit_current;\n        const is_sl_enabled = sl_error_text_current ? false : has_stop_loss_current;\n        if ((is_tp_enabled || is_sl_enabled) && has_cancellation) {\n            addSnackbar({\n                message: getSnackBarText({\n                    has_cancellation,\n                    has_stop_loss: is_sl_enabled,\n                    has_take_profit: is_tp_enabled,\n                    switching_tp_sl: true,\n                }),\n                hasCloseButton: true,\n            });\n        }\n\n        onChangeMultiple({\n            has_take_profit: has_take_profit_current,\n            take_profit: tp_error_text_current || take_profit_current === '0' ? '' : take_profit_current,\n            has_stop_loss: has_stop_loss_current,\n            stop_loss: sl_error_text_current || stop_loss_current === '0' ? '' : stop_loss_current,\n            ...(is_tp_enabled || is_sl_enabled ? { has_cancellation: false } : {}),\n        });\n\n        closeActionSheet();\n    };\n\n    return (\n        <div className='risk-management__tp-sl__wrapper'>\n            <TakeProfitAndStopLossInput\n                classname='risk-management__tp-sl'\n                has_save_button={false}\n                has_actionsheet_wrapper={false}\n                initial_error_text={tp_error_text}\n                onActionSheetClose={closeActionSheet}\n                parent_ref={tp_ref}\n                parent_is_api_response_received_ref={is_api_response_tp_received_ref}\n            />\n            <TakeProfitAndStopLossInput\n                classname='risk-management__tp-sl'\n                has_save_button={false}\n                has_actionsheet_wrapper={false}\n                initial_error_text={sl_error_text}\n                onActionSheetClose={closeActionSheet}\n                parent_ref={sl_ref}\n                parent_is_api_response_received_ref={is_api_response_sl_received_ref}\n                type='stop_loss'\n            />\n            <Button\n                color='black-white'\n                size='lg'\n                label={<Localize i18n_default_text='Save' />}\n                fullWidth\n                className='risk-management__save-button'\n                onClick={onSave}\n            />\n        </div>\n    );\n});\n\nexport default TakeProfitAndStopLossContainer;\n","import React from 'react';\nimport { ActionSheet, SegmentedControlSingleChoice } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport DealCancellation from './deal-cancellation';\nimport TakeProfitAndStopLossContainer from './take-profit-and-stop-loss-container';\n\ntype TRiskManagementPickerProps = {\n    closeActionSheet: () => void;\n    initial_tab_index?: number;\n    should_show_deal_cancellation?: boolean;\n};\n\nconst RiskManagementPicker = ({\n    closeActionSheet,\n    initial_tab_index = 0,\n    should_show_deal_cancellation,\n}: TRiskManagementPickerProps) => {\n    const [tab_index, setTabIndex] = React.useState(initial_tab_index);\n\n    return (\n        <ActionSheet.Content className='risk-management__picker'>\n            {should_show_deal_cancellation && (\n                <SegmentedControlSingleChoice\n                    hasContainerWidth\n                    onChange={setTabIndex}\n                    options={[\n                        { label: <Localize i18n_default_text='TP & SL' /> },\n                        { label: <Localize i18n_default_text='Deal cancellation' /> },\n                    ]}\n                    size='sm'\n                    selectedItemIndex={tab_index}\n                />\n            )}\n            {tab_index ? (\n                <DealCancellation closeActionSheet={closeActionSheet} />\n            ) : (\n                <TakeProfitAndStopLossContainer closeActionSheet={closeActionSheet} />\n            )}\n        </ActionSheet.Content>\n    );\n};\n\nexport default RiskManagementPicker;\n","import React from 'react';\nimport { Text, SectionMessage } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\ntype TRiskManagementContentProps = {\n    should_show_deal_cancellation?: boolean;\n};\n\nconst RiskManagementContent = ({ should_show_deal_cancellation }: TRiskManagementContentProps) => {\n    const content = [\n        {\n            definition: (\n                <Localize i18n_default_text='When your profit reaches or exceeds this amount, your trade will be closed automatically.' />\n            ),\n            is_displayed: true,\n            label: <Localize i18n_default_text='Take Profit' />,\n        },\n        {\n            definition: (\n                <Localize i18n_default_text='When your loss reaches or exceeds this amount, your trade will be closed automatically.' />\n            ),\n            is_displayed: true,\n            label: <Localize i18n_default_text='Stop loss' />,\n        },\n        {\n            definition: (\n                <Localize i18n_default_text='When this is active, you can cancel your trade within the chosen time frame. Your stake will be returned without loss.' />\n            ),\n            is_displayed: should_show_deal_cancellation,\n            label: <Localize i18n_default_text='Deal cancellation' />,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(\n                ({ definition, is_displayed, label }) =>\n                    is_displayed && (\n                        <React.Fragment key={definition.props.i18n_default_text}>\n                            <Text bold>{label}</Text>\n                            <Text className='risk-management__description__definition'>{definition}</Text>\n                        </React.Fragment>\n                    )\n            )}\n            {should_show_deal_cancellation && (\n                <SectionMessage\n                    message={\n                        <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n                    }\n                    size='sm'\n                    status='info'\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default RiskManagementContent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { addUnit, isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport RiskManagementPicker from './risk-management-picker';\nimport RiskManagementContent from './risk-management-content';\nimport { TTradeParametersProps } from '../trade-parameters';\nimport useTradeError from 'AppV2/Hooks/useTradeError';\n\nconst RiskManagement = observer(({ is_minimized }: TTradeParametersProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const {\n        cancellation_range_list,\n        cancellation_duration,\n        currency,\n        has_cancellation,\n        has_take_profit,\n        has_stop_loss,\n        is_market_closed,\n        take_profit,\n        stop_loss,\n    } = useTraderStore();\n\n    const { is_error_matching_field: has_error } = useTradeError({\n        error_fields: ['stop_loss', 'take_profit'],\n    });\n\n    const closeActionSheet = React.useCallback(() => setIsOpen(false), []);\n    const getRiskManagementText = () => {\n        if (has_cancellation) return `DC: ${addUnit({ value: cancellation_duration, unit: localize('minutes') })}`;\n        if (has_take_profit && has_stop_loss)\n            return `TP: ${take_profit} ${getCurrencyDisplayCode(currency)} / SL: ${stop_loss} ${getCurrencyDisplayCode(\n                currency\n            )}`;\n        if (has_take_profit) return `TP: ${take_profit} ${getCurrencyDisplayCode(currency)}`;\n        if (has_stop_loss) return `SL: ${stop_loss} ${getCurrencyDisplayCode(currency)}`;\n        return '-';\n    };\n\n    const is_small_screen = isSmallScreen();\n    const should_show_deal_cancellation = cancellation_range_list?.length > 0;\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <RiskManagementPicker\n                    closeActionSheet={closeActionSheet}\n                    initial_tab_index={Number(has_cancellation)}\n                    should_show_deal_cancellation={should_show_deal_cancellation}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    classname='risk-management__description'\n                    description={\n                        <RiskManagementContent should_show_deal_cancellation={should_show_deal_cancellation} />\n                    }\n                    is_custom_description\n                />\n            ),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={classname}\n                disabled={is_market_closed}\n                label={\n                    <Localize\n                        i18n_default_text='Risk management'\n                        key={`risk-management${is_minimized ? '-minimized' : ''}`}\n                    />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                value={getRiskManagementText()}\n                variant='fill'\n                status={has_error ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={closeActionSheet}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx(\n                            'risk-management__carousel',\n                            is_small_screen && 'risk-management__carousel--small'\n                        )}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Risk management' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagement;\n","import './risk-management.scss';\nimport RiskManagement from './risk-management';\n\nexport default RiskManagement;\n","import React from 'react';\n\nimport { getProposalRequestObject } from 'AppV2/Utils/trade-params-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\nimport { useDtraderQuery } from './useDtraderQuery';\n\ntype TOnProposalResponse = TTradeStore['onProposalResponse'];\ntype TNewValues = {\n    amount?: string | number;\n    payout_per_point?: string | number;\n    barrier_1?: string | number;\n};\n// TODO: We can reuse it in TakeProfitAndStopLoss and PayoutPerPoint components.\nexport const useFetchProposalData = ({\n    trade_store,\n    proposal_request_values,\n    contract_type,\n    contract_types,\n    is_enabled,\n}: {\n    trade_store: ReturnType<typeof useTraderStore>;\n    proposal_request_values: TNewValues;\n    contract_type: string;\n    contract_types: string[];\n    is_enabled?: boolean;\n}) => {\n    const proposal_request = getProposalRequestObject({\n        new_values: proposal_request_values,\n        trade_store,\n        trade_type: contract_type,\n    });\n\n    const entries = proposal_request_values ? Object.entries(proposal_request_values) : [];\n    const query_key = [\n        'proposal',\n        ...entries.flat().join('-'),\n        `${proposal_request_values?.amount ?? ''}`,\n        JSON.stringify(proposal_request),\n        contract_types.join('-'),\n    ];\n\n    return useDtraderQuery<Parameters<TOnProposalResponse>[0]>(query_key, proposal_request, {\n        enabled: is_enabled,\n    });\n};\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { formatMoney, getCurrencyDisplayCode, getTradeTypeName, TRADE_TYPES } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\n\nimport { TTradeStore } from 'Types';\n\ntype TStakeDetailsProps = Pick<TTradeStore, 'contract_type' | 'currency' | 'has_stop_loss' | 'is_multiplier'> & {\n    contract_types: string[];\n    details: {\n        commission?: string | number;\n        error_1?: string;\n        error_2?: string;\n        first_contract_payout: number;\n        is_first_payout_exceeded?: boolean;\n        is_second_payout_exceeded?: boolean;\n        max_payout: string | number;\n        max_stake: string | number;\n        min_stake: string | number;\n        second_contract_payout: number;\n        stop_out?: number | string;\n    };\n    is_loading_proposal: boolean;\n    is_empty?: boolean;\n    should_show_payout_details: boolean;\n};\n\nconst StakeDetails = ({\n    contract_type,\n    contract_types,\n    currency,\n    details,\n    has_stop_loss,\n    is_loading_proposal,\n    is_multiplier,\n    is_empty,\n    should_show_payout_details,\n}: TStakeDetailsProps) => {\n    const [displayed_values, setDisplayedValues] = React.useState({\n        is_first_payout_exceeded: false,\n        is_second_payout_exceeded: false,\n        commission: '',\n        first_contract_payout: '',\n        max_payout: '',\n        second_contract_payout: '',\n        stop_out: '',\n    });\n\n    React.useEffect(() => {\n        const getDisplayedValue = (new_value?: number | string, current_value?: string) => {\n            return (current_value === '-' && is_loading_proposal) || !new_value || is_empty\n                ? '-'\n                : formatMoney(currency, Number(new_value), true);\n        };\n\n        const {\n            commission: commission_value,\n            first_contract_payout,\n            is_first_payout_exceeded,\n            is_second_payout_exceeded,\n            second_contract_payout,\n            stop_out: stop_out_value,\n            max_payout,\n        } = displayed_values;\n        const new_commission = getDisplayedValue(Math.abs(Number(details.commission)), commission_value);\n        const new_payout_1 = getDisplayedValue(details.first_contract_payout, first_contract_payout);\n        const new_payout_2 = getDisplayedValue(details.second_contract_payout, second_contract_payout);\n        const new_stop_out = getDisplayedValue(Math.abs(Number(details.stop_out)), stop_out_value);\n        const new_max_payout = getDisplayedValue(details.max_payout, max_payout);\n\n        if (\n            commission_value !== new_commission ||\n            first_contract_payout !== new_payout_1 ||\n            displayed_values.is_first_payout_exceeded !== is_first_payout_exceeded ||\n            displayed_values.is_second_payout_exceeded !== is_second_payout_exceeded ||\n            second_contract_payout !== new_payout_2 ||\n            stop_out_value !== new_stop_out ||\n            max_payout !== new_max_payout\n        ) {\n            setDisplayedValues({\n                commission: new_commission,\n                first_contract_payout: new_payout_1,\n                is_first_payout_exceeded,\n                is_second_payout_exceeded,\n                second_contract_payout: new_payout_2,\n                stop_out: new_stop_out,\n                max_payout: new_max_payout,\n            });\n        }\n    }, [currency, details, displayed_values, is_loading_proposal, is_empty]);\n\n    const payout_title = <Localize i18n_default_text='Payout' />;\n    const content = [\n        {\n            is_displayed: !has_stop_loss && is_multiplier && !should_show_payout_details,\n            label: <Localize i18n_default_text='Stop out' />,\n            value: displayed_values.stop_out,\n        },\n        {\n            is_displayed: is_multiplier && !should_show_payout_details,\n            label: <Localize i18n_default_text='Commission' />,\n            value: displayed_values.commission,\n        },\n        {\n            is_displayed: !!details.max_payout && should_show_payout_details,\n            label: <Localize i18n_default_text='Max payout' />,\n            value: formatMoney(currency, +details.max_payout, true),\n        },\n        {\n            contract_type: getTradeTypeName(contract_types[0], {\n                isHighLow: contract_type === TRADE_TYPES.HIGH_LOW,\n            }),\n            is_displayed: !!contract_types.length && should_show_payout_details,\n            label: payout_title,\n            has_error: details.is_first_payout_exceeded,\n            value: displayed_values.first_contract_payout,\n        },\n        {\n            contract_type: getTradeTypeName(contract_types[1], {\n                isHighLow: contract_type === TRADE_TYPES.HIGH_LOW,\n            }),\n            is_displayed: contract_types.length > 1 && should_show_payout_details,\n            label: payout_title,\n            has_error: details.is_second_payout_exceeded,\n            value: displayed_values.second_contract_payout,\n        },\n    ];\n\n    return (\n        <div className='stake-content__details'>\n            {content.map(\n                ({ contract_type, is_displayed, label, has_error, value }, idx) =>\n                    is_displayed && (\n                        <div\n                            key={`${idx}_${value}`}\n                            className={clsx('stake-content__details-row', has_error && 'error')}\n                        >\n                            <Text size='sm'>\n                                {label}\n                                {contract_type && ` (${contract_type})`}\n                            </Text>\n                            <Text size='sm'>\n                                {value} {getCurrencyDisplayCode(currency)}\n                            </Text>\n                        </div>\n                    )\n            )}\n        </div>\n    );\n};\n\nexport default StakeDetails;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { formatMoney, getCurrencyDisplayCode, getDecimalPlaces } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { ActionSheet, TextFieldWithSteppers } from '@deriv-com/quill-ui';\n\nimport { useFetchProposalData } from 'AppV2/Hooks/useFetchProposalData';\nimport useIsVirtualKeyboardOpen from 'AppV2/Hooks/useIsVirtualKeyboardOpen';\nimport { getPayoutInfo } from 'AppV2/Utils/trade-params-utils';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { ExpandedProposal, getProposalInfo } from 'Stores/Modules/Trading/Helpers/proposal';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\nimport StakeDetails from './stake-details';\n\ntype TResponse = Parameters<TTradeStore['onProposalResponse']>[0];\ntype TStakeInput = {\n    onClose: () => void;\n    is_open?: boolean;\n};\ntype TNewValues = {\n    amount?: string | number;\n    payout_per_point?: string | number;\n    barrier_1?: string | number;\n};\ntype TStakeState = {\n    proposal_request_values: TNewValues;\n    stake_error: string;\n    fe_stake_error: string;\n    max_length: number;\n    details: {\n        commission?: string | number;\n        error_1: string;\n        error_2: string;\n        first_contract_payout: number;\n        second_contract_payout: number;\n        is_first_payout_exceeded: boolean;\n        is_second_payout_exceeded: boolean;\n        max_payout: string | number;\n        max_stake: string | number;\n        min_stake: string | number;\n        stop_out?: string | number;\n    };\n};\ntype TStakeAction =\n    | { type: 'SET_PROPOSAL_VALUES'; payload: Partial<TNewValues> }\n    | { type: 'SET_STAKE_ERROR'; payload: string }\n    | { type: 'SET_FE_STAKE_ERROR'; payload: string }\n    | { type: 'UPDATE_DETAILS'; payload: Partial<TStakeState['details']> }\n    | { type: 'SET_MAX_LENGTH'; payload: number }\n    | { type: 'RESET_ERRORS' };\n\nconst reducer = (state: TStakeState, action: TStakeAction): TStakeState => {\n    switch (action.type) {\n        case 'SET_PROPOSAL_VALUES':\n            return {\n                ...state,\n                proposal_request_values: {\n                    ...state.proposal_request_values,\n                    ...action.payload,\n                },\n            };\n        case 'SET_STAKE_ERROR':\n            return {\n                ...state,\n                stake_error: action.payload,\n            };\n        case 'SET_FE_STAKE_ERROR':\n            return {\n                ...state,\n                fe_stake_error: action.payload,\n            };\n        case 'UPDATE_DETAILS':\n            return {\n                ...state,\n                details: {\n                    ...state.details,\n                    ...action.payload,\n                },\n            };\n        case 'SET_MAX_LENGTH':\n            return {\n                ...state,\n                max_length: action.payload,\n            };\n        case 'RESET_ERRORS':\n            return {\n                ...state,\n                stake_error: '',\n                fe_stake_error: '',\n            };\n        default:\n            return state;\n    }\n};\n\nconst createInitialState = (trade_store: ReturnType<typeof useTraderStore>, decimals: number) => {\n    const {\n        amount,\n        commission,\n        contract_type,\n        trade_type_tab,\n        trade_types,\n        proposal_info,\n        validation_params,\n        stop_out,\n    } = trade_store;\n\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const {\n        contract_payout: first_contract_payout,\n        max_payout,\n        error: first_payout_error,\n    } = getPayoutInfo(proposal_info[contract_types[0]]);\n    const { contract_payout: second_contract_payout, error: second_payout_error } = getPayoutInfo(\n        proposal_info[contract_types[1]]\n    );\n\n    const { stake } = (validation_params[contract_types[0]] || validation_params[contract_types[1]]) ?? {};\n    const { max: max_stake = 0, min: min_stake = 0 } = stake ?? {};\n\n    return {\n        proposal_request_values: { amount },\n        stake_error: '',\n        fe_stake_error: '',\n        max_length: calculateMaxLength(amount, decimals),\n        details: {\n            commission,\n            error_1: first_payout_error,\n            error_2: second_payout_error,\n            first_contract_payout,\n            second_contract_payout,\n            is_first_payout_exceeded: !!first_payout_error && first_contract_payout > max_payout,\n            is_second_payout_exceeded: !!second_payout_error && second_contract_payout > max_payout,\n            max_payout,\n            max_stake,\n            min_stake,\n            stop_out,\n        },\n    };\n};\n\nconst calculateMaxLength = (amount: number | string, decimals: number): number => {\n    const is_decimal = String(amount).includes('.') || String(amount).includes(',');\n    return is_decimal ? 11 + decimals : 10;\n};\n\nconst StakeInput = observer(({ onClose, is_open }: TStakeInput) => {\n    const trade_store = useTraderStore();\n    const {\n        contract_type,\n        currency,\n        barrier_1,\n        has_stop_loss,\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        onChange,\n        trade_type_tab,\n        trade_types,\n    } = trade_store;\n\n    const decimals = getDecimalPlaces(currency);\n    const [state, dispatch] = React.useReducer(reducer, null, () => createInitialState(trade_store, decimals));\n    const { proposal_request_values, stake_error, fe_stake_error, details } = state;\n\n    const contract_types = React.useMemo(\n        () => getDisplayedContractTypes(trade_types, contract_type, trade_type_tab),\n        [trade_types, contract_type, trade_type_tab]\n    );\n\n    const should_show_payout_details = !is_accumulator && !is_multiplier && !is_turbos && !is_vanilla;\n\n    // scroll the page when a virtual keyboard pops up\n    const input_id = 'stake_input';\n    const { is_key_board_visible: should_scroll } = useIsVirtualKeyboardOpen(input_id);\n\n    React.useEffect(() => {\n        if (should_scroll) window?.scrollTo({ top: 225, behavior: 'smooth' });\n    }, [should_scroll]);\n\n    React.useEffect(() => {\n        const initial_state = createInitialState(trade_store, decimals);\n        dispatch({ type: 'SET_PROPOSAL_VALUES', payload: initial_state.proposal_request_values });\n        dispatch({ type: 'UPDATE_DETAILS', payload: initial_state.details });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Parallel proposal without subscription\n    // For Rise/Fall and all Digits we should do 2 proposal requests\n    const should_send_multiple_proposals = contract_types.length > 1 && !is_multiplier;\n    const has_both_errors = !!details.error_1 && !!details.error_2;\n    // Need for cases with Rise/Fall and Digits, when only one response contains error and we should allow to save the value\n    const should_show_stake_error =\n        !should_send_multiple_proposals || (should_send_multiple_proposals && has_both_errors);\n\n    const { data: response_1, is_fetching: is_fetching_1 } = useFetchProposalData({\n        trade_store,\n        proposal_request_values,\n        contract_type: contract_types[0],\n        contract_types,\n        is_enabled: is_open,\n    });\n    const { data: response_2, is_fetching: is_fetching_2 } = useFetchProposalData({\n        trade_store,\n        proposal_request_values,\n        contract_type: contract_types[1],\n        contract_types,\n        is_enabled: is_open && should_send_multiple_proposals,\n    });\n\n    const is_loading_proposal = is_fetching_1 || (should_send_multiple_proposals && is_fetching_2);\n\n    const handleProposalResponse = (response: TResponse, contractType: 'first' | 'second') => {\n        const { error, proposal } = response;\n\n        // In case if the value is empty we are showing custom error text from FE (in onSave function)\n        if (proposal_request_values.amount === '') {\n            dispatch({ type: 'SET_STAKE_ERROR', payload: '' });\n            return;\n        }\n\n        // Handle edge cases for Vanilla contracts\n        if (is_vanilla && error?.details?.barrier_choices) {\n            const { barrier_choices } = error.details;\n            if (!barrier_choices?.includes(barrier_1)) {\n                const index = Math.floor(barrier_choices.length / 2);\n                dispatch({\n                    type: 'SET_PROPOSAL_VALUES',\n                    payload: { barrier_1: barrier_choices[index] },\n                });\n                return;\n            }\n        }\n\n        // Handle edge cases for Turbo contracts\n        if (is_turbos && error?.details?.payout_per_point_choices && error?.details?.field === 'payout_per_point') {\n            const { payout_per_point_choices } = error.details;\n            const index = Math.floor(payout_per_point_choices.length / 2);\n            dispatch({\n                type: 'SET_PROPOSAL_VALUES',\n                payload: { payout_per_point: payout_per_point_choices[index] },\n            });\n            return;\n        }\n\n        // Set proposal error\n        const new_error = error?.message ?? '';\n        const is_error_field_match =\n            ['amount', 'stake'].includes(error?.details?.field ?? '') || !error?.details?.field;\n        dispatch({ type: 'SET_STAKE_ERROR', payload: is_error_field_match ? new_error : '' });\n\n        // Handle old contracts with payout (Rise/Fall, Higher/Lower, Touch/No Touch, Digits)\n        if (should_show_payout_details) {\n            const new_proposal = getProposalInfo(trade_store, response as Parameters<typeof getProposalInfo>[1]);\n            const { contract_payout, max_payout, error } = getPayoutInfo(new_proposal);\n\n            dispatch({\n                type: 'UPDATE_DETAILS',\n                payload: {\n                    ...(max_payout ? { max_payout } : {}),\n                    [`${contractType}_contract_payout`]: contract_payout || 0,\n                    [`is_${contractType}_payout_exceeded`]: !!error && contract_payout > max_payout,\n                    [`error_${contractType === 'first' ? 1 : 2}`]: error,\n                },\n            });\n        } else {\n            // Recovery for minimum and maximum allowed values in case of errors\n            if ((!details.min_stake || !details.max_stake) && error?.details) {\n                const { max_stake, min_stake } = error.details;\n                if (max_stake && min_stake) {\n                    dispatch({\n                        type: 'UPDATE_DETAILS',\n                        payload: {\n                            max_stake,\n                            min_stake,\n                        },\n                    });\n                }\n            }\n\n            // Update proposal details after a successful API call\n            if (proposal) {\n                const { commission, limit_order, validation_params } = proposal as ExpandedProposal;\n                const { max, min } = validation_params?.stake ?? {};\n                const { order_amount } = limit_order?.stop_out ?? {};\n\n                dispatch({\n                    type: 'UPDATE_DETAILS',\n                    payload: {\n                        ...(is_multiplier && commission && order_amount ? { commission, stop_out: order_amount } : {}),\n                        ...(details.max_stake || details.min_stake ? {} : { max_stake: max, min_stake: min }),\n                    },\n                });\n            } else if (!proposal && is_multiplier) {\n                dispatch({\n                    type: 'UPDATE_DETAILS',\n                    payload: { commission: 0, stop_out: 0 },\n                });\n            }\n        }\n    };\n\n    React.useEffect(() => {\n        if (response_1) handleProposalResponse(response_1, 'first');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response_1]);\n\n    React.useEffect(() => {\n        if (response_2) handleProposalResponse(response_2, 'second');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response_2]);\n\n    const getInputMessage = () =>\n        !!details.min_stake &&\n        !!details.max_stake && (\n            <Localize\n                i18n_default_text='Acceptable range: {{min_stake}} to {{max_stake}} {{currency}}'\n                values={{\n                    currency: getCurrencyDisplayCode(currency),\n                    min_stake: formatMoney(currency, +details.min_stake, true),\n                    max_stake: formatMoney(currency, +details.max_stake, true),\n                }}\n            />\n        );\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const new_value = String(e.target.value);\n        dispatch({\n            type: 'SET_MAX_LENGTH',\n            payload: calculateMaxLength(new_value, decimals),\n        });\n        if (new_value.endsWith('.') || new_value.endsWith(',')) {\n            dispatch({\n                type: 'SET_FE_STAKE_ERROR',\n                payload: localize('Should be a valid number.'),\n            });\n            return;\n        }\n        // If a new value is equal to a previous one, then we won't send API request\n        const is_equal = new_value === String(proposal_request_values.amount);\n        if (is_equal) return;\n\n        dispatch({ type: 'RESET_ERRORS' });\n        dispatch({\n            type: 'SET_PROPOSAL_VALUES',\n            payload: { amount: new_value },\n        });\n    };\n\n    const onBeforeInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n        if (\n            ['.', ','].includes((e.nativeEvent as InputEvent)?.data ?? '') &&\n            (String(proposal_request_values.amount)?.length ?? 0) <= 10\n        ) {\n            dispatch({\n                type: 'SET_MAX_LENGTH',\n                payload: decimals ? 11 + decimals : 10,\n            });\n        }\n    };\n\n    const onSave = () => {\n        // Prevent from saving if user clicks before we get theAPI response or if we get an error in response or the field is empty\n        if (\n            is_fetching_1 ||\n            (should_send_multiple_proposals && is_fetching_2) ||\n            (should_show_stake_error && stake_error) ||\n            fe_stake_error\n        )\n            return;\n        if (proposal_request_values.amount === '') {\n            dispatch({\n                type: 'SET_FE_STAKE_ERROR',\n                payload: localize('Amount is a required field.'),\n            });\n            return;\n        }\n\n        // Setting new stake value to the store and send it in streaming proposal\n        onChange({ target: { name: 'amount', value: proposal_request_values.amount } });\n        onClose();\n    };\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='stake-content'>\n                <TextFieldWithSteppers\n                    allowDecimals\n                    allowSign={false}\n                    className='text-field--custom'\n                    customType='commaRemoval'\n                    data-testid='dt_input_with_steppers'\n                    decimals={decimals}\n                    inputMode='decimal'\n                    id={input_id}\n                    maxLength={state.max_length}\n                    message={fe_stake_error || (should_show_stake_error && stake_error) || getInputMessage()}\n                    minusDisabled={Number(proposal_request_values.amount) - 1 <= 0}\n                    name='amount'\n                    noStatusIcon\n                    onChange={onInputChange}\n                    onBeforeInput={onBeforeInputChange}\n                    placeholder={localize('Amount')}\n                    regex={/[^0-9.,]/g}\n                    status={fe_stake_error || (should_show_stake_error && stake_error) ? 'error' : 'neutral'}\n                    textAlignment='center'\n                    unitLeft={getCurrencyDisplayCode(currency)}\n                    value={proposal_request_values.amount}\n                    variant='fill'\n                />\n                <StakeDetails\n                    contract_type={contract_type}\n                    contract_types={contract_types}\n                    currency={currency}\n                    details={details}\n                    has_stop_loss={has_stop_loss}\n                    is_loading_proposal={is_loading_proposal}\n                    is_multiplier={is_multiplier}\n                    is_empty={!proposal_request_values.amount}\n                    should_show_payout_details={should_show_payout_details}\n                />\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                shouldCloseOnPrimaryButtonClick={false}\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: onSave,\n                }}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default StakeInput;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\n\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\n\nimport useTradeError from 'AppV2/Hooks/useTradeError';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { TTradeParametersProps } from '../trade-parameters';\n\nimport StakeInput from './stake-input';\n\nconst Stake = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        amount,\n        currency,\n        contract_type,\n        has_open_accu_contract,\n        is_market_closed,\n        is_multiplier,\n        trade_types,\n        trade_type_tab,\n        proposal_info,\n    } = useTraderStore();\n    const { is_error_matching_field: has_error } = useTradeError({ error_fields: ['stake', 'amount'] });\n\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const is_all_types_with_errors = contract_types.every(item => proposal_info?.[item]?.has_error);\n\n    // Showing snackbar for all cases, except when it is Rise/Fall or Digits and only one subtype has error\n    const should_show_snackbar = contract_types.length === 1 || is_multiplier || is_all_types_with_errors;\n\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    return (\n        <React.Fragment>\n            <TextField\n                disabled={has_open_accu_contract || is_market_closed}\n                variant='fill'\n                readOnly\n                label={<Localize i18n_default_text='Stake' key={`stake${is_minimized ? '-minimized' : ''}`} />}\n                noStatusIcon\n                onClick={() => setIsOpen(true)}\n                value={`${amount} ${getCurrencyDisplayCode(currency)}`}\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                status={has_error && should_show_snackbar ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header title={<Localize i18n_default_text='Stake' />} />\n                    <StakeInput onClose={onClose} is_open={is_open} />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default Stake;\n","import Stake from './stake';\n\nimport './stake.scss';\n\nexport default Stake;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { ActionSheet, Text, WheelPicker } from '@deriv-com/quill-ui';\nimport { Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport type { TV2ParamsInitialValues } from 'Stores/Modules/Trading/trade-store';\n\ntype TStrikeWheelProps = {\n    current_strike: string;\n    currency: string;\n    onStrikePriceSelect: (new_value: string | number) => void;\n    payout_per_point?: string | number;\n    strike_price_list: {\n        value: string;\n    }[];\n    setV2ParamsInitialValues: ({ value, name }: { value: number | string; name: keyof TV2ParamsInitialValues }) => void;\n};\n\nconst onWheelPickerScrollDebounced = debounce(\n    (new_value: string | number, callback: TStrikeWheelProps['onStrikePriceSelect']) => callback(new_value),\n    200\n);\n\nconst StrikeWheel = ({\n    current_strike,\n    currency,\n    onStrikePriceSelect,\n    payout_per_point,\n    strike_price_list,\n    setV2ParamsInitialValues,\n}: TStrikeWheelProps) => {\n    const initial_value_ref = React.useRef<string | number>();\n    const selected_value_ref = React.useRef<string | number>(current_strike);\n\n    const onSave = () => {\n        initial_value_ref.current = selected_value_ref.current;\n        setV2ParamsInitialValues({ value: selected_value_ref.current, name: 'strike' });\n    };\n\n    React.useEffect(() => {\n        if (!initial_value_ref.current && current_strike) {\n            initial_value_ref.current = current_strike;\n            setV2ParamsInitialValues({ value: current_strike, name: 'strike' });\n        }\n\n        return () => {\n            if (initial_value_ref.current && initial_value_ref.current !== selected_value_ref.current) {\n                onStrikePriceSelect(initial_value_ref.current);\n            }\n            onWheelPickerScrollDebounced.cancel();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='strike__wrapper' data-testid='dt_strike_wrapper'>\n                <div className='strike__wheel-picker'>\n                    <WheelPicker\n                        data={strike_price_list}\n                        selectedValue={selected_value_ref.current}\n                        setSelectedValue={(new_value: string | number) => {\n                            if (new_value === selected_value_ref.current) return;\n                            selected_value_ref.current = new_value;\n                            onWheelPickerScrollDebounced(new_value, onStrikePriceSelect);\n                        }}\n                    />\n                </div>\n                <div className='strike__payout'>\n                    <Text color='quill-typography__color--subtle' size='sm'>\n                        <Localize i18n_default_text='Payout per point:' />\n                    </Text>\n                    <Text size='sm' as='div' className='strike__payout__content'>\n                        {payout_per_point ? (\n                            <React.Fragment>\n                                {payout_per_point} {currency}\n                            </React.Fragment>\n                        ) : (\n                            <Skeleton width={90} height={14} />\n                        )}\n                    </Text>\n                </div>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: onSave,\n                }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default StrikeWheel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { getCurrencyDisplayCode, isEmptyObject } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Skeleton } from '@deriv/components';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport StrikeWheel from './strike-wheel';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Strike = observer(({ is_minimized }: TTradeParametersProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const {\n        barrier_1,\n        barrier_choices: strike_price_choices,\n        contract_type,\n        currency,\n        is_market_closed,\n        onChange,\n        proposal_info,\n        setV2ParamsInitialValues,\n        v2_params_initial_values,\n    } = useTraderStore();\n\n    const is_small_screen = isSmallScreen();\n    const strike_price_list = strike_price_choices.map((strike_price: string) => ({ value: strike_price }));\n    const payout_per_point: string | number = isEmptyObject(proposal_info)\n        ? ''\n        : proposal_info[contract_type.toUpperCase()]?.obj_contract_basis?.value;\n\n    const handleStrikeChange = (new_value: number | string) =>\n        onChange({ target: { name: 'barrier_1', value: new_value } });\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <StrikeWheel\n                    current_strike={barrier_1}\n                    currency={getCurrencyDisplayCode(currency)}\n                    onStrikePriceSelect={handleStrikeChange}\n                    payout_per_point={payout_per_point}\n                    strike_price_list={strike_price_list}\n                    setV2ParamsInitialValues={setV2ParamsInitialValues}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <>\n                            <p>\n                                <Localize i18n_default_text='It is the price where you can start receiving a payout from an option.' />\n                            </p>\n                            <br />\n                            <p>\n                                <Localize i18n_default_text='For a Call option, you receive a payout if the final price is higher than the strike price.' />\n                            </p>\n                            <br />\n                            <p>\n                                <Localize i18n_default_text='For a Put option, you receive a payout if the final price is lower than the strike price.' />\n                            </p>\n                        </>\n                    }\n                />\n            ),\n        },\n    ];\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    React.useEffect(() => {\n        const initial_strike = v2_params_initial_values?.strike;\n        if (initial_strike && barrier_1 !== initial_strike) {\n            handleStrikeChange(initial_strike);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!barrier_1)\n        return (\n            <div className={classname}>\n                <Skeleton />\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={classname}\n                disabled={is_market_closed}\n                label={<Localize i18n_default_text='Strike price' key={`strike${is_minimized ? '-minimized' : ''}`} />}\n                onClick={() => setIsOpen(true)}\n                readOnly\n                variant='fill'\n                value={barrier_1}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx('strike__carousel', is_small_screen && 'strike__carousel--small')}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Strike price' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import './strike.scss';\nimport Strike from './strike';\n\nexport default Strike;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TakeProfitAndStopLossInput from '../RiskManagement/take-profit-and-stop-loss-input';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { TTradeParametersProps } from '../trade-parameters';\nimport useTradeError from 'AppV2/Hooks/useTradeError';\n\nconst TakeProfit = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { currency, has_open_accu_contract, has_take_profit, is_market_closed, take_profit } = useTraderStore();\n    const { is_error_matching_field: has_error } = useTradeError({ error_fields: ['take_profit'] });\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const onActionSheetClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: <TakeProfitAndStopLossInput onActionSheetClose={onActionSheetClose} />,\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize i18n_default_text='When your profit reaches or exceeds the set amount, your trade will be closed automatically.' />\n                    }\n                />\n            ),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                disabled={has_open_accu_contract || is_market_closed}\n                label={\n                    <Localize i18n_default_text='Take profit' key={`take-profit${is_minimized ? '-minimized' : ''}`} />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                variant='fill'\n                value={has_take_profit && take_profit ? `${take_profit} ${getCurrencyDisplayCode(currency)}` : '-'}\n                status={has_error ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onActionSheetClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Take profit' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default TakeProfit;\n","import TakeProfit from './take-profit';\n\nexport default TakeProfit;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport clsx from 'clsx';\nimport { SegmentedControlSingleChoice } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getTradeTypeTabsList } from 'AppV2/Utils/trade-params-utils';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst TradeTypeTabs = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { contract_type, is_market_closed, onChange, trade_type_tab, setTradeTypeTab } = useTraderStore();\n    const tab_list = getTradeTypeTabsList(contract_type);\n    let initial_index = 0;\n\n    // If the trade type tab is VANILLALONGPUT or TURBOSSHORT, keep the first tab\n    if (\n        !(\n            (trade_type_tab === 'VANILLALONGPUT' && contract_type === 'vanillalongcall') ||\n            (trade_type_tab === 'TURBOSSHORT' && contract_type === 'turboslong')\n        )\n    ) {\n        initial_index = tab_list.findIndex(tab =>\n            trade_type_tab ? tab.contract_type === trade_type_tab : tab.value === contract_type\n        );\n    }\n\n    const initial_tab_index = initial_index < 0 ? 0 : initial_index;\n    const [tab_index, setTabIndex] = React.useState(initial_tab_index);\n\n    const handleTabChange = (selected_item_index: number) => {\n        const { contract_type: type, value: trade_type } = tab_list[selected_item_index] ?? {};\n        setTabIndex(selected_item_index);\n        setTradeTypeTab(type);\n        if (trade_type !== contract_type) {\n            onChange({ target: { name: 'contract_type', value: trade_type } });\n        }\n    };\n\n    React.useEffect(() => {\n        setTabIndex(initial_tab_index);\n        setTradeTypeTab(tab_list[initial_tab_index]?.contract_type);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tab_list, initial_tab_index]);\n\n    if (!tab_list.length) return null;\n    return (\n        <SegmentedControlSingleChoice\n            className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n            hasContainerWidth\n            onChange={handleTabChange}\n            options={tab_list.map(({ label }) => ({ disabled: is_market_closed, label }))}\n            selectedItemIndex={tab_index}\n            key={`${tab_index}${is_market_closed}`}\n        />\n    );\n});\n\nexport default TradeTypeTabs;\n","import TradeTypeTabs from './trade-type-tabs';\n\nexport default TradeTypeTabs;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\n\nimport { isTradeParamVisible } from 'AppV2/Utils/layout-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport AccumulatorsInformation from './AccumulatorsInformation';\nimport AllowEquals from './AllowEquals';\nimport Barrier from './Barrier';\nimport BarrierInfo from './BarrierInfo';\nimport Duration from './Duration';\nimport GrowthRate from './GrowthRate';\nimport LastDigitPrediction from './LastDigitPrediction';\nimport Multiplier from './Multiplier';\nimport MultipliersDealCancellationInfo from './MultipliersDealCancellationInfo';\nimport MultipliersExpirationInfo from './MultipliersExpirationInfo';\nimport PayoutInfo from './PayoutInfo';\nimport PayoutPerPoint from './PayoutPerPoint';\nimport PayoutPerPointInfo from './PayoutPerPointInfo';\nimport RiskManagement from './RiskManagement';\nimport Stake from './Stake';\nimport Strike from './Strike';\nimport TakeProfit from './TakeProfit';\nimport TradeTypeTabs from './TradeTypeTabs';\n\nexport type TTradeParametersProps = { is_minimized?: boolean };\n\nconst TradeParameters = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { contract_type, has_cancellation, symbol } = useTraderStore();\n    const isVisible = (component_key: string) =>\n        isTradeParamVisible({ component_key, contract_type, has_cancellation, symbol });\n\n    return (\n        <div\n            className={clsx(\n                'trade-params__options__wrapper',\n                is_minimized && 'trade-params__options__wrapper--minimized'\n            )}\n        >\n            {is_minimized && (\n                <React.Fragment>\n                    {isVisible('expiration') && <MultipliersExpirationInfo />}\n                    {isVisible('payout_per_point_info') && <PayoutPerPointInfo />}\n                    {isVisible('allow_equals') && <AllowEquals />}\n                    {isVisible('payout') && <PayoutInfo />}\n                </React.Fragment>\n            )}\n            <div\n                className={clsx(\n                    'trade-params__options__wrapper',\n                    is_minimized && 'trade-params__options__wrapper--horizontal'\n                )}\n            >\n                {isVisible('trade_type_tabs') && <TradeTypeTabs is_minimized={is_minimized} />}\n                {isVisible('last_digit') && <LastDigitPrediction is_minimized={is_minimized} />}\n                {isVisible('duration') && <Duration is_minimized={is_minimized} />}\n                {isVisible('strike') && <Strike is_minimized={is_minimized} />}\n                {isVisible('barrier') && <Barrier is_minimized={is_minimized} />}\n                {isVisible('growth_rate') && <GrowthRate is_minimized={is_minimized} />}\n                {isVisible('multiplier') && <Multiplier is_minimized={is_minimized} />}\n                {isVisible('stake') && <Stake is_minimized={is_minimized} />}\n                {isVisible('payout_per_point') && <PayoutPerPoint is_minimized={is_minimized} />}\n                {isVisible('allow_equals') && !is_minimized && <AllowEquals />}\n                {isVisible('take_profit') && <TakeProfit is_minimized={is_minimized} />}\n                {isVisible('risk_management') && <RiskManagement is_minimized={is_minimized} />}\n                {isVisible('expiration') && !is_minimized && <MultipliersExpirationInfo />}\n                {isVisible('accu_info_display') && !is_minimized && <AccumulatorsInformation />}\n                {isVisible('barrier_info') && !is_minimized && <BarrierInfo />}\n                {isVisible('payout_per_point_info') && !is_minimized && <PayoutPerPointInfo />}\n                {isVisible('payout') && !is_minimized && <PayoutInfo />}\n            </div>\n            {isVisible('mult_info_display') && <MultipliersDealCancellationInfo is_minimized={is_minimized} />}\n        </div>\n    );\n});\n\nexport default TradeParameters;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { pickDefaultSymbol, setTradeURLParams } from '@deriv/shared';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport useActiveSymbols from './useActiveSymbols';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\n// The hook handles the cases when the selected `contract_type` is changed during account switch or if the symbol is not available in the URL param.\nconst useDefaultSymbol = () => {\n    const { processContractsForV2, onChange, symbol: symbol_from_store } = useTraderStore();\n    const { activeSymbols: active_symbols } = useActiveSymbols();\n    const has_initialized_ref = useRef(false);\n    const [symbol, setSymbol] = useState('');\n\n    const isSymbolAvailable = useCallback(\n        (active_symbols: ActiveSymbols) => {\n            const has_initialized = has_initialized_ref.current;\n\n            return active_symbols.some(symbol_info => {\n                const exchange_open_check = has_initialized ? true : symbol_info.exchange_is_open === 1;\n                return symbol_info.symbol === symbol_from_store && exchange_open_check;\n            });\n        },\n        [symbol_from_store]\n    );\n\n    const processNewSymbol = useCallback(\n        async (new_symbol: string) => {\n            // To call contracts_for during initialization\n            const has_initialized = has_initialized_ref.current;\n            const is_initailization = !has_initialized && new_symbol;\n            const has_symbol_changed = symbol_from_store != new_symbol && new_symbol;\n            setSymbol(new_symbol);\n\n            if (is_initailization || has_symbol_changed) {\n                await onChange({ target: { name: 'symbol', value: new_symbol } });\n                processContractsForV2();\n            }\n            setTradeURLParams({ symbol: new_symbol });\n        },\n        [onChange, processContractsForV2, symbol_from_store]\n    );\n\n    useEffect(() => {\n        const process = async () => {\n            const new_symbol = isSymbolAvailable(active_symbols)\n                ? symbol_from_store\n                : (await pickDefaultSymbol(active_symbols)) || '1HZ100V';\n\n            processNewSymbol(new_symbol);\n            has_initialized_ref.current = true;\n        };\n        process();\n    }, [active_symbols, isSymbolAvailable, processNewSymbol, symbol_from_store]);\n\n    return { symbol };\n};\n\nexport default useDefaultSymbol;\n","import React from 'react';\nimport { ActiveSymbols, TickSpotData } from '@deriv/api-types';\nimport { useDevice } from '@deriv-com/ui';\nimport { ChartBarrierStore, isAccumulatorContract } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { SmartChart } from 'Modules/SmartChart';\nimport AccumulatorsChartElements from 'Modules/SmartChart/Components/Markers/accumulators-chart-elements';\nimport ToolbarWidgets from 'Modules/SmartChart/Components/toolbar-widgets';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport useDefaultSymbol from 'AppV2/Hooks/useDefaultSymbol';\n\ntype TBottomWidgetsParams = {\n    digits: number[];\n    tick: TickSpotData | null;\n};\n\nconst BottomWidgetsMobile = observer(({ digits, tick }: TBottomWidgetsParams) => {\n    const { setDigitStats, setTickData } = useTraderStore();\n\n    // Using bottom widgets in V2 to get tick data for all trade types and to get digit stats for Digit trade types\n    React.useEffect(() => {\n        setTickData(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigitStats(digits);\n        // For digits array, which is coming from SmartChart, reference is not always changing.\n        // As it is the same, this useEffect was not triggered on every array update.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits.join('-')]);\n\n    // render no bottom widgets on chart\n    return null;\n});\n\nconst TradeChart = observer(() => {\n    const { ui, common, contract_trade, portfolio } = useStore();\n    const { isMobile } = useDevice();\n    const {\n        accumulator_barriers_data,\n        accumulator_contract_barriers_data,\n        chart_type,\n        granularity,\n        has_crossed_accu_barriers,\n        markers_array,\n        updateChartType,\n        updateGranularity,\n    } = contract_trade;\n    const ref = React.useRef<{ hasPredictionIndicators(): void; triggerPopup(arg: () => void): void }>(null);\n    const { all_positions } = portfolio;\n    const { is_chart_countdown_visible, is_chart_layout_default, is_dark_mode_on, is_positions_drawer_on } = ui;\n    const { current_language, is_socket_opened } = common;\n    const { activeSymbols: active_symbols } = useActiveSymbols();\n    const { symbol } = useDefaultSymbol();\n    const {\n        barriers_flattened: extra_barriers,\n        chartStateChange,\n        chart_layout,\n        contract_type,\n        exportLayout,\n        has_alternative_source,\n        has_barrier,\n        main_barrier_flattened: main_barrier,\n        setChartStatus,\n        show_digits_stats,\n        onChange,\n        prev_contract_type,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n    } = useTraderStore();\n    const is_accumulator = isAccumulatorContract(contract_type);\n    const settings = {\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n        ...(is_accumulator ? { whitespace: 190, minimumLeftBars: isMobile ? 3 : undefined } : {}),\n        ...(has_barrier ? { whitespace: 110 } : {}),\n    };\n\n    const { current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    React.useEffect(() => {\n        if ((is_accumulator || show_digits_stats) && ref.current?.hasPredictionIndicators()) {\n            const cancelCallback = () => onChange({ target: { name: 'contract_type', value: prev_contract_type } });\n            ref.current?.triggerPopup(cancelCallback);\n        }\n    }, [is_accumulator, onChange, prev_contract_type, show_digits_stats]);\n\n    const getMarketsOrder = (active_symbols: ActiveSymbols): string[] => {\n        const synthetic_index = 'synthetic_index';\n        const has_synthetic_index = active_symbols.some(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers: ChartBarrierStore[] = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || !active_symbols.length) return null;\n    return (\n        <SmartChart\n            ref={ref}\n            barriers={barriers}\n            contracts_array={markers_array}\n            bottomWidgets={BottomWidgetsMobile}\n            crosshair={isMobile ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats\n            chartControlsWidgets={null}\n            chartStatusListener={(v: boolean) => setChartStatus(!v, true)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={!isMobile}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile}\n            isVerticalScrollEnabled={false}\n            maxTick={isMobile ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={() => <div /> /* to hide the original chart market dropdown */}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => {\n                return <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />;\n            }}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={false}\n            hasAlternativeSource={has_alternative_source}\n            getMarketsOrder={getMarketsOrder}\n            should_zoom_out_on_yaxis={is_accumulator}\n            yAxisMargin={{\n                top: isMobile ? 76 : 106,\n            }}\n            isLive\n            leftMargin={!isMobile && is_positions_drawer_on ? 328 : 80}\n        >\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    should_show_profit_text={!!accumulator_contract_barriers_data.accumulators_high_barrier}\n                    symbol={symbol}\n                    is_mobile={isMobile}\n                />\n            )}\n        </SmartChart>\n    );\n});\nexport default TradeChart;\n","import React from 'react';\nimport { Modal } from '@deriv-com/quill-ui';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport { DESCRIPTION_VIDEO_ID } from 'Modules/Trading/Helpers/video-config';\nimport StreamIframe from '../../StreamIframe';\n\ntype TTradeTypeSelectionGuideProps = {\n    is_dark_mode_on?: boolean;\n};\n\nconst TradeTypesSelectionGuide: React.FC<TTradeTypeSelectionGuideProps> = ({ is_dark_mode_on }) => {\n    const [is_modal_open, setIsModalOpen] = React.useState(false);\n    const guide_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const [guide_dtrader_v2, setGuideDtraderV2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n    const { trade_types_selection } = guide_dtrader_v2 || {};\n\n    const video_src = is_dark_mode_on\n        ? DESCRIPTION_VIDEO_ID.trade_type_selection.dark\n        : DESCRIPTION_VIDEO_ID.trade_type_selection.light;\n\n    const onFinishGuide = () => {\n        setIsModalOpen(false);\n        setGuideDtraderV2({ ...guide_dtrader_v2, trade_types_selection: true });\n    };\n\n    React.useEffect(() => {\n        if (!trade_types_selection) guide_timeout_ref.current = setTimeout(() => setIsModalOpen(true), 800);\n\n        return () => clearTimeout(guide_timeout_ref.current);\n    }, [trade_types_selection]);\n\n    if (trade_types_selection) return null;\n\n    return (\n        <Modal\n            isOpened={is_modal_open}\n            isNonExpandable\n            isMobile\n            showHandleBar\n            shouldCloseModalOnSwipeDown\n            toggleModal={onFinishGuide}\n            primaryButtonLabel={<Localize i18n_default_text='Got it' />}\n            primaryButtonCallback={onFinishGuide}\n        >\n            <Modal.Header\n                image={<StreamIframe src={video_src} title='trade_types_selection' />}\n                title={<Localize i18n_default_text='Manage your trade types' />}\n            />\n            <Modal.Body>\n                <Localize i18n_default_text='Pin, rearrange, or remove your favorite trade types for easy access.' />\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default React.memo(TradeTypesSelectionGuide);\n","import TradeTypesSelectionGuide from './trade-types-selection-guide';\n\nexport default TradeTypesSelectionGuide;\n","import React, { useState } from 'react';\nimport { StandaloneGripDotsVerticalBoldIcon, StandaloneCircleMinusFillIcon } from '@deriv/quill-icons';\nimport clsx from 'clsx';\nimport { isTouchDevice } from '@deriv/shared';\n\ntype TDraggableListItemProps = {\n    active?: boolean;\n    disabled?: boolean;\n    leftIcon?: React.ReactNode;\n    onLeftIconClick?: () => void;\n    onRightIconClick?: () => void;\n    rightIcon?: React.ReactNode;\n    title: string;\n};\n\nconst DraggableListItem: React.FC<TDraggableListItemProps> = ({\n    active,\n    disabled,\n    leftIcon,\n    onLeftIconClick,\n    onRightIconClick,\n    rightIcon,\n    title,\n}) => {\n    const default_left_icon = (\n        <StandaloneGripDotsVerticalBoldIcon iconSize='sm' fill='var(--component-textIcon-normal-default)' />\n    );\n    const default_right_icon = <StandaloneCircleMinusFillIcon fill='var(--core-color-solid-red-700)' iconSize='sm' />;\n    const [is_moved, setIsMoved] = useState<boolean>(false);\n\n    return (\n        <div className={clsx('draggable-list-item', { 'draggable-list-item--active': active })}>\n            <div className='draggable-list-item__left'>\n                <button\n                    className='draggable-list-item__left-icon'\n                    data-testid='dt_draggable_list_item_left_icon'\n                    onClick={onLeftIconClick}\n                    disabled={disabled}\n                >\n                    {leftIcon || default_left_icon}\n                </button>\n                <div className='draggable-list-item__title'>{title}</div>\n            </div>\n            <button\n                className={clsx('draggable-list-item__icon', { 'draggable-list-item__icon--disabled': disabled })}\n                data-testid='dt_draggable_list_item_icon'\n                onClick={() => {\n                    if (!isTouchDevice() && onRightIconClick) onRightIconClick();\n                }}\n                onTouchMove={() => {\n                    if (!is_moved) setIsMoved(true);\n                }}\n                onTouchEnd={() => {\n                    if (!is_moved && onRightIconClick && !disabled) {\n                        onRightIconClick();\n                    }\n                    setIsMoved(false);\n                }}\n                disabled={disabled}\n            >\n                {rightIcon || default_right_icon}\n            </button>\n        </div>\n    );\n};\n\nexport default DraggableListItem;\n","import React from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult, DragStart } from 'react-beautiful-dnd';\nimport DraggableListItem from './draggable-list-item';\n\nexport type TDraggableListItem = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\nexport type TDraggableListCategory = {\n    id: string;\n    title?: string;\n    button_title?: string;\n    items: TDraggableListItem[];\n};\n\nexport type TDraggableListProps = {\n    categories: TDraggableListCategory[];\n    onRightIconClick: (item: TDraggableListItem) => void;\n    onDrag?: (categories: TDraggableListCategory[]) => void;\n    show_editing_divider?: boolean;\n};\n\nconst DraggableList: React.FC<TDraggableListProps> = ({\n    categories,\n    onRightIconClick,\n    onDrag,\n    show_editing_divider,\n}) => {\n    const [category_list, setCategoryList] = React.useState(categories);\n    const [draggedItemId, setDraggedItemId] = React.useState<string | null>(null);\n\n    const handleOnDragEnd = (result: DropResult) => {\n        setDraggedItemId(null);\n        if (!result.destination) return;\n\n        const new_category_list = updateCategoriesWithDragResult(category_list, result);\n        setCategoryList(new_category_list);\n        onDrag?.(new_category_list);\n    };\n\n    const handleOnDragStart = (start: DragStart) => setDraggedItemId(start.draggableId);\n\n    React.useEffect(() => setCategoryList(categories), [categories]);\n    return (\n        <DragDropContext onDragEnd={handleOnDragEnd} onDragStart={handleOnDragStart}>\n            {category_list.map(category => (\n                <DraggableCategory\n                    key={category.id}\n                    category={category}\n                    draggedItemId={draggedItemId}\n                    onRightIconClick={onRightIconClick}\n                    show_editing_divider={show_editing_divider}\n                />\n            ))}\n        </DragDropContext>\n    );\n};\n\nconst DraggableCategory: React.FC<{\n    category: TDraggableListCategory;\n    draggedItemId: string | null;\n    onRightIconClick: (item: TDraggableListItem) => void;\n    show_editing_divider?: boolean;\n}> = ({ category, draggedItemId, onRightIconClick, show_editing_divider }) => (\n    <div className={show_editing_divider ? 'draggable-list-category' : ''}>\n        <Droppable droppableId={category.id}>\n            {provided => (\n                <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className='draggable-list-category__droppable-area'\n                >\n                    <DraggableCategoryItems\n                        items={category.items}\n                        draggedItemId={draggedItemId}\n                        onRightIconClick={onRightIconClick}\n                    />\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    </div>\n);\n\nconst DraggableCategoryItems: React.FC<{\n    items: TDraggableListItem[];\n    draggedItemId: string | null;\n    onRightIconClick: (item: TDraggableListItem) => void;\n}> = ({ items, draggedItemId, onRightIconClick }) => {\n    return (\n        <>\n            {items.map(\n                (item, index) =>\n                    item.id && (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {provided => (\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    className='draggable-list-category__item'\n                                >\n                                    <DraggableListItem\n                                        title={item.title}\n                                        onRightIconClick={() => onRightIconClick(item)}\n                                        active={draggedItemId === item.id}\n                                        disabled={items.length === 1}\n                                    />\n                                </div>\n                            )}\n                        </Draggable>\n                    )\n            )}\n        </>\n    );\n};\n\nconst updateCategoriesWithDragResult = (\n    category_list: TDraggableListCategory[],\n    result: DropResult\n): TDraggableListCategory[] => {\n    const { source, destination } = result;\n    if (!destination) return category_list;\n\n    const sourceIndex = category_list.findIndex(category => category.id === source.droppableId);\n    const destIndex = category_list.findIndex(category => category.id === destination.droppableId);\n\n    if (sourceIndex === -1 || destIndex === -1) return category_list;\n\n    const sourceCategory = category_list[sourceIndex];\n    const destCategory = category_list[destIndex];\n\n    const sourceItems = Array.from(sourceCategory.items);\n    const [movedItem] = sourceItems.splice(source.index, 1);\n\n    if (sourceIndex === destIndex) {\n        sourceItems.splice(destination.index, 0, movedItem);\n    } else {\n        const destItems = Array.from(destCategory.items);\n        destItems.splice(destination.index, 0, movedItem);\n        category_list[destIndex] = { ...destCategory, items: destItems };\n    }\n\n    category_list[sourceIndex] = { ...sourceCategory, items: sourceItems };\n    return Array.from(category_list);\n};\n\nexport default DraggableList;\n","import React from 'react';\nimport { StandaloneCirclePlusFillIcon } from '@deriv/quill-icons';\nimport clsx from 'clsx';\n\ntype TTradeTypeListItemProps = {\n    title: string;\n    selected?: boolean;\n    leftIcon?: React.ReactNode;\n    rightIcon?: React.ReactNode;\n    onLeftIconClick?: () => void;\n    onRightIconClick?: () => void;\n    onTradeTypeClick?: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n};\n\nconst TradeTypeListItem: React.FC<TTradeTypeListItemProps> = ({\n    title,\n    selected,\n    leftIcon,\n    rightIcon,\n    onLeftIconClick,\n    onRightIconClick,\n    onTradeTypeClick,\n}) => {\n    const default_icon = <StandaloneCirclePlusFillIcon fill='var(--core-color-solid-green-700)' iconSize='sm' />;\n\n    return (\n        <div\n            className={clsx('trade-type-list-item', { 'trade-type-list-item--selected': selected })}\n            onClick={onTradeTypeClick}\n            onKeyDown={onTradeTypeClick}\n        >\n            {leftIcon && (\n                <button\n                    className='trade-type-list-item__left-icon'\n                    data-testid='dt_trade_type_list_item_left_icon'\n                    onClick={onLeftIconClick}\n                >\n                    {leftIcon}\n                </button>\n            )}\n            <div className='trade-type-list-item__title'>{title}</div>\n            {onRightIconClick && (\n                <button\n                    className='trade-type-list-item__icon'\n                    data-testid='dt_trade_type_list_item_right_icon'\n                    onClick={onRightIconClick}\n                >\n                    {rightIcon || default_icon}\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default TradeTypeListItem;\n","import React from 'react';\nimport TradeTypeListItem from './trade-type-list-item';\nimport { Button, Text } from '@deriv-com/quill-ui';\nimport './trade-type-list.scss';\nimport { Localize } from '@deriv/translations';\nimport clsx from 'clsx';\n\ntype TTradeTypeItem = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\ntype TTradeTypeCategory = {\n    id: string;\n    title?: string;\n    button_title?: string;\n    items: TTradeTypeItem[];\n};\n\ntype TTradeTypeListProps = {\n    categories?: TTradeTypeCategory[];\n    isSelected: (id: string) => boolean;\n    selectable?: boolean;\n    show_divider?: boolean;\n    onRightIconClick?: (item: TTradeTypeItem) => void;\n    onTradeTypeClick?: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n};\n\nconst TradeTypeList: React.FC<TTradeTypeListProps> = ({\n    categories,\n    isSelected,\n    selectable,\n    show_divider,\n    onRightIconClick,\n    onTradeTypeClick,\n}) => {\n    const [category_list, setCategoryList] = React.useState(categories);\n\n    React.useEffect(() => {\n        setCategoryList(categories);\n    }, [categories]);\n\n    if (!categories?.[0]?.items.length) return null;\n    return (\n        <React.Fragment>\n            {category_list?.map(category => (\n                <div\n                    key={category.id}\n                    className={clsx('trade-type-list-category', {\n                        'trade-type-list-category__border': category.items && category.items.length > 0 && show_divider,\n                    })}\n                >\n                    <div className='trade-type-list-category__items'>\n                        {category.items?.map((item: TTradeTypeItem) => (\n                            <div key={item.id}>\n                                <TradeTypeListItem\n                                    title={item.title}\n                                    selected={!!selectable && isSelected(item.id)}\n                                    onRightIconClick={onRightIconClick && (() => onRightIconClick(item))}\n                                    onTradeTypeClick={onTradeTypeClick}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default TradeTypeList;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { Localize } from '@deriv/translations';\nimport { ActionSheet, Button, Text } from '@deriv-com/quill-ui';\n\nimport { DraggableList } from 'AppV2/Components/DraggableList';\nimport { TradeTypeList } from 'AppV2/Components/TradeTypeList';\n\nimport { TItem, TResultItem } from './trade-types';\n\ntype TTradeTypesContent = {\n    handleCustomizeTradeTypes: () => void;\n    handleRemovePinnedClick: (item: TItem) => void;\n    handleOnDrag: (categories: TResultItem[]) => void;\n    handleOnTradeTypeSelect: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n    handleAddPinnedClick: (item: TItem) => void;\n    is_editing?: boolean;\n    is_dark_mode_on: boolean;\n    isTradeTypeSelected: (value: string) => boolean;\n    savePinnedToLocalStorage: () => void;\n    show_trade_type_list_divider?: boolean;\n    show_editing_divider?: boolean;\n    other_trade_types: TResultItem[];\n    pinned_trade_types: TResultItem[];\n};\n\nconst TradeTypesContent = ({\n    handleCustomizeTradeTypes,\n    handleRemovePinnedClick,\n    handleOnDrag,\n    handleOnTradeTypeSelect,\n    handleAddPinnedClick,\n    is_editing,\n    is_dark_mode_on,\n    isTradeTypeSelected,\n    savePinnedToLocalStorage,\n    show_trade_type_list_divider,\n    show_editing_divider,\n    other_trade_types,\n    pinned_trade_types,\n}: TTradeTypesContent) => (\n    <React.Fragment>\n        <div>\n            <div className='draggable-list-category-header'>\n                <Text size='sm' bold className='draggable-list-category-header-title'>\n                    {is_editing && <Localize i18n_default_text='Pinned' />}\n                </Text>\n                <Button\n                    color={is_dark_mode_on ? 'white' : 'black'}\n                    variant='secondary'\n                    className='draggable-list-category-header-button'\n                    onClick={is_editing ? savePinnedToLocalStorage : handleCustomizeTradeTypes}\n                >\n                    {is_editing ? <Localize i18n_default_text='Done' /> : <Localize i18n_default_text='Customise' />}\n                </Button>\n            </div>\n        </div>\n        <ActionSheet.Content className='trade-types-dialog__content'>\n            {is_editing ? (\n                <DraggableList\n                    categories={pinned_trade_types}\n                    onRightIconClick={handleRemovePinnedClick}\n                    onDrag={handleOnDrag}\n                    show_editing_divider={show_editing_divider}\n                />\n            ) : (\n                <TradeTypeList\n                    categories={pinned_trade_types}\n                    onTradeTypeClick={handleOnTradeTypeSelect}\n                    isSelected={isTradeTypeSelected}\n                    selectable\n                    show_divider={show_trade_type_list_divider}\n                />\n            )}\n            <TradeTypeList\n                categories={other_trade_types}\n                onRightIconClick={is_editing ? handleAddPinnedClick : undefined}\n                onTradeTypeClick={is_editing ? undefined : handleOnTradeTypeSelect}\n                isSelected={isTradeTypeSelected}\n                selectable={!is_editing}\n            />\n        </ActionSheet.Content>\n    </React.Fragment>\n);\n\nexport default TradeTypesContent;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { LabelPairedPresentationScreenSmRegularIcon } from '@deriv/quill-icons';\nimport { Localize, localize } from '@deriv/translations';\nimport { safeParse } from '@deriv/utils';\nimport { ActionSheet, Button, Chip, Text } from '@deriv-com/quill-ui';\n\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeTypesSelectionGuide from 'AppV2/Components/OnboardingGuide/TradeTypesSelectionGuide';\nimport { checkContractTypePrefix } from 'AppV2/Utils/contract-type';\nimport { getTradeTypesList, sortCategoriesInTradeTypeOrder } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { sendOpenGuideToAnalytics } from '../../../Analytics';\nimport Guide from '../../Components/Guide';\n\nimport TradeTypesContent from './trade-types-content';\n\ntype TTradeTypesProps = {\n    onTradeTypeSelect: (\n        e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n        subform_name: string,\n        trade_type_count: number\n    ) => void;\n    trade_types: ReturnType<typeof getTradeTypesList>;\n    contract_type: string;\n    is_dark_mode_on: boolean;\n} & Pick<ReturnType<typeof useTraderStore>, 'contract_type'>;\n\nexport type TItem = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\nexport type TResultItem = {\n    id: string;\n    title?: string;\n    button_title?: string;\n    onButtonClick?: () => void;\n    items: TItem[];\n};\n\nconst TradeTypes = ({ contract_type, onTradeTypeSelect, trade_types, is_dark_mode_on }: TTradeTypesProps) => {\n    const [is_open, setIsOpen] = React.useState<boolean>(false);\n    const [is_editing, setIsEditing] = React.useState<boolean>(false);\n    const trade_types_ref = React.useRef<HTMLDivElement>(null);\n\n    const createArrayFromCategories = (data: TTradeTypesProps['trade_types']): TItem[] => {\n        const result: TItem[] = [];\n\n        data.forEach(category => {\n            result.push({\n                id: category.value,\n                title: category.text ?? '',\n            });\n        });\n\n        return result;\n    };\n\n    const saved_pinned_trade_types_string: string = localStorage.getItem('pinned_trade_types') ?? '[]';\n    const saved_pinned_trade_types: TResultItem[] = useMemo(\n        () => safeParse(saved_pinned_trade_types_string) ?? [],\n        [saved_pinned_trade_types_string]\n    );\n\n    const [other_trade_types, setOtherTradeTypes] = useState<TResultItem[]>([]);\n    const [pinned_trade_types, setPinnedTradeTypes] = useState<TResultItem[]>(saved_pinned_trade_types);\n\n    const trade_types_array = useMemo(() => {\n        return createArrayFromCategories(trade_types);\n    }, [trade_types]);\n\n    const getPinnedItems = useCallback(() => {\n        const pinned_items = filterItems(getItems(saved_pinned_trade_types), trade_types_array);\n\n        if (pinned_items.length === 0) {\n            pinned_items.push(...trade_types_array.slice(0, trade_types_array.length));\n        }\n        return pinned_items;\n    }, [saved_pinned_trade_types, trade_types_array]);\n\n    const setTradeTypes = useCallback(() => {\n        const pinned_items = getPinnedItems();\n\n        const default_pinned_trade_types = [\n            {\n                id: 'pinned',\n                title: localize('Pinned'),\n                items: pinned_items,\n            },\n        ];\n\n        const default_other_trade_types = [\n            {\n                id: 'other',\n                items: trade_types_array.filter(item => !pinned_items.some(pinned_item => pinned_item.id === item.id)),\n            },\n        ];\n\n        setPinnedTradeTypes(default_pinned_trade_types);\n        setOtherTradeTypes(default_other_trade_types);\n    }, [getPinnedItems, trade_types_array]);\n\n    useEffect(() => {\n        setTradeTypes();\n    }, [setTradeTypes]);\n\n    useEffect(() => {\n        scrollToSelectedTradeType();\n    }, []);\n\n    const handleCloseTradeTypes = () => {\n        setIsOpen(false);\n        setIsEditing(false);\n    };\n\n    const handleCustomizeTradeTypes = () => {\n        setIsEditing(true);\n    };\n\n    const handleAddPinnedClick = (item: TItem) => {\n        setOtherTradeTypes(prev_categories => modifyCategories(prev_categories, item));\n        setPinnedTradeTypes(prev_pinned => modifyPinnedCategories(prev_pinned, item, 'add'));\n    };\n\n    const handleRemovePinnedClick = (item: TItem) => {\n        setPinnedTradeTypes(prev_categories => modifyCategories(prev_categories, item));\n        setOtherTradeTypes(prev_others => modifyOtherCategories(prev_others, item));\n    };\n\n    const modifyPinnedCategories = (categories: TResultItem[], item: TItem, action: 'add' | 'remove') => {\n        return categories.map(category => {\n            if (category.id === 'pinned') {\n                return {\n                    ...category,\n                    items: action === 'add' ? [...category.items, item] : category.items.filter(i => i.id !== item.id),\n                };\n            }\n            return category;\n        });\n    };\n\n    const modifyCategories = (categories: TResultItem[], item: TItem) =>\n        categories.map(category => ({\n            ...category,\n            items: category.items.filter(i => i.id !== item.id),\n        }));\n\n    const modifyOtherCategories = (categories: TResultItem[], item: TItem) => {\n        return categories.map(category => {\n            if (category.id === 'other') {\n                return {\n                    ...category,\n                    items: sortCategoriesInTradeTypeOrder(trade_types, [...category.items, item]),\n                };\n            }\n            return category;\n        });\n    };\n\n    const scrollToSelectedTradeType = () => {\n        setTimeout(() => {\n            let position_x = 0;\n            if (trade_types_ref.current) {\n                const selected_chip = trade_types_ref.current.querySelector(\n                    'button[data-state=\"selected\"]'\n                ) as HTMLButtonElement;\n                if (selected_chip) {\n                    position_x =\n                        selected_chip.getBoundingClientRect().x -\n                            (window.innerWidth - selected_chip.getBoundingClientRect().width) / 2 || 0;\n                }\n                trade_types_ref.current.scrollBy({\n                    left: position_x,\n                    top: 0,\n                });\n            }\n        }, 0);\n    };\n\n    const savePinnedToLocalStorage = () => {\n        localStorage.setItem('pinned_trade_types', JSON.stringify(pinned_trade_types));\n        setIsEditing(false);\n    };\n\n    const handleOnDrag = (categories: TResultItem[]) => {\n        setPinnedTradeTypes(categories);\n    };\n\n    const handleOnTradeTypeSelect = (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        onTradeTypeSelect(e, 'trade_type_page', getPinnedItems().length);\n        scrollToSelectedTradeType();\n        setIsOpen(false);\n    };\n\n    const handleOpenActionSheet = () => {\n        setTradeTypes();\n        setIsOpen(true);\n    };\n\n    const isTradeTypeSelected = (value: string) =>\n        checkContractTypePrefix([contract_type, value]) || contract_type === value;\n\n    const getItems = (trade_types: TResultItem[]) => trade_types.flatMap(type => type.items);\n\n    const filterItems = (items: TItem[], tradeTypes: TItem[]): TItem[] => {\n        const trade_types_ids = tradeTypes.map(type => type.id);\n        return items.filter(item => trade_types_ids.includes(item.id));\n    };\n\n    const getTradeTypeChips = () => {\n        const pinned_items = getPinnedItems();\n        const is_contract_type_in_pinned = pinned_items.some(item => item.id === contract_type);\n\n        const other_item = !is_contract_type_in_pinned\n            ? getItems(other_trade_types).find(\n                  item => item && (item.id === contract_type || checkContractTypePrefix([item.id, contract_type]))\n              )\n            : null;\n\n        return [...pinned_items, other_item].filter(Boolean) as TItem[];\n    };\n\n    const trade_type_chips = getTradeTypeChips();\n    const should_show_view_all = trade_type_chips.length >= 2 || getItems(other_trade_types).length > 0;\n    const show_trade_type_list_divider = !!other_trade_types[0]?.items?.length;\n    const show_editing_divider = trade_types_array.length !== pinned_trade_types[0]?.items?.length;\n    const trade_type_content_props = {\n        handleCustomizeTradeTypes,\n        handleRemovePinnedClick,\n        handleOnDrag,\n        handleOnTradeTypeSelect,\n        handleAddPinnedClick,\n        is_editing,\n        is_dark_mode_on,\n        isTradeTypeSelected,\n        savePinnedToLocalStorage,\n        show_trade_type_list_divider,\n        show_editing_divider,\n        other_trade_types,\n        pinned_trade_types,\n    };\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: <TradeTypesContent {...trade_type_content_props} />,\n        },\n        {\n            id: 2,\n            component: <Guide show_trigger_button={false} is_open_by_default show_description_in_a_modal={false} />,\n        },\n    ];\n\n    return (\n        <div className='trade__trade-types' ref={trade_types_ref}>\n            {trade_type_chips.map(({ title, id }: TItem) => (\n                <Chip.Selectable\n                    key={id}\n                    onChipSelect={e => onTradeTypeSelect(e, 'main_trade_page', getPinnedItems().length)}\n                    selected={isTradeTypeSelected(id)}\n                >\n                    <Text size='sm'>{title}</Text>\n                </Chip.Selectable>\n            ))}\n            {should_show_view_all && (\n                <Button\n                    key='trade-types-all'\n                    onClick={handleOpenActionSheet}\n                    variant='tertiary'\n                    className='trade__trade-types-header'\n                    color={is_dark_mode_on ? 'white' : 'black'}\n                >\n                    <Text size='sm' bold underlined color='var(--component-button-label-color-blackWhite-tertiary)'>\n                        <Localize i18n_default_text='View all' />\n                    </Text>\n                </Button>\n            )}\n            <ActionSheet.Root\n                className={clsx('trade-types-dialog', {\n                    'trade-types-dialog--is_editing': is_editing,\n                })}\n                isOpen={is_open}\n                expandable={false}\n                onClose={handleCloseTradeTypes}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    {is_editing ? (\n                        <React.Fragment>\n                            <ActionSheet.Header\n                                title={\n                                    <div className='trade-types-dialog__title'>\n                                        <Localize i18n_default_text='Trade types' />\n                                    </div>\n                                }\n                            />\n                            <TradeTypesContent {...trade_type_content_props} />\n                        </React.Fragment>\n                    ) : (\n                        <Carousel\n                            header={CarouselHeader}\n                            pages={action_sheet_content}\n                            title={<Localize i18n_default_text='Trade types' />}\n                            next_icon={LabelPairedPresentationScreenSmRegularIcon}\n                            onNextButtonClick={() => sendOpenGuideToAnalytics(contract_type, 'trade_type_page')}\n                        />\n                    )}\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n            {is_open && <TradeTypesSelectionGuide is_dark_mode_on={is_dark_mode_on} />}\n        </div>\n    );\n};\n\nexport default React.memo(TradeTypes);\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\n\nimport { Loading } from '@deriv/components';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { useStore } from '@deriv/stores';\n\nimport AccumulatorStats from 'AppV2/Components/AccumulatorStats';\nimport BottomNav from 'AppV2/Components/BottomNav';\nimport ClosedMarketMessage from 'AppV2/Components/ClosedMarketMessage';\nimport CurrentSpot from 'AppV2/Components/CurrentSpot';\nimport MarketSelector from 'AppV2/Components/MarketSelector';\nimport OnboardingGuide from 'AppV2/Components/OnboardingGuide/GuideForPages';\nimport PurchaseButton from 'AppV2/Components/PurchaseButton';\nimport ServiceErrorSheet from 'AppV2/Components/ServiceErrorSheet';\nimport TradeErrorSnackbar from 'AppV2/Components/TradeErrorSnackbar';\nimport { TradeParameters, TradeParametersContainer } from 'AppV2/Components/TradeParameters';\nimport useContractsForCompany from 'AppV2/Hooks/useContractsForCompany';\nimport { getChartHeight, HEIGHT } from 'AppV2/Utils/layout-utils';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { sendSelectedTradeTypeToAnalytics } from '../../../Analytics';\nimport { TradeChart } from '../Chart';\n\nimport TradeTypes from './trade-types';\n\nconst Trade = observer(() => {\n    const [is_minimized_params_visible, setIsMinimizedParamsVisible] = React.useState(false);\n    const chart_ref = React.useRef<HTMLDivElement>(null);\n    const {\n        client: { is_logged_in, is_switching },\n        common: { current_language, network_status },\n        ui: { is_dark_mode_on },\n    } = useStore();\n    const {\n        active_symbols,\n        contract_type,\n        has_cancellation,\n        is_accumulator,\n        is_multiplier,\n        is_market_closed,\n        onChange,\n        onMount,\n        onUnmount,\n        symbol,\n        proposal_info,\n        trade_types: trade_types_store,\n        trade_type_tab,\n    } = useTraderStore();\n    const { trade_types, resetTradeTypes } = useContractsForCompany();\n    const [guide_dtrader_v2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n\n    // For handling edge cases of snackbar:\n    const contract_types = getDisplayedContractTypes(trade_types_store, contract_type, trade_type_tab);\n    const is_all_types_with_errors = contract_types.every(item => proposal_info?.[item]?.has_error);\n    // Showing snackbar for all cases, except when it is Rise/Fall or Digits and only one subtype has error\n    const should_show_snackbar = contract_types.length === 1 || is_multiplier || is_all_types_with_errors;\n\n    const symbols = React.useMemo(\n        () =>\n            active_symbols.map(({ display_name, symbol: underlying }) => ({\n                text: display_name,\n                value: underlying,\n            })),\n        [active_symbols]\n    );\n\n    const onTradeTypeSelect = React.useCallback(\n        (\n            e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n            subform_name: string,\n            trade_type_count: number\n        ) => {\n            const value = trade_types.find(({ text }) => text === (e.target as HTMLButtonElement).textContent)?.value;\n            onChange({\n                target: {\n                    name: 'contract_type',\n                    value,\n                },\n            });\n            sendSelectedTradeTypeToAnalytics(value || '', subform_name, symbol, trade_type_count);\n        },\n        [trade_types, onChange, symbol]\n    );\n\n    const onScroll = React.useCallback(() => {\n        const current_chart_ref = chart_ref?.current;\n        if (current_chart_ref) {\n            const chart_bottom_Y = current_chart_ref.getBoundingClientRect().bottom;\n            const container_bottom_Y = window.innerHeight - HEIGHT.BOTTOM_NAV;\n            setIsMinimizedParamsVisible(chart_bottom_Y <= container_bottom_Y);\n        }\n    }, []);\n\n    React.useEffect(() => {\n        onMount();\n        return onUnmount;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [current_language, network_status.class]);\n\n    useEffect(() => {\n        if (is_switching) {\n            resetTradeTypes();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    return (\n        <BottomNav onScroll={onScroll}>\n            {symbols.length && trade_types.length && !is_switching ? (\n                <React.Fragment>\n                    <div className='trade'>\n                        <TradeTypes\n                            contract_type={contract_type}\n                            onTradeTypeSelect={onTradeTypeSelect}\n                            trade_types={trade_types}\n                            is_dark_mode_on={is_dark_mode_on}\n                        />\n                        <MarketSelector />\n                        {isDigitTradeType(contract_type) && <CurrentSpot />}\n                        <TradeParametersContainer>\n                            <TradeParameters />\n                        </TradeParametersContainer>\n                        <div className='trade__chart-tooltip'>\n                            <section\n                                className={clsx('trade__chart', { 'trade__chart--with-borderRadius': !is_accumulator })}\n                                style={{\n                                    height: getChartHeight({ is_accumulator, symbol, has_cancellation, contract_type }),\n                                }}\n                                ref={chart_ref}\n                            >\n                                <TradeChart />\n                            </section>\n                        </div>\n                        {is_accumulator && <AccumulatorStats />}\n                    </div>\n                    <div className={clsx('trade__parameter', { 'trade__parameter--with-button': !is_market_closed })}>\n                        <TradeParametersContainer is_minimized_visible={is_minimized_params_visible} is_minimized>\n                            <TradeParameters is_minimized />\n                        </TradeParametersContainer>\n                        {!is_market_closed && <PurchaseButton />}\n                    </div>\n                    {!guide_dtrader_v2?.trade_page && is_logged_in && (\n                        <OnboardingGuide type='trade_page' is_dark_mode_on={is_dark_mode_on} />\n                    )}\n                </React.Fragment>\n            ) : (\n                <Loading.DTraderV2 />\n            )}\n            <ServiceErrorSheet />\n            <ClosedMarketMessage />\n            <TradeErrorSnackbar\n                error_fields={['stop_loss', 'take_profit', 'date_start', 'stake']}\n                should_show_snackbar={should_show_snackbar}\n            />\n        </BottomNav>\n    );\n});\n\nexport default Trade;\n","import Trade from './trade';\nimport './trade.scss';\n\nexport default Trade;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { StandaloneBriefcaseFillIcon, StandaloneSearchFillIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { TAB_NAME } from 'AppV2/Utils/positions-utils';\n\nexport type TEmptyPositionsProps = {\n    isClosedTab?: boolean;\n    noMatchesFound?: boolean;\n};\n\nconst EmptyPositions = ({ isClosedTab, noMatchesFound }: TEmptyPositionsProps) => {\n    const Icon = noMatchesFound ? StandaloneSearchFillIcon : StandaloneBriefcaseFillIcon;\n\n    return (\n        <div\n            className={`empty-positions__${isClosedTab ? TAB_NAME.CLOSED.toLowerCase() : TAB_NAME.OPEN.toLowerCase()}`}\n        >\n            <div className='icon' data-testid='dt_empty_state_icon'>\n                <Icon iconSize='2xl' />\n            </div>\n            <div className='message'>\n                <Text bold size='lg' color='quill-typography__color--subtle'>\n                    {noMatchesFound && <Localize i18n_default_text='No matches found' />}\n                    {!noMatchesFound &&\n                        (isClosedTab ? (\n                            <Localize i18n_default_text='No closed positions' />\n                        ) : (\n                            <Localize i18n_default_text='No open positions' />\n                        ))}\n                </Text>\n                <Text size='sm' centered color='quill-typography__color--subtle'>\n                    {noMatchesFound && (\n                        <Localize i18n_default_text='Try changing or removing filters to view available positions.' />\n                    )}\n                    {!noMatchesFound &&\n                        (isClosedTab ? (\n                            <Localize i18n_default_text='Your closed positions will be shown here.' />\n                        ) : (\n                            <Localize i18n_default_text='Your open positions will appear here.' />\n                        ))}\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyPositions;\n","import React from 'react';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { Tag } from '@deriv-com/quill-ui';\nimport { LabelPairedStopwatchCaptionRegularIcon } from '@deriv/quill-icons';\nimport { getCardLabels } from '@deriv/shared';\nimport { RemainingTime } from '@deriv/components';\nimport { TRootStore } from 'Types';\n\nexport type TContractCardStatusTimerProps = Pick<TPortfolioPosition['contract_info'], 'date_expiry' | 'tick_count'> & {\n    currentTick?: number | null;\n    isSold?: boolean;\n    serverTime?: TRootStore['common']['server_time'];\n};\n\nexport const ContractCardStatusTimer = ({\n    currentTick,\n    date_expiry,\n    isSold,\n    serverTime,\n}: TContractCardStatusTimerProps) => {\n    const getDisplayedDuration = () => {\n        if (currentTick) {\n            return `${currentTick ?? 0} ${getCardLabels().TICKS.toLowerCase()}`;\n        }\n        if (date_expiry && serverTime) {\n            return (\n                <RemainingTime\n                    as='span'\n                    end_time={date_expiry}\n                    getCardLabels={getCardLabels}\n                    start_time={serverTime as moment.Moment}\n                    key='remaining-time'\n                />\n            );\n        }\n        return null;\n    };\n    const displayedDuration = getDisplayedDuration();\n\n    if (!date_expiry || (serverTime as moment.Moment)?.unix() > +date_expiry || isSold) {\n        return <Tag className='status' label={getCardLabels().CLOSED} variant='custom' color='custom' size='sm' />;\n    }\n    return displayedDuration ? (\n        <Tag\n            className='timer'\n            icon={\n                <LabelPairedStopwatchCaptionRegularIcon\n                    key='open-contract-card'\n                    fill='var(--component-tag-label-color-default)'\n                />\n            }\n            label={displayedDuration}\n            variant='custom'\n            size='sm'\n        />\n    ) : null;\n};\n","import React from 'react';\nimport { Tag } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\ntype TForwardStartingTagProps = {\n    formatted_date?: string;\n    formatted_time?: string;\n};\n\nconst ForwardStartingTag = ({ formatted_date, formatted_time }: TForwardStartingTagProps) => {\n    if (!formatted_date || !formatted_time) return null;\n\n    return (\n        <Tag\n            color='info'\n            className='forward-starting'\n            data-testid='dt_forward-starting'\n            label={\n                <Localize\n                    i18n_default_text='Starts on {{formatted_date}}, {{formatted_time}}'\n                    values={{\n                        formatted_date,\n                        formatted_time,\n                    }}\n                />\n            }\n            showIcon={false}\n            size='sm'\n            variant='fill'\n        />\n    );\n};\n\nexport default ForwardStartingTag;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText, Tag, Text } from '@deriv-com/quill-ui';\nimport { useSwipeable } from 'react-swipeable';\nimport { IconTradeTypes, Money, RemainingTime } from '@deriv/components';\nimport {\n    TContractInfo,\n    formatDate,\n    formatTime,\n    getCardLabels,\n    getCurrentTick,\n    getMarketName,\n    getStartTime,\n    getTradeTypeName,\n    hasForwardContractStarted,\n    isCryptoContract,\n    isEnded,\n    isForwardStarting,\n    isHighLow,\n    isMultiplierContract,\n    isValidToCancel,\n    isValidToSell,\n    toMoment,\n} from '@deriv/shared';\nimport { ContractCardStatusTimer, TContractCardStatusTimerProps } from './contract-card-status-timer';\nimport { NavLink } from 'react-router-dom';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { TRootStore } from 'Types';\nimport { getProfit } from 'AppV2/Utils/positions-utils';\nimport ForwardStartingTag from './forward-starting-tag';\n\ntype TContractCardProps = TContractCardStatusTimerProps & {\n    className?: string;\n    contractInfo: TContractInfo | TClosedPosition['contract_info'];\n    currency?: string;\n    hasActionButtons?: boolean;\n    isSellRequested?: boolean;\n    onClick?: (e?: React.MouseEvent<HTMLAnchorElement | HTMLDivElement>) => void;\n    onCancel?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    onClose?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    redirectTo?: string | React.ComponentProps<typeof NavLink>['to'];\n    serverTime?: TRootStore['common']['server_time'];\n};\n\nconst DIRECTION = {\n    LEFT: 'left',\n    RIGHT: 'right',\n};\n\nconst swipeConfig = {\n    trackMouse: true,\n    preventScrollOnSwipe: true,\n};\n\nconst ContractCard = ({\n    className = 'contract-card',\n    contractInfo,\n    currency,\n    hasActionButtons,\n    isSellRequested,\n    onCancel,\n    onClick,\n    onClose,\n    redirectTo,\n    serverTime,\n}: TContractCardProps) => {\n    const [isDeleted, setIsDeleted] = React.useState(false);\n    const [isClosing, setIsClosing] = React.useState(false);\n    const [isCanceling, setIsCanceling] = React.useState(false);\n    const [shouldShowButtons, setShouldShowButtons] = React.useState(false);\n    const { buy_price, contract_type, display_name, purchase_time, sell_time, shortcode, limit_order } =\n        contractInfo as TContractInfo;\n    const { take_profit, stop_loss } = limit_order ?? { take_profit: {}, stop_loss: {} };\n    const is_high_low = isHighLow({ shortcode });\n    const contract_main_title = getTradeTypeName(contract_type ?? '', {\n        isHighLow: is_high_low,\n        showMainTitle: true,\n    });\n    const cancellation_date_expiry = 'cancellation' in contractInfo ? contractInfo.cancellation?.date_expiry : null;\n    const currentTick = 'tick_count' in contractInfo && contractInfo.tick_count ? getCurrentTick(contractInfo) : null;\n    const tradeTypeName = `${contract_main_title} ${getTradeTypeName(contract_type ?? '', {\n        isHighLow: is_high_low,\n    })}`.trim();\n    const symbolName =\n        'underlying_symbol' in contractInfo ? getMarketName(contractInfo.underlying_symbol ?? '') : display_name;\n    const is_crypto = isCryptoContract((contractInfo as TContractInfo).underlying);\n    const isMultiplier = isMultiplierContract(contract_type);\n    const isSold = !!sell_time || isEnded(contractInfo as TContractInfo);\n    const totalProfit = getProfit(contractInfo);\n    const validToCancel = isValidToCancel(contractInfo as TContractInfo);\n    const validToSell = isValidToSell(contractInfo as TContractInfo) && !isSellRequested;\n    const isCancelButtonPressed = isSellRequested && isCanceling;\n    const isCloseButtonPressed = isSellRequested && isClosing;\n    const has_no_auto_expiry = isMultiplier && !is_crypto;\n    const is_forward_starting = isForwardStarting(shortcode ?? '', purchase_time);\n    const start_time = getStartTime(shortcode ?? '');\n    const has_forward_contract_started = hasForwardContractStarted(shortcode ?? '');\n    const show_tag_forward_starting = is_forward_starting && !!start_time && !has_forward_contract_started && !isSold;\n    const show_status_timer_tag = (!has_no_auto_expiry || (has_no_auto_expiry && isSold)) && !show_tag_forward_starting;\n    const Component = redirectTo ? NavLink : 'div';\n\n    const handleSwipe = (direction: string) => {\n        const isLeft = direction === DIRECTION.LEFT;\n        setShouldShowButtons(isLeft);\n    };\n\n    const swipeHandlers = useSwipeable({\n        onSwipedLeft: () => handleSwipe(DIRECTION.LEFT),\n        onSwipedRight: () => handleSwipe(DIRECTION.RIGHT),\n        ...swipeConfig,\n    });\n\n    const handleClose = (e: React.MouseEvent<HTMLButtonElement>, shouldCancel?: boolean) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (shouldCancel) {\n            onCancel?.(e);\n            setIsCanceling(true);\n        } else {\n            onClose?.(e);\n            setIsClosing(true);\n        }\n    };\n\n    const getRiskManagementLabels = () => {\n        const labels: string[] = [];\n        if (take_profit?.order_amount) labels.push('TP');\n        if (stop_loss?.order_amount) labels.push('SL');\n        if (validToCancel) labels.push('DC');\n        return labels;\n    };\n    const risk_management_labels = getRiskManagementLabels();\n    const show_risk_management_labels = !!risk_management_labels.length && !isSold;\n\n    React.useEffect(() => {\n        if (isSold && hasActionButtons) {\n            setIsDeleted(true);\n        }\n    }, [isSold, hasActionButtons]);\n\n    if (!contract_type) return null;\n    return (\n        <div className={clsx(`${className}-wrapper`, { deleted: isDeleted })}>\n            <Component\n                {...(hasActionButtons ? swipeHandlers : {})}\n                className={clsx(className, {\n                    'show-buttons': shouldShowButtons,\n                    'has-cancel-button': validToCancel,\n                    lost: Number(totalProfit) < 0,\n                    won: Number(totalProfit) >= 0,\n                })}\n                onClick={onClick}\n                onDragStart={e => e.preventDefault()}\n                to={redirectTo}\n            >\n                <div className={`${className}__body`}>\n                    <div className={`${className}__details`}>\n                        <IconTradeTypes type={is_high_low ? `${contract_type}_barrier` : contract_type} size={16} />\n                        <div className='tag__wrapper'>\n                            {show_risk_management_labels &&\n                                risk_management_labels.map(label => (\n                                    <Tag\n                                        className='risk-management'\n                                        label={label}\n                                        key={label}\n                                        variant='custom'\n                                        size='sm'\n                                    />\n                                ))}\n                            {show_status_timer_tag && (\n                                <ContractCardStatusTimer\n                                    currentTick={currentTick}\n                                    isSold={isSold}\n                                    serverTime={serverTime}\n                                    {...contractInfo}\n                                />\n                            )}\n                            {show_tag_forward_starting && (\n                                <ForwardStartingTag\n                                    formatted_date={formatDate(toMoment(parseInt(start_time || '')), 'DD MMM YYYY')}\n                                    formatted_time={formatTime(parseInt(start_time || ''), 'HH:mm [GMT]')}\n                                />\n                            )}\n                        </div>\n                    </div>\n                    <div className={`${className}__details`}>\n                        <Text className='trade-type' size='sm'>\n                            {tradeTypeName}\n                        </Text>\n                        <Text size='sm' color='quill-typography__color--subtle'>\n                            <Money amount={buy_price} currency={currency} show_currency />\n                        </Text>\n                    </div>\n                    <div className={`${className}__details`}>\n                        <Text size='sm' className='symbol' color='quill-typography__color--subtle'>\n                            {symbolName}\n                        </Text>\n                        <Text className='profit' size='sm'>\n                            <Money amount={totalProfit} currency={currency} has_sign show_currency />\n                        </Text>\n                    </div>\n                </div>\n                {hasActionButtons && (\n                    <div className='buttons'>\n                        {validToCancel && (\n                            <button\n                                className={clsx({ loading: isCancelButtonPressed })}\n                                disabled={Number((contractInfo as TContractInfo).profit) >= 0 || isSellRequested}\n                                onClick={e => handleClose(e, true)}\n                            >\n                                {isCancelButtonPressed ? (\n                                    <div className='circle-loader' data-testid='dt_button_loader' />\n                                ) : (\n                                    <>\n                                        <CaptionText\n                                            bold\n                                            as='div'\n                                            className='label'\n                                            color='quill-typography__color--prominent'\n                                        >\n                                            {getCardLabels().CANCEL}\n                                        </CaptionText>\n                                        {cancellation_date_expiry && (\n                                            <CaptionText\n                                                bold\n                                                as='div'\n                                                className='label'\n                                                color='quill-typography__color--prominent'\n                                            >\n                                                <RemainingTime\n                                                    end_time={cancellation_date_expiry}\n                                                    format='mm:ss'\n                                                    getCardLabels={getCardLabels}\n                                                    start_time={serverTime as moment.Moment}\n                                                />\n                                            </CaptionText>\n                                        )}\n                                    </>\n                                )}\n                            </button>\n                        )}\n                        <button\n                            className={clsx({ loading: isCloseButtonPressed })}\n                            disabled={!validToSell}\n                            onClick={handleClose}\n                        >\n                            {isCloseButtonPressed ? (\n                                <div className='circle-loader' data-testid='dt_button_loader' />\n                            ) : (\n                                <CaptionText\n                                    bold\n                                    as='div'\n                                    className='label'\n                                    color='var(--component-textIcon-static-prominentDark)'\n                                >\n                                    {getCardLabels().CLOSE}\n                                </CaptionText>\n                            )}\n                        </button>\n                    </div>\n                )}\n            </Component>\n        </div>\n    );\n};\n\nexport default ContractCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { getContractPath } from '@deriv/shared';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { TRootStore } from 'Types';\nimport ContractCard from './contract-card';\n\nexport type TContractCardListProps = {\n    currency?: string;\n    hasButtonsDemo?: boolean;\n    onClickCancel?: (contractId: number) => void;\n    onClickSell?: (contractId: number) => void;\n    positions?: (TPortfolioPosition | TClosedPosition)[];\n    setHasButtonsDemo?: React.Dispatch<React.SetStateAction<boolean>>;\n    serverTime?: TRootStore['common']['server_time'];\n};\n\nconst ContractCardList = ({\n    hasButtonsDemo,\n    onClickCancel,\n    onClickSell,\n    positions = [],\n    setHasButtonsDemo,\n    ...rest\n}: TContractCardListProps) => {\n    React.useEffect(() => {\n        let demoTimeout: ReturnType<typeof setTimeout>;\n        if (hasButtonsDemo && setHasButtonsDemo) {\n            demoTimeout = setTimeout(() => setHasButtonsDemo(false), 720); // 720 is the length of demo animation\n        }\n        return () => {\n            if (demoTimeout) clearTimeout(demoTimeout);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!positions.length) return null;\n    return (\n        <div\n            className={clsx('contract-card-list', {\n                'contract-card-list--has-buttons-demo': hasButtonsDemo && !positions[0].contract_info.sell_time,\n            })}\n        >\n            {positions.map(position => {\n                const { contract_id: id } = position.contract_info;\n                return (\n                    <ContractCard\n                        key={id}\n                        contractInfo={position.contract_info}\n                        hasActionButtons={!!onClickSell}\n                        isSellRequested={(position as TPortfolioPosition).is_sell_requested}\n                        onCancel={() => id && onClickCancel?.(id)}\n                        onClose={() => id && onClickSell?.(id)}\n                        redirectTo={\n                            id\n                                ? {\n                                      pathname: getContractPath(id),\n                                      state: {\n                                          from_table_row: true,\n                                      },\n                                  }\n                                : ''\n                        }\n                        {...rest}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ContractCardList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv-com/quill-ui';\nimport { toMoment } from '@deriv/shared';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport ContractCardList from './contract-card-list';\nimport { StandaloneLoaderBoldIcon } from '@deriv/quill-icons';\n\ntype TContractCardsSections = {\n    isLoadingMore?: boolean;\n    hasBottomMargin?: boolean;\n    positions?: TClosedPosition[];\n    currency?: string;\n};\n\nconst ContractCardsSections = ({ isLoadingMore, hasBottomMargin, positions, currency }: TContractCardsSections) => {\n    const formatTime = (time: number | string) => {\n        if (typeof time === 'string') {\n            const parts = time.split(' ');\n            return `${parts[0]} ${parts[1]} ${parts[2]}`;\n        }\n        return toMoment(time).format('DD MMM YYYY');\n    };\n\n    const dates = positions?.map(element => {\n        // Use sell_time for closed contracts\n        if (element.contract_info.sell_time) {\n            return formatTime(element.contract_info.sell_time);\n        }\n        return element.contract_info.purchase_time_unix && formatTime(element.contract_info.purchase_time_unix);\n    });\n    const uniqueDates = [...new Set(dates)];\n\n    if (!positions?.length) return null;\n    return (\n        <React.Fragment>\n            <div\n                className={clsx(\n                    'contract-cards-sections',\n                    hasBottomMargin && 'contract-cards-sections--has-bottom-margin'\n                )}\n            >\n                {uniqueDates.map(date => (\n                    <div className='contract-cards-section' key={date}>\n                        <Text as='p' className='contract-cards-section__title' bold size='sm'>\n                            {date}\n                        </Text>\n                        <ContractCardList\n                            positions={positions.filter(position => {\n                                // Use sell_time for closed contracts\n                                if (position.contract_info.sell_time) {\n                                    return formatTime(position.contract_info.sell_time) === date;\n                                }\n                                return (\n                                    position.contract_info.purchase_time_unix &&\n                                    formatTime(position.contract_info.purchase_time_unix) === date\n                                );\n                            })}\n                            currency={currency}\n                        />\n                    </div>\n                ))}\n            </div>\n            {isLoadingMore && (\n                <div className='load-more-spinner' data-testid='dt_load_more_spinner'>\n                    <StandaloneLoaderBoldIcon iconSize='md' />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(ContractCardsSections);\n","import React from 'react';\nimport { ActionSheet, Checkbox, Chip, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { AVAILABLE_CONTRACTS } from 'AppV2/Utils/trade-types-utils';\n\ntype TContractTypeFilter = {\n    contractTypeFilter: string[] | [];\n    onApplyContractTypeFilter: (filterValues: string[]) => void;\n};\n\nconst ContractTypeFilter = ({ contractTypeFilter, onApplyContractTypeFilter }: TContractTypeFilter) => {\n    const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n    const [changedOptions, setChangedOptions] = React.useState<string[]>(contractTypeFilter);\n\n    const onActionSheetClose = () => {\n        setIsDropdownOpen(false);\n        setChangedOptions(contractTypeFilter);\n    };\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement> | React.KeyboardEvent<HTMLSpanElement>) => {\n        const newSelectedOption = (e.target as EventTarget & HTMLInputElement).id;\n\n        if (changedOptions.includes(newSelectedOption)) {\n            setChangedOptions([...changedOptions.filter(item => item !== newSelectedOption)]);\n        } else {\n            setChangedOptions([...changedOptions, newSelectedOption]);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Chip.Standard\n                className='filter__chip'\n                dropdown\n                isDropdownOpen={isDropdownOpen}\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                selected={!!changedOptions.length}\n                size='md'\n            >\n                <Text size='sm'>\n                    <Localize i18n_default_text='Trade types' />\n                </Text>\n                {!!changedOptions.length && <Text>({changedOptions.length})</Text>}\n            </Chip.Standard>\n            <ActionSheet.Root isOpen={isDropdownOpen} onClose={onActionSheetClose} position='left' expandable={false}>\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header title={<Localize i18n_default_text='Filter by trade types' />} />\n                    <ActionSheet.Content className='filter__item__wrapper'>\n                        {AVAILABLE_CONTRACTS.map(({ tradeType, id }) => (\n                            <Checkbox\n                                checked={changedOptions.includes(id)}\n                                checkboxPosition='right'\n                                className='filter__item'\n                                id={id}\n                                key={id}\n                                label={tradeType}\n                                onChange={onChange}\n                                size='md'\n                            />\n                        ))}\n                    </ActionSheet.Content>\n                    <ActionSheet.Footer\n                        alignment='horizontal'\n                        isSecondaryButtonDisabled={!changedOptions.length}\n                        primaryAction={{\n                            content: <Localize i18n_default_text='Apply' />,\n                            onAction: () => onApplyContractTypeFilter(changedOptions),\n                        }}\n                        secondaryAction={{\n                            content: <Localize i18n_default_text='Clear All' />,\n                            onAction: () => setChangedOptions([]),\n                        }}\n                        shouldCloseOnSecondaryButtonClick={false}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeFilter;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { LabelPairedChevronRightSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\n\ntype TCustomDateFilterButton = {\n    customTimeRangeFilter?: string;\n    setShowDatePicker: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst CustomDateFilterButton = ({ customTimeRangeFilter, setShowDatePicker }: TCustomDateFilterButton) => (\n    <button className='custom-time-filter__wrapper' onClick={() => setShowDatePicker(true)}>\n        <Text size='md' className='custom-time-filter__label'>\n            <Localize i18n_default_text='Custom' />\n        </Text>\n        {customTimeRangeFilter && (\n            <Text size='sm' color='quill-typography__color--subtle'>\n                {customTimeRangeFilter}\n            </Text>\n        )}\n        <LabelPairedChevronRightSmBoldIcon\n            className='custom-time-filter__icon'\n            fill='var(--component-textIcon-normal-default)'\n        />\n    </button>\n);\n\nexport default CustomDateFilterButton;\n","import React from 'react';\nimport { ActionSheet, DatePicker } from '@deriv-com/quill-ui';\nimport moment from 'moment';\nimport { toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { DEFAULT_DATE_FORMATTING_CONFIG } from 'AppV2/Utils/positions-utils';\n\ntype TDateRangePicker = {\n    applyHandler: () => void;\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    onClose: () => void;\n    isOpen?: boolean;\n    setCustomTimeRangeFilter: (newCustomTimeFilter?: string | undefined) => void;\n};\nconst DateRangePicker = ({\n    applyHandler,\n    handleDateChange,\n    onClose,\n    isOpen,\n    setCustomTimeRangeFilter,\n}: TDateRangePicker) => {\n    const [chosenRangeString, setChosenRangeString] = React.useState<string>();\n    const [chosenRange, setChosenRange] = React.useState<(string | null | Date)[] | null | Date>([]);\n\n    const onApply = () => {\n        setCustomTimeRangeFilter(chosenRangeString);\n        if (Array.isArray(chosenRange) && chosenRange.length) {\n            handleDateChange(\n                {\n                    from: toMoment(chosenRange[0]),\n                    to: chosenRange[1] ? toMoment(chosenRange[1]) : moment(chosenRange[0]).endOf('day'),\n                },\n                { shouldFilterContractTypes: true }\n            );\n        }\n        applyHandler();\n    };\n\n    const onFormattedDate = (value: string) => {\n        const trimmedValue = value.trim();\n        const partialRange = trimmedValue.endsWith('-');\n        setChosenRangeString(partialRange ? trimmedValue.substring(0, trimmedValue.length - 1) : trimmedValue);\n    };\n\n    return (\n        <ActionSheet.Root isOpen={isOpen} onClose={onClose} position='left' expandable={false}>\n            <ActionSheet.Portal shouldCloseOnDrag>\n                <ActionSheet.Header title={<Localize i18n_default_text='Choose a date range' />} />\n                <ActionSheet.Content>\n                    <DatePicker\n                        allowPartialRange\n                        className='date-picker__action-sheet'\n                        locale='en-GB'\n                        selectRange\n                        onFormattedDate={onFormattedDate}\n                        onChange={setChosenRange}\n                        optionsConfig={DEFAULT_DATE_FORMATTING_CONFIG}\n                        tileDisabled={({ date }) => Date.parse(date.toDateString()) > Date.parse(toMoment().toString())}\n                        maxDate={new Date()}\n                    />\n                </ActionSheet.Content>\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    isPrimaryButtonDisabled={!chosenRangeString}\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Apply' />,\n                        onAction: onApply,\n                    }}\n                />\n            </ActionSheet.Portal>\n        </ActionSheet.Root>\n    );\n};\n\nexport default DateRangePicker;\n","import DatePicker from './date-picker';\nimport './date-picker.scss';\n\nexport default DatePicker;\n","import React from 'react';\nimport moment from 'moment';\nimport { toMoment } from '@deriv/shared';\nimport { ActionSheet, Chip, RadioGroup, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport CustomDateFilterButton from './custom-time-filter-button';\nimport DateRangePicker from 'AppV2/Components/DatePicker';\n\ntype TTimeFilter = {\n    customTimeRangeFilter?: string;\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    setTimeFilter: (newTimeFilter?: string | undefined) => void;\n    setCustomTimeRangeFilter: (newCustomTimeFilter?: string | undefined) => void;\n    setNoMatchesFound: React.Dispatch<React.SetStateAction<boolean>>;\n    timeFilter?: string;\n};\n\ntype TDateChangeArguments = Record<string, { from: moment.Moment; to: moment.Moment }>;\n\nconst timeFilterList = [\n    {\n        value: '0',\n        label: <Localize i18n_default_text='All time' />,\n    },\n    {\n        value: 'Today',\n        label: <Localize i18n_default_text='Today' />,\n    },\n    {\n        value: 'Yesterday',\n        label: <Localize i18n_default_text='Yesterday' />,\n    },\n    {\n        value: '7',\n        label: <Localize i18n_default_text='Last 7 days' />,\n    },\n    {\n        value: '30',\n        label: <Localize i18n_default_text='Last 30 days' />,\n    },\n    {\n        value: '60',\n        label: <Localize i18n_default_text='Last 60 days' />,\n    },\n    {\n        value: '90',\n        label: <Localize i18n_default_text='Last 90 days' />,\n    },\n];\n\nconst TimeFilter = ({\n    customTimeRangeFilter,\n    handleDateChange,\n    setTimeFilter,\n    setCustomTimeRangeFilter,\n    setNoMatchesFound,\n    timeFilter,\n}: TTimeFilter) => {\n    const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n    const [showDatePicker, setShowDatePicker] = React.useState(false);\n\n    const defaultCheckedTime = '0';\n    const selectedRadioButtonValue = customTimeRangeFilter || timeFilter || defaultCheckedTime;\n    const isChipSelected = !!(customTimeRangeFilter || timeFilter);\n\n    const onRadioButtonChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        if (value === defaultCheckedTime) {\n            onReset();\n            return;\n        }\n        setTimeFilter(value);\n        setIsDropdownOpen(false);\n\n        const dateChangeArguments: TDateChangeArguments = {\n            Today: {\n                from: toMoment().startOf('day'),\n                to: toMoment().endOf('day'),\n            },\n            Yesterday: {\n                from: toMoment().subtract(1, 'days').startOf('day'),\n                to: toMoment().subtract(1, 'days').endOf('day'),\n            },\n            default: {\n                from: toMoment().startOf('day').subtract(Number(value), 'day').add(1, 's'),\n                to: toMoment().endOf('day'),\n            },\n        };\n\n        handleDateChange(\n            { ...(dateChangeArguments[value] ?? dateChangeArguments.default), is_batch: true },\n            {\n                shouldFilterContractTypes: true,\n            }\n        );\n    };\n\n    const onReset = () => {\n        setTimeFilter('');\n        setCustomTimeRangeFilter('');\n        setIsDropdownOpen(false);\n        handleDateChange(\n            {\n                to: toMoment().endOf('day'),\n                is_batch: true,\n            },\n            { shouldFilterContractTypes: true }\n        );\n        setNoMatchesFound(false);\n    };\n\n    const getChipLabel = () =>\n        customTimeRangeFilter || timeFilterList.find(item => item.value === (timeFilter || defaultCheckedTime))?.label;\n\n    return (\n        <React.Fragment>\n            <Chip.Standard\n                className='filter__chip'\n                dropdown\n                isDropdownOpen={isDropdownOpen}\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                selected={isChipSelected}\n                size='md'\n            >\n                <Text size='sm'>{getChipLabel()}</Text>\n            </Chip.Standard>\n            <ActionSheet.Root\n                isOpen={isDropdownOpen}\n                onClose={() => setIsDropdownOpen(false)}\n                position='left'\n                expandable={false}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header title={<Localize i18n_default_text='Filter by time' />} />\n                    <ActionSheet.Content className='filter__item__wrapper'>\n                        <RadioGroup\n                            className='filter__item--radio'\n                            onToggle={onRadioButtonChange}\n                            selected={selectedRadioButtonValue}\n                            size='sm'\n                        >\n                            {timeFilterList.map(({ value, label }) => (\n                                <RadioGroup.Item value={value} label={label} key={value} radioButtonPosition='right' />\n                            ))}\n                        </RadioGroup>\n                        <CustomDateFilterButton\n                            customTimeRangeFilter={customTimeRangeFilter}\n                            setShowDatePicker={setShowDatePicker}\n                        />\n                    </ActionSheet.Content>\n                    <ActionSheet.Footer\n                        alignment='vertical'\n                        secondaryAction={{\n                            content: <Localize i18n_default_text='Reset' />,\n                            onAction: onReset,\n                        }}\n                        shouldCloseOnSecondaryButtonClick={false}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n            {showDatePicker && (\n                <DateRangePicker\n                    applyHandler={() => {\n                        setShowDatePicker(false);\n                        setIsDropdownOpen(false);\n                    }}\n                    handleDateChange={handleDateChange}\n                    isOpen={showDatePicker}\n                    onClose={() => setShowDatePicker(false)}\n                    setCustomTimeRangeFilter={setCustomTimeRangeFilter}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default TimeFilter;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv-com/quill-ui';\nimport { getCardLabels } from '@deriv/shared';\nimport { Money } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TTotalProfitLossProps = {\n    currency?: string;\n    hasBottomAlignment?: boolean;\n    is_bold?: boolean;\n    positionsCount?: number | string;\n    totalProfitLoss: number | string;\n};\n\nconst TotalProfitLoss = ({\n    currency,\n    hasBottomAlignment,\n    is_bold = true,\n    positionsCount = '',\n    totalProfitLoss,\n}: TTotalProfitLossProps) => (\n    <div className={clsx('total-profit-loss', hasBottomAlignment && 'bottom')} data-testid='dt_total_profit_loss'>\n        <Text bold={is_bold} size='sm' className='total-profit-loss__label'>\n            {hasBottomAlignment ? (\n                <Localize i18n_default_text='Last {{positionsCount}} contracts:' values={{ positionsCount }} />\n            ) : (\n                getCardLabels().TOTAL_PROFIT_LOSS\n            )}\n        </Text>\n        <Text\n            className={clsx('total-profit-loss__amount', {\n                positive: +totalProfitLoss > 0,\n                negative: +totalProfitLoss < 0,\n            })}\n            bold={is_bold}\n            size='sm'\n        >\n            <Money amount={totalProfitLoss} currency={currency} show_currency has_sign />\n        </Text>\n    </div>\n);\n\nexport default TotalProfitLoss;\n","import TotalProfitLoss from './total-profit-loss';\nimport './total-profit-loss.scss';\n\nexport default TotalProfitLoss;\n","import { useModulesStore } from 'Stores/useModulesStores';\n\ntype TUseTradeTypeFilter = { isClosedTab?: boolean };\n\nconst useTradeTypeFilter = ({ isClosedTab }: TUseTradeTypeFilter) => {\n    const { positions } = useModulesStore();\n    const { setClosedContractTypeFilter, setOpenContractTypeFilter, openContractTypeFilter, closedContractTypeFilter } =\n        positions;\n\n    const contractTypeFilter = isClosedTab ? closedContractTypeFilter : openContractTypeFilter;\n    const setContractTypeFilter = isClosedTab ? setClosedContractTypeFilter : setOpenContractTypeFilter;\n\n    return { contractTypeFilter, setContractTypeFilter };\n};\n\nexport default useTradeTypeFilter;\n","import { useModulesStore } from 'Stores/useModulesStores';\n\nconst useTimeFilter = () => {\n    const { positions } = useModulesStore();\n    const { timeFilter, setTimeFilter, customTimeRangeFilter, setCustomTimeRangeFilter } = positions;\n\n    return { timeFilter, setTimeFilter, customTimeRangeFilter, setCustomTimeRangeFilter };\n};\n\nexport default useTimeFilter;\n","import React from 'react';\nimport { TContractInfo } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Loading } from '@deriv/components';\nimport { EmptyPositions, TEmptyPositionsProps } from 'AppV2/Components/EmptyPositions';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { ContractCardList, ContractCardsSections } from 'AppV2/Components/ContractCard';\nimport { ContractTypeFilter, TimeFilter } from 'AppV2/Components/Filter';\nimport TotalProfitLoss from 'AppV2/Components/TotalProfitLoss';\nimport { filterPositions, getTotalPositionsProfit, TAB_NAME } from '../../Utils/positions-utils';\nimport { TReportsStore, useReportsStore } from '../../../../../reports/src/Stores/useReportsStores';\nimport useTradeTypeFilter from 'AppV2/Hooks/useTradeTypeFilter';\nimport useTimeFilter from 'AppV2/Hooks/useTimeFilter';\n\ntype TPositionsContentProps = Omit<TEmptyPositionsProps, 'noMatchesFound'> & {\n    hasButtonsDemo?: boolean;\n    setHasButtonsDemo?: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport type TClosedPosition = {\n    contract_info: TReportsStore['profit_table']['data'][number];\n};\n\nconst PositionsContent = observer(({ hasButtonsDemo, isClosedTab, setHasButtonsDemo }: TPositionsContentProps) => {\n    const { contractTypeFilter, setContractTypeFilter } = useTradeTypeFilter({ isClosedTab });\n    const { timeFilter, setTimeFilter, customTimeRangeFilter, setCustomTimeRangeFilter } = useTimeFilter();\n    const [filteredPositions, setFilteredPositions] = React.useState<(TPortfolioPosition | TClosedPosition)[]>([]);\n    const [noMatchesFound, setNoMatchesFound] = React.useState(false);\n\n    const { common, client, portfolio } = useStore();\n    const { server_time = undefined } = isClosedTab ? {} : common; // Server time is required only to update cards timers in Open positions\n    const { currency } = client;\n    const {\n        active_positions,\n        is_active_empty,\n        is_loading,\n        onClickCancel,\n        onClickSell,\n        onMount: onOpenTabMount,\n    } = portfolio;\n    const {\n        clearTable,\n        data,\n        fetchNextBatch: fetchMoreClosedPositions,\n        handleScroll,\n        handleDateChange,\n        is_empty,\n        is_loading: isFetchingClosedPositions,\n        onMount: onClosedTabMount,\n        onUnmount: onClosedTabUnmount,\n    } = useReportsStore().profit_table;\n    const closedPositions = React.useMemo(() => data.map(d => ({ contract_info: d })), [data]);\n    const positions = React.useMemo(\n        () => (isClosedTab ? closedPositions : active_positions),\n        [active_positions, isClosedTab, closedPositions]\n    );\n    const hasNoActiveFilters = isClosedTab\n        ? !timeFilter && !customTimeRangeFilter && !contractTypeFilter.length\n        : !contractTypeFilter.length;\n    const hasNoPositions = hasNoActiveFilters && (isClosedTab ? is_empty : is_active_empty);\n    const shouldShowEmptyMessage = hasNoPositions || noMatchesFound;\n    const shouldShowContractCards =\n        !!filteredPositions.length && (isClosedTab || (filteredPositions[0]?.contract_info as TContractInfo)?.status);\n    const shouldShowLoading = isClosedTab ? isFetchingClosedPositions && !filteredPositions.length : is_loading;\n    const shouldShowTakeProfit = !isClosedTab || !!(timeFilter || customTimeRangeFilter);\n\n    const onScroll = (e: React.UIEvent<HTMLDivElement>) => {\n        if (isClosedTab) handleScroll(e, true);\n    };\n\n    const contractCards = isClosedTab ? (\n        <ContractCardsSections\n            currency={currency}\n            positions={filteredPositions as TClosedPosition[]}\n            isLoadingMore={isFetchingClosedPositions}\n            hasBottomMargin={shouldShowTakeProfit}\n        />\n    ) : (\n        <ContractCardList\n            currency={currency}\n            hasButtonsDemo={hasButtonsDemo}\n            onClickCancel={isClosedTab ? undefined : onClickCancel}\n            onClickSell={isClosedTab ? undefined : onClickSell}\n            positions={filteredPositions}\n            setHasButtonsDemo={setHasButtonsDemo}\n            serverTime={server_time}\n        />\n    );\n\n    const onApplyContractTypeFilter = (filters: string[] | []) => {\n        setContractTypeFilter(filters);\n        if (isClosedTab) {\n            clearTable();\n            fetchMoreClosedPositions(true);\n        }\n    };\n\n    React.useEffect(() => {\n        const result = filterPositions(positions, contractTypeFilter);\n        if (contractTypeFilter.length) {\n            setFilteredPositions(result);\n            if (!isClosedTab) setNoMatchesFound(!result.length);\n        } else {\n            setNoMatchesFound(false);\n            setFilteredPositions(positions);\n        }\n        if (isClosedTab)\n            setNoMatchesFound(!result.length && !!(timeFilter || customTimeRangeFilter || contractTypeFilter.length));\n    }, [isClosedTab, positions, contractTypeFilter, timeFilter, customTimeRangeFilter]);\n\n    React.useEffect(() => {\n        isClosedTab ? onClosedTabMount(true) : onOpenTabMount();\n\n        return () => {\n            if (isClosedTab) {\n                clearTable();\n                onClosedTabUnmount();\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldShowLoading || (!shouldShowContractCards && !shouldShowEmptyMessage))\n        return <Loading.DTraderV2 is_positions is_closed_tab={isClosedTab} />;\n    return (\n        <div\n            className={`positions-page__${isClosedTab ? TAB_NAME.CLOSED.toLowerCase() : TAB_NAME.OPEN.toLowerCase()}`}\n            onScroll={isClosedTab ? onScroll : undefined}\n        >\n            {!hasNoPositions && (\n                <div className='positions-page__filter__wrapper'>\n                    {isClosedTab ? (\n                        <TimeFilter\n                            timeFilter={timeFilter}\n                            setTimeFilter={setTimeFilter}\n                            handleDateChange={handleDateChange}\n                            customTimeRangeFilter={customTimeRangeFilter}\n                            setCustomTimeRangeFilter={setCustomTimeRangeFilter}\n                            setNoMatchesFound={setNoMatchesFound}\n                        />\n                    ) : (\n                        <ContractTypeFilter\n                            contractTypeFilter={contractTypeFilter}\n                            onApplyContractTypeFilter={onApplyContractTypeFilter}\n                        />\n                    )}\n                </div>\n            )}\n            {shouldShowEmptyMessage ? (\n                <EmptyPositions isClosedTab={isClosedTab} noMatchesFound={noMatchesFound} />\n            ) : (\n                shouldShowContractCards && (\n                    <React.Fragment>\n                        {shouldShowTakeProfit && (\n                            <TotalProfitLoss\n                                positionsCount={filteredPositions.length}\n                                currency={currency}\n                                hasBottomAlignment={isClosedTab}\n                                totalProfitLoss={getTotalPositionsProfit(filteredPositions)}\n                            />\n                        )}\n                        {contractCards}\n                    </React.Fragment>\n                )\n            )}\n        </div>\n    );\n});\n\nexport default PositionsContent;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { getPositionsV2TabIndexFromURL } from '@deriv/shared';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { Tab } from '@deriv-com/quill-ui';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '@deriv/stores';\nimport { useModulesStore } from 'Stores/useModulesStores';\nimport { setPositionURLParams, TAB_NAME } from 'AppV2/Utils/positions-utils';\nimport BottomNav from 'AppV2/Components/BottomNav';\nimport PositionsContent from './positions-content';\nimport { useHistory } from 'react-router-dom';\nimport OnboardingGuide from 'AppV2/Components/OnboardingGuide/GuideForPages';\n\nconst Positions = observer(() => {\n    const [hasButtonsDemo, setHasButtonsDemo] = React.useState(false);\n    const [activeTab, setActiveTab] = React.useState(getPositionsV2TabIndexFromURL());\n    const [guide_dtrader_v2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n    const history = useHistory();\n\n    const {\n        client: { is_logged_in },\n        ui: { is_dark_mode_on },\n    } = useStore();\n    const {\n        positions: { onUnmount },\n    } = useModulesStore();\n\n    const tabs = [\n        {\n            id: TAB_NAME.OPEN.toLowerCase(),\n            title: <Localize i18n_default_text='Open' />,\n            content: <PositionsContent hasButtonsDemo={hasButtonsDemo} setHasButtonsDemo={setHasButtonsDemo} />,\n        },\n        {\n            id: TAB_NAME.CLOSED.toLowerCase(),\n            title: <Localize i18n_default_text='Closed' />,\n            content: <PositionsContent isClosedTab />,\n        },\n    ];\n\n    const onChangeTab = (new_active_tab: number) => {\n        setActiveTab(new_active_tab);\n        setPositionURLParams(tabs[new_active_tab].id);\n    };\n\n    React.useEffect(() => {\n        setPositionURLParams(tabs[activeTab].id);\n\n        if (guide_dtrader_v2?.positions_page) {\n            setHasButtonsDemo(true);\n        }\n\n        return () => {\n            const is_contract_details = history.location.pathname.startsWith('/contract/');\n            if (!is_contract_details) onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <BottomNav>\n            <div className='positions-page'>\n                <Tab.Container\n                    contentStyle='fill'\n                    className='positions-page__tabs'\n                    size='md'\n                    selectedTabIndex={activeTab}\n                    onChangeTab={onChangeTab}\n                >\n                    <Tab.List>\n                        {tabs.map(({ id, title }) => (\n                            <Tab.Trigger key={id}>{title}</Tab.Trigger>\n                        ))}\n                    </Tab.List>\n                    <Tab.Content className='positions-page__tabs-content'>\n                        {tabs.map(({ id, content }) => (\n                            <Tab.Panel key={id}>{content}</Tab.Panel>\n                        ))}\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            {!guide_dtrader_v2?.positions_page && is_logged_in && (\n                <OnboardingGuide\n                    type='positions_page'\n                    is_dark_mode_on={is_dark_mode_on}\n                    callback={() => setHasButtonsDemo(true)}\n                />\n            )}\n        </BottomNav>\n    );\n});\n\nexport default Positions;\n","import Positions from './positions';\nimport './positions.scss';\n\nexport default Positions;\n","import React from 'react';\nimport { Text, CaptionText } from '@deriv-com/quill-ui';\n\nconst EntryExitDetailRow = ({\n    label,\n    value,\n    date,\n    time,\n}: {\n    label: React.ReactNode;\n    value?: string;\n    date?: string;\n    time: string;\n}) => (\n    <div className='entry-exit-details__table-row'>\n        <div className='entry-exit-details__table-cell'>\n            <Text size='sm' color='quill-typography__color--subtle'>\n                {label}\n            </Text>\n        </div>\n        <div className='entry-exit-details__table-cell'>\n            <Text size='sm'>{value}</Text>\n            <Text size='sm' color='quill-typography__color--subtle'>\n                {date}\n            </Text>\n            <CaptionText color='quill-typography__color--subtle'>{time}</CaptionText>\n        </div>\n    </div>\n);\n\nexport default EntryExitDetailRow;\n","import { Text } from '@deriv-com/quill-ui';\nimport React from 'react';\nimport clsx from 'clsx';\n\nconst CardWrapper = ({\n    title,\n    children,\n    className,\n}: {\n    title?: React.ReactNode;\n    children: React.ReactNode;\n    className?: string;\n}) => {\n    return (\n        <div className={clsx('card-wrapper', className)}>\n            {title && (\n                <Text size='sm' bold className='title'>\n                    {title}\n                </Text>\n            )}\n            {children}\n        </div>\n    );\n};\n\nexport default CardWrapper;\n","import CardWrapper from './card-wrapper';\nimport './card-wrapper.scss';\n\nexport default CardWrapper;\n","import React, { useMemo } from 'react';\nimport { TContractInfo, addComma, formatDate, formatTime, getEndTime } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport EntryExitDetailRow from './entry-exit-details-row';\nimport CardWrapper from '../CardWrapper';\nimport moment from 'moment';\n\nconst getDateTimeFromEpoch = (epoch: number) => {\n    if (epoch) {\n        const date = new Date(epoch * 1000);\n        const momentDate = moment(date);\n        const formattedDate = formatDate(momentDate, 'DD MMM YYYY');\n        const formattedTime = formatTime(epoch, 'HH:mm:ss [GMT]');\n\n        return {\n            date: formattedDate,\n            time: formattedTime,\n        };\n    }\n};\n\nconst EntryExitDetails = ({ contract_info }: { contract_info: TContractInfo }) => {\n    const { entry_tick_time, entry_spot_display_value, exit_tick_time, date_start, exit_tick_display_value } =\n        contract_info;\n\n    const dateTimes = useMemo(\n        () => ({\n            entry: entry_tick_time ? getDateTimeFromEpoch(entry_tick_time) : undefined,\n            exit: exit_tick_time ? getDateTimeFromEpoch(exit_tick_time) : undefined,\n            start: date_start ? getDateTimeFromEpoch(date_start) : undefined,\n            end: getEndTime(contract_info) ? getDateTimeFromEpoch(getEndTime(contract_info) ?? 0) : undefined,\n        }),\n        [contract_info]\n    );\n\n    const entryValue = entry_spot_display_value ? addComma(entry_spot_display_value) : null;\n    const exitValue = exit_tick_display_value ? addComma(exit_tick_display_value) : null;\n\n    return (\n        <CardWrapper title={<Localize i18n_default_text='Entry & exit details' />} className='entry-exit-details'>\n            <div className='entry-exit-details__table'>\n                {dateTimes.start && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Start time' />}\n                        value={dateTimes.start.date}\n                        time={dateTimes.start.time}\n                    />\n                )}\n                {dateTimes.entry && entryValue && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Entry spot' />}\n                        value={entryValue}\n                        {...dateTimes.entry}\n                    />\n                )}\n                {dateTimes.end && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Exit time' />}\n                        value={dateTimes.end.date}\n                        time={dateTimes.end.time}\n                    />\n                )}\n                {dateTimes.exit && exitValue && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Exit spot' />}\n                        value={exitValue}\n                        {...dateTimes.exit}\n                    />\n                )}\n            </div>\n        </CardWrapper>\n    );\n};\n\nexport default EntryExitDetails;\n","import EntryExitDetails from './entry-exit-details';\nimport './entry-exit-details.scss';\n\nexport default EntryExitDetails;\n","import { Text, CaptionText, Pagination } from '@deriv-com/quill-ui';\nimport { formatDate, formatMoney, formatTime, TContractStore } from '@deriv/shared';\nimport CardWrapper from '../CardWrapper';\nimport Carousel from 'AppV2/Components/Carousel';\nimport React, { useState } from 'react';\nimport clsx from 'classnames';\nimport { localize, Localize } from '@deriv/translations';\n\ntype THistory = TContractStore['contract_update_history'];\n\ntype TContractHistory = {\n    currency?: string;\n    history?: [] | THistory;\n    is_multiplier?: boolean;\n};\n\ntype TPagination = {\n    currentPage: number;\n    totalPageCount: number;\n};\n\nconst TakeProfitHistory = ({ history = [], currency, is_multiplier }: TContractHistory) => {\n    const [current_page, setCurrentPage] = useState(0);\n    const items_per_page = 4;\n    const total_pages = Math.ceil(history.length / items_per_page);\n\n    const handlePageChange = React.useCallback((pagination: TPagination) => {\n        setCurrentPage(pagination.currentPage - 1);\n    }, []);\n\n    const getHistoryTitle = () =>\n        is_multiplier ? <Localize i18n_default_text='TP & SL History' /> : <Localize i18n_default_text='TP History' />;\n\n    if (!history.length) return null;\n\n    const pages_config = (history as THistory).reduce(\n        (result: THistory[], _item: (typeof history)[0], index: number) => {\n            if (!(index % items_per_page)) {\n                result.push(history.slice(index, index + items_per_page));\n            }\n            return result;\n        },\n        []\n    );\n\n    const pages = pages_config.map((array, index) => ({\n        id: index,\n        component: (\n            <React.Fragment>\n                {array.map((item, index) => (\n                    <div key={`take-profit-history-${index}`} className='take-profit-history__table-row'>\n                        <div\n                            className={clsx('take-profit-history__table-cell', 'take-profit-history__table-cell--left')}\n                        >\n                            <CaptionText color='quill-typography__color--subtle' size='sm'>\n                                {formatDate(item.order_date, 'DD MMM YYYY')}\n                            </CaptionText>\n                            <CaptionText color='quill-typography__color--subtle'>\n                                {formatTime(Number(item.order_date))}\n                            </CaptionText>\n                        </div>\n                        <div className='take-profit-history__table-cell'>\n                            <Text size='sm' color='quill-typography__color--subtle'>\n                                {item.display_name}\n                            </Text>\n                            <Text size='sm'>\n                                {Math.abs(Number(item.order_amount)) === 0\n                                    ? localize('Cancelled')\n                                    : `${formatMoney(String(currency), String(item.order_amount), true)} ${currency}`}\n                            </Text>\n                        </div>\n                    </div>\n                ))}\n            </React.Fragment>\n        ),\n    }));\n\n    return (\n        <CardWrapper title={getHistoryTitle()} className='take-profit-history'>\n            <div\n                className={clsx('take-profit-history__table', {\n                    'take-profit-history__table--fixed-height': history.length > items_per_page,\n                })}\n            >\n                <Carousel\n                    classname='take-profit-history__carousel'\n                    current_index={current_page}\n                    is_swipeable\n                    pages={pages}\n                    setCurrentIndex={setCurrentPage}\n                />\n            </div>\n            {total_pages > 1 && (\n                <Pagination\n                    initialPage={current_page + 1}\n                    contentLength={history.length}\n                    contentPerPage={items_per_page}\n                    hideChevron\n                    onClickPagination={handlePageChange}\n                    variant='bullet'\n                />\n            )}\n        </CardWrapper>\n    );\n};\n\nexport default TakeProfitHistory;\n","import TakeProfitHistory from './take-profit-history';\nimport './take-profit-history.scss';\n\nexport default TakeProfitHistory;\n","import { Localize } from '@deriv/translations';\nimport { TContractInfo } from '@deriv/shared';\nimport { Text } from '@deriv-com/quill-ui';\nimport CardWrapper from 'AppV2/Components/CardWrapper';\nimport React from 'react';\n\ninterface ContractInfoProps {\n    contract_info: TContractInfo;\n}\n\nconst PayoutInfo = ({ contract_info }: ContractInfoProps) => (\n    <CardWrapper title={<Localize i18n_default_text='How do I earn a payout?' />}>\n        <Text size='sm'>{contract_info.longcode}</Text>\n    </CardWrapper>\n);\n\nexport default PayoutInfo;\n","import PayoutInfo from './payout-info';\n\nexport default PayoutInfo;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { useStore } from '@deriv/stores';\n\nconst useContractDetails = () => {\n    const store = useStore();\n    const { contract_replay, contract_trade } = store;\n    const { getContractById } = contract_trade;\n    const { contract_store, onMount, onUnmount } = contract_replay;\n\n    const { contract_info } = contract_store;\n    const contract = getContractById(contract_info.contract_id);\n    const location = useLocation();\n\n    useEffect(() => {\n        const urlContractId = location.pathname.split('/').pop();\n        if (urlContractId != contract_info.contract_id) {\n            onMount(parseInt(urlContractId));\n        }\n    }, [location.pathname, onMount, onUnmount, contract_info.contract_id]);\n\n    return {\n        contract_info,\n        contract,\n        is_loading: !contract_info.contract_id,\n    };\n};\n\nexport default useContractDetails;\n","import React from 'react';\nimport { isAccumulatorContract, isResetContract } from '@deriv/shared';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport { observer } from 'mobx-react-lite';\nimport ReplayChart from 'Modules/Contract/Containers/replay-chart';\nimport './contract-details-chart.scss';\n\nconst ContractDetailsChart = observer(() => {\n    const { contract_info } = useContractDetails();\n    const is_reset_contract = isResetContract(contract_info.contract_type);\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n\n    return (\n        <div className='contract-details-chart'>\n            <ReplayChart\n                is_accumulator_contract={is_accumulator}\n                is_reset_contract={is_reset_contract}\n                is_vertical_scroll_disabled\n            />\n        </div>\n    );\n});\n\nexport default ContractDetailsChart;\n","import {\n    addComma,\n    CONTRACT_TYPES,\n    formatMoney,\n    formatResetDuration,\n    getCardLabelsV2,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText,\n    getGrowthRatePercentage,\n    getStartTime,\n    getUnitMap,\n    hasForwardContractStarted,\n    isAccumulatorContract,\n    isForwardStarting,\n    isResetContract,\n    isUserCancelled,\n    TContractInfo,\n} from '@deriv/shared';\nimport { getBarrierValue } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { isCancellationExpired } from 'Stores/Modules/Trading/Helpers/logic';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\ntype TCardLabels = ReturnType<typeof getCardLabelsV2>;\n\nconst formatTimestampToDateTime = (timestamp: number) => {\n    const date = new Date(timestamp * 1000);\n\n    const formattedDate = `${date.getUTCDate().toString().padStart(2, '0')} ${date.toLocaleString('en-GB', {\n        month: 'short',\n        timeZone: 'UTC',\n    })} ${date.getUTCFullYear()}`;\n\n    const formattedTime = `${date.getUTCHours().toString().padStart(2, '0')}:${date\n        .getUTCMinutes()\n        .toString()\n        .padStart(2, '0')}:${date.getUTCSeconds().toString().padStart(2, '0')} GMT`;\n\n    return [formattedDate, formattedTime];\n};\n\nconst getDealCancelFee = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    if (!data.cancellation?.ask_price || !data.currency) return undefined;\n\n    let status;\n    if (isUserCancelled(data)) {\n        status = CARD_LABELS.EXECUTED;\n    } else if (isCancellationExpired(data)) {\n        status = CARD_LABELS.EXPIRED;\n    } else {\n        status = CARD_LABELS.ACTIVE;\n    }\n\n    return [`${formatMoney(data.currency, data.cancellation.ask_price, true)} ${data.currency}`, `(${status})`];\n};\n\n// Contains all key values that are used more than once in different transform objects\nconst getCommonFields = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const { tick_count, tick_passed, contract_type } = data;\n    const ticks_label = Number(tick_count) < 2 ? CARD_LABELS.TICK : CARD_LABELS.TICKS;\n    const ticks_duration_text = isAccumulatorContract(contract_type)\n        ? `${tick_passed} ${CARD_LABELS.TICKS}`\n        : `${tick_count} ${ticks_label}`;\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: [\n            data.transaction_ids?.buy ? `${data.transaction_ids.buy} (${CARD_LABELS.BUY})` : '',\n            data.transaction_ids?.sell ? `${data.transaction_ids.sell} (${CARD_LABELS.SELL})` : '',\n        ],\n        [CARD_LABELS.STAKE]:\n            data.buy_price && data.currency\n                ? `${formatMoney(data.currency, data.buy_price, true)} ${data.currency}`\n                : '',\n        [CARD_LABELS.DURATION]:\n            Number(tick_count) > 0\n                ? ticks_duration_text\n                : `${getDurationTime(data) ?? ''} ${getDurationUnitText(getDurationPeriod(data)) ?? ''}`,\n        [CARD_LABELS.PAYOUT_PER_POINT]: data.display_number_of_contracts ?? '',\n        [CARD_LABELS.POTENTIAL_PAYOUT]: data.payout,\n    };\n};\n// For Multiplier\nconst transformMultiplierData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    const dealCancelFee = getDealCancelFee(data, CARD_LABELS);\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.MULTIPLIER]: data.multiplier ? `x${data.multiplier}` : '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.COMMISSION]: data.commission\n            ? `${formatMoney(data.currency as string, data.commission, true)} ${data.currency}`\n            : '',\n        ...(dealCancelFee && { [CARD_LABELS.DEAL_CANCEL_FEE]: dealCancelFee }),\n        [CARD_LABELS.TAKE_PROFIT]:\n            data.limit_order?.take_profit?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.take_profit.order_amount, true)} ${data.currency}`\n                : CARD_LABELS.NOT_SET,\n        [CARD_LABELS.STOP_LOSS]:\n            data.limit_order?.stop_loss?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.stop_loss.order_amount, true)} ${data.currency}`\n                : CARD_LABELS.NOT_SET,\n        [CARD_LABELS.STOP_OUT_LEVEL]:\n            data.limit_order?.stop_out?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.stop_out.order_amount, true)} ${data.currency}`\n                : '',\n    };\n};\n\n// For Rise\nconst transformCallPutData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const { barrier, purchase_time, shortcode } = data;\n    const is_forward_starting = isForwardStarting(shortcode ?? '', purchase_time);\n    const start_time = getStartTime(shortcode ?? '');\n    const has_forward_contract_started = hasForwardContractStarted(shortcode ?? '');\n    const show_barrier_placeholder = is_forward_starting && !!start_time && !has_forward_contract_started;\n\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.BARRIER]: (show_barrier_placeholder ? 'TBD' : barrier) ?? '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]: commonFields[CARD_LABELS.POTENTIAL_PAYOUT],\n    };\n};\n\n// For Turbos\nconst transformTurbosData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.BARRIER]: data.barrier ?? '',\n        [CARD_LABELS.PAYOUT_PER_POINT]: `${commonFields[CARD_LABELS.PAYOUT_PER_POINT]} ${data.currency}`,\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.TAKE_PROFIT]:\n            data.limit_order?.take_profit?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.take_profit.order_amount, true)} ${data.currency}`\n                : CARD_LABELS.NOT_SET,\n    };\n};\n\n// For Digits\nconst transformDigitsData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    const duration_time = getDurationTime(data) ?? '';\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: `${duration_time} ${\n            +duration_time > 1 ? getUnitMap().t.name_plural : getUnitMap().t.name_singular\n        }`,\n        [CARD_LABELS.TARGET]: getBarrierValue(data),\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]: commonFields[CARD_LABELS.POTENTIAL_PAYOUT],\n    };\n};\n\n// For Accumulators\nconst transformAccumulatorData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        ...{\n            ...((data.is_expired || data.is_sold) && {\n                [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n            }),\n        },\n        [CARD_LABELS.GROWTH_RATE]: data.growth_rate ? `${getGrowthRatePercentage(data.growth_rate)}%` : '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        ...{\n            ...(data.limit_order?.take_profit && {\n                [CARD_LABELS.TAKE_PROFIT]:\n                    data.limit_order?.take_profit?.order_amount && data.currency\n                        ? `${formatMoney(data.currency, data.limit_order.take_profit.order_amount, true)} ${\n                              data.currency\n                          }`\n                        : CARD_LABELS.NOT_SET,\n            }),\n        },\n    };\n};\n\n// For Vanillas\nconst transformVanillaData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[`${CARD_LABELS.REFERENCE_ID}`],\n        [CARD_LABELS.DURATION]: `${getDurationTime(data) ?? ''} ${getDurationUnitText(getDurationPeriod(data)) ?? ''}`,\n        [CARD_LABELS.STRIKE_PRICE]:\n            (isResetContract(data.contract_type) ? addComma(data.entry_spot_display_value) : getBarrierValue(data)) ||\n            ' - ',\n        [CARD_LABELS.PAYOUT_PER_POINT]: `${commonFields[CARD_LABELS.PAYOUT_PER_POINT]} ${data.currency}`,\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n    };\n};\n\nconst transformEndsBetween = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[`${CARD_LABELS.REFERENCE_ID}`],\n        [CARD_LABELS.DURATION]: `${getDurationTime(data) ?? ''} ${getDurationUnitText(getDurationPeriod(data)) ?? ''}`,\n        [CARD_LABELS.HIGH_BARRIER]: data.high_barrier,\n        [CARD_LABELS.LOW_BARRIER]: data.low_barrier,\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\nconst transformAsian = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.BARRIER]: data.barrier ?? '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\nconst transformLooksback = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    const is_call_contract = data.contract_type == CONTRACT_TYPES.LB_CALL;\n    let spot_key;\n\n    if (data.transaction_ids?.sell) {\n        spot_key = is_call_contract ? CARD_LABELS.LOW_SPOT : CARD_LABELS.HIGH_SPOT;\n    } else {\n        spot_key = is_call_contract ? CARD_LABELS.INDICATIVE_LOW_SPOT : CARD_LABELS.INDICATIVE_HIGH_SPOT;\n    }\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.MULTIPLIER]: data.multiplier ?? '',\n        [spot_key]: data.barrier ?? '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n    };\n};\n\nconst transformHighLowLookback = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.MULTIPLIER]: data.multiplier ?? '',\n        ...{\n            [data.transaction_ids?.sell ? CARD_LABELS.HIGH_SPOT : CARD_LABELS.INDICATIVE_HIGH_SPOT]:\n                data.high_barrier ?? '',\n            [data.transaction_ids?.sell ? CARD_LABELS.LOW_SPOT : CARD_LABELS.INDICATIVE_LOW_SPOT]:\n                data.low_barrier ?? '',\n        },\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n    };\n};\n\nconst transformReset = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: [\n            commonFields[CARD_LABELS.DURATION],\n            {\n                caption: React.createElement(Localize, {\n                    key: 'reset_time',\n                    i18n_default_text: 'The reset time is {{ reset_time }}',\n                    values: {\n                        reset_time:\n                            data.tick_count !== undefined\n                                ? `${Math.floor(Number(data.tick_count) / 2)} ${\n                                      Number(data.tick_count) < 2 ? CARD_LABELS.TICK : CARD_LABELS.TICKS\n                                  }`\n                                : formatResetDuration(data),\n                    },\n                }),\n            },\n        ],\n        [CARD_LABELS.BARRIER]: data.barrier ?? '',\n        ...(data.reset_barrier ? { [CARD_LABELS.RESET_BARRIER]: data.reset_barrier } : {}),\n        ...(data.reset_time ? { [CARD_LABELS.RESET_TIME]: formatTimestampToDateTime(data.reset_time) ?? '' } : {}),\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\nconst transformRunHigh = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\nconst transformHighLow = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.SELECTED_TICK]: [data.selected_tick ?? '', { caption: data.barrier ?? '' }],\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\n// Map of contract types to their respective transform functions\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst transformFunctionMap: Record<string, (data: TContractInfo, card_label: TCardLabels) => Record<string, any>> = {\n    [CONTRACT_TYPES.TURBOS.LONG]: transformTurbosData,\n    [CONTRACT_TYPES.TURBOS.SHORT]: transformTurbosData,\n    [CONTRACT_TYPES.MULTIPLIER.DOWN]: transformMultiplierData,\n    [CONTRACT_TYPES.MULTIPLIER.UP]: transformMultiplierData,\n    [CONTRACT_TYPES.MATCH_DIFF.MATCH]: transformDigitsData,\n    [CONTRACT_TYPES.MATCH_DIFF.DIFF]: transformDigitsData,\n    [CONTRACT_TYPES.EVEN_ODD.EVEN]: transformDigitsData,\n    [CONTRACT_TYPES.EVEN_ODD.ODD]: transformDigitsData,\n    [CONTRACT_TYPES.OVER_UNDER.OVER]: transformDigitsData,\n    [CONTRACT_TYPES.OVER_UNDER.UNDER]: transformDigitsData,\n    [CONTRACT_TYPES.PUT]: transformCallPutData,\n    [CONTRACT_TYPES.PUTE]: transformCallPutData,\n    [CONTRACT_TYPES.CALLE]: transformCallPutData,\n    [CONTRACT_TYPES.CALL]: transformCallPutData,\n    [CONTRACT_TYPES.TOUCH.ONE_TOUCH]: transformCallPutData,\n    [CONTRACT_TYPES.TOUCH.NO_TOUCH]: transformCallPutData,\n    [CONTRACT_TYPES.ACCUMULATOR]: transformAccumulatorData,\n    [CONTRACT_TYPES.VANILLA.CALL]: transformVanillaData,\n    [CONTRACT_TYPES.VANILLA.PUT]: transformVanillaData,\n    //SMARTTRADER CONCTRACTS\n    [CONTRACT_TYPES.END.IN]: transformEndsBetween,\n    [CONTRACT_TYPES.END.OUT]: transformEndsBetween,\n    [CONTRACT_TYPES.STAY.IN]: transformEndsBetween,\n    [CONTRACT_TYPES.STAY.OUT]: transformEndsBetween,\n    [CONTRACT_TYPES.ASIAN.UP]: transformAsian,\n    [CONTRACT_TYPES.ASIAN.DOWN]: transformAsian,\n    [CONTRACT_TYPES.LB_HIGH_LOW]: transformHighLowLookback,\n    [CONTRACT_TYPES.LB_CALL]: transformLooksback,\n    [CONTRACT_TYPES.LB_PUT]: transformLooksback,\n    [CONTRACT_TYPES.RESET.CALL]: transformReset,\n    [CONTRACT_TYPES.RESET.PUT]: transformReset,\n    [CONTRACT_TYPES.TICK_HIGH_LOW.HIGH]: transformHighLow,\n    [CONTRACT_TYPES.TICK_HIGH_LOW.LOW]: transformHighLow,\n    [CONTRACT_TYPES.FALL]: transformEndsBetween,\n    [CONTRACT_TYPES.RUN_HIGH_LOW.HIGH]: transformRunHigh,\n    [CONTRACT_TYPES.RUN_HIGH_LOW.LOW]: transformRunHigh,\n};\n\nconst useOrderDetails = (contract_info: TContractInfo) => {\n    const contractInfo = contract_info;\n    if (!contractInfo.contract_type) return;\n    const transformFunction = transformFunctionMap[contractInfo.contract_type];\n    const details = transformFunction ? transformFunction(contractInfo, getCardLabelsV2()) : {};\n    return {\n        details,\n    };\n};\n\nexport default useOrderDetails;\n","import React from 'react';\nimport { CaptionText, Text } from '@deriv-com/quill-ui';\nimport useOrderDetails from 'AppV2/Hooks/useOrderDetails';\nimport { TContractInfo } from '@deriv/shared';\nimport CardWrapper from 'AppV2/Components/CardWrapper';\nimport { Localize } from '@deriv/translations';\n\ninterface ContractInfoProps {\n    contract_info: TContractInfo;\n}\n\nconst OrderDetails = ({ contract_info }: ContractInfoProps) => {\n    const orderDetails = useOrderDetails(contract_info);\n    const details = orderDetails ? orderDetails.details : {};\n    return (\n        <CardWrapper title={<Localize i18n_default_text='Order Details' />}>\n            <div className='order-details'>\n                <div className='order-details__table'>\n                    {Object.entries(details).map(([key, value]) => (\n                        <div className='order-details__table-row' key={key}>\n                            <div className='order-details__table-row-cell'>\n                                <Text size='sm' color='quill-typography__color--subtle'>\n                                    {key}\n                                </Text>\n                            </div>\n                            <div className='order-details__table-row-cell'>\n                                {Array.isArray(value) ? (\n                                    value.map((val, index) =>\n                                        ['number', 'string'].includes(typeof val) ? (\n                                            <Text key={`${key}_${index}`} size='sm'>\n                                                {val}\n                                            </Text>\n                                        ) : (\n                                            <CaptionText\n                                                key={`${key}_${index}`}\n                                                size='sm'\n                                                color='quill-typography__color--subtle'\n                                            >\n                                                {val?.caption ?? ''}\n                                            </CaptionText>\n                                        )\n                                    )\n                                ) : (\n                                    <Text size='sm'>{value}</Text>\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </CardWrapper>\n    );\n};\n\nexport default OrderDetails;\n","import OrderDetails from './order-details';\nimport './order-details.scss';\n\nexport default OrderDetails;\n","import { CONTRACT_TYPES } from '@deriv/shared';\n\nconst defaultConfig = {\n    isTakeProfitVisible: false,\n    isDealCancellationVisible: false,\n    isStopLossVisible: false,\n    isTpHistoryVisible: false,\n};\n\nexport const getContractDetailsConfig = (contractType: string) => {\n    const config = {\n        [CONTRACT_TYPES.ACCUMULATOR]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: false,\n            isStopLossVisible: false,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.MULTIPLIER.UP]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: true,\n            isStopLossVisible: true,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.MULTIPLIER.DOWN]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: true,\n            isStopLossVisible: true,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.TURBOS.LONG]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: false,\n            isStopLossVisible: false,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.TURBOS.SHORT]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: false,\n            isStopLossVisible: false,\n            isTpHistoryVisible: true,\n        },\n    } as const;\n\n    return config[contractType as keyof typeof config] || defaultConfig;\n};\n","import React from 'react';\nimport { Modal, SectionMessage, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { LabelPairedCircleInfoSmRegularIcon } from '@deriv/quill-icons';\n\ntype RiskManagementInfoModalProps = {\n    header_content: React.ReactNode;\n    body_content: React.ReactNode;\n    info_message?: React.ReactNode;\n};\n\nconst RiskManagementInfoModal = ({ header_content, body_content, info_message }: RiskManagementInfoModalProps) => {\n    const [isVisible, setIsVisible] = React.useState(false);\n    return (\n        <>\n            <button onClick={() => setIsVisible(!isVisible)}>\n                <LabelPairedCircleInfoSmRegularIcon fill='var(--component-textIcon-normal-default)' />\n            </button>\n            <Modal\n                isNonExpandable\n                shouldCloseModalOnSwipeDown\n                isOpened={isVisible}\n                toggleModal={setIsVisible}\n                primaryButtonLabel={<Localize i18n_default_text='Got it' />}\n                shouldCloseOnPrimaryButtonClick\n                isMobile\n                showHandleBar\n            >\n                <Modal.Header title={header_content} />\n                <Modal.Body>\n                    <div className='risk-management-info-modal__container'>\n                        <Text size='md'>{body_content}</Text>\n                        {info_message && <SectionMessage message={info_message} size='sm' status='info' />}\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default RiskManagementInfoModal;\n","import RiskManagementInfoModal from './risk-management-info-modal';\nimport './risk-management-info-modal.scss';\n\nexport default RiskManagementInfoModal;\n","import React from 'react';\nimport { Tag } from '@deriv-com/quill-ui';\nimport { RemainingTime } from '@deriv/components';\nimport { LabelPairedStopwatchCaptionRegularIcon } from '@deriv/quill-icons';\nimport { getCardLabelsV2 } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\n\ntype DealCancellationRemainingTimeProps = {\n    format?: string;\n};\n\nconst DealCancellationRemainingTime = observer(({ format = 'mm:ss' }: DealCancellationRemainingTimeProps) => {\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { contract_info } = useContractDetails();\n\n    const { date_expiry: end_time } = contract_info.cancellation || {};\n    if (!end_time || start_time.unix() > +end_time) {\n        return null;\n    }\n\n    return (\n        <Tag\n            className='deal-cancellation-badge'\n            data-testid='dt_deal_cancellation_badge'\n            icon={\n                <LabelPairedStopwatchCaptionRegularIcon\n                    key='open-contract-card'\n                    fill='var(--component-tag-label-color-default)'\n                />\n            }\n            label={\n                <RemainingTime\n                    end_time={end_time}\n                    format={format}\n                    getCardLabels={getCardLabelsV2}\n                    start_time={start_time}\n                />\n            }\n            size='sm'\n            variant='custom'\n        />\n    );\n});\n\nexport default DealCancellationRemainingTime;\n","import React from 'react';\nimport { ActionSheet, Text, TextField, TextFieldWithSteppers, ToggleSwitch } from '@deriv-com/quill-ui';\nimport { localize, Localize } from '@deriv/translations';\nimport RiskManagementInfoModal from '../RiskManagementInfoModal';\nimport DealCancellationRemainingTime from '../DealCancellationRemainingTime/deal-cancellation-remaining-time';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport {\n    CONTRACT_TYPES,\n    formatMoney,\n    isAccumulatorContract,\n    isValidToCancel,\n    getDecimalPlaces,\n    getCurrencyDisplayCode,\n} from '@deriv/shared';\nimport TotalProfitLoss from '../TotalProfitLoss';\nimport { getProfit } from 'AppV2/Utils/positions-utils';\n\ntype RiskManagementItemProps = {\n    label: React.ReactNode;\n    modal_body_content: React.ReactNode;\n    is_deal_cancellation?: boolean;\n    value?: number | null;\n    type?: 'take_profit' | 'stop_loss';\n};\n\nconst RiskManagementItem = observer(\n    ({ label, modal_body_content, is_deal_cancellation = false, value, type }: RiskManagementItemProps) => {\n        const [isToggleOn, setIsToggleOn] = React.useState(Boolean(value));\n        const [isSheetOpen, setIsSheetOpen] = React.useState(false);\n        const [isEnabled, setIsEnabled] = React.useState(false);\n        const [stepperValue, setStepperValue] = React.useState<number | string>();\n        const [showError, setShowError] = React.useState(false);\n        const { contract_info, contract } = useContractDetails();\n        const { contract_type, currency, validation_params } = contract_info;\n        const { validation_errors, updateLimitOrder, clearContractUpdateConfigValues } = contract;\n        const is_valid_to_cancel = isValidToCancel(contract_info);\n        const is_accumulator = isAccumulatorContract(contract_type);\n        const total_profit = getProfit(contract_info);\n\n        React.useEffect(() => {\n            if (value) {\n                setStepperValue(value);\n                setIsToggleOn(Boolean(value));\n            }\n            return () => clearContractUpdateConfigValues();\n        }, [clearContractUpdateConfigValues, value]);\n\n        const isDealCancellation = is_valid_to_cancel;\n        const finalValue = Math.abs(value as number);\n\n        const errorKey = `contract_update_${type}` as 'contract_update_stop_loss' | 'contract_update_take_profit';\n        const validation_error_message = validation_errors[errorKey]?.[0] ?? '';\n\n        const messageForMultiplier = is_valid_to_cancel ? (\n            <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n        ) : null;\n\n        const info_message = {\n            [CONTRACT_TYPES.ACCUMULATOR]: (\n                <Localize i18n_default_text='Take profit can’t be adjusted for ongoing accumulator contracts.' />\n            ),\n            [CONTRACT_TYPES.MULTIPLIER.UP]: messageForMultiplier,\n            [CONTRACT_TYPES.MULTIPLIER.DOWN]: messageForMultiplier,\n        };\n\n        const onChange = (\n            e: React.ChangeEvent<HTMLInputElement> | { target: { name: string; value: number | string | boolean } }\n        ) => {\n            const { value } = e.target;\n            setStepperValue(value as number);\n            setShowError(true);\n            contract.onChange?.({\n                name: `contract_update_${type}`,\n                value,\n            });\n        };\n\n        const handleToggleSwitch = (value: boolean) => {\n            clearContractUpdateConfigValues();\n            if (value) {\n                setIsSheetOpen(true);\n                setStepperValue('');\n                setIsEnabled(true);\n                setShowError(false);\n            } else {\n                contract.onChange?.({\n                    name: `has_contract_update_${type}`,\n                    value,\n                });\n                updateLimitOrder();\n                setIsToggleOn(!isToggleOn);\n            }\n        };\n\n        const min_value = type && (validation_params?.[type]?.min ?? 0);\n        const max_value = type && (validation_params?.[type]?.max ?? 0);\n\n        const getErrorMessage = () => {\n            const field_label = type === 'take_profit' ? localize('take profit') : localize('stop loss');\n            if (!stepperValue) {\n                return localize('Please enter a {{field_label}} amount.', { field_label });\n            }\n            if (min_value && +stepperValue < +min_value) {\n                return localize(\"Please enter a {{field_label}} amount that's at least {{min_value}}.\", {\n                    field_label,\n                    min_value,\n                });\n            }\n            if (max_value && +stepperValue > +max_value) {\n                return localize('Maximum {{field_label}} allowed is {{max_value}}.', {\n                    field_label,\n                    max_value,\n                });\n            }\n            return validation_error_message;\n        };\n\n        const error_message = showError ? getErrorMessage() : '';\n\n        const onSave = () => {\n            setShowError(true);\n            const current_error_message = getErrorMessage();\n            if (current_error_message) {\n                contract.onChange?.({\n                    name: errorKey,\n                    value: current_error_message,\n                });\n                return;\n            }\n            if (isEnabled) {\n                contract.onChange?.({\n                    name: `has_contract_update_${type}`,\n                    value: true,\n                });\n                setIsEnabled(false);\n            }\n            updateLimitOrder();\n            setIsSheetOpen(false);\n        };\n\n        return (\n            <div className='risk-management-item__container'>\n                <div className='risk-management-item'>\n                    <span className='risk-management-item__title'>\n                        <Text size='sm'>{label}</Text>\n                        <RiskManagementInfoModal\n                            header_content={label}\n                            body_content={modal_body_content}\n                            info_message={info_message[contract_type as keyof typeof info_message] || ''}\n                        />\n                    </span>\n                    {!is_deal_cancellation &&\n                        (is_accumulator && currency ? (\n                            <Text size='sm'>\n                                {formatMoney(currency, finalValue, true)} {currency}\n                            </Text>\n                        ) : (\n                            <ToggleSwitch\n                                disabled={isDealCancellation}\n                                checked={isToggleOn}\n                                onChange={handleToggleSwitch}\n                            />\n                        ))}\n                    {is_valid_to_cancel && is_deal_cancellation && <DealCancellationRemainingTime />}\n                </div>\n                {!is_accumulator && isToggleOn && currency && (\n                    <TextField\n                        variant='fill'\n                        inputSize='md'\n                        disabled={isSheetOpen}\n                        textAlignment='center'\n                        value={`${formatMoney(\n                            currency,\n                            type == 'stop_loss' ? -finalValue : finalValue,\n                            true\n                        )} ${currency}`}\n                        onClick={() => {\n                            clearContractUpdateConfigValues();\n                            setStepperValue(finalValue);\n                            setIsSheetOpen(true);\n                            setShowError(false);\n                        }}\n                        onFocus={() => setIsSheetOpen(true)}\n                    />\n                )}\n                <ActionSheet.Root\n                    expandable={false}\n                    isOpen={isSheetOpen}\n                    position='left'\n                    onClose={() => {\n                        setIsEnabled(false);\n                        setIsSheetOpen(false);\n                        setShowError(false);\n                    }}\n                >\n                    <ActionSheet.Portal shouldCloseOnDrag>\n                        <ActionSheet.Header title={label} />\n                        <ActionSheet.Content className='risk-management-item__action-sheet-content'>\n                            {isSheetOpen && (\n                                <TextFieldWithSteppers\n                                    allowDecimals\n                                    allowSign={false}\n                                    className='text-field--custom'\n                                    customType='commaRemoval'\n                                    decimals={getDecimalPlaces(currency)}\n                                    message={error_message}\n                                    minusDisabled={Number(stepperValue) - 1 <= 0}\n                                    name={type}\n                                    noStatusIcon\n                                    onChange={onChange}\n                                    placeholder={localize('Amount')}\n                                    regex={/[^0-9.,]/g}\n                                    status={error_message ? 'error' : 'neutral'}\n                                    textAlignment='center'\n                                    inputMode='decimal'\n                                    unitLeft={getCurrencyDisplayCode(currency)}\n                                    value={stepperValue}\n                                    variant='fill'\n                                />\n                            )}\n                            {!!total_profit && (\n                                <TotalProfitLoss\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    is_bold={false}\n                                    totalProfitLoss={total_profit}\n                                />\n                            )}\n                        </ActionSheet.Content>\n                        <ActionSheet.Footer\n                            shouldCloseOnPrimaryButtonClick={false}\n                            primaryAction={{\n                                content: <Localize i18n_default_text='Save' />,\n                                onAction: onSave,\n                            }}\n                        />\n                    </ActionSheet.Portal>\n                </ActionSheet.Root>\n            </div>\n        );\n    }\n);\n\nexport default RiskManagementItem;\n","import RiskManagementItem from './risk-management-item';\nimport './risk-management-item.scss';\n\nexport default RiskManagementItem;\n","import { Localize } from '@deriv/translations';\nimport React from 'react';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport RiskManagementItem from '../RiskManagementItem';\n\nconst TakeProfit = observer(() => {\n    const { contract_info } = useContractDetails();\n    const { limit_order } = contract_info;\n    const { isTakeProfitVisible } = getContractDetailsConfig(contract_info.contract_type ?? '');\n    return isTakeProfitVisible ? (\n        <RiskManagementItem\n            label={<Localize i18n_default_text='Take profit' />}\n            modal_body_content={\n                <Localize i18n_default_text='When your profit reaches or exceeds the set amount, your trade will be closed automatically.' />\n            }\n            value={limit_order?.take_profit?.order_amount}\n            type='take_profit'\n        />\n    ) : null;\n});\n\nexport default TakeProfit;\n","import { Localize } from '@deriv/translations';\nimport React from 'react';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport RiskManagementItem from '../RiskManagementItem';\n\nconst StopLoss = observer(() => {\n    const { contract_info } = useContractDetails();\n    const { limit_order } = contract_info;\n    const { isStopLossVisible } = getContractDetailsConfig(contract_info.contract_type ?? '');\n\n    return isStopLossVisible ? (\n        <RiskManagementItem\n            label={<Localize i18n_default_text='Stop loss' />}\n            modal_body_content={\n                <Localize i18n_default_text='When your loss reaches or exceeds the set amount, your trade will be closed automatically.' />\n            }\n            value={limit_order?.stop_loss?.order_amount}\n            type='stop_loss'\n        />\n    ) : null;\n});\n\nexport default StopLoss;\n","import { Localize } from '@deriv/translations';\nimport React from 'react';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport RiskManagementItem from '../RiskManagementItem';\nimport { isValidToCancel, isOpen } from '@deriv/shared';\nimport CardWrapper from '../CardWrapper';\n\nconst DealCancellation = observer(() => {\n    const { contract_info } = useContractDetails();\n    const { isDealCancellationVisible } = getContractDetailsConfig(contract_info.contract_type ?? '');\n\n    const canCancel = isValidToCancel(contract_info);\n\n    return canCancel && isDealCancellationVisible && isOpen(contract_info) ? (\n        <CardWrapper>\n            <RiskManagementItem\n                label={<Localize i18n_default_text='Deal cancellation' />}\n                modal_body_content={\n                    <Localize i18n_default_text='When this is active, you can cancel your trade within the chosen time frame. Your stake will be returned without loss.' />\n                }\n                is_deal_cancellation\n            />\n        </CardWrapper>\n    ) : null;\n});\n\nexport default DealCancellation;\n","import React from 'react';\nimport { Button, TButtonColor } from '@deriv-com/quill-ui';\nimport { RemainingTime } from '@deriv/components';\nimport { TContractInfo, getCardLabelsV2, isMultiplierContract, isValidToCancel, isValidToSell } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { observer } from 'mobx-react-lite';\nimport { TRegularSizesWithExtraLarge } from '@deriv-com/quill-ui/dist/types';\nimport { FormatUtils } from '@deriv-com/utils';\n\ntype ContractInfoProps = {\n    contract_info: TContractInfo;\n};\n\ntype ButtonProps = {\n    color: TButtonColor;\n    size: TRegularSizesWithExtraLarge;\n    fullWidth: boolean;\n};\n\nconst ContractDetailsFooter = observer(({ contract_info }: ContractInfoProps) => {\n    const {\n        bid_price,\n        currency,\n        contract_id,\n        cancellation: { date_expiry: cancellation_date_expiry } = {},\n        profit,\n        contract_type,\n    } = contract_info;\n\n    const { contract_replay, common } = useStore();\n    const { server_time } = common;\n    const { onClickCancel, onClickSell, is_sell_requested } = contract_replay;\n    const is_valid_to_sell = isValidToSell(contract_info);\n    const is_valid_to_cancel = isValidToCancel(contract_info);\n    const is_multiplier = isMultiplierContract(contract_type);\n\n    const card_labels = getCardLabelsV2();\n    const formatted_bid_price = FormatUtils.formatMoney(bid_price || 0, {\n        currency: currency as 'USD', // currency types mismatched between utils and shared\n    });\n    const is_close_button_disabled = Number(profit) < 0 && is_valid_to_cancel;\n    const bid_details = is_close_button_disabled ? '' : `${formatted_bid_price} ${currency}`;\n    const label = `${card_labels.CLOSE} ${bid_details}`;\n    const button_props: ButtonProps = {\n        color: 'black-white',\n        size: 'lg',\n        fullWidth: true,\n    };\n\n    return (\n        <div className='contract-details-footer--container'>\n            {is_multiplier ? (\n                <>\n                    <span className='contract-details-footer-button__wrapper'>\n                        <Button\n                            label={label}\n                            isLoading={is_sell_requested}\n                            disabled={is_close_button_disabled}\n                            onClick={() => onClickSell(contract_id)}\n                            {...button_props}\n                        />\n                    </span>\n                    {is_valid_to_cancel && (\n                        <span className='contract-details-footer-button__wrapper'>\n                            <Button\n                                onClick={() => onClickCancel(contract_id)}\n                                label={\n                                    <>\n                                        {card_labels.CANCEL}{' '}\n                                        <RemainingTime\n                                            as='span'\n                                            end_time={cancellation_date_expiry}\n                                            format='mm:ss'\n                                            getCardLabels={getCardLabelsV2}\n                                            start_time={server_time}\n                                        />\n                                    </>\n                                }\n                                disabled={Number(profit) >= 0}\n                                variant='secondary'\n                                {...button_props}\n                            />\n                        </span>\n                    )}\n                </>\n            ) : (\n                <span className='contract-details-footer-button__wrapper'>\n                    <Button\n                        label={\n                            is_valid_to_sell\n                                ? `${card_labels.CLOSE} ${formatted_bid_price} ${currency}`\n                                : card_labels.RESALE_NOT_OFFERED\n                        }\n                        isLoading={is_sell_requested && is_valid_to_sell}\n                        isOpaque\n                        onClick={is_valid_to_sell ? () => onClickSell(contract_id) : undefined}\n                        disabled={!is_valid_to_sell}\n                        variant='primary'\n                        {...button_props}\n                    />\n                </span>\n            )}\n        </div>\n    );\n});\n\nexport default ContractDetailsFooter;\n","import ContractDetailsFooter from './contract-details-footer';\nimport './contract-details-footer.scss';\n\nexport default ContractDetailsFooter;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText, Text } from '@deriv-com/quill-ui';\nimport {\n    TContractInfo,\n    formatDate,\n    formatTime,\n    getCardLabels,\n    getStartTime,\n    hasForwardContractStarted,\n    isEnded,\n    isForwardStarting,\n    toMoment,\n} from '@deriv/shared';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { Localize } from '@deriv/translations';\nimport { RemainingTime } from '@deriv/components';\nimport { TRootStore } from 'Types';\nimport { LabelPairedStopwatchMdBoldIcon } from '@deriv/quill-icons';\n\ntype TForwardStartingBannerProps = {\n    class_name?: string;\n    contract_info: TContractInfo | TClosedPosition['contract_info'];\n    server_time?: TRootStore['common']['server_time'];\n};\n\nconst ForwardStartingBanner = ({ class_name, contract_info, server_time }: TForwardStartingBannerProps) => {\n    const { purchase_time, sell_time, shortcode } = contract_info;\n    const is_sold = !!sell_time || isEnded(contract_info as TContractInfo);\n    const is_forward_starting = isForwardStarting(shortcode ?? '', purchase_time);\n    const start_time = getStartTime(shortcode ?? '');\n    const has_forward_contract_started = hasForwardContractStarted(shortcode ?? '');\n    const show_banner = is_forward_starting && !!start_time && !has_forward_contract_started && !is_sold;\n\n    if (!show_banner) return null;\n\n    return (\n        <div className={clsx('banner__wrapper', class_name)}>\n            <div className='banner__content--left'>\n                <CaptionText size='sm' className='banner__text'>\n                    <Localize i18n_default_text='This contract starts on' />\n                </CaptionText>\n                <CaptionText bold size='sm' className='banner__text'>\n                    {formatDate(toMoment(parseInt(start_time || '')), 'DD MMM YYYY')}\n                    {', '}\n                    {formatTime(parseInt(start_time || ''), 'HH:mm [GMT]')}\n                </CaptionText>\n            </div>\n            <Text bold size='md' className='banner__timer' as='div'>\n                <LabelPairedStopwatchMdBoldIcon fill='var(--component-textIcon-static-prominentDark)' />\n                <RemainingTime\n                    as='span'\n                    className='banner__timer__countdown'\n                    end_time={parseInt(start_time || '')}\n                    getCardLabels={getCardLabels}\n                    start_time={server_time as moment.Moment}\n                    key='remaining-time'\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default ForwardStartingBanner;\n","import ForwardStartingBanner from './forward-starting-banner';\nimport './forward-starting-banner.scss';\n\nexport default ForwardStartingBanner;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Text, IconButton } from '@deriv-com/quill-ui';\nimport { LabelPairedArrowLeftSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { isEmptyObject } from '@deriv/shared';\n\nconst ContractDetailsHeader = observer(() => {\n    const { state } = useLocation();\n    const history = useHistory();\n    const { common } = useStore();\n    const { routeBackInApp } = common;\n\n    const handleBack = () => {\n        const is_from_table_row = !isEmptyObject(state) ? state.from_table_row : false;\n        return is_from_table_row\n            ? history.goBack()\n            : routeBackInApp(history as unknown as Parameters<typeof routeBackInApp>[0]);\n    };\n\n    return (\n        <header className='header contract-details-header-v2'>\n            <React.Suspense fallback={<div />}>\n                <IconButton\n                    variant='tertiary'\n                    icon={<LabelPairedArrowLeftSmBoldIcon height='22px' width='13px' data-testid='arrow' key='arrow' />}\n                    className='arrow'\n                    color='black-white'\n                    onClick={handleBack}\n                />\n                <Text size='md' bold color='quill-typography__color--prominent'>\n                    <Localize i18n_default_text='Contract details' />\n                </Text>\n            </React.Suspense>\n        </header>\n    );\n});\n\nexport default ContractDetailsHeader;\n","import ContractDetailsHeader from './contract-details-header';\n\nexport default ContractDetailsHeader;\n","import React from 'react';\nimport EntryExitDetails from 'AppV2/Components/EntryExitDetails';\nimport TakeProfitHistory from 'AppV2/Components/TakeProfitHistory';\nimport PayoutInfo from 'AppV2/Components/PayoutInfo';\nimport ContractDetailsChart from '../Chart/contract-details-chart';\nimport CardWrapper from 'AppV2/Components/CardWrapper';\nimport { observer, useStore } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport OrderDetails from 'AppV2/Components/OrderDetails';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport TakeProfit from 'AppV2/Components/TakeProfit/take-profit';\nimport StopLoss from 'AppV2/Components/StopLoss/stop-loss';\nimport DealCancellation from 'AppV2/Components/DealCancellation/deal-cancellation';\nimport {\n    isForwardStarting,\n    isMultiplierContract,\n    isOpen,\n    isValidToCancel,\n    WS,\n    TContractStore,\n    isValidToSell,\n    hasContractEntered,\n    isAccumulatorContract,\n} from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport classNames from 'classnames';\nimport ContractDetailsFooter from 'AppV2/Components/ContractDetailsFooter';\nimport { ContractCard } from 'AppV2/Components/ContractCard';\nimport ForwardStartingBanner from 'AppV2/Components/ForwardStartingBanner';\nimport ContractDetailsHeader from 'AppV2/Components/ContractDetailsHeader';\n\nconst ContractDetails = observer(() => {\n    const { contract_info, is_loading } = useContractDetails();\n    const { contract_id, currency, contract_type, limit_order } = contract_info;\n    const { take_profit, stop_loss } = limit_order ?? { take_profit: {}, stop_loss: {} };\n    const [update_history, setUpdateHistory] = React.useState<TContractUpdateHistory>([]);\n    const { common } = useStore();\n    const { server_time } = common;\n    const { isTakeProfitVisible, isStopLossVisible } = getContractDetailsConfig(contract_type ?? '');\n    const canSell = isValidToSell(contract_info);\n    type TContractUpdateHistory = TContractStore['contract_update_history'];\n    type TResponse = {\n        contract_update_history: TContractUpdateHistory;\n    };\n\n    const getSortedUpdateHistory = (history: TContractUpdateHistory) =>\n        history.sort((a, b) => Number(b?.order_date) - Number(a?.order_date));\n    const requestUpdatedHistory = React.useCallback((id?: number) => {\n        if (!id) return;\n        WS.contractUpdateHistory(id)\n            .then((response: TResponse) => {\n                setUpdateHistory(getSortedUpdateHistory(response.contract_update_history));\n            })\n            .catch(() => null);\n    }, []);\n\n    React.useEffect(() => {\n        requestUpdatedHistory(contract_id);\n    }, [contract_id, take_profit?.order_amount, stop_loss?.order_amount, requestUpdatedHistory]);\n\n    if (is_loading) return <Loading.DTraderV2 is_contract_details />;\n\n    const isMultiplier = isMultiplierContract(contract_info.contract_type);\n\n    const canCancel = isValidToCancel(contract_info);\n    const shouldShowSell =\n        (hasContractEntered(contract_info) ||\n            isForwardStarting(contract_info?.shortcode ?? '', contract_info.purchase_time)) &&\n        isOpen(contract_info);\n    const { isTpHistoryVisible, isDealCancellationVisible } = getContractDetailsConfig(\n        contract_info.contract_type ?? ''\n    );\n    const showCancelButton = isMultiplier && canCancel;\n    let showRiskManagement =\n        isOpen(contract_info) && (isTakeProfitVisible || isStopLossVisible) && (canSell || isDealCancellationVisible);\n\n    if (isAccumulatorContract(contract_info.contract_type)) {\n        showRiskManagement = isOpen(contract_info) && Boolean(limit_order);\n    }\n    return (\n        <>\n            <ContractDetailsHeader />\n            <div\n                className={classNames('contract-details', {\n                    'contract-details--two-buttons': shouldShowSell && showCancelButton,\n                    'contract-details--one-button': shouldShowSell && !showCancelButton,\n                })}\n            >\n                <ForwardStartingBanner contract_info={contract_info} server_time={server_time} />\n                <ContractCard contractInfo={contract_info} serverTime={server_time} currency={currency} />\n                <ContractDetailsChart />\n                <DealCancellation />\n                {showRiskManagement && (\n                    <CardWrapper>\n                        <TakeProfit />\n                        <StopLoss />\n                    </CardWrapper>\n                )}\n                <OrderDetails contract_info={contract_info} />\n                <PayoutInfo contract_info={contract_info} />\n                <EntryExitDetails contract_info={contract_info} />\n                {isTpHistoryVisible && update_history.length > 0 && (\n                    <TakeProfitHistory history={update_history} currency={currency} is_multiplier={isMultiplier} />\n                )}\n            </div>\n            {shouldShowSell && <ContractDetailsFooter contract_info={contract_info} />}\n        </>\n    );\n});\n\nexport default ContractDetails;\n","import ContractDetails from './contract-details';\nimport './contract-details.scss';\n\nexport default ContractDetails;\n","import { lazy } from 'react';\nimport { routes } from '@deriv/shared';\nimport Trade from 'AppV2/Containers/Trade';\nimport Positions from 'AppV2/Containers/Positions';\nimport { TRouteConfig } from 'Types';\nimport ContractDetails from 'AppV2/Containers/ContractDetails';\n\ntype TRouteConfigExtended = Omit<TRouteConfig, 'routes'> & {\n    path: string;\n    component: React.ComponentType;\n    default: boolean;\n};\n\nconst traderRoutes: TRouteConfigExtended[] = [\n    {\n        path: routes.trade,\n        component: Trade,\n        exact: true,\n        default: false,\n    },\n    {\n        path: routes.trader_positions,\n        component: Positions,\n        is_authenticated: true,\n        default: false,\n    },\n    {\n        path: routes.contract,\n        component: ContractDetails,\n        is_authenticated: true,\n        default: false,\n    },\n    {\n        // default route\n        path: '/*',\n        component: lazy(() => import('Modules/Page404')),\n        default: false,\n    },\n];\n\nexport default traderRoutes;\n","import React, { Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { UILoader, RouteWithSubroutes } from '@deriv/components';\nimport traderRoutes from './routes';\nimport { observer, useStore } from '@deriv/stores';\nimport Page404 from 'Modules/Page404';\n\nconst Router: React.FC = () => {\n    const { client, common, portfolio } = useStore();\n    const { is_logged_in } = client;\n    const { current_language } = common;\n    const { onMount, onUnmount } = portfolio;\n\n    React.useEffect(() => {\n        onMount();\n        return onUnmount;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Suspense fallback={<UILoader />}>\n            <Switch>\n                {traderRoutes.map((route, index) => (\n                    <RouteWithSubroutes\n                        key={index}\n                        is_logged_in={is_logged_in}\n                        language={current_language}\n                        Component404={Page404}\n                        should_redirect_login\n                        routes={traderRoutes}\n                        to=''\n                        {...route}\n                    />\n                ))}\n            </Switch>\n        </Suspense>\n    );\n};\n\nexport default observer(Router);\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { useLocation } from 'react-router-dom';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useSnackbar, SnackbarController } from '@deriv-com/quill-ui';\nimport { getStaticUrl, isEmptyObject, isValidToCancel, routes } from '@deriv/shared';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport { checkIsServiceModalError, SERVICE_ERROR } from 'AppV2/Utils/layout-utils';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\n\nconst ServicesErrorSnackbar = observer(() => {\n    const {\n        common: { services_error, resetServicesError },\n        ui: { is_mf_verification_pending_modal_visible },\n        client: { is_logged_in },\n    } = useStore();\n    const { is_multiplier, proposal_info, validation_errors, trade_types, contract_type, trade_type_tab } =\n        useTraderStore();\n    const { contract_info } = useContractDetails();\n    const { addSnackbar } = useSnackbar();\n    const { pathname } = useLocation();\n\n    const { code, message } = services_error || {};\n    const has_services_error = !isEmptyObject(services_error);\n    const is_modal_error = checkIsServiceModalError({ services_error, is_mf_verification_pending_modal_visible });\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n\n    // Some BO errors comes inside of proposal and we store them inside of proposal_info.\n    // Such error have no error_field and it is one of the main differences from trade parameters errors (duration, stake and etc).\n    // Another difference is that trade params errors arrays in validation_errors are empty.\n    const { has_error, error_field, message: contract_error_message } = proposal_info[contract_types[0]] ?? {};\n    const contract_error =\n        has_error && !error_field && !Object.keys(validation_errors).some(key => validation_errors[key].length);\n\n    const checkShouldShowErrorSnackBar = () => {\n        if (!has_services_error && !contract_error) return false;\n        if (pathname === routes.trade) return (has_services_error && !is_modal_error) || contract_error;\n        if (pathname === routes.trader_positions || location.pathname.startsWith('/contract/'))\n            return has_services_error;\n        return false;\n    };\n\n    const should_show_error_snackbar = checkShouldShowErrorSnackBar();\n    const should_contain_action = should_show_error_snackbar && code === SERVICE_ERROR.COMPANY_WIDE_LIMIT_EXCEEDED;\n    const bottom_position =\n        location.pathname.startsWith('/contract/') && is_multiplier && isValidToCancel(contract_info)\n            ? '104px'\n            : '48px';\n    const action_props = {\n        actionText: localize('View'),\n        onActionClick: () => window.open(getStaticUrl('tnc/trading-terms.pdf', true)),\n    };\n\n    React.useEffect(() => {\n        if (should_show_error_snackbar) {\n            addSnackbar({\n                message: message ?? contract_error_message,\n                status: 'fail',\n                hasCloseButton: true,\n                hasFixedHeight: false,\n                onSnackbarRemove: resetServicesError,\n                style: {\n                    marginBottom: is_logged_in ? bottom_position : '-8px',\n                    width: 'calc(100% - var(--core-spacing-800)',\n                },\n                ...(should_contain_action ? action_props : {}),\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_error_snackbar, should_contain_action]);\n\n    return <SnackbarController />;\n});\n\nexport default ServicesErrorSnackbar;\n","import ServicesErrorSnackbar from './services-error-snackbar';\n\nexport default ServicesErrorSnackbar;\n","import React from 'react';\nimport type { TWebSocket } from 'Types';\nimport initStore from 'App/init-store';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport { routes } from '@deriv/shared';\nimport ModulesProvider from 'Stores/Providers/modules-providers';\nimport TraderProviders from '../trader-providers';\nimport { ReportsStoreProvider } from '../../../reports/src/Stores/useReportsStores';\nimport { NotificationsProvider, SnackbarProvider } from '@deriv-com/quill-ui';\nimport 'Sass/app.scss';\nimport Notifications from './Containers/Notifications';\nimport Router from './Routes/router';\nimport ServicesErrorSnackbar from './Components/ServicesErrorSnackbar';\nimport { sendDtraderV2OpenToAnalytics } from '../Analytics';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: TWebSocket;\n    };\n};\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    React.useLayoutEffect(() => {\n        const head = document.head;\n        const links = head.querySelectorAll('link[rel=\"stylesheet\"]');\n        const is_last_dtrader = (links[links.length - 1] as HTMLLinkElement)?.href?.includes('/trader');\n        const dtrader_links = [...links].filter(link => (link as HTMLLinkElement)?.href?.includes('/trader'));\n\n        if (is_last_dtrader) return;\n\n        const dtrader_links_clone = dtrader_links?.map(link => link?.cloneNode(true));\n        dtrader_links_clone.forEach(link => head.appendChild(link));\n\n        return () => dtrader_links_clone?.forEach(link => head.removeChild(link));\n    }, []);\n\n    React.useEffect(() => {\n        if (window.location.pathname === routes.trade) {\n            sendDtraderV2OpenToAnalytics();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.location.pathname]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <ReportsStoreProvider>\n                <ModulesProvider store={root_store}>\n                    <NotificationsProvider>\n                        <SnackbarProvider>\n                            <Notifications />\n                            <Router />\n                            <ServicesErrorSnackbar />\n                        </SnackbarProvider>\n                    </NotificationsProvider>\n                </ModulesProvider>\n            </ReportsStoreProvider>\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Text, Modal, Button } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { TContractInfo, isTabletOs } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TInfoBoxLongcode = { contract_info: TContractInfo };\n\nconst InfoBoxLongcode = observer(({ contract_info }: TInfoBoxLongcode) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    const max_longcode_length = is_mobile ? 47 : 150;\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n\n    const handleToggle = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        if (e) {\n            e.preventDefault();\n            if (e.type !== 'keydown' || (e.type === 'keydown' && (e as React.KeyboardEvent).key === 'Enter')) {\n                setIsCollapsed(!is_collapsed);\n            }\n        } else {\n            setIsCollapsed(!is_collapsed);\n        }\n    };\n\n    return (\n        <div className='info-box-longcode'>\n            <Icon icon='IcContractFlag' className='info-box-longcode-icon' size={24} />\n            <div\n                className='info-box-longcode-wrapper'\n                onClick={is_mobile ? handleToggle : undefined}\n                onKeyDown={handleToggle}\n            >\n                <Text\n                    size='xs'\n                    className={classNames('info-box-longcode-text', {\n                        'info-box-longcode-text--collapsed': is_collapsed || is_mobile,\n                        'info-box-longcode-text--collapsed--fixed-height': !isTabletOs && (is_collapsed || is_mobile),\n                    })}\n                >\n                    {contract_info.longcode}\n                </Text>\n                {` `}\n                {contract_info?.longcode && contract_info.longcode.length > max_longcode_length && (\n                    <Text as='a' href='#' size='xs' onClick={handleToggle} className='info-box-longcode-text'>\n                        {is_collapsed || is_mobile ? (\n                            <Localize i18n_default_text='View more' />\n                        ) : (\n                            <Localize i18n_default_text='View less' />\n                        )}\n                    </Text>\n                )}\n            </div>\n            <Modal\n                className='info-box-longcode--modal'\n                is_open={is_mobile && !is_collapsed}\n                title={<Localize i18n_default_text='Trade info' />}\n                has_close_icon={false}\n                should_close_on_click_outside\n                small\n                toggleModal={handleToggle}\n            >\n                <Modal.Body>\n                    <Text size='xs'>{contract_info.longcode}</Text>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className='info-box-longcode--modal-button' primary large onClick={handleToggle}>\n                        <Localize i18n_default_text='OK' />\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n});\n\nexport default InfoBoxLongcode;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TContractError = {\n    message?: string;\n    onClickClose: () => void;\n};\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({ message = '', onClickClose }: TContractError) =>\n    !message ? null : (\n        <div className='message'>\n            <div className='message-icon'>\n                <svg width='16' height='16' viewBox='0 0 16 16'>\n                    <g fill='none' fillRule='evenodd'>\n                        <circle cx='8' cy='8' r='8' fill='#F44336' />\n                        <path\n                            fill='#FFF'\n                            fillRule='nonzero'\n                            d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z'\n                        />\n                    </g>\n                </svg>\n            </div>\n            <div className='message-text'>{message}</div>\n            <div className='message-close' onClick={onClickClose}>\n                <Icon icon='IcCross' />\n            </div>\n        </div>\n    );\n\nexport default ContractError;\n","import React from 'react';\nimport { SlideIn } from 'App/Components/Animations';\nimport InfoBoxLongcode from './info-box-longcode';\nimport ContractError from '../contract-error';\nimport { TContractInfo } from '@deriv/shared';\n\ntype TInfoBox = {\n    contract_info: TContractInfo;\n    error_message?: string;\n    removeError: () => void;\n};\n\nconst InfoBox = ({ contract_info, error_message, removeError }: TInfoBox) => {\n    const is_ready = !!contract_info.longcode;\n    return (\n        <SlideIn is_visible={is_ready} className='info-box-container' keyname='info-box-container'>\n            {!!contract_info.contract_type && (\n                <div className='info-box'>\n                    <InfoBoxLongcode contract_info={contract_info} />\n                </div>\n            )}\n            <ContractError message={error_message} onClickClose={removeError} />\n        </SlideIn>\n    );\n};\n\nexport default InfoBox;\n","import InfoBox from './info-box';\n\nexport default InfoBox;\n","import React from 'react';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport InfoBox from 'Modules/Contract/Components/InfoBox';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets';\nimport TopWidgets from '../../SmartChart/Components/top-widgets';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(() => {\n    const { contract_replay, ui } = useStore();\n    const { is_mobile } = ui;\n    const { contract_store } = contract_replay;\n    const { contract_info, digits_info, display_status, is_digit_contract, is_ended } = contract_store;\n\n    return (\n        <Digits\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_mobile={is_mobile}\n            contract_info={contract_info}\n            digits_info={digits_info}\n            display_status={display_status}\n        />\n    );\n});\n\nexport const InfoBoxWidget = observer(() => {\n    const { contract_replay } = useStore();\n    const { contract_store, removeErrorMessage: removeError, error_message } = contract_replay;\n    const { contract_info } = contract_store;\n\n    return <InfoBox contract_info={contract_info} error_message={error_message} removeError={removeError} />;\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = () => {\n    return <TopWidgets InfoBox={<InfoBoxWidget />} is_title_enabled={false} />;\n};\nexport const ChartBottomWidgets = () => <BottomWidgets Widget={<DigitsWidget />} />;\n","import React from 'react';\nimport type { TContractInfo } from '@deriv/shared';\nimport ChartMarker from './marker';\n\ntype ResetContractChartElements = {\n    contract_info: TContractInfo;\n};\n\nconst ResetContractChartElements = ({ contract_info }: ResetContractChartElements) => {\n    const { contract_type, entry_spot, reset_time, reset_barrier } = contract_info ?? {};\n    const is_reset_call = /CALL/i.test(contract_type ?? '');\n\n    // Gradient logic: when reset_time has come, we need to reapply gradient. For CALL, shade will be applied to the lowest barrier, for PUT - to the highest barrier\n    let y_axis_coordinates = Math.max(Number(entry_spot), Number(reset_barrier));\n    if (is_reset_call) {\n        y_axis_coordinates = Math.min(Number(entry_spot), Number(reset_barrier));\n    }\n\n    return (\n        <React.Fragment>\n            <ChartMarker\n                is_positioned_behind\n                marker_config={{\n                    ContentComponent: 'div',\n                    x: Number(reset_time),\n                    y: y_axis_coordinates,\n                }}\n                marker_content_props={{\n                    className: `sc-barrier_gradient sc-barrier_gradient--${is_reset_call ? 'to-bottom' : 'to-top'}`,\n                }}\n            />\n            <ChartMarker\n                is_positioned_behind\n                marker_config={{\n                    ContentComponent: 'div',\n                    x: Number(reset_time),\n                    y: Number(reset_barrier),\n                }}\n                marker_content_props={{ className: 'sc-reset_barrier' }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(ResetContractChartElements);\n","import React from 'react';\nimport { usePrevious } from '@deriv/components';\nimport {\n    getDurationPeriod,\n    getDurationUnitText,\n    getEndTime,\n    getPlatformRedirect,\n    hasContractStarted,\n    isDtraderV2DesktopEnabled,\n    isDtraderV2MobileEnabled,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ChartBottomWidgets, ChartTopWidgets } from './contract-replay-widget';\nimport ResetContractChartElements from 'Modules/SmartChart/Components/Markers/reset-contract-chart-elements';\nimport { SmartChart } from 'Modules/SmartChart';\nimport ChartMarker from 'Modules/SmartChart/Components/Markers/marker';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ReplayChart = observer(\n    ({\n        is_dark_theme_prop,\n        is_accumulator_contract,\n        is_reset_contract,\n        is_vertical_scroll_disabled,\n    }: {\n        is_dark_theme_prop?: boolean;\n        is_accumulator_contract?: boolean;\n        is_reset_contract?: boolean;\n        is_vertical_scroll_disabled?: boolean;\n    }) => {\n        const trade = useTraderStore();\n        const { contract_replay, common, ui } = useStore();\n        const { isMobile } = useDevice();\n        const { contract_store, chart_state, chartStateChange, margin } = contract_replay;\n        const { contract_config, is_digit_contract, barriers_array, getContractsArray, markers_array, contract_info } =\n            contract_store;\n        const { underlying: symbol, audit_details, barrier_count } = contract_info;\n        const allow_scroll_to_epoch = chart_state === 'READY' || chart_state === 'SCROLL_TO_LEFT';\n        const { app_routing_history, current_language, is_socket_opened } = common;\n        const { is_chart_layout_default, is_chart_countdown_visible } = ui;\n        const { end_epoch, chart_type, start_epoch, granularity } = contract_config || {};\n        const is_dark_theme = is_dark_theme_prop || ui.is_dark_mode_on;\n        const is_sold_before_started =\n            !!contract_info?.is_forward_starting && !hasContractStarted(contract_info) && !!contract_info.is_sold;\n        /**\n         * TODO: remove forcing light theme once DBot supports dark theme\n         * DBot does not support for dark theme since till now,\n         * as a result, if any user come to report detail pages\n         * from DBot, we should force it to have light theme\n         */\n        const from_platform = getPlatformRedirect(app_routing_history);\n        const should_force_light_theme = from_platform.name === 'DBot';\n        const settings = {\n            language: current_language,\n            theme: is_dark_theme && !should_force_light_theme ? 'dark' : 'light',\n            position: is_chart_layout_default ? 'bottom' : 'left',\n            countdown: is_chart_countdown_visible,\n            assetInformation: false, // ui.is_chart_asset_info_visible,\n            isHighestLowestMarkerEnabled: false, // TODO: Pending UI\n        };\n        const scroll_to_epoch = allow_scroll_to_epoch && contract_config ? contract_config.scroll_to_epoch : undefined;\n        const all_ticks = audit_details ? audit_details.all_ticks : [];\n        const { wsForget, wsSubscribe, wsSendRequest, wsForgetStream } = trade;\n\n        const isBottomWidgetVisible = () => {\n            return !isMobile && is_digit_contract;\n        };\n\n        const getChartYAxisMargin = () => {\n            const chart_margin = {\n                top: isMobile ? 96 : 148,\n                bottom: isBottomWidgetVisible() ? 128 : 112,\n            };\n\n            if (isMobile) {\n                chart_margin.bottom = 48;\n                chart_margin.top = 48;\n            }\n\n            return chart_margin;\n        };\n        const prev_start_epoch = usePrevious(start_epoch);\n\n        const has_ended = !!getEndTime(contract_info);\n        const is_dtrader_v2_enabled =\n            isDtraderV2DesktopEnabled(ui.is_desktop) || isDtraderV2MobileEnabled(ui.is_mobile);\n\n        return (\n            <SmartChart\n                id='replay'\n                barriers={barriers_array}\n                bottomWidgets={isBottomWidgetVisible() ? ChartBottomWidgets : undefined}\n                chartControlsWidgets={null}\n                chartType={chart_type}\n                endEpoch={end_epoch}\n                margin={margin}\n                isMobile={isMobile}\n                enabledNavigationWidget={!isMobile}\n                enabledChartFooter={false}\n                granularity={granularity}\n                requestAPI={wsSendRequest}\n                requestForget={wsForget}\n                requestForgetStream={wsForgetStream}\n                crosshair={isMobile ? 0 : undefined}\n                maxTick={isMobile ? 8 : undefined}\n                requestSubscribe={wsSubscribe}\n                settings={settings}\n                startEpoch={is_sold_before_started ? contract_info.purchase_time : start_epoch}\n                scrollToEpoch={scroll_to_epoch}\n                stateChangeListener={chartStateChange}\n                symbol={symbol}\n                allTicks={all_ticks}\n                topWidgets={is_dtrader_v2_enabled ? () => <React.Fragment /> : ChartTopWidgets}\n                isConnectionOpened={is_socket_opened}\n                isStaticChart={\n                    // forcing chart reload when start_epoch changes to an earlier epoch for ACCU closed contract:\n                    !!is_accumulator_contract && !!end_epoch && Number(start_epoch) < Number(prev_start_epoch)\n                }\n                shouldFetchTradingTimes={false}\n                should_zoom_out_on_yaxis={is_accumulator_contract}\n                yAxisMargin={getChartYAxisMargin()}\n                anchorChartToLeft={isMobile}\n                shouldFetchTickHistory={\n                    getDurationUnitText(getDurationPeriod(contract_info)) !== 'seconds' ||\n                    contract_info.status === 'open'\n                }\n                shouldDrawTicksFromContractInfo={is_accumulator_contract}\n                contractInfo={contract_info}\n                contracts_array={getContractsArray()}\n                isLive={!has_ended}\n                isVerticalScrollEnabled={!is_vertical_scroll_disabled}\n                startWithDataFitMode={true}\n            >\n                {markers_array.map(({ content_config, marker_config, react_key, type }) => (\n                    <ChartMarker\n                        key={react_key}\n                        marker_config={marker_config}\n                        marker_content_props={content_config}\n                        is_positioned_before={(type === 'SPOT_ENTRY' || type === 'SPOT_EXIT') && barrier_count === 2}\n                    />\n                ))}\n                {is_reset_contract && contract_info?.reset_time && (\n                    <ResetContractChartElements contract_info={contract_info} />\n                )}\n            </SmartChart>\n        );\n    }\n);\nexport default ReplayChart;\n","import { useStore } from '@deriv/stores';\nimport { TTradeStore } from 'Types';\nimport moment from 'moment';\n\ntype TTime = {\n    server_time: NonNullable<ReturnType<typeof useStore>['common']['server_time']>;\n    selected_time: moment.Moment;\n    market_open_times: TTradeStore['market_open_times'];\n    market_close_times: TTradeStore['market_close_times'];\n};\n\nconst getClosestTime = (time: moment.Moment | string, interval: number): moment.Moment => {\n    const moment_time = moment(time); // Convert time to a moment object if it's a string\n    return moment_time.minute(Math.ceil(moment_time.minute() / interval) * interval);\n};\n\nexport const getSelectedTime = (\n    server_time: TTime['server_time'],\n    selected_time: TTime['selected_time'],\n    market_open_times: moment.Moment[],\n    market_close_times: moment.Moment[]\n) => {\n    for (let i = 0; i < market_open_times.length; i++) {\n        if (selected_time.isAfter(market_open_times[i]) && selected_time.isBefore(market_close_times[i])) {\n            return getClosestTime(selected_time, 5).format('HH:mm');\n        }\n    }\n\n    for (let i = 0; i < market_open_times.length; i++) {\n        const moment_market_open_time = moment(market_open_times[i]); // Convert market open time to a moment object\n        if (moment_market_open_time.isAfter(server_time)) {\n            return getClosestTime(moment_market_open_time, 5).format('HH:mm');\n        }\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time: TTime['server_time'],\n    market_open_times: moment.Moment[],\n    market_close_times: moment.Moment[]\n) => {\n    const boundaries = {\n        start: market_open_times.map(open_time =>\n            server_time.isBefore(open_time) ? moment(open_time).clone() : server_time\n        ),\n        end: market_close_times,\n    };\n\n    if (boundaries.start.length > 0) {\n        boundaries.start[0] = getClosestTime(boundaries.start[0], 5);\n    }\n\n    return boundaries;\n};\n","import { TContractInfo } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nexport const isCancellationExpired = (contract_info: TContractInfo) =>\n    !!contract_info.cancellation?.date_expiry &&\n    contract_info.cancellation.date_expiry < (ServerTime.get() as moment.Moment).unix();\n"],"names":["getDateTo","date_to","today","toMoment","startOf","unix","epochToMoment","add","subtract","getDateFrom","should_load_partially","partial_fetch_time","date_from","arguments","length","undefined","_objectSpread","shouldSendDateFrom","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","key","toPrimitive","String","Number","_toPrimitive","BaseStore","_this","options","_classCallCheck","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","makeObservable","this","observable","retrieveFromStorage","action","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","bound","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","onUnmount","assertHasValidCache","root_store","local_storage_properties","session_storage_properties","store_name","setTimeout","setupReactionForLocalStorage","setupReactionForSessionStorage","properties","snapshot","toJS","isEmptyObject","reduce","result","assign","_this2","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","_this3","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this4","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","_this5","x","includes","concat","_this6","rules","property","_this7","intercept","change","newValue","_this8","trigger","inputs","validator","Validator","isPassed","errors","get","_this9","error","listener","_this10","when","client","switch_broadcast","switchEndSignal","isProduction","console","_this11","pre_switch_broadcast","_this11$pre_switch_ac","setPreSwitchAccount","_this12","has_logged_out","_callee","_context","setLogout","t0","_this13","initialized_broadcast","_callee2","_context2","setInitialized","_this14","common","is_network_online","is_online","_this15","ui","is_dark_mode_on","_this16","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","_len","reactions","Array","_key","act","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","bind","_setPrototypeOf","freeze","ProfitTableStore","_BaseStore","_ref","data","has_loaded_all","is_loading","filtered_date_range","client_loginid","fetchOnScroll","debounce","left","shouldFilterContractTypes","fetchNextBatch","is_empty","computed","has_selected_date","profitTableResponseHandler","handleScroll","networkStatusChangeListener","onMount","override","totals","accountSwitcherListener","clearTable","clearDateFilter","handleDateChange","_inherits","is_mounting","_fetchNextBatch","isMounting","_this$root_store$modu","_this$root_store$modu2","dateParams","params","response","shouldFetchNextBatch","getDateBoundaries","modules","positions","dateFrom","dateTo","contract_type","filteredContractTypes","WS","profitTable","_x","_x2","message","formatted_transactions","profit_table","transactions","transaction","currency","_transaction$payout","_transaction$sell_pri","_transaction$buy_pric","_transaction$shortcod","active_symbols","format_string","purchase_time","format","purchase_time_unix","sell_time","payout","NaN","sell_price","buy_price","profit_loss","formatMoney","display_name","getSymbolDisplayName","getMarketInformation","shortcode","underlying","formatProfitTableTransactions","filterDisabledPositions","_toConsumableArray","event","_event$target","target","scrollTop","left_to_scroll","scrollHeight","clientHeight","_onMount","forgetAll","wait","_x3","parseFloat","replace","toString","date_values","_ref2","date_range","from","to","is_batch","setDateFrom","setDateTo","formatStatementTransaction","_transaction$amount","_transaction$balance_","action_type","app_id","contract_id","longcode","withdrawal_details","transaction_time","amount","balance","balance_after","should_exclude_currency","localize","toTitleCase","date","refid","transaction_id","desc","id","StatementStore","account_statistics","statementHandler","handleFilterChange","optional_arguments","_args","statement","filterValue","ReportsStoreContext","React","ReportsStoreProvider","children","useStore","memoizedValue","ProfitStores","StatementStores","Provider","Notifications","observer","_useNotifications","useNotifications","addBanner","banners","removeBanner","setAddNotificationBannerCallback","portfolio","pathname","useLocation","routes","trade","icon","StandaloneFlagCheckeredFillIcon","iconSize","className","NotificationBanners","autohideTimeout","isMobile","onClose","zIndex","fallback_value","_getLocalStorage","_React$useState2","_slicedToArray","getLocalStorage","setData","removeItem","_rows$slice","rows","animation_class","is_moving_transaction","_useState2","useState","animationKey","setAnimationKey","useEffect","prevKey","Text","size","bold","color","el","clsx","HEIGHT","ASPECT_RATIO","isTradeParamVisible","_getTradeParams$contr","_getTradeParams","component_key","has_cancellation","symbol","getTradeParams","getChartHeight","is_accumulator","height","window","innerHeight","isVisible","SERVICE_ERROR","checkIsServiceModalError","_ref3","services_error","is_mf_verification_pending_modal_visible","_ref4","code","_ref$autoplay","autoplay","_ref$controls","controls","_ref$letterbox_color","letterbox_color","_ref$loop","loop","_ref$muted","muted","_ref$preload","preload","src","test_id","title","props","_objectWithoutProperties","_excluded","setIsLoading","encodeURIComponent","join","Skeleton","Square","_extends","allowFullScreen","width","onLoad","onActionSheetClose","ActionSheet","Portal","showHandlebar","shouldCloseOnDrag","handleBarPosition","StreamIframe","UNIFIED_MODE_VIDEO_ID","accumulator_stats","Localize","i18n_default_text","Footer","alignment","primaryAction","content","onAction","Content","StatsRow","item","index","innerIndex","_rows$","_useTraderStore$ticks","useTraderStore","ticks_history_stats","is_open","setIsOpen","_useState4","is_open_description","setIsOpenDescription","_useState6","setAnimationClass","_useState8","last_value","setLastValue","_useState10","setIsMovingTransition","ticks_history","useMemo","_ticks_history_stats$","ticks_stayed_in","acc","_el","success_timeout","error_timeout","transition_timeout","clearTimeout","is_same_value","onClick","LabelPairedChevronUpSmBoldIcon","fill","Root","isOpen","position","expandable","AccumulatorStatsModal","AccumulatorStatsDescription","onScroll","history","useHistory","location","_useStore","active_positions_count","is_logged_in","bottomNavItems","StandaloneChartAreaRegularIcon","activeIcon","StandaloneChartAreaFillIcon","label","path","Badge","variant","contentSize","StandaloneClockThreeRegularIcon","StandaloneClockThreeFillIcon","trader_positions","navIndex","findIndex","selectedIndex","setSelectedIndex","classNames","Navigation","Bottom","onChange","_","handleSelect","BottomAction","selected","showLabel","cache","ongoing_requests","getKey","isArray","useDtraderQuery","request","_options$enabled","enabled","setError","is_fetching","setIsFetching","is_mounted","useRef","request_string","_options$wait_for_aut","wait_for_authorize","current","fetchData","useCallback","_send_promise","send_promise","authorized","send","err","refetch","checkContractTypePrefix","isVanillaContract","isTurbosContract","isRiseFallContract","some","contractTypeCheck","every","contract_types_list","setContractTypesList","_React$useState4","trade_types","setTradeTypes","_useTraderStore","setContractTypesListV2","setDefaultStake","processContractsForV2","is_switching","landing_company_shortcode","prev_landing_company_shortcode_ref","isQueryEnabled","isLoginidDefined","_useDtraderQuery","contracts_for_company","landing_company","contract_categories","getContractCategoriesConfig","available_categories","cloneObject","contract_types","getContractTypesConfig","_React$useState6","available_contract_types","setAvailableContractTypes","is_fetching_ref","isContractTypeAvailable","getTradeTypes","categories","getTradeTypesList","getNewContractType","processNewContractType","new_contract_type","setTradeURLParams","contractType","available","contract","find","indexOf","barrier_count","_Object$keys$find","_available_categories","category","sub_cats","text","barrier_category","config","default_stake","resetTradeTypes","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","test","_unsupportedIterableToArray","_nonIterableRest","_available_contract_t","_getContractTypesConf","_getContractTypesConf2","showError","current_language","symbols_from_store","is_vanilla","is_turbos","setActiveSymbolsV2","activeSymbols","setActiveSymbols","_useContractsForCompa","useContractsForCompany","is_contracts_loading_ref","trade_types_with_barrier_category","TRADE_TYPES","RISE_FALL","RISE_FALL_EQUAL","HIGH_LOW","CONTRACT_TYPES","TURBOS","LONG","SHORT","VANILLA","CALL","PUT","process","_response$active_symb","opening_time","days_offset","formatted_opening_time","convertTimeFormat","opening_date","Date","locale","toLowerCase","CaptionText","time_left","timer_components","hours","days","padStart","minutes","seconds","LabelPairedStopwatchMdBoldIcon","calculateTimeLeft","remaining_time_to_open","difference","now","Math","floor","getSymbol","target_symbol","trading_times","markets","submarkets","j","symbols","getTradingTimes","target_time","tradingTimes","api_initial_load_error","prepareTradeStore","is_market_closed","useActiveSymbols","isMounted","useIsMounted","when_market_opens","setWhenMarketOpens","setTimeLeft","setLoading","whenMarketOpens","target_date","api_response","returned_symbol","open","close","date_str","getUTCDate","times","toISOString","substring","hour","timer","MarketOpeningTimeBanner","MarketCountdownTimer","ACTIONS","CurrentSpotDisplay","has_tick_count","spot","tick","last_digit","prev_spot","usePrevious","prev_last_digit","should_enter_from_top","setShouldEnterFromTop","should_enter_from_bottom","setShouldEnterFromBottom","next_displayed_last_digit","setNextDisplayedLastDigit","_React$useState8","displayed_last_digit","setDisplayedLastDigit","last_digit_ref","spin_interval_id","spin_timeout_id","spinning_wrapper_ref","_spinning_wrapper_ref","diff","abs","timeout_speed","should_increment","style","setProperty","interval_ms","start","end","clearInterval","interval_id","setInterval","spinLastDigit","current_tick","ref","Heading","H2","STATUS","CurrentSpot","_last_contract$contra","_last_contract$contra2","_last_contract$contra3","_tick","contract_switching_timer","contract_trade","last_contract","prev_contract","contract_info","entry_tick","_ref$contract_info","_ref$digits_info","digits_info","display_status","is_digit_contract","is_ended","tick_data","date_start","tick_stream","prev_contract_id","last_contract_ticks","prev_last_contract_ticks","is_contract_elapsed","isContractElapsed","is_prev_contract_elapsed","status","_toJS","epoch","latest_stream_tick","tick_display_value","ask","bid","pip_size","split","quote","is_digit_contract_ended","is_won","is_lost","digits_array","sort","b","spot_time","last_contract_digit","latest_tick_pip_size","latest_tick_quote_price","toFixed","latest_tick_digit","latest_digit","digit","displayed_tick","setDisplayedTick","displayed_spot","setDisplayedSpot","barrier","is_winning","isDigitContractWinning","has_contract","has_open_contract","has_relevant_tick_data","should_show_tick_count","should_enter_from_left","setNewData","_last_contract$contra4","SymbolsSearchField","isSearching","setIsSearching","searchValue","setSearchValue","contract_name","inputRef","inputElement","handleFocus","addEventListener","removeEventListener","SearchField","inputSize","placeholder","Button","symbolsList","marketOrderMap","market","marketOrderA","marketOrderB","submarket_display_name","localeCompare","marketIcons","frxAUDCAD","MarketForexAudcadIcon","frxAUDCHF","MarketForexAudchfIcon","frxAUDJPY","MarketForexAudjpyIcon","frxAUDNZD","MarketForexAudnzdIcon","frxAUDUSD","MarketForexAudusdIcon","WLDAUD","MarketDerivedAudBasketIcon","RDBEAR","MarketDerivedBearIcon","BOOM1000","MarketDerivedBoom1000Icon","BOOM600","MarketDerivedBoom600Icon","BOOM900","MarketDerivedBoom900Icon","BOOM300N","MarketDerivedBoom300Icon","BOOM500","MarketDerivedBoom500Icon","RDBULL","MarketDerivedBullIcon","CRASH1000","MarketDerivedCrash1000Icon","CRASH600","MarketDerivedCrash600Icon","CRASH900","MarketDerivedCrash900Icon","CRASH300N","MarketDerivedCrash300Icon","CRASH500","MarketDerivedCrash500Icon","frxXAGUSD","MarketCommoditySilverusdIcon","frxXAUUSD","MarketCommodityGoldusdIcon","frxXPDUSD","MarketCommodityPalladiumusdIcon","frxXPTUSD","MarketCommodityPlatinumusdIcon","cryBTCUSD","MarketCryptocurrencyBtcusdIcon","cryETHUSD","MarketCryptocurrencyEthusdIcon","WLDEUR","MarketDerivedEurBasketIcon","WLDGBP","MarketDerivedGbpBasketIcon","WLDXAU","MarketDerivedGoldBasketIcon","JD10","MarketDerivedJump10Icon","JD100","MarketDerivedJump100Icon","JD25","MarketDerivedJump25Icon","JD50","MarketDerivedJump50Icon","JD75","MarketDerivedJump75Icon","stpRNG","MarketDerivedStepIndices100Icon","stpRNG2","MarketDerivedStepIndices200Icon","stpRNG3","MarketDerivedStepIndices300Icon","stpRNG4","MarketDerivedStepIndices400Icon","stpRNG5","MarketDerivedStepIndices500Icon","RB100","MarketDerivedRangeBreak100Icon","RB200","MarketDerivedRangeBreak200Icon","WLDUSD","MarketDerivedUsdBasketIcon","MarketDerivedVolatility101sIcon","MarketDerivedVolatility1001sIcon","MarketDerivedVolatility1501sIcon","MarketDerivedVolatility2501sIcon","MarketDerivedVolatility251sIcon","MarketDerivedVolatility501sIcon","MarketDerivedVolatility751sIcon","MarketDerivedVolatility151sIcon","MarketDerivedVolatility301sIcon","MarketDerivedVolatility901sIcon","frxEURAUD","MarketForexEuraudIcon","frxEURCAD","MarketForexEurcadIcon","frxEURCHF","MarketForexEurchfIcon","frxEURGBP","MarketForexEurgbpIcon","frxEURJPY","MarketForexEurjpyIcon","frxEURNZD","MarketForexEurnzdIcon","frxEURUSD","MarketForexEurusdIcon","frxGBPAUD","MarketForexGbpaudIcon","frxGBPCAD","MarketForexGbpcadIcon","frxGBPCHF","MarketForexGbpchfIcon","frxGBPJPY","MarketForexGbpjpyIcon","frxGBPNOK","MarketForexGbpnokIcon","frxGBPNZD","MarketForexGbpnzdIcon","frxGBPUSD","MarketForexGbpusdIcon","frxNZDJPY","MarketForexNzdjpnIcon","frxNZDUSD","MarketForexNzdusdIcon","frxUSDCAD","MarketForexUsdcadIcon","frxUSDCHF","MarketForexUsdchfIcon","frxUSDJPY","MarketForexUsdjpyIcon","frxUSDMXN","MarketForexUsdmxnIcon","frxUSDNOK","MarketForexUsdnokIcon","frxUSDPLN","MarketForexUsdplnIcon","frxUSDSEK","MarketForexUsdsekIcon","OTC_AS51","MarketIndicesAustralia200Icon","OTC_SX5E","MarketIndicesEuro50Icon","OTC_FCHI","MarketIndicesFrance40Icon","OTC_GDAXI","MarketIndicesGerman40Icon","OTC_HSI","MarketIndicesHongKong50Icon","OTC_N225","MarketIndicesJapan225Icon","OTC_AEX","MarketIndicesNetherlands25Icon","OTC_SSMI","MarketIndicesSwiss20Icon","OTC_FTSE","MarketIndicesUk100Icon","OTC_SPC","MarketIndicesUs500Icon","OTC_NDX","MarketIndicesUsTech100Icon","OTC_DJI","MarketIndicesWallStreet30Icon","R_10","MarketDerivedVolatility10Icon","R_100","MarketDerivedVolatility100Icon","R_25","MarketDerivedVolatility25Icon","R_50","MarketDerivedVolatility50Icon","R_75","MarketDerivedVolatility75Icon","IconComponent","MarketCategoryItem","forwardRef","selectedSymbol","setSelectedSymbol","isFavorite","setIsFavorite","onSymbolChange","useModulesStore","favoriteSymbols","setFavoriteSymbols","removeFavoriteSymbol","addSnackbar","useSnackbar","handleSelectDecorator","currentTarget","getAttribute","clickAndKeyEventHandler","toggleFavoritesDecorator","StandaloneStarRegularIcon","hasCloseButton","StandaloneStarFillIcon","toggleFavorites","onKeyDown","SymbolIconsMapper","exchange_is_open","Tag","showIcon","clientFavoriteList","client_fav_symbol","symbol_info","sortSymbols","useGetFavoriteSymbols","NoFavoriteSymbols","itemRefs","prevSymbol","_itemRefs$current$sel","scrollIntoView","block","Tab","Panel","market_display_name","entries","subgroups","subgroupKey","subgroup","subgroup_display_name","_ref5","submarketKey","submarket","items","FavoriteSymbols","Trigger","marketCategoriesRef","categorizedSymbols","_acc$market","_acc$market$subgroups","_acc$market$subgroups2","_acc$market$subgroups3","_acc$market$subgroups4","sortedSubmarkets","sortedAcc","_ref6","allCategory","newKey","newName","favorites","all","categorizeSymbols","List","MarketCategoryTab","MarketCategory","searchTerm","interpolation","escapeValue","searchResults","trim","useGetSymbolSearchResults","SymbolNotFound","ActiveSymbolsList","setTickData","setDigitStats","fullHeightOnOpen","Container","contentStyle","selectedTabIndex","onChangeTab","_marketCategoriesRef$","scrollTo","top","SymbolSearchResults","sendMarketTypeToAnalytics","MarketCategories","MarketSelector","_trade_types$find","storeSymbol","currentSymbol","symbol_name","getMarketNamesMap","hasFixedHeight","marginBottom","current_spot","current_spot_replacement","rounded","LabelPairedChevronDownMdRegularIcon","isLastStep","primaryProps","skipProps","step","tooltipProps","setStepIndex","swipe_handlers","useSwipeable","onSwipedUp","_document$querySelect","document","querySelector","preventDefaultTouchmoveEvent","trackTouch","trackMouse","LabelPairedChevronsUpXlBoldIcon","IconButton","LabelPairedXmarkSmBoldIcon","offset","spotlightPadding","placement","disableBeacon","styles","spotlight","display","arrow","disableScrolling","GuideContainer","should_run","onFinishGuide","step_index","Joyride","continuous","callback","FINISHED","SKIPPED","disableCloseOnEsc","disableOverlayClose","floaterProps","spread","run","showSkipButton","steps","STEPS","scrollToFirstStep","arrowColor","overlayColor","borderRadius","stepIndex","tooltipComponent","GuideTooltip","getVideoSource","extension","getUrlBase","replaceAll","mp4_src","autoPlay","onLoadedData","playsInline","OnboardingGuide","_ref$type","is_modal_open","setIsModalOpen","should_run_guide","setShouldRunGuide","guide_timeout_ref","is_button_clicked_ref","_useLocalStorageData2","useLocalStorageData","trade_types_selection","trade_page","positions_page","guide_dtrader_v2","setGuideDtraderV2","is_trade_page_guide","onGuideSkip","modal_content","image","OnboardingVideo","button_label","primaryButtonCallback","Modal","isOpened","isNonExpandable","showHandleBar","shouldCloseModalOnSwipeDown","toggleModal","primaryButtonLabel","Header","Body","has_open_accu_contract","has_no_button_content","info","is_multiplier","is_reverse","_getLocalizedBasis","getLocalizedBasis","stake","text_basis","obj_contract_basis","getAmount","is_content_empty","as","Money","should_format","show_currency","BASIS_STAKE","PurchaseButton","loading_button_index","setLoadingButtonIndex","has_error","error_info","setErrorInfo","useDevice","_useStore$portfolio","all_positions","onClickSell","open_accu_contract","active_positions","_useStore$ui","setIsMFVericationPendingModal","basis","basis_list","is_purchase_enabled","is_touch","is_trade_enabled_v2","is_vanilla_fx","proposal_info","purchase_info","onPurchaseV2","trade_type_tab","is_sell_button_visible","setIsSellButtonVisibile","animation_duration","setAnimationDuration","prev_has_open_accu_contract","isAccumulatorContract","mf_account_status","useMFAccountStatus","basis_options","is_high_low","purchase_button_content_props","getDisplayedContractTypes","active_accu_contract","is_sold","is_valid_to_sell","hasContractEntered","isValidToSell","current_stake","getIndicativePrice","cardLabels","getCardLabelsV2","is_modal_error","is_accu_sell_disabled","is_sell_requested","getButtonType","trade_type","tab_index","getTradeTypeTabsList","tab","addNotificationBannerCallback","sendDtraderV2PurchaseToAnalytics","StandaloneStopwatchRegularIcon","CSSTransition","in","timeout","unmountOnExit","mountOnEnter","is_single_button","is_disabled","getContractTypeDisplay","isHighLow","showButtonName","fullWidth","isLoading","isOpaque","disabled","MT5_ACCOUNT_STATUS","PENDING","PurchaseButtonContent","CLOSE","_JSON$parse","useRemoteConfig","hub_enabled_country_list","account_settings","clients_country","userCountry","Cookies","residence","country_code","isHubRedirectionEnabled","isChangingToHubAppId","isHubRedirectionLoaded","error_type","services_error_message","getContent","has_wallet","is_virtual","resetServicesError","clearPurchaseInfo","resetPurchase","requestProposal","useIsHubRedirectionEnabled","is_insufficient_balance","is_authorization_required","is_account_verification_required","should_show_error_modal","ServiceErrorDescription","primaryButtonColor","PRODUCTION_REDIRECT_URL","getDomainUrl","redirectUrl","url_query_string","search","url_params","URLSearchParams","account_currency","href","_history$push","wallets_deposit","cashier_deposit","redirectToSignUp","secondaryAction","redirectToLogin","getLanguage","proof_of_identity","_proposal_info$contra","error_fields","proposal_has_error","proposal_error_field","error_field","proposal_error_message","field","_validation_errors$fi","_validation_errors$fi2","validation_has_error","is_error_matching_field","checkErrorForField","should_show_snackbar","_useTradeError","useTradeError","SnackbarController","term","H4","getTermDefinition","AccumulatorsTradeDescription","makeLazyLoader","moduleLoader","Loading","is_fullscreen","MultiplierTradeDescriptions","VanillasTradeDescription","TurbosTradeDescription","RiseFallTradeDescription","HigherLowerTradeDescription","TouchNoTouchTradeDescription","MatchesDiffersTradeDescription","EvenOddTradeDescription","OverUnderTradeDescription","trade_type_template","onTermClick","CONTRACT_LIST","ACCUMULATORS","MULTIPLIERS","VANILLAS","HIGHER_LOWER","TOUCH_NO_TOUCH","MATCHES_DIFFERS","EVEN_ODD","OVER_UNDER","contract_list","onChipSelect","selected_contract_type","show_guide_for_selected_contract","_ref$show_description","show_description_in_a_modal","toggleVideoPlayer","video_src","tradeType","Chip","Selectable","TradeDescription","VideoPreview","PortalModal","ReactDOM","stopPropagation","body","GuideDescriptionModal","_ref2$show_descriptio","is_video_player_opened","setIsVideoPlayerOpened","modal_ref","getDescriptionVideoIds","guide_content_props","showModal","GuideContent","VideoPlayer","data_testid","is_v2","is_mobile","increased_drag_area","onModalClose","hide_volume_control","Guide","_AVAILABLE_CONTRACTS$","_AVAILABLE_CONTRACTS$2","has_label","is_open_by_default","_ref$show_trigger_but","show_trigger_button","contract_type_title","AVAILABLE_CONTRACTS","order","filtered_contract_list","ordered_contract_list","is_description_opened","setIsDescriptionOpened","setSelectedContractType","selected_term","setSelectedTerm","LabelPairedPresentationScreenSmRegularIcon","sendOpenGuideToAnalytics","_selected_trade_type$","_selected_trade_type$2","selected_trade_type","GuideDefinitionModal","TradeParametersContainer","is_minimized","is_minimized_visible","is_minimized_and_visible","_proposal_info$CONTRA","maximum_payout","ACCUMULATOR","contract_start_type","duration_unit","expiry_type","is_equal","has_callputequal_duration","hasDurationForCallPutEqual","has_callputequal","hasCallPutEqual","openDescription","closeDescription","ToggleSwitch","checked","is_enabled","classname","current_index","header","is_swipeable","is_infinite_loop","onNextButtonClick","onPreviousButtonClick","pages","previous_icon","next_icon","setCurrentIndex","internalIndex","setInternalIndex","HeaderComponent","isControlled","is_rtl","handleNextClick","newIndex","handlePrevClick","onSwipedLeft","onSwipedRight","onNextClick","onPrevClick","component","transform","isDays","chips_options","setInitialBarrierValue","barrier_1","setV2ParamsInitialValues","option","setOption","should_show_error","setShouldShowError","setPreviousValue","SPOT_BARRIER_KEY","FIXED_BARRIER_KEY","getStoredValue","storeValue","spot_barrier_value","setSpotBarrierValue","_React$useState10","fixed_barrier_value","setFixedBarrierValue","_React$useState12","is_focused","setIsFocused","barrier_ref","show_hidden_error","valueWithoutSign","barrier_element","checkFocus","contains","activeElement","handleOnChange","previousOption","valueToUse","startsWith","handleChipSelect","TextField","customType","noStatusIcon","allowDecimals","decimals","allowSign","inputMode","regex","textAlignment","TextFieldAddon","fillAddonBorderColor","addonLabel","shouldCloseOnPrimaryButtonClick","NextIcon","LabelPairedCircleInfoMdRegularIcon","PreviousIcon","LabelPairedArrowLeftMdRegularIcon","iconPosition","_proposal_info$trade_","_proposal_info$trade_2","v2_params_initial_values","initialBarrierValue","barrier_error_shown","setBarrierErrorShown","_proposal_info$trade_3","_proposal_info$trade_4","_proposal_info$trade_5","barrier_carousel_pages","BarrierInput","BarrierDescription","readOnly","shouldBlurOnClose","Carousel","CarouselHeader","BarrierInfo","toUpperCase","duration_units_list","onChangeUnit","unit","show_end_time","_hours$","_minutes$","setWheelPickerValue","selected_hour","selected_time","duration_min_max","setHours","setMinutes","min_seconds","max","intraday","min","max_seconds","min_hours","ceil","max_hours","new_hours","update_minutes","min_minutes","max_minutes","new_minutes","getDefaultValue","selected_value","_options$","opt","WheelPickerContainer","defaultValue","containerHeight","inputValues","setInputValues","getOptionPerUnit","DURATION_UNIT","DAYS","HOURS","HourPicker","start_date","end_date","setEndDate","disabled_days","setDisabledDays","onChangeCalendarMonth","new_market_events","new_disabled_days","_yield$Promise$all","_yield$Promise$all2","events","trading_days","ContractType","getTradingEvents","getTradingDays","day","evt","dates","descrip","DatePicker","hasFixedWidth","minDate","maxDate","setFullYear","getFullYear","view","tileDisabled","getDay","wrapperClassName","end_time","setEndTime","current_gmt_time","adjusted_start_time","TimeWheelPickerContainer","is12Hour","startTimeIn24Format","minutesInterval","selectedTime","setSelectedValue","val","hoursInterval","timeToMinutes","time","_time$split$map2","_boundaries$start$","_getDatePickerStartDa","_getDatePickerStartDa2","_getDatePickerStartDa3","expiry_time_input","saved_expiry_date_v2","setExpiryTimeInput","setUnsavedExpiryDateV2","unsaved_expiry_date_v2","setCurrentGmtTime","setOpen","open_timepicker","setOpenTimePicker","trigger_date","setTriggerDate","setIsDisabled","calendar_date_input","setCalendarDateInput","payout_per_point","setPayoutPerPoint","barrier_value","setBarrierValue","_useState12","setDay","server_time","duration","expiry_date","market_close_times","market_open_times","start_time","trade_store","new_values","proposal_req","getProposalRequestObject","round","_response$error","_response$error2","_response$error3","_response$error3$deta","_response$proposal","_response$error4","_response$proposal2","details","payout_per_point_choices","suggested_payout","barrier_choices","suggested_barrier","proposal","date_expiry","moment_expiry_date","market_open_datetimes","open_time","setTime","clone","market_close_datetimes","close_time","server_datetime","getBoundaries","getClosestTimeToCurrentGMT","formatted_date","toLocaleDateString","month","year","formatted_current_date","timeZone","updateCurrentGmtTime","gmt_time","toLocaleTimeString","hour12","interval","is_24_hours_contract","_formatted_date$split2","dayStr","monthStr","yearStr","has_intraday_duration_unit","hasIntradayDurationUnit","isSameDate","leftIcon","LabelPairedCalendarSmRegularIcon","LabelPairedClockThreeSmRegularIcon","DaysDatepicker","getDatePickerStartDate","difference_in_time","getTime","difference_in_days","selected_date","getMonth","getDate","output","EndTimePicker","isPrimaryButtonDisabled","DurationActionSheetContainer","expiry_time_string","setExpiryTimeString","setSavedExpiryDateV2","setSelectedHour","setUnit","onChangeMultiple","setSelectedTime","DurationChips","DurationWheelPicker","num_value","arr","DayInput","MINUTES","expiry_time","Duration","_getUnitMap$duration_","_proposal_info$contra2","_validation_errors$du","_validation_errors$du2","expiry_epoch","getUnitMap","name_plural","name_singular","duration_unit_text","setExpiryDateString","_useState14","contract_type_object","isInitialMount","tomorrow_date","getTomorrowDate","new_date_string","newDate","setDate","getSmallestDuration","start_duration","_validation_errors$du3","error_obj","handleHour","getInputValues","description","is_custom_description","debouncedSetGrowthRate","setGrowthRate","growth_rate","_ref$accumulator_rang","accumulator_range_list","maximum_ticks","should_show_details","tick_size_barrier_percentage","initial_growth_rate","selected_growth_rate","rate","getGrowthRatePercentage","details_content","cancel","WheelPicker","selectedValue","new_value","GrowthRate","is_trade_enabled","is_small_screen","isSmallScreen","is_proposal_data_available","handleGrowthRateChange","action_sheet_content","GrowthRatePicker","TradeParamDefinition","_ref$digit_stats","digit_stats","is_active","is_max","is_min","stats","percentage","display_percentage","_ref$digits","digits","onDigitSelect","selected_digit","row_key","Digit","displayed_digits","_useTraderStore$digit","setSelectedDigit","handleLastDigitChange","LastDigitSelector","debouncedSetMultiplier","setMultiplier","multiplier","_ref$multiplier_range","multiplier_range_list","commission","multiplier_array","initial_multiplier","selected_multiplier","Multiplier","is_small_screen_device","MultiplierWheelPicker","_proposal_info$CONTRA2","_proposal_info$CONTRA3","_proposal_info$CONTRA4","_proposal_info$CONTRA5","_proposal_info$CONTRA6","up_deal_cancellation_fee","MULTIPLIER","UP","cancellation","ask_price","down_deal_cancellation_fee","DOWN","renderFeeValue","fee_value","expiration","_formatDuration","formatDuration","getDiffDuration","timestamp","getDateFromNow","PayoutPerPointWheel","current_payout_per_point","onPayoutPerPointSelect","payout_per_point_list","setValue","displayed_barrier_value","setDisplayedBarrierValue","is_api_response_received_ref","flat","barrier_spot_distance","onProposalResponse","PayoutPerPoint","payout_choices","currency_display_code","getCurrencyDisplayCode","PayoutPerPointInfo","contract_key","closeActionSheet","has_take_profit","has_stop_loss","cancellation_range_list","cancellation_duration","setIsEnabled","addUnit","getSnackBarText","switching_cancellation","target_id","is_focus","setIsFocus","_window$visualViewpor","is_focus_in","resizeHandler","scale","has_keyboard_changed_viewport","screen","visualViewport","_window$visualViewpor2","is_key_board_visible","_validation_params$co","_validation_params$co2","_validation_params$co3","_validation_params$co4","_proposal_req$limit_o","_proposal_req$limit_o2","_ref$has_save_button","has_save_button","_ref$has_actionsheet_","has_actionsheet_wrapper","initial_error_text","parent_ref","parent_is_api_response_received_ref","take_profit","stop_loss","validation_params","is_take_profit_input","is_api_response_received","new_input_value","setNewInputValue","error_text","setErrorText","fe_error_text","setFEErrorText","max_length","setMaxLength","input_ref","focused_input_ref","focus_timeout","getDecimalPlaces","Component","min_value","max_value","setInfo","limit_order","input_message","updateParentRef","field_name","onToggleSwitch","_input_ref$current","focusAndOpenKeyboard","blur","_error$message","_error$details","_error$details2","new_error","is_error_field_match","_validation_params$ty","_validation_params","should_scroll","useIsVirtualKeyboardOpen","_window","behavior","TextFieldWithSteppers","minusDisabled","unitLeft","onBeforeInput","_data","_e$nativeEvent","_new_input_value$leng","nativeEvent","maxLength","opacity","is_tp_enabled","TakeProfitAndStopLossContainer","_validation_errors$ta","_validation_errors$ta2","_validation_errors$ta3","_validation_errors$st","_validation_errors$st2","_validation_errors$st3","tp_error_text","setTPErrorText","tp_ref","is_api_response_tp_received_ref","sl_error_text","setSLErrorText","sl_ref","is_api_response_sl_received_ref","TakeProfitAndStopLossInput","_tp_ref$current","has_take_profit_current","take_profit_current","tp_error_text_current","_sl_ref$current","has_stop_loss_current","stop_loss_current","sl_error_text_current","is_tp_empty","is_sl_empty","is_sl_enabled","switching_tp_sl","_ref$initial_tab_inde","initial_tab_index","should_show_deal_cancellation","setTabIndex","SegmentedControlSingleChoice","hasContainerWidth","selectedItemIndex","DealCancellation","definition","is_displayed","SectionMessage","RiskManagement","RiskManagementPicker","RiskManagementContent","useFetchProposalData","_proposal_request_val","proposal_request_values","proposal_request","query_key","is_loading_proposal","should_show_payout_details","is_first_payout_exceeded","is_second_payout_exceeded","first_contract_payout","max_payout","second_contract_payout","stop_out","displayed_values","setDisplayedValues","getDisplayedValue","current_value","commission_value","stop_out_value","new_commission","new_payout_1","new_payout_2","new_stop_out","new_max_payout","payout_title","getTradeTypeName","idx","reducer","state","payload","stake_error","fe_stake_error","createInitialState","_getPayoutInfo","getPayoutInfo","contract_payout","first_payout_error","_getPayoutInfo2","second_payout_error","_ref3$max","max_stake","_ref3$min","min_stake","calculateMaxLength","error_1","error_2","StakeInput","_React$useReducer2","dispatch","input_id","initial_state","should_send_multiple_proposals","has_both_errors","should_show_stake_error","_useFetchProposalData","response_1","is_fetching_1","_useFetchProposalData2","response_2","is_fetching_2","handleProposalResponse","_error$details3","_error$details$field","_error$details4","_error$details5","new_proposal","getProposalInfo","_getPayoutInfo3","_error$details6","_validation_params$st","_limit_order$stop_out","order_amount","endsWith","_String$length","_String","StakeDetails","Stake","is_all_types_with_errors","_proposal_info$item","onWheelPickerScrollDebounced","current_strike","onStrikePriceSelect","strike_price_list","initial_value_ref","selected_value_ref","Strike","strike_price_choices","strike_price","handleStrikeChange","StrikeWheel","initial_strike","strike","TakeProfit","TradeTypeTabs","setTradeTypeTab","tab_list","initial_index","_tab_list$initial_tab","selected_item_index","_tab_list$selected_it","TradeParameters","MultipliersExpirationInfo","AllowEquals","PayoutInfo","LastDigitPrediction","Barrier","AccumulatorsInformation","MultipliersDealCancellationInfo","symbol_from_store","has_initialized_ref","setSymbol","isSymbolAvailable","has_initialized","exchange_open_check","processNewSymbol","new_symbol","is_initailization","has_symbol_changed","pickDefaultSymbol","t1","BottomWidgetsMobile","TradeChart","accumulator_barriers_data","accumulator_contract_barriers_data","chart_type","granularity","has_crossed_accu_barriers","markers_array","updateChartType","updateGranularity","is_chart_countdown_visible","is_chart_layout_default","is_positions_drawer_on","is_socket_opened","useDefaultSymbol","_useTraderStore2","extra_barriers","barriers_flattened","chartStateChange","chart_layout","exportLayout","has_alternative_source","has_barrier","main_barrier","main_barrier_flattened","setChartStatus","show_digits_stats","prev_contract_type","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","settings","countdown","isHighestLowestMarkerEnabled","language","theme","whitespace","minimumLeftBars","current_spot_time","_ref$current","hasPredictionIndicators","_ref$current2","triggerPopup","barriers","max_ticks","SmartChart","contracts_array","bottomWidgets","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","chartType","initialData","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","isVerticalScrollEnabled","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","topWidgets","isConnectionOpened","clearChart","toolbarWidget","ToolbarWidgets","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","should_zoom_out_on_yaxis","yAxisMargin","isLive","leftMargin","AccumulatorsChartElements","should_show_profit_text","accumulators_high_barrier","TradeTypesSelectionGuide","DESCRIPTION_VIDEO_ID","trade_type_selection","dark","light","active","onLeftIconClick","onRightIconClick","rightIcon","default_left_icon","StandaloneGripDotsVerticalBoldIcon","default_right_icon","StandaloneCircleMinusFillIcon","is_moved","setIsMoved","isTouchDevice","onTouchMove","onTouchEnd","DraggableCategory","draggedItemId","show_editing_divider","Droppable","droppableId","provided","droppableProps","innerRef","DraggableCategoryItems","Draggable","draggableId","draggableProps","dragHandleProps","DraggableListItem","updateCategoriesWithDragResult","category_list","source","destination","sourceIndex","destIndex","sourceCategory","destCategory","sourceItems","movedItem","splice","destItems","onDrag","setCategoryList","setDraggedItemId","DragDropContext","onDragEnd","new_category_list","onDragStart","onTradeTypeClick","default_icon","StandaloneCirclePlusFillIcon","_categories$","isSelected","selectable","show_divider","_category$items","TradeTypeListItem","handleCustomizeTradeTypes","handleRemovePinnedClick","handleOnDrag","handleOnTradeTypeSelect","handleAddPinnedClick","is_editing","isTradeTypeSelected","savePinnedToLocalStorage","show_trade_type_list_divider","other_trade_types","pinned_trade_types","DraggableList","TradeTypeList","TradeTypes","_localStorage$getItem","_other_trade_types$","_other_trade_types$$i","_pinned_trade_types$","_pinned_trade_types$$","onTradeTypeSelect","setIsEditing","trade_types_ref","saved_pinned_trade_types_string","saved_pinned_trade_types","_safeParse","safeParse","setOtherTradeTypes","setPinnedTradeTypes","trade_types_array","_category$text","getPinnedItems","pinned_items","filterItems","getItems","default_pinned_trade_types","default_other_trade_types","pinned_item","scrollToSelectedTradeType","other_item","modifyPinnedCategories","modifyCategories","modifyOtherCategories","sortCategoriesInTradeTypeOrder","position_x","selected_chip","getBoundingClientRect","innerWidth","scrollBy","flatMap","tradeTypes","trade_types_ids","trade_type_chips","should_show_view_all","trade_type_content_props","prev_categories","prev_others","prev_pinned","TradeTypesContent","underlined","Trade","is_minimized_params_visible","setIsMinimizedParamsVisible","chart_ref","_useStore$client","_useStore$common","network_status","trade_types_store","subform_name","trade_type_count","textContent","sendSelectedTradeTypeToAnalytics","current_chart_ref","chart_bottom_Y","bottom","container_bottom_Y","BottomNav","isDigitTradeType","AccumulatorStats","DTraderV2","ServiceErrorSheet","ClosedMarketMessage","TradeErrorSnackbar","isClosedTab","noMatchesFound","Icon","StandaloneSearchFillIcon","StandaloneBriefcaseFillIcon","TAB_NAME","CLOSED","OPEN","centered","ContractCardStatusTimer","currentTick","isSold","serverTime","displayedDuration","getCardLabels","TICKS","RemainingTime","LabelPairedStopwatchCaptionRegularIcon","formatted_time","DIRECTION","swipeConfig","preventScrollOnSwipe","_contractInfo$cancell","_contractInfo$underly","labels","_ref$className","contractInfo","hasActionButtons","isSellRequested","onCancel","redirectTo","isDeleted","setIsDeleted","isClosing","setIsClosing","isCanceling","setIsCanceling","shouldShowButtons","setShouldShowButtons","contract_main_title","showMainTitle","cancellation_date_expiry","tick_count","getCurrentTick","tradeTypeName","symbolName","getMarketName","underlying_symbol","is_crypto","isCryptoContract","isMultiplier","isMultiplierContract","isEnded","totalProfit","getProfit","validToCancel","isValidToCancel","validToSell","isCancelButtonPressed","isCloseButtonPressed","has_no_auto_expiry","is_forward_starting","isForwardStarting","getStartTime","has_forward_contract_started","hasForwardContractStarted","show_tag_forward_starting","show_status_timer_tag","NavLink","handleSwipe","direction","swipeHandlers","handleClose","shouldCancel","preventDefault","risk_management_labels","show_risk_management_labels","deleted","lost","won","IconTradeTypes","ForwardStartingTag","formatDate","parseInt","formatTime","has_sign","loading","profit","CANCEL","hasButtonsDemo","onClickCancel","_ref$positions","setHasButtonsDemo","rest","demoTimeout","ContractCard","getContractPath","from_table_row","ContractCardsSections","isLoadingMore","hasBottomMargin","parts","element","uniqueDates","Set","ContractCardList","StandaloneLoaderBoldIcon","contractTypeFilter","onApplyContractTypeFilter","isDropdownOpen","setIsDropdownOpen","changedOptions","setChangedOptions","newSelectedOption","Standard","dropdown","Checkbox","checkboxPosition","isSecondaryButtonDisabled","shouldCloseOnSecondaryButtonClick","customTimeRangeFilter","setShowDatePicker","LabelPairedChevronRightSmBoldIcon","applyHandler","setCustomTimeRangeFilter","chosenRangeString","setChosenRangeString","chosenRange","setChosenRange","allowPartialRange","selectRange","onFormattedDate","trimmedValue","partialRange","optionsConfig","DEFAULT_DATE_FORMATTING_CONFIG","toDateString","moment","endOf","timeFilterList","_timeFilterList$find","setTimeFilter","setNoMatchesFound","timeFilter","showDatePicker","selectedRadioButtonValue","isChipSelected","onReset","RadioGroup","onToggle","_dateChangeArguments$","dateChangeArguments","Today","Yesterday","default","Item","radioButtonPosition","CustomDateFilterButton","DateRangePicker","hasBottomAlignment","_ref$is_bold","is_bold","_ref$positionsCount","positionsCount","totalProfitLoss","TOTAL_PROFIT_LOSS","positive","negative","setClosedContractTypeFilter","setOpenContractTypeFilter","openContractTypeFilter","closedContractTypeFilter","setContractTypeFilter","PositionsContent","_filteredPositions$","_filteredPositions$$c","_useTradeTypeFilter","useTradeTypeFilter","_useTimeFilter","useTimeFilter","filteredPositions","setFilteredPositions","_ref2$server_time","is_active_empty","onOpenTabMount","_useReportsStore$prof","store","useReportsStore","fetchMoreClosedPositions","isFetchingClosedPositions","onClosedTabMount","onClosedTabUnmount","closedPositions","hasNoPositions","shouldShowEmptyMessage","shouldShowContractCards","shouldShowLoading","shouldShowTakeProfit","contractCards","filterPositions","is_positions","is_closed_tab","TimeFilter","ContractTypeFilter","filters","EmptyPositions","TotalProfitLoss","getTotalPositionsProfit","getPositionsV2TabIndexFromURL","activeTab","setActiveTab","tabs","setPositionURLParams","new_active_tab","getDateTimeFromEpoch","momentDate","entry_tick_time","entry_spot_display_value","exit_tick_time","exit_tick_display_value","dateTimes","_getEndTime","entry","exit","getEndTime","entryValue","addComma","exitValue","CardWrapper","EntryExitDetailRow","_ref$history","current_page","setCurrentPage","total_pages","handlePageChange","pagination","currentPage","_item","array","order_date","Pagination","initialPage","contentLength","contentPerPage","hideChevron","onClickPagination","contract_replay","getContractById","contract_store","urlContractId","useContractDetails","is_reset_contract","isResetContract","ReplayChart","is_accumulator_contract","is_vertical_scroll_disabled","getCommonFields","CARD_LABELS","_data$transaction_ids","_data$transaction_ids2","_getDurationTime","_getDurationUnitText","_data$display_number_","tick_passed","ticks_label","TICK","ticks_duration_text","REFERENCE_ID","transaction_ids","buy","BUY","sell","SELL","STAKE","DURATION","getDurationTime","getDurationUnitText","getDurationPeriod","PAYOUT_PER_POINT","display_number_of_contracts","POTENTIAL_PAYOUT","transformMultiplierData","_data$limit_order","_data$limit_order$tak","_data$limit_order2","_data$limit_order2$st","_data$limit_order3","_data$limit_order3$st","commonFields","dealCancelFee","_data$cancellation","isUserCancelled","EXECUTED","isCancellationExpired","EXPIRED","ACTIVE","getDealCancelFee","COMMISSION","DEAL_CANCEL_FEE","TAKE_PROFIT","NOT_SET","STOP_LOSS","STOP_OUT_LEVEL","transformCallPutData","show_barrier_placeholder","BARRIER","transformTurbosData","_data$barrier","_data$limit_order4","_data$limit_order4$ta","transformDigitsData","_getDurationTime2","duration_time","TARGET","getBarrierValue","transformVanillaData","_getDurationTime3","_getDurationUnitText2","STRIKE_PRICE","transformEndsBetween","_getDurationTime4","_getDurationUnitText3","HIGH_BARRIER","high_barrier","LOW_BARRIER","low_barrier","transformAsian","_data$barrier2","transformLooksback","_data$transaction_ids3","_data$multiplier","_data$barrier3","spot_key","is_call_contract","LB_CALL","LOW_SPOT","HIGH_SPOT","INDICATIVE_LOW_SPOT","INDICATIVE_HIGH_SPOT","transformReset","_data$barrier4","_formatTimestampToDat","caption","reset_time","formatResetDuration","reset_barrier","RESET_BARRIER","RESET_TIME","toLocaleString","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","transformRunHigh","transformHighLow","_data$selected_tick","_data$barrier5","SELECTED_TICK","selected_tick","transformFunctionMap","_transformFunctionMap","MATCH_DIFF","MATCH","DIFF","EVEN","ODD","OVER","UNDER","PUTE","CALLE","TOUCH","ONE_TOUCH","NO_TOUCH","_data$limit_order5","_data$limit_order6","_data$limit_order6$ta","is_expired","GROWTH_RATE","END","IN","OUT","STAY","ASIAN","LB_HIGH_LOW","_data$multiplier2","_data$transaction_ids4","_data$high_barrier","_data$transaction_ids5","_data$low_barrier","LB_PUT","RESET","TICK_HIGH_LOW","HIGH","LOW","FALL","RUN_HIGH_LOW","transformFunction","orderDetails","useOrderDetails","_val$caption","defaultConfig","isTakeProfitVisible","isDealCancellationVisible","isStopLossVisible","isTpHistoryVisible","getContractDetailsConfig","header_content","body_content","info_message","setIsVisible","LabelPairedCircleInfoSmRegularIcon","_ref$format","RiskManagementItem","_validation_errors$er","_validation_errors$er2","_validation_params$ty2","_validation_params$ty3","_validation_params$ty4","modal_body_content","_ref$is_deal_cancella","is_deal_cancellation","isToggleOn","setIsToggleOn","isSheetOpen","setIsSheetOpen","isEnabled","stepperValue","setStepperValue","setShowError","_useContractDetails","updateLimitOrder","clearContractUpdateConfigValues","is_valid_to_cancel","total_profit","isDealCancellation","finalValue","errorKey","validation_error_message","messageForMultiplier","getErrorMessage","field_label","error_message","RiskManagementInfoModal","_contract$onChange2","DealCancellationRemainingTime","onFocus","_contract$onChange","current_error_message","_contract$onChange3","_contract$onChange4","_contract_info$contra","_limit_order$take_pro","_limit_order$stop_los","ContractDetailsFooter","bid_price","_contract_info$cancel","card_labels","formatted_bid_price","FormatUtils","is_close_button_disabled","bid_details","button_props","RESALE_NOT_OFFERED","class_name","routeBackInApp","fallback","LabelPairedArrowLeftSmBoldIcon","goBack","ContractDetails","_contract_info$shortc","update_history","setUpdateHistory","_getContractDetailsCo","canSell","requestUpdatedHistory","contractUpdateHistory","contract_update_history","is_contract_details","canCancel","shouldShowSell","_getContractDetailsCo2","showCancelButton","showRiskManagement","ContractDetailsHeader","ForwardStartingBanner","ContractDetailsChart","StopLoss","OrderDetails","EntryExitDetails","TakeProfitHistory","exact","Positions","is_authenticated","lazy","Suspense","UILoader","Switch","traderRoutes","route","RouteWithSubroutes","Component404","Page404","should_redirect_login","ServicesErrorSnackbar","has_services_error","contract_error_message","contract_error","should_show_error_snackbar","should_contain_action","bottom_position","action_props","actionText","onActionClick","getStaticUrl","onSnackbarRemove","passthrough","initStore","setPromptHandler","_links","_links$href","head","links","querySelectorAll","is_last_dtrader","dtrader_links","link","_href","dtrader_links_clone","cloneNode","appendChild","removeChild","sendDtraderV2OpenToAnalytics","TraderProviders","ModulesProvider","NotificationsProvider","SnackbarProvider","Router","max_longcode_length","is_collapsed","setIsCollapsed","handleToggle","isTabletOs","has_close_icon","should_close_on_click_outside","small","primary","large","_ref$message","onClickClose","viewBox","fillRule","cx","cy","removeError","is_ready","SlideIn","is_visible","keyname","InfoBoxLongcode","ContractError","DigitsWidget","Digits","InfoBoxWidget","removeErrorMessage","InfoBox","ChartTopWidgets","TopWidgets","is_title_enabled","ChartBottomWidgets","BottomWidgets","Widget","ResetContractChartElements","entry_spot","is_reset_call","y_axis_coordinates","ChartMarker","is_positioned_behind","marker_config","ContentComponent","marker_content_props","chart_margin","is_dark_theme_prop","chart_state","margin","contract_config","barriers_array","getContractsArray","audit_details","allow_scroll_to_epoch","app_routing_history","end_epoch","start_epoch","is_dark_theme","is_sold_before_started","hasContractStarted","should_force_light_theme","getPlatformRedirect","assetInformation","scroll_to_epoch","all_ticks","isBottomWidgetVisible","prev_start_epoch","has_ended","is_dtrader_v2_enabled","isDtraderV2DesktopEnabled","is_desktop","isDtraderV2MobileEnabled","endEpoch","startEpoch","scrollToEpoch","allTicks","isStaticChart","anchorChartToLeft","shouldFetchTickHistory","shouldDrawTicksFromContractInfo","startWithDataFitMode","content_config","react_key","is_positioned_before","getClosestTime","moment_time","minute","getSelectedTime","isAfter","isBefore","moment_market_open_time","boundaries","ServerTime"],"sourceRoot":""}