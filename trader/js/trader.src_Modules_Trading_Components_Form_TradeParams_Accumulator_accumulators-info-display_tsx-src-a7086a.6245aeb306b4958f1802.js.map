{"version":3,"file":"trader/js/trader.src_Modules_Trading_Components_Form_TradeParams_Accumulator_accumulators-info-display_tsx-src-a7086a.6245aeb306b4958f1802.js","mappings":"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","sources":["webpack://@deriv/trader/../../node_modules/@deriv/quill-icons/dist/esm/react/LabelPaired/LabelPairedChevronsDownCaptionRegularIcon.js","webpack://@deriv/trader/../../node_modules/@deriv/quill-icons/dist/esm/react/LabelPaired/LabelPairedChevronsUpCaptionRegularIcon.js","webpack://@deriv/trader/./src/App/Components/Form/fieldset.tsx","webpack://@deriv/trader/./src/App/Components/Form/number-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/labeled-quantity-input-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/value-movement.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-range-text.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/expiry-text.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/WheelPicker/wheel-picker.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/WheelPicker/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/PayoutPerPoint/payout-per-point-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Turbos/payout-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barrier.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/last-digit.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/min-max-stake-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list-body.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/strike-param-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/strike.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/trade-type-tabs.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/definition-popover.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/accumulator-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/asian-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/call-put-spread-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/end-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/even-odd-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/lb-high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/lb-put-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/lb-call-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/match-diff-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/multiplier-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/over-under-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/rise-fall-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/run-high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/reset-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/stay-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/turbos-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/touch-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/tick-high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/vanilla-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories.tsx","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-asian.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-close-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-ends-in-out.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-close.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-reset.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-run-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-spread.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-tick-high-low.svg","webpack://@deriv/trader/./src/Assets/Trading/Categories/contract-type-description-video.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories-gif.tsx","webpack://@deriv/trader/../../node_modules/@deriv/quill-icons/dist/esm/react/Standalone/StandaloneChevronLeftRegularIcon.js","webpack://@deriv/trader/../../node_modules/@deriv/quill-icons/dist/esm/react/Standalone/StandaloneChevronRightRegularIcon.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/use-menu-navigation.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info-header.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/search-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/no-results-message.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/contract-type-menu.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/index.ts","webpack://@deriv/trader/./src/Assets/Trading/Categories/icon-trade-categories.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-item.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-dialog.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-widget.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Containers/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-sell-button.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/cancel-deal-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/contract-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-button.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-fieldset.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/purchase.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/multiplier.ts"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nconst LabelPairedChevronsDownCaptionRegularIcon = ({ title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', width: 12, height: 18, viewBox: '0 0 12 18', role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: 'M1.219 5.281a.397.397 0 0 1 0-.539c.14-.14.398-.14.539 0L6 8.984l4.219-4.242c.14-.14.398-.14.539 0 .14.14.14.399 0 .54l-4.5 4.5a.397.397 0 0 1-.54 0zm0 4.5a.397.397 0 0 1 0-.539c.14-.14.398-.14.539 0L6 13.484l4.219-4.242c.14-.14.398-.14.539 0 .14.14.14.399 0 .54l-4.5 4.5a.397.397 0 0 1-.54 0z' })),\n    React.createElement(\"defs\", null,\n        React.createElement(\"clipPath\", { id: '5b766dbfe6d108b6524da8804d78d617__a' },\n            React.createElement(\"path\", { d: 'M0 0h12v18H0z' })))));\nconst ForwardRef = forwardRef(LabelPairedChevronsDownCaptionRegularIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nconst LabelPairedChevronsUpCaptionRegularIcon = ({ title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', width: 12, height: 18, viewBox: '0 0 12 18', role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: 'm6.258 4.742 4.5 4.5c.14.14.14.399 0 .54a.397.397 0 0 1-.54 0L6 5.538 1.758 9.781a.397.397 0 0 1-.54 0 .397.397 0 0 1 0-.539l4.5-4.5c.141-.14.4-.14.54 0m4.5 9c.14.14.14.399 0 .54a.397.397 0 0 1-.54 0L6 10.038l-4.242 4.242a.397.397 0 0 1-.54 0 .397.397 0 0 1 0-.539l4.5-4.5c.141-.14.4-.14.54 0z' })),\n    React.createElement(\"defs\", null,\n        React.createElement(\"clipPath\", { id: '15e980a3e7e705703b561beea0f6083c__a' },\n            React.createElement(\"path\", { d: 'M0 0h12v18H0z' })))));\nconst ForwardRef = forwardRef(LabelPairedChevronsUpCaptionRegularIcon);\nexport default ForwardRef;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\ntype TFieldset = {\n    children?: React.ReactNode[] | React.ReactNode;\n    className: string;\n    header?: string | React.ReactNode;\n    header_tooltip?: string | React.ReactNode;\n    is_tooltip_disabled?: boolean;\n    is_center?: boolean;\n    popover_wrapper_class?: string;\n    onMouseEnter?: () => void;\n    onMouseLeave?: () => void;\n};\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    header_tooltip,\n    is_center,\n    is_tooltip_disabled,\n    popover_wrapper_class,\n    onMouseEnter,\n    onMouseLeave,\n}: TFieldset) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', {\n        'center-text': is_center,\n        'trade-container__fieldset-header--inline': header_tooltip,\n    });\n    const fieldset_info_class = classNames(\n        'trade-container__fieldset-info',\n        !is_center && 'trade-container__fieldset-info--left'\n    );\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header && (\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                    {header_tooltip && (\n                        <span\n                            className={classNames({\n                                'trade-container__fieldset-header--tooltip-disabled': is_tooltip_disabled,\n                                [popover_wrapper_class as string]: !!popover_wrapper_class,\n                            })}\n                        >\n                            <Popover\n                                alignment='left'\n                                icon='info'\n                                is_bubble_hover_enabled\n                                message={header_tooltip}\n                                margin={216}\n                                relative_render\n                            />\n                        </span>\n                    )}\n                </div>\n            )}\n            {children}\n        </fieldset>\n    );\n};\n\nexport default Fieldset;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TNumberSelector = {\n    arr_arr_numbers?: number[][];\n    name: string;\n    onChange: (new_values: {\n        target: {\n            value: string | number;\n            name: string;\n        };\n    }) => void;\n    selected_number?: number;\n    should_show_in_percents?: boolean;\n    is_disabled?: boolean;\n};\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n    should_show_in_percents,\n    is_disabled,\n}: TNumberSelector) => {\n    const handleSelect = (event: React.MouseEvent<HTMLSpanElement>) => {\n        if (Number(event.currentTarget.getAttribute('data-value')) !== selected_number && !is_disabled) {\n            onChange({ target: { name, value: Number(event.currentTarget.getAttribute('data-value')) } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers &&\n                arr_arr_numbers.map((arr_numbers, idx) => (\n                    <div className='number-selector__row' key={idx.toString() + arr_numbers?.[0]}>\n                        {arr_numbers.map(i => (\n                            <span\n                                key={i}\n                                className={classNames('number-selector__selection', {\n                                    'number-selector__selection--selected': selected_number === i,\n                                    'number-selector__selection--percentage': should_show_in_percents,\n                                    'number-selector__selection--disabled': is_disabled,\n                                })}\n                                data-value={i}\n                                onClick={handleSelect}\n                            >\n                                {should_show_in_percents ? `${i * 100}%` : i}\n                            </span>\n                        ))}\n                    </div>\n                ))}\n        </div>\n    );\n};\n\nexport default NumberSelector;\n","import React from 'react';\nimport { InputField } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\n\ntype TLabeledQuantityInputMobile = {\n    input_label: string | React.ReactNode;\n    wrapper_classname?: string;\n    name?: string;\n} & React.ComponentProps<typeof InputField>;\n\nconst LabeledQuantityInputMobile = ({ input_label, ...props }: TLabeledQuantityInputMobile) => (\n    <div className={`${props.name}__widget ${props.wrapper_classname}`} data-testid={`dt_${props.name}_widget`}>\n        <Fieldset className={`${props.name}__fields`}>\n            <InputField {...props} />\n        </Fieldset>\n        <h2 className={`${props.name}__widget-title`}>{input_label}</h2>\n    </div>\n);\n\nexport default React.memo(LabeledQuantityInputMobile);\n","import LabeledQuantityInputMobile from './labeled-quantity-input-mobile';\n\nexport default LabeledQuantityInputMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ArrowIndicator, Money } from '@deriv/components';\nimport ContractInfo from './contract-info';\n\ntype TValueMovement = Partial<\n    Pick<React.ComponentProps<typeof ContractInfo>, 'is_vanilla' | 'currency' | 'proposal_info'>\n> & {\n    has_error_or_not_loaded: boolean;\n    value?: number | string;\n    show_currency?: boolean;\n};\nconst ValueMovement = ({\n    has_error_or_not_loaded,\n    proposal_info,\n    currency,\n    is_vanilla = false,\n    value,\n    show_currency = true,\n}: TValueMovement) => (\n    <div className='price-info--value-container'>\n        <div className='trade-container__price-info-value'>\n            {!has_error_or_not_loaded && (\n                <Money\n                    amount={proposal_info?.obj_contract_basis?.value || value}\n                    className={classNames('trade-container__price-info-currency', {\n                        'trade-container__price-info-currency--payout-per-point': is_vanilla,\n                    })}\n                    currency={currency}\n                    should_format={!is_vanilla}\n                    show_currency={show_currency}\n                />\n            )}\n        </div>\n        <ArrowIndicator\n            className='trade-container__price-info-movement'\n            value={proposal_info?.obj_contract_basis?.value || value}\n        />\n    </div>\n);\n\nexport default ValueMovement;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { Money, Text, Popover } from '@deriv/components';\nimport classNames from 'classnames';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { isMobile } from '@deriv/shared';\n\nconst AccumulatorsInfoDisplay = observer(() => {\n    const { currency, maximum_payout, maximum_ticks } = useTraderStore();\n\n    const content = [\n        {\n            label: localize('Max. payout'),\n            value: <Money amount={maximum_payout} show_currency currency={currency} />,\n            tooltip_text: localize('Your contract will be automatically closed when your payout reaches this amount.'),\n            margin: 143,\n        },\n        {\n            label: localize('Max. ticks'),\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n            tooltip_text: localize('Your contract will be automatically closed upon reaching this number of ticks.'),\n            margin: 175,\n        },\n    ];\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', 'accu-info-display')}>\n            {content.map(({ label, value, tooltip_text, margin }) => (\n                <div key={label} className='accu-info-display__row'>\n                    <Text size='xxs' weight='bold' line_height='xxs'>\n                        {label}\n                    </Text>\n                    <Text size='xxs' align='right' as='div'>\n                        <Popover\n                            alignment={isMobile() ? 'top' : 'left'}\n                            classNameBubble='accu-info-display__popover'\n                            is_bubble_hover_enabled\n                            message={tooltip_text}\n                            margin={isMobile() ? -5 : margin}\n                            zIndex='9999'\n                        >\n                            {value}\n                        </Popover>\n                    </Text>\n                </div>\n            ))}\n        </Fieldset>\n    );\n});\n\nexport default AccumulatorsInfoDisplay;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { addComma } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\ntype TDurationRangeText = {\n    min: number | null;\n    max: number | null;\n    duration_unit_text?: string;\n};\n\nconst DurationRangeText = ({ min, max, duration_unit_text }: TDurationRangeText) => (\n    <Text as='div' size='xxxs' line_height='s' className='range-text-container'>\n        <Localize\n            i18n_default_text='Range: {{min}} - {{max}} {{duration_unit_text}} '\n            values={{\n                min: addComma(min),\n                max: addComma(max),\n                duration_unit_text,\n            }}\n        />\n    </Text>\n);\n\nexport default DurationRangeText;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TExpiryText = {\n    expiry_epoch?: number;\n    has_error?: boolean;\n    fixed_date?: string;\n};\nconst ExpiryText = ({ expiry_epoch, has_error, fixed_date }: TExpiryText) => {\n    const formatted_date =\n        expiry_epoch && !has_error\n            ? new Date(expiry_epoch * 1000)\n                  .toUTCString()\n                  .replace('GMT', 'GMT +0')\n                  .substring(5)\n                  .replace(/(\\d{2}) (\\w{3} \\d{4})/, '$1 $2,')\n            : '';\n\n    return (\n        <Text as='div' size='xxxs' line_height='s' className='expiry-text-container'>\n            <Localize i18n_default_text='Expiry: {{date}}' values={{ date: fixed_date || formatted_date }} />\n        </Text>\n    );\n};\n\nexport default ExpiryText;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { formatDuration, getDiffDuration, getDateFromNow } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TExpirationProps = {\n    is_text_only?: boolean;\n    text_size?: string;\n};\n\nconst Expiration = observer(({ is_text_only, text_size }: TExpirationProps) => {\n    const { expiration } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(\n        getDiffDuration(Number(start_time?.unix()), Number(expiration)),\n        'HH:mm'\n    );\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    if (is_text_only) {\n        return (\n            <React.Fragment>\n                {expiration ? (\n                    <Text size={text_size} align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__fieldset__multiplier'\n            is_center\n            header={<Localize i18n_default_text='Expires on' />}\n            header_tooltip={\n                expiration ? (\n                    <Localize\n                        i18n_default_text='Your contract will be closed automatically at the next available asset price on {{date}} at {{timestamp}}.'\n                        values={{ date, timestamp }}\n                    />\n                ) : null\n            }\n        >\n            <div className='trade-container__fieldset-expiration'>\n                {expiration ? (\n                    <Text size='xs' align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </div>\n        </Fieldset>\n    );\n});\n\nexport default Expiration;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Popover, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst commission_tooltip_margin = 30;\nconst stop_out_tooltip_margin = 160;\n\ntype TMultipliersInfo = {\n    amount?: number | string;\n    className: string;\n    commission_text_size?: string;\n    commission?: number | null;\n    is_tooltip_relative?: boolean;\n    multiplier?: number;\n    should_show_tooltip?: boolean;\n    stop_out_text_size?: string;\n    stop_out?: number | null;\n};\n\ntype TPopoverPosition = React.ComponentProps<typeof Popover>['alignment'];\n\ntype TTooltip_params = { alignment: TPopoverPosition; relative_render?: boolean; margin?: number; zIndex?: string };\n\nconst MultipliersInfo = observer(\n    ({\n        className,\n        commission_text_size,\n        stop_out_text_size,\n        is_tooltip_relative,\n        should_show_tooltip,\n        ...props\n    }: TMultipliersInfo) => {\n        const trade = useTraderStore();\n        const { currency, has_stop_loss } = trade;\n        const multiplier = props.multiplier ?? (trade.multiplier || 0);\n        const amount = props.amount ?? (trade.amount || 0);\n        const commission = props.commission ?? (trade.commission || 0);\n        const stop_out = props.stop_out ?? (trade.stop_out || 0);\n\n        const commission_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={commission_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Commission <0/>'\n                    components={[<Money key={0} amount={commission} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const stop_out_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={stop_out_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Stop out <0/>'\n                    components={[<Money key={0} amount={stop_out} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const commission_tooltip = (\n            <Localize\n                i18n_default_text='<0>{{commission_percentage}}%</0> of (<1/> * {{multiplier}})'\n                values={{\n                    commission_percentage: ((Number(commission) * 100) / (multiplier * Number(amount))).toFixed(4),\n                    multiplier,\n                }}\n                components={[\n                    <Text size='xxs' weight='bold' key={0} />,\n                    <Money key={1} amount={amount} currency={currency} />,\n                ]}\n            />\n        );\n\n        const stop_out_tooltip = (\n            <Localize\n                i18n_default_text='Your contract will be closed automatically when your loss reaches {{stop_out_percentage}}% of your stake.'\n                values={{\n                    stop_out_percentage: Math.floor(Math.abs((stop_out * 100) / Number(amount))),\n                }}\n            />\n        );\n\n        const getInfo = ({\n            text,\n            message,\n            margin,\n        }: {\n            text: React.ReactNode;\n            message: React.ReactNode;\n            margin: number;\n        }) => {\n            const tooltip_params: TTooltip_params = is_tooltip_relative\n                ? { alignment: 'left', relative_render: true, margin }\n                : { alignment: 'top', zIndex: '9999' };\n            return should_show_tooltip ? (\n                <Popover message={message} {...tooltip_params}>\n                    {text}\n                </Popover>\n            ) : (\n                text\n            );\n        };\n\n        return (\n            <div\n                className={classNames('multipliers-trade-info', className, {\n                    'mobile-widget__multiplier-trade-info--no-stop-out': has_stop_loss,\n                })}\n            >\n                {getInfo({\n                    text: commission_text,\n                    message: commission_tooltip,\n                    margin: commission_tooltip_margin,\n                })}\n                {!has_stop_loss &&\n                    getInfo({\n                        text: stop_out_text,\n                        message: stop_out_tooltip,\n                        margin: stop_out_tooltip_margin,\n                    })}\n            </div>\n        );\n    }\n);\n\nexport default MultipliersInfo;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { isDesktop } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\ntype TStopLossProps = {\n    has_stop_loss?: boolean;\n    onChange?: (e: { target: { name: string; value: unknown } }) => void;\n    onChangeMultiple?: (props: Partial<TTradeStore>) => void;\n    stop_loss?: string;\n    validation_errors?: { [key: string]: string[] };\n};\n\nconst StopLoss = observer((props: TStopLossProps) => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const stop_loss = props.stop_loss ?? trade.stop_loss;\n    const has_stop_loss = props.has_stop_loss ?? trade.has_stop_loss;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = (e: Parameters<React.ComponentProps<typeof InputWithCheckbox>['onChange']>[0]) => {\n        if (e.target.name === 'has_stop_loss') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name as string]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameBubble='dc-popover__trade-params'\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput='trade-container__input'\n                className={classNames({\n                    'trade-container__amount trade-container__amount--multipliers': isDesktop(),\n                })}\n                currency={currency}\n                current_focus={current_focus ?? ''}\n                defaultChecked={has_stop_loss}\n                error_messages={has_stop_loss ? validation_errors?.stop_loss : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_stop_loss}\n                label={localize('Stop loss')}\n                max_value={+amount}\n                name='stop_loss'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={\n                    <Localize i18n_default_text='When your loss reaches or exceeds this amount, your trade will be closed automatically.' />\n                }\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={stop_loss ?? ''}\n            />\n        </Fieldset>\n    );\n});\n\nexport default StopLoss;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { isDesktop } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\ntype TTakeProfitProps = {\n    has_info?: boolean;\n    has_take_profit?: boolean;\n    onChange?: (e: { target: { name: string; value: unknown } }) => void;\n    onChangeMultiple?: (props: Partial<TTradeStore>) => void;\n    take_profit?: string;\n    validation_errors?: { [key: string]: string[] };\n};\n\nconst TakeProfit = observer((props: TTakeProfitProps) => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { is_accumulator, currency, has_open_accu_contract } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const take_profit = props.take_profit ?? trade.take_profit;\n    const has_take_profit = props.has_take_profit ?? trade.has_take_profit;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = (e: Parameters<React.ComponentProps<typeof InputWithCheckbox>['onChange']>[0]) => {\n        if (e.target.name === 'has_take_profit') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name as string]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    const take_profit_tooltip = (\n        <Localize i18n_default_text='When your profit reaches or exceeds this amount, your trade will be closed automatically.' />\n    );\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameBubble='dc-popover__trade-params'\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput={classNames('trade-container__input', {\n                    'trade-container__input--accumulator': is_accumulator,\n                })}\n                className={classNames({\n                    'trade-container__amount trade-container__amount--multipliers': isDesktop(),\n                })}\n                currency={currency}\n                current_focus={current_focus ?? ''}\n                defaultChecked={has_take_profit}\n                error_messages={has_take_profit ? validation_errors?.take_profit : undefined}\n                is_disabled={has_open_accu_contract}\n                is_single_currency={is_single_currency}\n                is_negative_disabled\n                is_input_hidden={!has_take_profit}\n                label={localize('Take profit')}\n                name='take_profit'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={\n                    is_accumulator ? (\n                        <React.Fragment>\n                            {take_profit_tooltip}{' '}\n                            <Localize i18n_default_text=\"Take profit can't be adjusted after your contract starts.\" />\n                        </React.Fragment>\n                    ) : (\n                        take_profit_tooltip\n                    )\n                }\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={take_profit ?? ''}\n            />\n        </Fieldset>\n    );\n});\n\nexport default TakeProfit;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { motion } from 'framer-motion';\n\nconst transition = {\n    duration: 0.24,\n    ease: [0, 0, 0, 1],\n};\n\nconst variants = {\n    enter: (direction: 'up' | 'down') => ({\n        x: 0,\n        y: direction === 'down' ? 30 : -30,\n        opacity: 0,\n        transition,\n    }),\n    center: {\n        x: 0,\n        y: 0,\n        opacity: 1,\n        transition,\n    },\n    exit: (direction: 'up' | 'down') => ({\n        x: 0,\n        y: direction === 'down' ? -30 : 30,\n        opacity: 0,\n        transition,\n    }),\n};\n\ntype WheelPickerType = {\n    onClick: (id: string) => Promise<void> | void;\n    options: string[];\n    defaultValue?: string;\n    currency?: string;\n};\n\nconst WheelPicker = ({ options, onClick, defaultValue, currency }: WheelPickerType) => {\n    const [selectedIndex, setSelectedIndex] = useState(Math.floor(options.length / 2));\n    const [direction, setDirection] = useState('down');\n\n    useEffect(() => {\n        if (defaultValue) {\n            setSelectedIndex(options.indexOf(defaultValue));\n        }\n    }, [defaultValue, options]);\n\n    const handleIndexChange = (newIndex: number, newDirection: 'up' | 'down') => {\n        setDirection(newDirection);\n        setSelectedIndex(newIndex);\n        onClick(options[newIndex]);\n    };\n\n    const handleIncrease = () => {\n        if (selectedIndex > 0) {\n            handleIndexChange(selectedIndex - 1, 'up');\n        }\n    };\n\n    const handleDecrease = () => {\n        if (selectedIndex < options.length - 1) {\n            handleIndexChange(selectedIndex + 1, 'down');\n        }\n    };\n\n    const visibleValues = () => {\n        const values = [options[selectedIndex - 1] || '', options[selectedIndex], options[selectedIndex + 1] || ''];\n        return values;\n    };\n    const hasUndefinedValues = visibleValues().some(option => option === undefined);\n\n    return (\n        <div className='wheel-picker'>\n            <div className='wheel-picker__wheel' key={selectedIndex}>\n                {options.length > 0 &&\n                    !hasUndefinedValues &&\n                    visibleValues().map((value: string | number, index: number) => (\n                        <motion.div\n                            key={index}\n                            variants={variants}\n                            custom={direction}\n                            initial='enter'\n                            animate='center'\n                            exit='exit'\n                        >\n                            <Text\n                                size={index === 1 ? 'xs' : 'xxs'}\n                                line_height={index === 1 ? 'l' : 'm'}\n                                weight={index === 1 ? 'bolder' : 'bold'}\n                                color={index === 1 ? 'default' : 'disabled-1'}\n                                align='center'\n                                as='p'\n                                className={index === 1 ? '' : 'wheel-picker__wheel__placeholder'}\n                            >\n                                {value} {value !== '' ? currency : ''}\n                            </Text>\n                        </motion.div>\n                    ))}\n            </div>\n            <div className='wheel-picker__actions'>\n                <Button\n                    disabled={selectedIndex === 0}\n                    small\n                    className='wheel-picker__actions__btn'\n                    data-testid='dt_up_btn'\n                    name='up-btn'\n                    onClick={handleIncrease}\n                >\n                    <Icon\n                        icon='IcChevronUp'\n                        color={selectedIndex === 0 ? 'disabled' : 'black'}\n                        className='chevron-icon'\n                    />\n                </Button>\n                <Button\n                    small\n                    disabled={selectedIndex === options.length - 1}\n                    className='wheel-picker__actions__btn  wheel-picker__actions--chevron-up'\n                    name='down-btn'\n                    data-testid='dt_down_btn'\n                    onClick={handleDecrease}\n                >\n                    <Icon\n                        icon='IcChevronUp'\n                        color={selectedIndex === options.length - 1 ? 'disabled' : 'black'}\n                        className='chevron-up'\n                    />\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default WheelPicker;\n","import WheelPicker from './wheel-picker';\nimport './wheel-picker.scss';\n\nexport default WheelPicker;\n","import React from 'react';\nimport WheelPicker from '../../Form/WheelPicker';\nimport { Popover, Text, useDevice } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { Localize } from '@deriv/translations';\nimport './payout-per-point.scss';\nimport { LabelPairedChevronsDownCaptionRegularIcon, LabelPairedChevronsUpCaptionRegularIcon } from '@deriv/quill-icons';\n\nconst PayoutPerPointInput = ({\n    payoutOptions,\n    onPayoutClick,\n    selectedBarrier,\n    defaultPayout,\n    currency,\n    tooltipText,\n}: {\n    payoutOptions: string[];\n    onPayoutClick: (option: string) => void;\n    selectedBarrier: string;\n    defaultPayout: string;\n    currency: string;\n    tooltipText?: React.ReactNode;\n}) => {\n    const { is_desktop } = useDevice();\n    const turbos_payout_message = (\n        <Localize i18n_default_text='The amount you choose to receive at expiry for every point of change between the final price and the barrier.' />\n    );\n    if (!is_desktop) {\n        return null;\n    }\n    return (\n        <Fieldset\n            className='trade-container__fieldset payout-per-point-input'\n            header={<Localize i18n_default_text='Payout per Point' />}\n            header_tooltip={turbos_payout_message}\n            popover_wrapper_class='popover_wrapper_class'\n        >\n            <WheelPicker\n                options={payoutOptions}\n                defaultValue={defaultPayout}\n                onClick={onPayoutClick}\n                currency={currency}\n            />\n            <Fieldset className='actions-wrapper'>\n                <Text size='xxxs' line_height='l' color='default' align='center' as='p'>\n                    <Localize i18n_default_text='Barrier' />\n                </Text>\n                <Popover\n                    alignment='left'\n                    className='popover-icon'\n                    is_bubble_hover_enabled\n                    margin={206}\n                    disable_target_icon\n                    icon='info'\n                    zIndex='9999'\n                    message={tooltipText}\n                >\n                    <div className='distance-to-current-spot'>\n                        <Text\n                            size='xxxs'\n                            line_height='l'\n                            color='default'\n                            align='center'\n                            as='p'\n                            className='barrier-value'\n                        >\n                            {selectedBarrier}\n                            {Number(selectedBarrier) < 0 ? (\n                                <LabelPairedChevronsDownCaptionRegularIcon\n                                    width={12}\n                                    height={12}\n                                    stroke='var(--text-prominent)'\n                                    className='indicator-icon'\n                                />\n                            ) : (\n                                <LabelPairedChevronsUpCaptionRegularIcon\n                                    width={12}\n                                    height={12}\n                                    stroke='var(--text-prominent)'\n                                    className='indicator-icon'\n                                />\n                            )}\n                        </Text>\n                    </div>\n                </Popover>\n            </Fieldset>\n        </Fieldset>\n    );\n};\n\nexport default PayoutPerPointInput;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useDevice } from '@deriv-com/ui';\nimport PayoutPerPointInput from 'Modules/Trading/Components/Elements/PayoutPerPoint/payout-per-point-input';\nimport { LabelPairedChevronsDownCaptionRegularIcon, LabelPairedChevronsUpCaptionRegularIcon } from '@deriv/quill-icons';\nimport './payout-selector.scss';\n\nconst PayoutSelector = observer(() => {\n    const { barrier_1, payout_choices, setPayoutPerPoint, togglePayoutWheelPicker, payout_per_point, currency } =\n        useTraderStore();\n    const { isMobile } = useDevice();\n\n    const header_tooltip_text = (\n        <div className='trade-container__barriers-tooltip'>\n            <Localize i18n_default_text='You will receive a payout at expiry if the spot price never breaches the barrier throughout the contract duration. Otherwise, your contract will be terminated early.' />\n        </div>\n    );\n    if (isMobile) {\n        return (\n            <button role='button' className='mobile-widget payout-selector' onClick={togglePayoutWheelPicker}>\n                <Text size='xs' color='prominent' align='center' className='payout-field'>\n                    {barrier_1}\n                    {Number(barrier_1) < 0 ? (\n                        <LabelPairedChevronsDownCaptionRegularIcon\n                            className='indicator-icon'\n                            stroke='var(--text-prominent)'\n                        />\n                    ) : (\n                        <LabelPairedChevronsUpCaptionRegularIcon\n                            className='indicator-icon'\n                            stroke='var(--text-prominent)'\n                        />\n                    )}\n                </Text>\n                <Text size='xs' className='payout-value' color='prominent' align='center' weight='bold'>\n                    {payout_per_point} {currency}\n                </Text>\n                <Text size='xs' color='less-prominent' align='center'>\n                    <Localize i18n_default_text='Payout per point' />\n                </Text>\n            </button>\n        );\n    }\n\n    return (\n        <PayoutPerPointInput\n            currency={currency}\n            defaultPayout={payout_per_point}\n            payoutOptions={payout_choices}\n            onPayoutClick={value => setPayoutPerPoint(value)}\n            tooltipText={header_tooltip_text}\n            selectedBarrier={barrier_1}\n        />\n    );\n});\n\nexport default PayoutSelector;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, Icon, InputField, MobileWrapper, Modal, Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport ValueMovement from '../Purchase/value-movement';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../LabeledQuantityInputMobile';\n\ntype TBarrier = {\n    is_minimized?: boolean;\n    is_absolute_only?: boolean;\n};\n\nconst Barrier = observer(({ is_minimized, is_absolute_only }: TBarrier) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const {\n        barrier_1,\n        barrier_2,\n        barrier_count,\n        barrier_pipsize,\n        duration_unit,\n        onChange,\n        validation_errors,\n        proposal_info,\n        trade_types,\n    } = useTraderStore();\n    const [show_modal, setShowModal] = React.useState(false);\n    const type_with_current_spot = Object.keys(trade_types).find(type => proposal_info?.[type]?.spot);\n    let contract_info;\n    if (type_with_current_spot) contract_info = proposal_info?.[type_with_current_spot];\n    const current_spot = contract_info?.spot || '';\n    const current_barrier_price = contract_info?.barrier || '';\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n    const has_error_or_not_loaded = contract_info?.has_error || !contract_info?.id;\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>{barrier_2}</div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    const is_day_duration = duration_unit === 'd';\n    // TODO: Some contracts yet to be implemented in app.deriv.com allow only absolute barrier, hence the prop\n    const is_absolute_barrier = is_day_duration || is_absolute_only;\n\n    const format = (value: string) => {\n        const float_value = parseFloat(value);\n        let final_value;\n        if (Math.sign(float_value) === -1) {\n            final_value = float_value.toFixed(barrier_pipsize).toString();\n        } else {\n            final_value = `+${float_value.toFixed(barrier_pipsize)}`;\n        }\n        return final_value;\n    };\n\n    const onClick = () => {\n        setShowModal(!show_modal);\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={barrier_title}\n                    is_center\n                >\n                    <div>\n                        <InputField\n                            id='dt_barrier_1_input'\n                            type='number'\n                            name='barrier_1'\n                            value={barrier_1}\n                            className={`trade-container__barriers-${input_class}`}\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                `trade-container__barriers-${input_class}-input`\n                            )}\n                            current_focus={current_focus}\n                            onChange={onChange}\n                            error_messages={validation_errors?.barrier_1 || []}\n                            is_float\n                            is_signed\n                            setCurrentFocus={setCurrentFocus}\n                        />\n\n                        {barrier_count === 2 && (\n                            <React.Fragment>\n                                <InputField\n                                    id='dt_barrier_2_input'\n                                    type='number'\n                                    name='barrier_2'\n                                    value={barrier_2}\n                                    className='multiple'\n                                    classNameInput='trade-container__input'\n                                    current_focus={current_focus}\n                                    onChange={onChange}\n                                    error_messages={validation_errors?.barrier_2}\n                                    is_float\n                                    is_signed\n                                    setCurrentFocus={setCurrentFocus}\n                                />\n                                <Icon icon='IcArrowUp' className='trade-container__barriers--up' />\n                                <Icon icon='IcArrowDown' className='trade-container__barriers--down' />\n                            </React.Fragment>\n                        )}\n                    </div>\n                </Fieldset>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <Modal\n                    id='dt_input_barrier_mobile'\n                    className='barrier'\n                    is_open={show_modal}\n                    should_header_stick_body\n                    toggleModal={onClick}\n                    height='auto'\n                    width='calc(100vw - 32px)'\n                    title={localize('Barrier')}\n                >\n                    <div className='barrier__modal-container'>\n                        <Text className='barrier__modal-text' as='span' color='less-prominent' size='xs'>\n                            {localize('Current Price')}\n                        </Text>\n                        {current_spot && (\n                            <ValueMovement\n                                has_error_or_not_loaded={has_error_or_not_loaded}\n                                value={current_spot}\n                                show_currency={false}\n                            />\n                        )}\n                    </div>\n                    <LabeledQuantityInputMobile\n                        id='dt_barrier_input'\n                        input_label={localize('Barrier')}\n                        type='number'\n                        name={barrier_count === 1 ? 'barrier_1' : 'barrier_2'}\n                        wrapper_classname='barrier__modal-input'\n                        value={barrier_count === 1 ? barrier_1 : barrier_2}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        current_focus={current_focus}\n                        onChange={onChange}\n                        error_messages={\n                            (barrier_count === 1 ? validation_errors?.barrier_1 : validation_errors?.barrier_2) || []\n                        }\n                        error_message_alignment='top'\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                    />\n                    <Text className='barrier__modal-price' as='div' color='less-prominent' size='xs'>\n                        {localize('Barrier Price:')} {current_barrier_price}\n                    </Text>\n                </Modal>\n                <LabeledQuantityInputMobile\n                    input_label={barrier_count === 2 ? localize('Barrier 1') : localize('Barrier')}\n                    id='dt_barrier_1_input'\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    is_incrementable={!is_absolute_barrier}\n                    is_incrementable_on_long_press={!is_absolute_barrier}\n                    is_negative_disabled={is_absolute_barrier}\n                    className={`barrier__fields-${input_class}`}\n                    classNameInput={classNames(\n                        'barrier__fields-input',\n                        'barrier__fields-barriers-input',\n                        `barrier__fields-barriers-${input_class}-input`\n                    )}\n                    format={format as React.ComponentProps<typeof LabeledQuantityInputMobile>['format']}\n                    onChange={onChange}\n                    onClick={onClick}\n                    is_float\n                    is_signed\n                    setCurrentFocus={setCurrentFocus}\n                    is_read_only\n                />\n                {barrier_count === 2 && (\n                    <LabeledQuantityInputMobile\n                        input_label={localize('Barrier 2')}\n                        id='dt_barrier_2_input'\n                        type='number'\n                        name='barrier_2'\n                        value={barrier_2}\n                        is_incrementable={!is_absolute_barrier}\n                        is_incrementable_on_long_press={!is_absolute_barrier}\n                        is_negative_disabled={is_absolute_barrier}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        format={format as React.ComponentProps<typeof LabeledQuantityInputMobile>['format']}\n                        onChange={onChange}\n                        onClick={onClick}\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                        is_read_only\n                    />\n                )}\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default Barrier;\n","import React from 'react';\nimport { isDesktop } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport NumberSelector from 'App/Components/Form/number-selector';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TLastDigit = {\n    is_minimized?: boolean;\n};\n\nconst LastDigit = observer(({ is_minimized }: TLastDigit) => {\n    const { onChange, last_digit } = useTraderStore();\n    if (is_minimized) {\n        return <div className='fieldset-minimized'>{`${localize('Last Digit')}: ${last_digit}`}</div>;\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={isDesktop() ? localize('Last Digit Prediction') : null}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n});\n\nexport default LastDigit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TMinMaxStakeInfo = {\n    className?: string;\n    min_stake?: number;\n    max_stake?: number;\n    currency?: string;\n};\n\nconst MinMaxStakeInfo = observer(({ className, currency, max_stake, min_stake }: TMinMaxStakeInfo) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    return (\n        <section className={classNames('trade-container__stake-field', className)}>\n            {!isNaN(Number(min_stake)) &&\n                !isNaN(Number(max_stake)) &&\n                ['Min', 'Max'].map(text => (\n                    <Text\n                        key={text}\n                        as='p'\n                        line_height='s'\n                        size={is_mobile ? 'xxs' : 'xxxs'}\n                        className={`trade-container__stake-field--${text.toLowerCase()}`}\n                    >\n                        <Localize\n                            i18n_default_text='{{text}}. stake<0/>'\n                            values={{ text }}\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={text === 'Min' ? min_stake : max_stake}\n                                    currency={currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </Text>\n                ))}\n        </section>\n    );\n});\n\nexport default MinMaxStakeInfo;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nexport type TBarriersListBody = {\n    barriers_list: string[];\n    className?: string;\n    onClick: (barrier: string) => void;\n    onHover?: (barrier: string) => void;\n    selected_item: string;\n    subheader?: string;\n};\n\nconst BarriersListBody = observer(\n    ({ barriers_list, className, onClick, onHover, selected_item, subheader }: TBarriersListBody) => {\n        const {\n            ui: { is_mobile },\n        } = useStore();\n        const onMouseEnter = (barrier: string) => {\n            if (selected_item !== barrier && typeof onHover === 'function') {\n                onHover(barrier);\n            }\n        };\n        return (\n            <React.Fragment>\n                {subheader && (\n                    <Text\n                        size={is_mobile ? 's' : 'xxs'}\n                        color='disabled'\n                        line_height='l'\n                        as='p'\n                        className={`${className}__text`}\n                    >\n                        {subheader}\n                    </Text>\n                )}\n                <ThemedScrollbars autohide={false}>\n                    <ul className={`${className}__list`}>\n                        {barriers_list.map(barrier => (\n                            <Text\n                                color='prominent'\n                                line_height={is_mobile ? 'xl' : 'l'}\n                                size={is_mobile ? 'xs' : 'xxs'}\n                                as='li'\n                                key={barrier}\n                                id={barrier}\n                                data-testid={barrier}\n                                className={classNames(`${className}__item`, {\n                                    [`${className}__item--selected`]: selected_item === barrier,\n                                })}\n                                onClick={() => onClick(barrier)}\n                                onMouseEnter={() => onMouseEnter(barrier)}\n                                onMouseLeave={() => typeof onHover === 'function' && onHover('')}\n                            >\n                                {barrier}\n                            </Text>\n                        ))}\n                    </ul>\n                </ThemedScrollbars>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default React.memo(BarriersListBody);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, MobileWrapper, Text, Icon } from '@deriv/components';\nimport { CSSTransition } from 'react-transition-group';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport BarriersListBody, { TBarriersListBody } from './barriers-list-body';\n\ntype TBarriersList = TBarriersListBody & {\n    header: string | React.ReactNode;\n    onClickCross: () => void;\n    show_table: boolean;\n};\n\nconst BarriersList = ({ className, header, onClickCross, show_table, ...props }: TBarriersList) => (\n    <React.Fragment>\n        <DesktopWrapper>\n            <CSSTransition\n                appear\n                in={show_table}\n                timeout={250}\n                classNames={{\n                    appear: `${className}--enter`,\n                    enter: `${className}--enter`,\n                    enterDone: `${className}--enter-done`,\n                    exit: `${className}--exit`,\n                }}\n                unmountOnExit\n            >\n                <Fieldset className={classNames('trade-container__fieldset', className)}>\n                    <div className={`${className}__header`}>\n                        <Text color='prominent' weight='bold' size='xs'>\n                            {header}\n                        </Text>\n                        <div className={`${className}__icon-close`} onClick={onClickCross}>\n                            <Icon icon='IcCross' data_testid={`dt_${className}__icon_close`} />\n                        </div>\n                    </div>\n                    <BarriersListBody className={className} {...props} />\n                </Fieldset>\n            </CSSTransition>\n        </DesktopWrapper>\n        <MobileWrapper>\n            <BarriersListBody className={className} {...props} />\n        </MobileWrapper>\n    </React.Fragment>\n);\n\nexport default React.memo(BarriersList);\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Div100vhContainer, Modal, Popover, RadioGroup } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport classNames from 'classnames';\n\ntype TStrikeParamModalProps = {\n    contract_type: string;\n    is_open: boolean;\n    name: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    strike: string;\n    strike_price_list: { text: string; value: string }[];\n    toggleModal: () => void;\n};\n\nconst StrikeParamModal = ({\n    contract_type,\n    is_open,\n    toggleModal,\n    strike,\n    onChange,\n    name,\n    strike_price_list,\n}: TStrikeParamModalProps) => {\n    return (\n        <Modal\n            className='trade-params dc-modal-header--title-bar'\n            is_open={is_open}\n            should_header_stick_body={false}\n            is_title_centered\n            toggleModal={toggleModal}\n            height='auto'\n            width='calc(100vw - 32px)'\n            title={localize('Strike')}\n        >\n            <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                <div className='trade-params__vanilla-ic-info-wrapper'>\n                    <Popover\n                        alignment='bottom'\n                        icon='info'\n                        id='dt_vanilla-stake__tooltip'\n                        zIndex='9999'\n                        is_bubble_hover_enabled\n                        message={\n                            <Localize\n                                i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                                components={[<strong key={0} />]}\n                                values={{\n                                    trade_type:\n                                        contract_type === TRADE_TYPES.VANILLA.CALL ? localize('Call') : localize('Put'),\n                                    payout_status:\n                                        contract_type === TRADE_TYPES.VANILLA.CALL\n                                            ? localize('above')\n                                            : localize('below'),\n                                }}\n                            />\n                        }\n                        classNameBubble='trade-params--modal-wrapper__content'\n                    />\n                </div>\n                <div className={classNames('trade-params__amount-keypad', 'trade-params--mobile-strike')}>\n                    <RadioGroup\n                        name={name}\n                        className='trade-params__amount--mobile'\n                        onToggle={onChange}\n                        selected={strike}\n                    >\n                        {strike_price_list.map(item => (\n                            <RadioGroup.Item key={item.value} value={String(item.value)} label={item.value} />\n                        ))}\n                    </RadioGroup>\n                </div>\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nexport default StrikeParamModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport BarriersList from './barriers-list';\nimport { InputField, Dropdown, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler, toMoment, TRADE_TYPES } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport StrikeParamModal from 'Modules/Trading/Containers/strike-param-modal';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useDevice } from '@deriv-com/ui';\n\nconst Strike = observer(() => {\n    const { ui, common } = useStore();\n    const {\n        barrier_1,\n        contract_type,\n        barrier_choices: strike_price_choices,\n        duration_unit,\n        onChange,\n        validation_errors,\n        expiry_type,\n        expiry_date,\n    } = useTraderStore();\n    const { current_focus, setCurrentFocus, advanced_duration_unit } = ui;\n    const { server_time } = common;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [should_open_dropdown, setShouldOpenDropdown] = React.useState(false);\n    const [selected_value, setSelectedValue] = React.useState(barrier_1);\n    const { isMobile } = useDevice();\n\n    React.useEffect(() => {\n        setSelectedValue(barrier_1);\n    }, [barrier_1]);\n\n    const toggleWidget = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        clickAndKeyEventHandler(() => setIsOpen(!is_open), e);\n    };\n\n    const is_24_hours_contract = expiry_date ? toMoment(expiry_date).isSame(toMoment(server_time), 'day') : false;\n\n    const is_relative_strike_applicable =\n        expiry_type === 'endtime' ? is_24_hours_contract : advanced_duration_unit !== 'd';\n\n    const strike_price_list = strike_price_choices.map((strike_price: string) => ({\n        text: strike_price,\n        value: strike_price,\n    }));\n\n    const should_show_spot = duration_unit !== 'd';\n\n    if (isMobile) {\n        return (\n            <div className='mobile-widget__wrapper'>\n                <div className='strike-widget' onClick={toggleWidget} onKeyDown={toggleWidget}>\n                    {should_show_spot && (\n                        <div className='mobile-widget__spot'>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Spot' />\n                            </Text>\n                        </div>\n                    )}\n                    <div className='mobile-widget__amount'>{barrier_1}</div>\n                    <div className='mobile-widget__type'>\n                        <Localize i18n_default_text='Strike price' />\n                    </div>\n                </div>\n                <StrikeParamModal\n                    contract_type={contract_type}\n                    is_open={is_open}\n                    toggleModal={toggleWidget}\n                    strike={barrier_1}\n                    onChange={onChange}\n                    name='barrier_1'\n                    strike_price_list={strike_price_list}\n                />\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Fieldset\n                className='trade-container__fieldset trade-container__barriers'\n                header={<Localize i18n_default_text='Strike price' />}\n                header_tooltip={\n                    <Localize\n                        i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                        components={[<strong key={0} />]}\n                        values={{\n                            trade_type: contract_type === TRADE_TYPES.VANILLA.CALL ? localize('Call') : localize('Put'),\n                            payout_status:\n                                contract_type === TRADE_TYPES.VANILLA.CALL ? localize('above') : localize('below'),\n                        }}\n                    />\n                }\n            >\n                {!is_relative_strike_applicable ? (\n                    <InputField\n                        type='number'\n                        name='barrier_1'\n                        data_testid='dt_strike_input'\n                        value={selected_value}\n                        className='trade-container__barriers-single'\n                        classNameInput={classNames(\n                            'trade-container__input',\n                            'trade-container__barriers-input',\n                            'trade-container__barriers-single-input'\n                        )}\n                        current_focus={current_focus}\n                        error_messages={validation_errors?.barrier_1 || []}\n                        is_float\n                        is_signed\n                        is_read_only\n                        setCurrentFocus={setCurrentFocus}\n                        onClick={() => setShouldOpenDropdown(true)}\n                    />\n                ) : (\n                    <div className='trade-container__strike-field'>\n                        <Text size='s' className='strike-field--text'>\n                            <Localize i18n_default_text='Spot' />\n                        </Text>\n                        <Dropdown\n                            classNameDisplay='dc-dropdown__display--duration'\n                            disabled={false}\n                            id='strike'\n                            is_alignment_left\n                            is_nativepicker={false}\n                            list={strike_price_list}\n                            name='barrier_1'\n                            no_border={true}\n                            onChange={onChange}\n                            value={barrier_1}\n                        />\n                    </div>\n                )}\n            </Fieldset>\n            {should_open_dropdown && (\n                <BarriersList\n                    className='trade-container__barriers-table'\n                    header={<Localize i18n_default_text='Strike Prices' />}\n                    barriers_list={strike_price_choices}\n                    selected_item={selected_value}\n                    show_table={should_open_dropdown}\n                    onClick={(strike: string) => {\n                        setSelectedValue(strike);\n                        setShouldOpenDropdown(false);\n                        onChange({ target: { name: 'barrier_1', value: strike } });\n                    }}\n                    onClickCross={() => setShouldOpenDropdown(false)}\n                />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ButtonToggle } from '@deriv/components';\nimport { isTurbosContract, isVanillaContract, TRADE_TYPES } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TTradeTypeTabs = {\n    className?: string;\n};\n\nconst TradeTypeTabs = observer(({ className }: TTradeTypeTabs) => {\n    const { onChange, contract_type } = useTraderStore();\n\n    const is_turbos = isTurbosContract(contract_type);\n    const is_vanilla = isVanillaContract(contract_type);\n    const tab_list = [\n        { text: localize('Up'), value: TRADE_TYPES.TURBOS.LONG, is_displayed: is_turbos },\n        { text: localize('Down'), value: TRADE_TYPES.TURBOS.SHORT, is_displayed: is_turbos },\n        { text: localize('Call'), value: TRADE_TYPES.VANILLA.CALL, is_displayed: is_vanilla },\n        { text: localize('Put'), value: TRADE_TYPES.VANILLA.PUT, is_displayed: is_vanilla },\n    ];\n\n    if (!is_turbos && !is_vanilla) return null;\n\n    return (\n        <div className={classNames('trade-container__trade', 'trade-container__trade-type-tabs', className)}>\n            <ButtonToggle\n                id='dt_advanced_duration_toggle'\n                buttons_arr={tab_list.filter(({ is_displayed }) => is_displayed)}\n                name='contract_type'\n                className='trade-container__trade-type-tabs--button'\n                is_animated\n                onChange={onChange}\n                value={tab_list.find(({ value }) => value === contract_type)?.value ?? ''}\n            />\n        </div>\n    );\n});\n\nexport default TradeTypeTabs;\n","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { getTermDefinition } from 'AppV2/Utils/contract-description-utils';\nimport './definition-popover.scss';\n\ntype TDefinitionPopoverProps = {\n    term: string;\n    id?: string;\n    children?: React.ReactNode;\n    contract_type: string;\n};\n\n/**\n * A specialized Popover component for displaying term definitions.\n * This component wraps the base Popover with predefined props for consistent styling and behavior.\n * It uses the term to look up the definition from the contract-description-utils.\n */\nconst DefinitionPopover = ({ term, id, children, contract_type }: TDefinitionPopoverProps) => {\n    // Create a styled message with title and content\n    const message = (\n        <div className='definition__popover-content'>\n            <div className='definition__popover-title'>{term}</div>\n            <div className='definition__popover-text'>{getTermDefinition({ term, contract_type })}</div>\n        </div>\n    );\n\n    return (\n        <Popover\n            alignment='bottom'\n            className='contract-type-info__content-definition'\n            classNameBubble='custom-popover-bubble'\n            is_bubble_hover_enabled\n            message={message}\n            zIndex='9999'\n            id={id}\n            is_inline_block\n            background_color='var(--icon-black-plus)'\n            arrow_color='var(--icon-black-plus)'\n        >\n            {children || <span className='contract-type-info__content-definition' />}\n        </Popover>\n    );\n};\n\nexport default DefinitionPopover;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst AccumulatorTradeDescription = () => {\n    const { INDEX, STAKE, GROWTH_RATE, PAYOUT, BARRIER_RANGE, PREVIOUS_SPOT_PRICE, TAKE_PROFIT, SLIPPAGE_RISK } =\n        getTerm();\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Accumulators allow you to predict how much an <0>index</0> can move and potentially grow your <1>stake</1> exponentially at a fixed <2>growth rate</2>.'\n                    components={[\n                        <DefinitionPopover\n                            term={INDEX}\n                            id='index-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={0}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={STAKE}\n                            id='stake-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={1}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={GROWTH_RATE}\n                            id='growth-rate-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={2}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: CONTRACT_LIST.ACCUMULATORS,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Your <0>payout</0> is the sum of your initial stake and profit. It keeps growing as long as the spot price stays within a specified <1>barrier range</1> from the <2>previous spot price</2> at each interval.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            id='payout-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={0}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={BARRIER_RANGE}\n                            id='barrier-range-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={1}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={PREVIOUS_SPOT_PRICE}\n                            id='previous-spot-price-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={2}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='If the spot price goes outside the range, you lose your stake and the trade is terminated.'\n                    components={[]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='<0>Take profit</0>: Set a target payout to automatically close your contract and secure your gains (not available for ongoing trades).'\n                    components={[\n                        <DefinitionPopover\n                            term={TAKE_PROFIT}\n                            id='take-profit-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={0}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='You can close your trade anytime. However, be aware of <0>slippage risk</0>.'\n                    components={[\n                        <DefinitionPopover\n                            term={SLIPPAGE_RISK}\n                            id='slippage-risk-accumulator'\n                            contract_type={CONTRACT_LIST.ACCUMULATORS}\n                            key={0}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default AccumulatorTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst AsianTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='Asian options settle by comparing the last tick with the average spot over the period.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text=\"If the last tick is equal to the average of the ticks, you don't win the payout.\"\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AsianTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst CallPutSpreadTradeDescription = () => {\n    const content = [\n        { type: 'heading', text: <Localize i18n_default_text={'Spread Up'} /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win maximum payout if the exit spot is higher than or equal to the upper barrier.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between exit spot and lower barrier.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='No payout if exit spot is below or equal to the lower barrier.' />,\n        },\n        { type: 'heading', text: <Localize i18n_default_text='Spread Down' /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win maximum payout if the exit spot is lower than or equal to the lower barrier.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between upper barrier and exit spot.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='No payout if exit spot is above or equal to the upper barrier.' />,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(({ type, text }) =>\n                type === 'heading' ? (\n                    <Text as='h2' key={text.props.i18n_default_text} weight='bold' size='xs'>\n                        {text}\n                    </Text>\n                ) : (\n                    <Text as='p' key={text.props.i18n_default_text}>\n                        {text}\n                    </Text>\n                )\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default CallPutSpreadTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst EndTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text=\"If the exit spot is equal to either the Low barrier or the High barrier, you don't win the payout.\"\n            key='3'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default EndTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst EvenOddTradeDescription = () => {\n    const { EXPIRY, EXIT_SPOT, PAYOUT } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text={`Even/Odd lets you predict if the last digit of the last tick’s price will be an even or odd number at contract <0>expiry</0> (<1>exit spot</1>).`}\n                    components={[\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={0}\n                            id='even-odd-expiry'\n                            contract_type={CONTRACT_LIST.EVEN_ODD}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXIT_SPOT}\n                            key={1}\n                            id='even-odd-exit-spot'\n                            contract_type={CONTRACT_LIST.EVEN_ODD}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Even' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the last digit of the exit spot is even (0, 2, 4, 6, or 8).'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='even-payout'\n                            contract_type={CONTRACT_LIST.EVEN_ODD}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'even',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Odd' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Earn a payout if the last digit of the exit spot is odd (1, 3, 5, 7, or 9).' />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'odd',\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default EvenOddTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst HighLowTradeDescription = () => {\n    const { EXPIRY, EXIT_SPOT, PAYOUT } = getTerm();\n\n    const higher_lower_content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Higher/Lower lets you predict if the market price will end higher or lower than a set barrier at contract <0>expiry</0> (<1>exit spot</1>).'\n                    components={[\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={0}\n                            id='higher-lower-expiry'\n                            contract_type={CONTRACT_LIST.HIGHER_LOWER}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXIT_SPOT}\n                            key={1}\n                            id='higher-lower-exit-spot'\n                            contract_type={CONTRACT_LIST.HIGHER_LOWER}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Higher' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the exit spot is strictly higher than the barrier.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='higher-lower-payout'\n                            contract_type={CONTRACT_LIST.HIGHER_LOWER}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'higher',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Lower' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='Earn a payout if the exit spot is strictly lower than the barrier.' />,\n        },\n        {\n            type: 'video',\n            text: 'lower',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Additional Information' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text={`If the exit spot is equal to the barrier, you don't earn the payout.`} />\n            ),\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(higher_lower_content, true)}</React.Fragment>;\n};\n\nexport default HighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst LbHighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='By purchasing the \"High-to-Low\" contract, you\\&apos;ll win the multiplier times the difference between the high and low over the duration of the contract.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='The high is the highest point ever reached by the market during the contract period.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='The low is the lowest point ever reached by the market during the contract period.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default LbHighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst LbPutTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='By purchasing the \"High-to-Close\" contract, you\\&apos;ll win the multiplier times the difference between the high and close over the duration of the contract.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='The high is the highest point ever reached by the market during the contract period.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='The low is the lowest point ever reached by the market during the contract period.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default LbPutTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst LbCallTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='By purchasing the \"Close-to-Low\" contract, you\\&apos;ll win the multiplier times the difference between the close and low over the duration of the contract.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='The high is the highest point ever reached by the market during the contract period.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='The low is the lowest point ever reached by the market during the contract period.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default LbCallTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst MatchDiffTradeDescription = () => {\n    const { EXPIRY, EXIT_SPOT, PAYOUT } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text={`Matches/Differs lets you predict whether the last digit of the last tick’s price will match your chosen number at contract <0>expiry</0> (<1>exit spot</1>).`}\n                    components={[\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={0}\n                            id='matches-differs-expiry'\n                            contract_type={CONTRACT_LIST.MATCHES_DIFFERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXIT_SPOT}\n                            key={1}\n                            id='matches-differs-exit-spot'\n                            contract_type={CONTRACT_LIST.MATCHES_DIFFERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Matches' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the last digit of the exit spot matches your prediction.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='matches-differs-payout'\n                            contract_type={CONTRACT_LIST.MATCHES_DIFFERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'matches',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Differs' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Earn a payout if the last digit of the exit spot differs from your prediction.' />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'differs',\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default MatchDiffTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst MultiplierTradeDescription = () => {\n    const { STOP_OUT, TAKE_PROFIT, STOP_LOSS, DEAL_CANCELLATION, SLIPPAGE_RISK } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Multipliers let you amplify your potential profit or loss by applying a multiplier to the asset price movement.' />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Up' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Earn a profit if the asset price rises above the entry price at the time you close the trade.' />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'multipliers_up',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Down' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Earn a profit if the asset price falls below the entry price at the time you close the trade.' />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'multipliers_down',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Additional Information' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='A fixed commission is charged when you open a Multipliers trade. The amount varies by asset class and market volatility.' />\n            ),\n        },\n        {\n            type: 'badge',\n            text: (\n                <Localize i18n_default_text='Profit/loss = (% of price difference × multiplier × stake) – commission' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Your trade closes automatically if the <0>stop out</0> level is hit.'\n                    components={[\n                        <DefinitionPopover\n                            term={STOP_OUT}\n                            key={0}\n                            id='multipliers-stop-out'\n                            contract_type={CONTRACT_LIST.MULTIPLIERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='You can manage risk with features like <0>take profit</0>, <1>stop loss</1>, and <2>deal cancellation</2> (when available).'\n                    components={[\n                        <DefinitionPopover\n                            term={TAKE_PROFIT}\n                            key={0}\n                            id='multipliers-take-profit'\n                            contract_type={CONTRACT_LIST.MULTIPLIERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={STOP_LOSS}\n                            key={1}\n                            id='multipliers-stop-loss'\n                            contract_type={CONTRACT_LIST.MULTIPLIERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={DEAL_CANCELLATION}\n                            key={2}\n                            id='multipliers-deal-cancellation'\n                            contract_type={CONTRACT_LIST.MULTIPLIERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='You can close your trade anytime. However, be aware that <0>slippage risk</0> may affect your final return.'\n                    components={[\n                        <DefinitionPopover\n                            term={SLIPPAGE_RISK}\n                            key={0}\n                            id='multipliers-slippage-risk'\n                            contract_type={CONTRACT_LIST.MULTIPLIERS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default MultiplierTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst OverUnderTradeDescription = () => {\n    const { EXIT_SPOT, EXPIRY, PAYOUT } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Over/Under lets you predict if the last digit of the <0>exit spot</0> at contract <1>expiry</1> will be over or under your chosen number.'\n                    components={[\n                        <DefinitionPopover\n                            term={EXIT_SPOT}\n                            key={0}\n                            id='over-under-exit-spot'\n                            contract_type={CONTRACT_LIST.OVER_UNDER}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={1}\n                            id='over-under-expiry'\n                            contract_type={CONTRACT_LIST.OVER_UNDER}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Over' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the last digit of the exit spot is greater than your chosen number.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='over-payout'\n                            contract_type={CONTRACT_LIST.OVER_UNDER}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'over',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Under' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Earn a payout if the last digit of the exit spot is less than your chosen number.' />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'under',\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default OverUnderTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst RiseFallTradeDescription = () => {\n    const { ENTRY_SPOT, EXPIRY, PAYOUT } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Rise/Fall lets you predict if the market price will end higher or lower than the <0>entry spot</0> at contract <1>expiry</1>.'\n                    components={[\n                        <DefinitionPopover\n                            term={ENTRY_SPOT}\n                            key={0}\n                            id='entry-spot-definition'\n                            contract_type={CONTRACT_LIST.RISE_FALL}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={1}\n                            id='expiry-definition'\n                            contract_type={CONTRACT_LIST.RISE_FALL}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        { type: 'heading', text: <Localize i18n_default_text='Rise' className='contract-type-info__heading' /> },\n\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the exit spot is strictly higher than the entry spot.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='payout-definition'\n                            contract_type={CONTRACT_LIST.RISE_FALL}\n                        >\n                            <span id='payout-higher-lower' className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'rise',\n        },\n        { type: 'heading', text: <Localize i18n_default_text='Fall' className='contract-type-info__heading' /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a payout if the exit spot is strictly lower than the entry spot.'\n                    components={[]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'fall',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Allow equals' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='For <0>Rise</0>, earn if the exit spot is higher than or equal to the entry spot. For <1>Fall</1>, earn if the exit spot is lower than or equal to the entry spot.'\n                    components={[\n                        <span id='rise-fall-rise' className='contract-type-info__content-bold' key={0} />,\n                        <span id='rise-fall-fall' className='contract-type-info__content-bold' key={1} />,\n                    ]}\n                />\n            ),\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default RiseFallTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst RunHighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Only Ups\", you win the payout if consecutive ticks rise successively after the entry spot. No payout if any tick falls or is equal to any of the previous ticks.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Only Downs\", you win the payout if consecutive ticks fall successively after the entry spot. No payout if any tick rises or is equal to any of the previous ticks.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default RunHighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst ResetTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Reset-Up”, you win the payout if the exit spot is strictly higher than either the entry spot or the spot at reset time.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Reset-Down”, you win the payout if the exit spot is strictly lower than either the entry spot or the spot at reset time.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text=\"If the exit spot is equal to the barrier or the new barrier (if a reset occurs), you don't win the payout.\"\n            key='3'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default ResetTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst StayTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default StayTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst TurbosTradeDescription = () => {\n    const { PAYOUT, EXPIRY, BARRIER, PAYOUT_PER_POINT, SPOT_PRICE, EXIT_SPOT, STAKE } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text=\"Turbos allow you to predict the direction of the underlying asset's movements.\" />\n            ),\n        },\n        { type: 'heading', text: <Localize i18n_default_text='Up' /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the <1>spot price</1> never falls below the <2>barrier</2> during the contract period.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='turbos-payout'\n                            contract_type={CONTRACT_LIST.TURBOS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={SPOT_PRICE}\n                            key={1}\n                            id='turbos-spot-price'\n                            contract_type={CONTRACT_LIST.TURBOS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={BARRIER}\n                            key={2}\n                            id='turbos-barrier'\n                            contract_type={CONTRACT_LIST.TURBOS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        { type: 'video', text: 'turbos_up' },\n        { type: 'heading', text: <Localize i18n_default_text='Down' /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Earn a payout if the spot price never rises above the barrier during the contract period.' />\n            ),\n        },\n        { type: 'video', text: 'turbos_down' },\n        { type: 'heading', text: <Localize i18n_default_text='Additional Information' /> },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='If the barrier is breached at any time, your contract ends early.' />,\n        },\n        {\n            type: 'badge',\n            text: (\n                <Localize\n                    i18n_default_text='Payout = <0>Payout per point</0> × Distance between <1>exit spot</1> and barrier'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT_PER_POINT}\n                            key={0}\n                            id='turbos-payout-per-point'\n                            contract_type={CONTRACT_LIST.TURBOS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXIT_SPOT}\n                            key={1}\n                            id='turbos-exit-spot'\n                            contract_type={CONTRACT_LIST.TURBOS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='You make a profit only if your payout is more than your <0>stake</0>.'\n                    components={[\n                        <DefinitionPopover term={STAKE} key={0} id='turbos-stake' contract_type={CONTRACT_LIST.TURBOS}>\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text={`You may sell your contract up to 15 seconds before <0>expiry</0>. If you do, we'll pay you the contract value.`}\n                    components={[\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={0}\n                            id='turbos-expiry'\n                            contract_type={CONTRACT_LIST.TURBOS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='If you set your duration in ticks, you cannot close the contract early.' />\n            ),\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default TurbosTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst TouchTradeDescription = () => {\n    const { PAYOUT, EXPIRY } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Touch/No Touch lets you predict if the market price will reach a set barrier at any time during the contract period.' />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Touch' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the market touches the barrier at any time before <1>expiry</1>.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='touch-no-touch-payout'\n                            contract_type={CONTRACT_LIST.TOUCH_NO_TOUCH}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={1}\n                            id='touch-no-touch-expiry'\n                            contract_type={CONTRACT_LIST.TOUCH_NO_TOUCH}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'touch',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='No Touch' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='Earn a payout if the market never touches the barrier before expiry.' />,\n        },\n        {\n            type: 'video',\n            text: 'no_touch',\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default TouchTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst TickHighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"High Tick\", you win the payout if the selected tick is the highest among the next five ticks.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Low Tick\", you win the payout if the selected tick is the lowest among the next five ticks.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default TickHighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { getContractDescription, getTerm } from 'AppV2/Utils/contract-description-utils';\nimport DefinitionPopover from '../definition-popover';\n\nconst VanillaTradeDescription = () => {\n    const { STRIKE_PRICE, EXPIRY, EXIT_SPOT, PAYOUT, PAYOUT_PER_POINT, CONTRACT_VALUE } = getTerm();\n\n    const content = [\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text={`Vanillas allow you to predict if the underlying asset’s price will be above or below the <0>strike price</0> at contract <1>expiry</1> (<2>exit spot</2>).`}\n                    components={[\n                        <DefinitionPopover\n                            term={STRIKE_PRICE}\n                            key={0}\n                            id='vanillas-strike-price'\n                            contract_type={CONTRACT_LIST.VANILLAS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXPIRY}\n                            key={1}\n                            id='vanillas-exit-spot'\n                            contract_type={CONTRACT_LIST.VANILLAS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                        <DefinitionPopover\n                            term={EXIT_SPOT}\n                            key={2}\n                            id='vanillas-expiry'\n                            contract_type={CONTRACT_LIST.VANILLAS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Call' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='Earn a <0>payout</0> if the exit spot is above the strike price at expiry.'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT}\n                            key={0}\n                            id='vanillas-call-payout'\n                            contract_type={CONTRACT_LIST.VANILLAS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'video',\n            text: 'vanillas_call',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Put' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='Earn a payout if the exit spot is below the strike price at expiry.' />,\n        },\n        {\n            type: 'video',\n            text: 'vanillas_put',\n        },\n        {\n            type: 'heading',\n            text: <Localize i18n_default_text='Additional Information' className='contract-type-info__heading' />,\n        },\n        {\n            type: 'badge',\n            text: (\n                <Localize\n                    i18n_default_text='Payout = <0>Payout per point</0> × Difference between exit spot and strike price'\n                    components={[\n                        <DefinitionPopover\n                            term={PAYOUT_PER_POINT}\n                            key={0}\n                            id='vanillas-payout-per-point'\n                            contract_type={CONTRACT_LIST.VANILLAS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='You make a profit only if the payout is greater than your stake.' />,\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text={`You may sell your contract up to 60 seconds before expiry. If you do, we'll pay you the <0>contract value</0>.`}\n                    components={[\n                        <DefinitionPopover\n                            term={CONTRACT_VALUE}\n                            key={0}\n                            id='vanillas-contract-value'\n                            contract_type={CONTRACT_LIST.VANILLAS}\n                        >\n                            <span className='contract-type-info__content-definition' />\n                        </DefinitionPopover>,\n                    ]}\n                />\n            ),\n        },\n    ];\n\n    return <React.Fragment>{getContractDescription(content, true)}</React.Fragment>;\n};\n\nexport default VanillaTradeDescription;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport AccumulatorTradeDescription from './Description/accumulator-trade-description';\nimport AsianTradeDescription from './Description/asian-trade-description';\nimport CallPutSpreadTradeDescription from './Description/call-put-spread-trade-description';\nimport EndTradeDescription from './Description/end-trade-description';\nimport EvenOddTradeDescription from './Description/even-odd-trade-description';\nimport HighLowTradeDescription from './Description/high-low-trade-description';\nimport LbHighLowTradeDescription from './Description/lb-high-low-trade-description';\nimport LbPutTradeDescription from './Description/lb-put-trade-description';\nimport LbCallTradeDescription from './Description/lb-call-trade-description';\nimport MatchDiffTradeDescription from './Description/match-diff-trade-description';\nimport MultiplierTradeDescription from './Description/multiplier-trade-description';\nimport OverUnderTradeDescription from './Description/over-under-trade-description';\nimport RiseFallTradeDescription from './Description/rise-fall-trade-description';\nimport RunHighLowTradeDescription from './Description/run-high-low-trade-description';\nimport ResetTradeDescription from './Description/reset-trade-description';\nimport StayTradeDescription from './Description/stay-trade-description';\nimport TurbosTradeDescription from './Description/turbos-trade-description';\nimport TouchTradeDescription from './Description/touch-trade-description';\nimport TickHighLowTradeDescription from './Description/tick-high-low-trade-description';\nimport VanillaTradeDescription from './Description/vanilla-trade-description';\n\nconst TradeCategories = ({\n    category,\n    onClick,\n    is_vanilla_fx = false,\n    is_multiplier_fx = false,\n}: {\n    category?: string;\n    onClick: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n    is_vanilla_fx?: boolean;\n    is_multiplier_fx?: boolean;\n}) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case TRADE_TYPES.ACCUMULATOR:\n                TradeTypeTemplate = <AccumulatorTradeDescription />;\n                break;\n            case TRADE_TYPES.RISE_FALL:\n            case TRADE_TYPES.RISE_FALL_EQUAL:\n                TradeTypeTemplate = <RiseFallTradeDescription />;\n                break;\n            case TRADE_TYPES.HIGH_LOW:\n                TradeTypeTemplate = <HighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.END:\n                TradeTypeTemplate = <EndTradeDescription />;\n                break;\n            case TRADE_TYPES.STAY:\n                TradeTypeTemplate = <StayTradeDescription />;\n                break;\n            case TRADE_TYPES.MATCH_DIFF:\n                TradeTypeTemplate = <MatchDiffTradeDescription />;\n                break;\n            case TRADE_TYPES.EVEN_ODD:\n                TradeTypeTemplate = <EvenOddTradeDescription />;\n                break;\n            case TRADE_TYPES.OVER_UNDER:\n                TradeTypeTemplate = <OverUnderTradeDescription />;\n                break;\n            case TRADE_TYPES.TOUCH:\n                TradeTypeTemplate = <TouchTradeDescription />;\n                break;\n            case TRADE_TYPES.ASIAN:\n                TradeTypeTemplate = <AsianTradeDescription />;\n                break;\n            case TRADE_TYPES.RUN_HIGH_LOW:\n                TradeTypeTemplate = <RunHighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.RESET:\n                TradeTypeTemplate = <ResetTradeDescription />;\n                break;\n            case TRADE_TYPES.CALL_PUT_SPREAD:\n                TradeTypeTemplate = <CallPutSpreadTradeDescription />;\n                break;\n            case TRADE_TYPES.TICK_HIGH_LOW:\n                TradeTypeTemplate = <TickHighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.LB_HIGH_LOW:\n                TradeTypeTemplate = <LbHighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.LB_PUT:\n                TradeTypeTemplate = <LbPutTradeDescription />;\n                break;\n            case TRADE_TYPES.LB_CALL:\n                TradeTypeTemplate = <LbCallTradeDescription />;\n                break;\n            case TRADE_TYPES.MULTIPLIER:\n                TradeTypeTemplate = <MultiplierTradeDescription />;\n                break;\n            case TRADE_TYPES.TURBOS.LONG:\n            case TRADE_TYPES.TURBOS.SHORT:\n                TradeTypeTemplate = <TurbosTradeDescription />;\n                break;\n            case TRADE_TYPES.VANILLA.CALL:\n            case TRADE_TYPES.VANILLA.PUT:\n                TradeTypeTemplate = <VanillaTradeDescription />;\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <Text as='p'>\n                        <Localize i18n_default_text='Description not found.' />\n                    </Text>\n                );\n                break;\n        }\n    }\n    return <>{TradeTypeTemplate}</>;\n};\n\nexport default TradeCategories;\n","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 90.67v8.43h-33.74v-8.43h33.74zm33.74-25.3v8.43h-67.48v-8.44h67.48zm0-25.3v8.43h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M183.8 73.8l19.33 19.36V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75l-25.3-25.3h11.92zm-25.31-25.3l12.65 12.65h-11.92L146.57 48.5h11.92z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-25.3v8.43H60.09V73.8h67.48zM93.83 48.5v8.43H60.09V48.5h33.74z\" /><path fill=\"#FF444F\" d=\"M87.14 86.45L74.5 99.1H62.56l12.65-12.65h11.93zm32-46.39a8.43 8.43 0 018.43 8.44v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L99.8 73.8H87.9l25.3-25.3h-6.75a8.4 8.4 0 01-8.4-8.4v-.04h21.1z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-59.04v54.82h-8.44V40.06h8.44z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-67.48V99.1h67.48zm-33.74-25.3v8.43h-33.74V73.8h33.74zm33.74 0v8.43h-13.02L207 73.8h4.58z\" /><path fill=\"#FF444F\" d=\"M203.13 55.18L189.25 41.3l-.03.03a8.4 8.4 0 000 11.86l3.73 3.74H169.4v8.43h23.55l-3.73 3.74a8.4 8.4 0 000 11.87l.03.03 13.88-13.89a8.43 8.43 0 000-11.93z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H60.09v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M125.1 67.84l-13.9-13.9-.02.04a8.38 8.38 0 000 11.87l3.73 3.73H85.4v8.44h29.52l-3.73 3.73a8.38 8.38 0 000 11.87l.03.03 13.89-13.89a8.43 8.43 0 000-11.92z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M165.52 52.71v54.83h-8.44V52.7h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M123.35 63.59l16.87 16.9v-6.7a8.43 8.43 0 018.39-8.43l.04 21.09a8.43 8.43 0 01-8.43 8.43h-21.09a8.46 8.46 0 018.44-8.43h6.68l-10.9-10.9V63.58zM102.26 52.7l14.44 4.22 4.21 4.22h-18.65V52.7z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-46.39v42.17h-8.44V52.71h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 40.06v67.47h-8.44V40.06h8.44zM160.96 99.1v8.44h-16.87V99.1h16.87zm0-59.04v8.44h-16.87v-8.44h16.87zm50.6 0v8.44h-25.3v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M182.05 72.07l21.08 21.09V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75L182.05 84V72.06zm-15.13-15.14l2.48 2.47v11.93l-5.97-5.97H144.1v-8.43h22.83z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44H60.1V99.1h16.87zm50.6 0v8.44h-25.3V99.1h25.3zM93.84 40.06v67.48h-8.44V40.06h8.44zm-16.87 0v8.44H60.1v-8.44h16.87z\" /><path fill=\"#FF444F\" d=\"M85.4 76.27V88.2l-2.48 2.47H60.1v-8.44h19.34l5.96-5.96zm33.73-36.2a8.43 8.43 0 018.44 8.43v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L98.05 75.54V63.62l15.14-15.12h-6.75a8.4 8.4 0 01-8.4-8.4v-.04z\" /><path fill=\"#85ACB0\" d=\"M89.61 82.23v1.75l1.75-1.75z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 40.06v67.47h-8.44V40.06h8.44zm-16.87 0V73.8h-8.44V40.06h8.44zm-44.64 16.87l2.47 2.47 5.96 5.96h-14.4v-8.43h5.97zm27.77-16.87v16.87h-8.44V40.06h8.44zm-16.87 0v8.44h-8.43v-8.44h8.43z\" /><path fill=\"#FF444F\" d=\"M194.66 78.02a8.4 8.4 0 00-8.4 8.39v6.75l-25.3-25.3v11.9L180.3 99.1h-6.73a8.4 8.4 0 00-8.4 8.4v.03h21.1a8.43 8.43 0 008.43-8.43V78.02h-.04z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44h-8.43V99.1h8.43zm50.6-59.04v67.47h-8.43V40.06h8.44zM110.7 73.8v33.74h-8.44V73.8h8.44zM93.83 90.67v16.86h-8.44V90.67h8.44zm-19.34-8.44l-5.96 5.96-2.47 2.48h-5.97v-8.44h14.4z\" /><path fill=\"#FF444F\" d=\"M102.26 40.06H81.18v.04a8.4 8.4 0 008.39 8.4h6.75L76.96 67.84v11.92l25.3-25.3v6.75a8.4 8.4 0 008.4 8.37h.04V48.5a8.43 8.43 0 00-8.44-8.44z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 90.21h32.77c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H40.6c-3.21 0-5.82-2.41-5.82-5.4 0-2.98 2.6-5.4 5.83-5.4h64.08c3.22 0 5.83-2.42 5.83-5.4s-2.6-5.4-5.83-5.4H55.16v-.05c-2.91-.34-5.1-2.64-5.1-5.36s2.19-5.02 5.1-5.36v-.04h20.4c3.21 0 5.82-2.42 5.82-5.4 0-2.99-2.6-5.41-5.83-5.41H48.61c-3.22 0-5.83-2.42-5.83-5.4 0-2.99 2.6-5.4 5.83-5.4h138.37c3.22 0 5.83 2.41 5.83 5.4 0 2.98-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.42-5.82 5.4s2.61 5.4 5.83 5.4h32.04c3.22 0 5.83 2.43 5.83 5.41s-2.61 5.4-5.83 5.4h-17.48c-3.21 0-5.82 2.42-5.82 5.4 0 2.99 2.6 5.41 5.82 5.41h9.47zm-126-43.23c3.23 0 5.84 2.42 5.84 5.4 0 3-2.61 5.41-5.83 5.41s-5.83-2.42-5.83-5.4c0-2.99 2.61-5.4 5.83-5.4zm136.92-21.6h40.79c3.21 0 5.82 2.41 5.82 5.4s-2.6 5.4-5.82 5.4h-40.79c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zm-24.76 0c3.22 0 5.83 2.41 5.83 5.4s-2.61 5.4-5.83 5.4-5.82-2.42-5.82-5.4c0-2.99 2.6-5.4 5.82-5.4zm70.64 21.6h10.2c3.22 0 5.83 2.42 5.83 5.4 0 3-2.61 5.41-5.83 5.41h-10.2c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zM188.43 68.6h21.85c3.22 0 5.83 2.42 5.83 5.4 0 2.98-2.6 5.4-5.83 5.4h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.98 2.6-5.4 5.83-5.4zm20.4 21.61h32.04c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4h-32.04c-3.22 0-5.83-2.41-5.83-5.4 0-2.98 2.61-5.4 5.83-5.4zm-139.1 21.61h65.54c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H69.73c-3.22 0-5.83-2.41-5.83-5.4s2.6-5.4 5.83-5.4zm87.39 0h10.2c3.21 0 5.82 2.42 5.82 5.4 0 2.99-2.6 5.4-5.82 5.4h-10.2c-3.22 0-5.83-2.41-5.83-5.4s2.61-5.4 5.83-5.4z\" /><path fill=\"#85ACB0\" d=\"M165.52 99.37v8.46h-21.09v-8.46h21.09zm29-46.3l14.92 14.95a8.33 8.33 0 011.3 1.75 8.24 8.24 0 010 8.46h-22.39l-8.44-8.46h19.34L194.5 65a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l.03-.03zm17.39-12.9v8.46h-67.48v-8.46h67.48z\" /><path fill=\"#FF444F\" d=\"M195.04 86.69v6.7l-15.12-15.16-8.44-8.46h-27.05v8.46H168l21.09 21.14h-6.73a8.4 8.4 0 00-8.4 8.42v.04h21.09a8.45 8.45 0 008.43-8.46V86.7h-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.37v8.46H60.09v-8.46h67.48zm-1.17-29.6a8.24 8.24 0 010 8.46 8.32 8.32 0 01-1.3 1.75l-14.91 14.95-.03-.03a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l4.75-4.77H95.57l8.44-8.46zm-45.22-29.6v8.46H60.09v-8.46h21.09z\" /><path fill=\"#FF444F\" d=\"M110.7 40.17H89.6v.04a8.4 8.4 0 008.4 8.42h6.74L83.67 69.77H60.09v8.46h27.05l8.44-8.46 15.12-15.16v6.7h8.43V48.63a8.45 8.45 0 00-8.43-8.46z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-25.3l-8.44-8.44h33.74zm-33.74 0l-8.44 8.44h-25.3V99.1h33.74zm33.74-59.04v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M203.13 56.93h-21.08v.04a8.4 8.4 0 008.39 8.4h6.75L177.83 84.7l-19.34-19.34a8.43 8.43 0 00-11.93 0l-2.47 2.48v11.92l8.44-8.43 19.34 19.34a8.43 8.43 0 0011.92 0l19.34-19.34v6.74a8.4 8.4 0 008.4 8.38h.04V65.36a8.43 8.43 0 00-8.44-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H93.83l8.43-8.44h25.3zm-42.17 0l8.43 8.44H60.09v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M127.52 61.15a8.4 8.4 0 00-8.39 8.39v6.75L99.8 56.93a8.43 8.43 0 00-11.92 0L68.53 76.27l-8.44-8.43v11.92l2.47 2.47a8.43 8.43 0 0011.93 0L93.83 62.9l19.34 19.34h-6.75a8.4 8.4 0 00-8.37 8.4v.04h21.08a8.43 8.43 0 008.44-8.44V61.15h-.05z\" /></g></svg>;","import React from 'react';\nimport { VideoPlayer } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { getDescriptionVideoId } from 'Modules/Trading/Helpers/video-config';\nimport VideoPreview from 'AppV2/Components/Guide/Description/video-preview';\nimport './contract-type-description-video.scss';\n\ntype TContractTypeDescriptionVideo = {\n    data_testid?: string;\n    selected_contract_type?: string;\n};\n\nconst ContractTypeDescriptionVideo = ({ data_testid, selected_contract_type }: TContractTypeDescriptionVideo) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on: is_dark_theme, is_mobile } = ui;\n    const [is_video_player_opened, setIsVideoPlayerOpened] = React.useState(false);\n\n    if (!selected_contract_type) {\n        return null;\n    }\n\n    const video_src = getDescriptionVideoId(selected_contract_type, is_dark_theme);\n\n    const toggleVideoPlayer = () => {\n        setIsVideoPlayerOpened(!is_video_player_opened);\n    };\n\n    return (\n        <div className='contract-type-info__video'>\n            {is_video_player_opened ? (\n                <VideoPlayer\n                    src={video_src}\n                    is_mobile={is_mobile}\n                    data_testid={data_testid}\n                    should_show_controls={true}\n                    muted={true}\n                    hide_volume_control={true}\n                />\n            ) : (\n                <VideoPreview\n                    only_show_thumbnail\n                    contract_type={selected_contract_type}\n                    toggleVideoPlayer={toggleVideoPlayer}\n                    video_src={video_src}\n                    custom_width='518px'\n                    custom_height='270px'\n                />\n            )}\n        </div>\n    );\n};\n\nexport default React.memo(ContractTypeDescriptionVideo);\n","import React from 'react';\nimport ImageAsianUpDown from 'Assets/SvgComponents/trade_explanations/img-asian.svg';\nimport ImageCloseToLow from 'Assets/SvgComponents/trade_explanations/img-close-to-low.svg';\nimport ImageEndsInOut from 'Assets/SvgComponents/trade_explanations/img-ends-in-out.svg';\nimport ImageHighToClose from 'Assets/SvgComponents/trade_explanations/img-high-to-close.svg';\nimport ImageHighToLow from 'Assets/SvgComponents/trade_explanations/img-high-to-low.svg';\nimport ImageReset from 'Assets/SvgComponents/trade_explanations/img-reset.svg';\nimport ImageRunHighLow from 'Assets/SvgComponents/trade_explanations/img-run-high-low.svg';\nimport ImageSpread from 'Assets/SvgComponents/trade_explanations/img-spread.svg';\nimport ImageTickHighLow from 'Assets/SvgComponents/trade_explanations/img-tick-high-low.svg';\nimport ImageTurbos from 'Assets/SvgComponents/trade_explanations/img-turbos.svg';\nimport ContractTypeDescriptionVideo from './contract-type-description-video';\nimport { TRADE_TYPES } from '@deriv/shared';\n\nconst TradeCategoriesGIF = ({\n    category,\n    selected_contract_type,\n}: {\n    category?: string;\n    selected_contract_type?: string;\n}) => {\n    if (category !== selected_contract_type) return null;\n    switch (category) {\n        case TRADE_TYPES.ASIAN:\n            return <ImageAsianUpDown />;\n        case TRADE_TYPES.CALL_PUT_SPREAD:\n            return <ImageSpread />;\n        case TRADE_TYPES.END:\n            return <ImageEndsInOut />;\n        case TRADE_TYPES.EVEN_ODD:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.HIGH_LOW:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.LB_CALL:\n            return <ImageCloseToLow />;\n        case TRADE_TYPES.LB_PUT:\n            return <ImageHighToClose />;\n        case TRADE_TYPES.LB_HIGH_LOW:\n            return <ImageHighToLow />;\n        case TRADE_TYPES.RISE_FALL:\n        case TRADE_TYPES.RISE_FALL_EQUAL:\n            return <ContractTypeDescriptionVideo selected_contract_type='rise_fall' />;\n        case TRADE_TYPES.MATCH_DIFF:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.MULTIPLIER:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.OVER_UNDER:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.RESET:\n            return <ImageReset />;\n        case TRADE_TYPES.RUN_HIGH_LOW:\n            return <ImageRunHighLow />;\n        case TRADE_TYPES.ACCUMULATOR:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.TICK_HIGH_LOW:\n            return <ImageTickHighLow />;\n        case TRADE_TYPES.TOUCH:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.TURBOS.LONG:\n        case TRADE_TYPES.TURBOS.SHORT:\n            return <ContractTypeDescriptionVideo selected_contract_type='turbos' />;\n        case TRADE_TYPES.VANILLA.CALL:\n        case TRADE_TYPES.VANILLA.PUT:\n            return <ContractTypeDescriptionVideo selected_contract_type='vanilla' />;\n        default:\n            return null;\n    }\n};\n\nexport default TradeCategoriesGIF;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { sizes } from '../../types';\nexport const StandaloneChevronLeftRegularIcon = ({ iconSize = 'md', title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 32 32', ...sizes[iconSize], role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"path\", { d: 'M10.531 16.969a.66.66 0 0 1 0-.899l7.5-7.5a.66.66 0 0 1 .899 0 .66.66 0 0 1 0 .899L11.86 16.5l7.07 7.07a.66.66 0 0 1 0 .899.66.66 0 0 1-.899 0z' })));\nconst ForwardRef = forwardRef(StandaloneChevronLeftRegularIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { sizes } from '../../types';\nexport const StandaloneChevronRightRegularIcon = ({ iconSize = 'md', title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 32 32', ...sizes[iconSize], role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"path\", { d: 'M21.43 16.07a.66.66 0 0 1 0 .899l-7.5 7.5a.66.66 0 0 1-.899 0 .66.66 0 0 1 0-.899l7.07-7.07-7.07-7.031a.66.66 0 0 1 0-.899.66.66 0 0 1 .899 0z' })));\nconst ForwardRef = forwardRef(StandaloneChevronRightRegularIcon);\nexport default ForwardRef;\n","import React from 'react';\nimport { Button, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { clickAndKeyEventHandler, TRADE_TYPES } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport TradeCategories from 'Assets/Trading/Categories/trade-categories';\nimport TradeCategoriesGIF from 'Assets/Trading/Categories/trade-categories-gif';\nimport { getContractTypes } from '../../../../Helpers/contract-type';\nimport classNames from 'classnames';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TContractType, TList } from '../types';\nimport { Chip, Text } from '@deriv-com/quill-ui';\nimport { StandaloneChevronLeftRegularIcon, StandaloneChevronRightRegularIcon } from '@deriv/quill-icons';\nimport { useMenuNavigation } from './use-menu-navigation';\n\ntype TInfo = {\n    handleSelect: (\n        type: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    item: TContractType;\n    list: TList[];\n    info_banner?: React.ReactNode;\n    selected_value: string;\n};\n\nconst TABS = {\n    DESCRIPTION: 'description' as const,\n    GLOSSARY: 'glossary' as const,\n};\n\ntype TSelectedTab = 'description' | 'glossary';\n\nconst Info = observer(({ handleSelect, item, selected_value, list, info_banner }: TInfo) => {\n    const { cached_multiplier_cancellation_list } = useTraderStore();\n\n    const {\n        ui: { is_mobile, is_dark_mode_on: is_dark_theme },\n\n        modules: {\n            trade: { is_vanilla_fx },\n        },\n    } = useStore();\n    const { RISE_FALL, RISE_FALL_EQUAL, TURBOS, VANILLA } = TRADE_TYPES;\n    const CONTRACT_TYPE_SUBSTITUTE = {\n        [RISE_FALL_EQUAL]: RISE_FALL,\n        [TURBOS.SHORT]: TURBOS.LONG,\n        [VANILLA.PUT]: VANILLA.CALL,\n    };\n    const [selected_tab, setSelectedTab] = React.useState<TSelectedTab>(TABS.DESCRIPTION);\n    const [selected_contract_type, setSelectedContractType] = React.useState(\n        CONTRACT_TYPE_SUBSTITUTE[selected_value] ?? selected_value\n    );\n\n    const { menuRef, showLeftNav, showRightNav, updateNavVisibility, scrollChips, scrollToSelected } =\n        useMenuNavigation({\n            selected_value,\n        });\n    const contract_types: TContractType[] | undefined = getContractTypes(list, item)?.filter(\n        (i: { value: TContractType['value'] }) =>\n            i.value !== RISE_FALL_EQUAL && i.value !== TURBOS.SHORT && i.value !== VANILLA.PUT\n    );\n    const should_show_video =\n        /accumulator|vanilla|multiplier|high_low|turbos|match_diff|even_odd|over_under|rise_fall|touch/i.test(\n            selected_contract_type\n        );\n    const width = is_mobile ? '328' : '528';\n    const scroll_bar_height = '560px';\n    const button_name = contract_types?.find(item => item.value === selected_contract_type)?.text;\n\n    const onClickGlossary = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        clickAndKeyEventHandler(() => setSelectedTab(TABS.GLOSSARY), e);\n    };\n    const is_unavailable = !!list[0].contract_categories?.find(\n        item => item.is_unavailable && item.contract_types.find(type => type.value === selected_contract_type)\n    );\n\n    const should_show_dropdown = Number(contract_types?.length) > 1;\n\n    // Auto-scroll to the selected contract type\n    React.useEffect(() => {\n        scrollToSelected(selected_contract_type);\n    }, [selected_contract_type, scrollToSelected]);\n\n    const cards = contract_types?.map((type: TContractType) => {\n        if (type.value !== selected_contract_type) return null;\n        return (\n            <div key={type.value} className='contract-type-info__card'>\n                <ThemedScrollbars\n                    className={classNames('contract-type-info__scrollbars', {\n                        'contract-type-info__scrollbars--active': true,\n                    })}\n                    style={{\n                        left: `${'-'}${width}px`,\n                        transform: `translate3d(${width}px, 0, 0)`,\n                    }}\n                    height={is_mobile ? '' : scroll_bar_height}\n                    autohide={false}\n                >\n                    <div\n                        className={classNames('contract-type-info__content', {\n                            'contract-type-info__gif--has-video': should_show_video,\n                        })}\n                    >\n                        <React.Fragment>\n                            <TradeCategories\n                                category={type.value}\n                                onClick={onClickGlossary}\n                                is_vanilla_fx={is_vanilla_fx}\n                                is_multiplier_fx={!cached_multiplier_cancellation_list?.length}\n                            />\n                            <div className='contract-type-info__video-wrapper-border'>\n                                <TradeCategoriesGIF\n                                    category={type.value}\n                                    selected_contract_type={selected_contract_type}\n                                />\n                            </div>\n                        </React.Fragment>\n                    </div>\n                </ThemedScrollbars>\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {should_show_dropdown && (\n                <div className='guide__menu-container'>\n                    {showLeftNav && (\n                        <div className='guide__menu-nav guide__menu-nav--prev' onClick={() => scrollChips('left')}>\n                            <StandaloneChevronLeftRegularIcon\n                                fill={is_dark_theme ? '#FFFFFF' : '#000000'}\n                                iconSize='md'\n                            />\n                        </div>\n                    )}\n                    <div className='guide__menu' ref={menuRef} onScroll={updateNavVisibility}>\n                        {contract_types?.map(({ text, value }) => (\n                            <Chip.Selectable\n                                key={value}\n                                data-value={value}\n                                onChipSelect={() => {\n                                    setSelectedContractType(value);\n                                    Analytics.trackEvent('ce_trade_types_form', {\n                                        action: 'info_switcher',\n                                        trade_type_name: contract_types?.find(item => item.value === value)?.text,\n                                    });\n                                }}\n                                selected={selected_contract_type === value}\n                            >\n                                <Text size='sm'>{text}</Text>\n                            </Chip.Selectable>\n                        ))}\n                    </div>\n                    {showRightNav && (\n                        <div className='guide__menu-nav guide__menu-nav--next' onClick={() => scrollChips('right')}>\n                            <StandaloneChevronRightRegularIcon\n                                fill={is_dark_theme ? '#FFFFFF' : '#000000'}\n                                iconSize='md'\n                            />\n                        </div>\n                    )}\n                </div>\n            )}\n            {is_unavailable && <div className='contract-type-info__banner-wrapper'>{info_banner}</div>}\n\n            <div\n                className={classNames('contract-type-info', {\n                    'contract-type-info--has-only-toggle-buttons': !is_unavailable && !should_show_dropdown,\n                    'contract-type-info--has-only-dropdown': !is_unavailable && should_show_dropdown,\n\n                    'contract-type-info--has-dropdown-and-info': is_unavailable && should_show_dropdown,\n                })}\n                style={{\n                    width: is_mobile ? '328px' : '528px',\n                }}\n            >\n                {cards}\n            </div>\n            <div className='contract-type-info__trade-type-btn-wrapper'>\n                <Button\n                    id={`dt_contract_info_${selected_contract_type}_btn`}\n                    className='contract-type-info__button'\n                    onClick={e =>\n                        handleSelect(\n                            {\n                                value:\n                                    selected_contract_type === CONTRACT_TYPE_SUBSTITUTE[selected_value]\n                                        ? selected_value\n                                        : selected_contract_type,\n                            },\n                            e\n                        )\n                    }\n                    text={localize('Choose {{contract_type}}', {\n                        contract_type: button_name ?? '',\n                        interpolation: { escapeValue: false },\n                    })}\n                    black\n                    is_disabled={is_unavailable}\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default Info;\n","import React from 'react';\n\ntype TUseMenuNavigationProps = {\n    selected_value?: string;\n};\n\nexport const useMenuNavigation = ({ selected_value }: TUseMenuNavigationProps) => {\n    const menuRef = React.useRef<HTMLDivElement>(null);\n    const [showLeftNav, setShowLeftNav] = React.useState(false);\n    const [showRightNav, setShowRightNav] = React.useState(false);\n\n    const updateNavVisibility = React.useCallback(() => {\n        if (menuRef.current) {\n            // Show left nav only if we're not at the beginning\n            setShowLeftNav(menuRef.current.scrollLeft > 0);\n\n            // Show right nav only if we're not at the end\n            const isAtEnd = menuRef.current.scrollLeft + menuRef.current.clientWidth >= menuRef.current.scrollWidth - 1;\n            setShowRightNav(!isAtEnd);\n        }\n    }, []);\n\n    const scrollChips = React.useCallback((direction: 'left' | 'right') => {\n        if (menuRef.current) {\n            const scrollAmount = 200; // Adjust scroll amount as needed\n            const currentScroll = menuRef.current.scrollLeft;\n            const maxScroll = menuRef.current.scrollWidth - menuRef.current.clientWidth;\n\n            // If scrolling right and we're close to the end, scroll all the way to the end\n            if (direction === 'right' && currentScroll + scrollAmount >= maxScroll - 100) {\n                menuRef.current.scrollTo({\n                    left: maxScroll,\n                    behavior: 'smooth',\n                });\n            }\n            // If scrolling left and we're close to the beginning, scroll all the way to the beginning\n            else if (direction === 'left' && currentScroll - scrollAmount <= 50) {\n                menuRef.current.scrollTo({\n                    left: 0,\n                    behavior: 'smooth',\n                });\n            } else {\n                menuRef.current.scrollTo({\n                    left: direction === 'left' ? currentScroll - scrollAmount : currentScroll + scrollAmount,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }, []);\n\n    // Initialize nav visibility and update on resize\n    React.useEffect(() => {\n        updateNavVisibility();\n\n        const handleResize = () => {\n            updateNavVisibility();\n        };\n\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [updateNavVisibility]);\n\n    // Scroll to selected value when it changes\n    const scrollToSelected = React.useCallback(\n        (selected_contract_type: string) => {\n            if (menuRef.current) {\n                const selectedChip = menuRef.current.querySelector(`[data-value=\"${selected_contract_type}\"]`);\n                if (selectedChip) {\n                    const containerRect = menuRef.current.getBoundingClientRect();\n                    const chipRect = selectedChip.getBoundingClientRect();\n\n                    const allChips = menuRef.current.querySelectorAll('[data-value]');\n                    const isLastChip = allChips[allChips.length - 1] === selectedChip;\n\n                    if (isLastChip) {\n                        // Calculate the scroll position to center the selected chip\n                        const scrollLeft =\n                            chipRect.left - containerRect.left - containerRect.width / 2 + chipRect.width / 2;\n\n                        menuRef.current.scrollTo({\n                            left: scrollLeft + menuRef.current.scrollLeft,\n                            behavior: 'smooth',\n                        });\n\n                        // Update navigation visibility after scrolling\n                        setTimeout(updateNavVisibility, 300);\n\n                        // Then, after a short delay, click the next icon\n                        setTimeout(() => {\n                            // Find the right navigation button in the DOM\n                            const rightNavButton = document.querySelector('.guide__menu-nav--next');\n                            if (rightNavButton) {\n                                // Simulate a click on the right navigation button\n                                (rightNavButton as HTMLElement).click();\n                            }\n\n                            // Update navigation visibility after all operations\n                            updateNavVisibility();\n                        }, 600); // S\n                    } else {\n                        // Calculate the scroll position to center the selected chip\n                        const scrollLeft =\n                            chipRect.left - containerRect.left - containerRect.width / 2 + chipRect.width / 2;\n\n                        menuRef.current.scrollTo({\n                            left: scrollLeft + menuRef.current.scrollLeft,\n                            behavior: 'smooth',\n                        });\n\n                        // Update navigation visibility after scrolling\n                        setTimeout(updateNavVisibility, 300);\n                    }\n                }\n            }\n        },\n        [updateNavVisibility]\n    );\n\n    return {\n        menuRef,\n        showLeftNav,\n        showRightNav,\n        updateNavVisibility,\n        scrollChips,\n        scrollToSelected,\n    };\n};\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\n\ntype THeader = {\n    onClickBack?: () => void;\n    onClose?: () => void;\n    should_render_arrow?: boolean;\n    should_render_close?: boolean;\n    text_size?: string;\n    title: string;\n};\n\nconst Header = ({\n    onClickBack,\n    onClose,\n    should_render_arrow = true,\n    should_render_close = false,\n    text_size = 's',\n    title,\n}: THeader) => (\n    <div className='contract-type-info__action-bar'>\n        {should_render_arrow && (\n            <span\n                className='contract-type-info__icon'\n                onClick={e => clickAndKeyEventHandler(onClickBack, e)}\n                onKeyDown={e => clickAndKeyEventHandler(onClickBack, e)}\n            >\n                <Icon icon='IcArrowLeftBold' />\n            </span>\n        )}\n        <Text size={text_size} weight='bold' color='prominent' className='contract-type-info__title'>\n            {title}\n        </Text>\n        {should_render_close && (\n            <span\n                className='contract-type-info__icon-cross'\n                onClick={e => clickAndKeyEventHandler(onClose, e)}\n                onKeyDown={e => clickAndKeyEventHandler(onClose, e)}\n            >\n                <Icon icon='IcCross' />\n            </span>\n        )}\n    </div>\n);\n\nexport default Header;\n","import Info from './contract-type-info';\n\nexport { default as Header } from './contract-type-info-header';\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Input } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TSearchInput = {\n    onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    onBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement | null> | undefined;\n    onClickClearInput: () => void;\n    value: string;\n};\n\nconst SearchInput = React.forwardRef<HTMLInputElement & HTMLTextAreaElement, TSearchInput>(\n    ({ onChange, onClickClearInput, onBlur, value }, ref) => (\n        <Input\n            ref={ref}\n            data-lpignore='true'\n            leading_icon={<Icon icon='IcSearch' />}\n            trailing_icon={value ? <Icon icon='IcCloseCircle' onClick={onClickClearInput} /> : undefined}\n            placeholder={localize('Search')}\n            type='text'\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n    )\n);\n\nSearchInput.displayName = 'SearchInput';\n\nexport default React.memo(SearchInput);\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst NoResultsMessage = ({ text }: { text: string }) => (\n    <div className='no-results-found'>\n        <h2 className='no-results-found__title'>\n            {localize('No results for \"{{text}}\"', { text, interpolation: { escapeValue: false } })}\n        </h2>\n        <Text as='p' size='xxs' align='center' color='less-prominent' className='no-results-found__subtitle'>\n            {localize('Try checking your spelling or use a different term')}\n        </Text>\n    </div>\n);\n\nexport default NoResultsMessage;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Loading, ThemedScrollbars, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SearchInput from './search-input';\nimport NoResultsMessage from './no-results-message';\nimport { Header } from '../ContractTypeInfo/index';\nimport { getContractCategoryKey } from '../../../../Helpers/contract-type';\nimport { TList } from '../types';\nimport ContractType from '../contract-type';\n\ntype TDialog = {\n    categories: TList[];\n    info_banner?: React.ReactNode;\n    item: React.ComponentProps<typeof ContractType.Info>['item'];\n    selected?: string;\n    children?: React.ReactNode;\n    is_info_dialog_open?: boolean;\n    is_open?: boolean;\n    onBackButtonClick?: () => void;\n    onCategoryClick?: (e: React.ComponentProps<typeof VerticalTab.Headers>['selected']) => void;\n    onChangeInput?: (e: string) => void;\n    onSearchBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    onClose?: () => void;\n    show_loading?: boolean;\n    learn_more_banner?: React.ReactNode;\n    hide_back_button?: boolean;\n    title?: string;\n};\n\nconst Dialog = ({\n    categories,\n    children,\n    info_banner,\n    is_info_dialog_open,\n    is_open,\n    item,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    onSearchBlur,\n    onClose,\n    selected,\n    show_loading,\n    learn_more_banner,\n    hide_back_button,\n    title,\n}: React.PropsWithChildren<TDialog>) => {\n    const input_ref = React.useRef<(HTMLInputElement & HTMLTextAreaElement) | null>(null);\n    const [input_value, setInputValue] = React.useState('');\n    const contract_category = getContractCategoryKey(categories, item);\n    const selected_item = selected ? { key: selected } : { key: contract_category };\n    const selected_category_contract = !categories?.find(category => category.key === selected_item.key)\n        ?.contract_categories?.length;\n    const onChange: React.ComponentProps<typeof VerticalTab.Headers>['onChange'] = e => {\n        if (is_info_dialog_open) {\n            onBackButtonClick?.();\n        }\n        if (input_value) {\n            onClickClearInput();\n        }\n        if (onCategoryClick) {\n            onCategoryClick(e);\n        }\n    };\n\n    const onChangeInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n        onChangeInput?.(e.target.value);\n    };\n\n    const onClickClearInput = () => {\n        input_ref?.current?.focus();\n        setInputValue('');\n        onChangeInput?.('');\n    };\n\n    const renderChildren = () => {\n        if (!is_info_dialog_open) {\n            return <ThemedScrollbars height='calc(100vh - 172px)'>{children}</ThemedScrollbars>;\n        }\n        return children;\n    };\n    const action_bar_item = (\n        <SearchInput\n            ref={input_ref}\n            onChange={onChangeInputValue}\n            onClickClearInput={onClickClearInput}\n            onBlur={onSearchBlur}\n            value={input_value}\n        />\n    );\n    return (\n        <CSSTransition\n            in={is_open}\n            timeout={100}\n            classNames={{\n                enter: 'contract-type-dialog--enter',\n                enterDone: 'contract-type-dialog--enterDone',\n                exit: 'contract-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contract-type-dialog' data-testid='dt_contract_wrapper'>\n                <div className='contract-type-dialog__wrapper'>\n                    {show_loading ? (\n                        <Loading is_fullscreen={false} />\n                    ) : (\n                        <React.Fragment>\n                            {!is_info_dialog_open ? (\n                                <VerticalTab.Layout>\n                                    <VerticalTab.Headers\n                                        header_title={localize('Trade types')}\n                                        items={categories}\n                                        selected={selected_item}\n                                        onChange={onChange}\n                                        selectedKey='key'\n                                    />\n                                    <div className='dc-vertical-tab__content'>\n                                        <div className='dc-vertical-tab__action-bar'>{action_bar_item}</div>\n                                        <div className='dc-vertical-tab__content-container'>\n                                            {selected_category_contract && <NoResultsMessage text={input_value} />}\n                                            {info_banner}\n                                            {learn_more_banner}\n                                            {renderChildren()}\n                                        </div>\n                                    </div>\n                                </VerticalTab.Layout>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='dc-vertical-tab__action-bar dc-vertical-tab__action-bar--contract-type-info-header'>\n                                        <Header\n                                            title={title || item.text || ''}\n                                            onClickBack={onBackButtonClick}\n                                            onClose={onClose}\n                                            should_render_arrow={!hide_back_button}\n                                            should_render_close={hide_back_button}\n                                        />\n                                    </div>\n                                    {renderChildren()}\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default Dialog;\n","import Dialog from './contract-type-menu';\n\nexport default Dialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\n\ntype TIconTradeCategory = {\n    category: string;\n    className?: string;\n};\n\nconst IconTradeCategory = ({ category, className }: TIconTradeCategory) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case TRADE_TYPES.RISE_FALL:\n            case TRADE_TYPES.RISE_FALL_EQUAL:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.HIGH_LOW:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallBarrier' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutBarrier' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.END:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpirymiss' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpiryrange' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.STAY:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRange' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeUpordown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.MATCH_DIFF:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitmatch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitdiff' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.EVEN_ODD:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigiteven' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitodd' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.OVER_UNDER:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitover' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitunder' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.TOUCH:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeOnetouch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeNotouch' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.ASIAN:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsianu' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsiand' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.LB_CALL:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbcall' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.LB_PUT:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbput' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.LB_HIGH_LOW:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbhighlow' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.RUN_HIGH_LOW:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunlow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.RESET:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetcall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetput' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.TICK_HIGH_LOW:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTickhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTicklow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.CALL_PUT_SPREAD:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallspread' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutspread' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.MULTIPLIER:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultup' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultdown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.ACCUMULATOR:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeAccu' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.TURBOS.LONG:\n            case TRADE_TYPES.TURBOS.SHORT:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurboslong' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurbosshort' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.VANILLA.CALL:\n            case TRADE_TYPES.VANILLA.PUT:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongPut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcUnknown' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)} data-testid='dt-categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nexport default IconTradeCategory;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { findContractCategory } from '../../../Helpers/contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TDisplay = {\n    is_open: boolean;\n    name: string;\n    list: TContractCategory[];\n    onClick: () => void;\n    value: string;\n};\n\nconst Display = ({ is_open, name, list, onClick, value }: TDisplay) => {\n    const { isMobile } = useDevice();\n    const getDisplayText = () =>\n        findContractCategory(list as unknown as TList[], { value })?.contract_types?.find((item: TContractType) =>\n            item.value.includes(value)\n        )?.text;\n\n    return (\n        <div\n            data-testid='dt_contract_dropdown'\n            className={classNames('contract-type-widget__display', {\n                'contract-type-widget__display--clicked': is_open,\n            })}\n            onClick={onClick}\n        >\n            <IconTradeCategory category={value} className='contract-type-widget__icon-wrapper' />\n            <span data-name={name} data-value={value}>\n                {getDisplayText()}\n            </span>\n            {isMobile ? (\n                <Icon icon='IcChevronRight' size={20} className='contract-type-widget__select-arrow--right' />\n            ) : (\n                <Icon\n                    icon='IcChevronDown'\n                    className={classNames(\n                        'contract-type-widget__select-arrow',\n                        'contract-type-widget__select-arrow--left'\n                    )}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Display;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { TContractType, TFilteredContractType } from './types';\n\ntype TItem = {\n    contract_types: TFilteredContractType[];\n    handleSelect?: (clicked_item: TContractType, e: React.MouseEvent<HTMLDivElement>) => void;\n    value?: string;\n};\n\nconst Item = ({ contract_types, handleSelect, value }: TItem) => (\n    <React.Fragment>\n        {contract_types.map(type => {\n            const tradeType = { ...type, value: Array.isArray(type.value) ? type.value[0] : type.value };\n            return (\n                <div\n                    id={`dt_contract_${tradeType.value}_item`}\n                    data-testid='dt_contract_item'\n                    key={tradeType.value}\n                    className={classNames('contract-type-item', {\n                        'contract-type-item--selected': type.value.includes(value ?? ''),\n                    })}\n                    onClick={e => handleSelect?.(tradeType, e)}\n                >\n                    <IconTradeCategory category={tradeType.value} className='contract-type-item__icon-wrapper' />\n                    <Text size='xs' className='contract-type-item__title'>\n                        {tradeType.text}\n                    </Text>\n                </div>\n            );\n        })}\n    </React.Fragment>\n);\n\nexport default Item;\n","import React from 'react';\nimport Item from './contract-type-item';\nimport { localize } from '@deriv/translations';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport classNames from 'classnames';\nimport { TContractType, TContractCategory, TFilteredContractType } from './types';\n\ntype TListProps = {\n    handleSelect?: (\n        clicked_item: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    list: TContractCategory[];\n    should_show_info_banner?: boolean;\n    value?: string;\n};\n\nconst List = ({ handleSelect, list, should_show_info_banner, value }: TListProps) => (\n    <React.Fragment>\n        {list.map((contract_category, index) => {\n            const tradeTypes = contract_category.contract_types;\n            const contract_types = tradeTypes?.reduce<TFilteredContractType[]>((acc, contract_type) => {\n                let newValue: string | string[] = contract_type.value;\n                const { RISE_FALL, RISE_FALL_EQUAL, TURBOS, VANILLA } = TRADE_TYPES;\n                if (contract_type.value === RISE_FALL && tradeTypes.some(c => c.value === RISE_FALL_EQUAL)) {\n                    newValue = [RISE_FALL, RISE_FALL_EQUAL];\n                }\n                if (contract_type.value === TURBOS.LONG && tradeTypes.some(c => c.value === TURBOS.SHORT)) {\n                    newValue = [TURBOS.LONG, TURBOS.SHORT];\n                }\n                if (contract_type.value === VANILLA.CALL && tradeTypes.some(c => c.value === VANILLA.PUT)) {\n                    newValue = [VANILLA.CALL, VANILLA.PUT];\n                }\n                if ([TURBOS.SHORT, VANILLA.PUT, RISE_FALL_EQUAL].includes(contract_type.value)) {\n                    return acc;\n                }\n                return [...acc, { ...contract_type, value: newValue }];\n            }, []);\n\n            return (\n                <div\n                    key={contract_category.key}\n                    className={classNames('contract-type-list', {\n                        'contract-type-list--unavailable-category': contract_category.is_unavailable,\n                        'contract-type-list--no-top-padding': should_show_info_banner && index === 0,\n                    })}\n                    data-testid='dt_contract_list'\n                >\n                    <div className='contract-type-item__container'>\n                        <Text size='xs' className='contract-type-list__label'>\n                            {contract_category.label}\n                        </Text>\n                    </div>\n                    <div className='contract-type-list__wrapper'>\n                        <Item\n                            contract_types={contract_types}\n                            handleSelect={contract_category.is_unavailable ? undefined : handleSelect}\n                            value={value}\n                        />\n                    </div>\n                </div>\n            );\n        })}\n    </React.Fragment>\n);\n\nexport default List;\n","import React from 'react';\nimport Dialog from './contract-type-dialog';\nimport Display from './contract-type-display';\nimport List from './contract-type-list';\nimport Info from './ContractTypeInfo';\n\nconst ContractType = ({ children }: React.PropsWithChildren<{ children: React.ReactNode }>) => <>{children}</>;\n\nContractType.Dialog = Dialog;\nContractType.Display = Display;\nContractType.List = List;\nContractType.Info = Info;\n\nexport default ContractType;\n","import React from 'react';\nimport { MobileDialog } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Header } from './ContractTypeInfo';\nimport { localize } from '@deriv/translations';\nimport ContractTypeMenu from './ContractTypeMenu';\n\ntype TContractTypeDialog = {\n    is_info_dialog_open: boolean;\n    onClose: () => void;\n    is_open: boolean;\n    learn_more_banner?: React.ReactNode;\n    hide_back_button?: boolean;\n    title?: string;\n};\n\ntype TContractTypeDialogProps = Pick<\n    React.ComponentProps<typeof ContractTypeMenu>,\n    | 'selected'\n    | 'categories'\n    | 'info_banner'\n    | 'onBackButtonClick'\n    | 'onChangeInput'\n    | 'onCategoryClick'\n    | 'onSearchBlur'\n    | 'show_loading'\n    | 'item'\n> &\n    TContractTypeDialog;\n\nconst ContractTypeDialog = ({\n    categories,\n    children,\n    info_banner,\n    is_info_dialog_open,\n    is_open,\n    item,\n    selected,\n    title,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    onClose,\n    onSearchBlur,\n    show_loading,\n    learn_more_banner,\n    hide_back_button,\n}: React.PropsWithChildren<TContractTypeDialogProps>) => {\n    const { isMobile } = useDevice();\n    const current_mobile_title = is_info_dialog_open ? (\n        <Header\n            title={title || item?.text || ''}\n            onClickBack={onBackButtonClick}\n            text_size='xs'\n            should_render_arrow={!hide_back_button}\n        />\n    ) : (\n        localize('Trade types')\n    );\n\n    if (isMobile) {\n        return (\n            <React.Fragment>\n                <span className='contract-type-widget__select-arrow' />\n                <MobileDialog\n                    info_banner={is_info_dialog_open ? '' : info_banner}\n                    portal_element_id='modal_root'\n                    title={current_mobile_title}\n                    header_classname='contract-type-widget__header'\n                    wrapper_classname={is_info_dialog_open ? 'contracts-modal-info' : 'contracts-modal-list'}\n                    visible={is_open}\n                    onClose={onClose}\n                    has_content_scroll={!is_info_dialog_open}\n                    learn_more_banner={is_info_dialog_open ? '' : learn_more_banner}\n                >\n                    {children}\n                </MobileDialog>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <ContractTypeMenu\n            info_banner={info_banner}\n            is_info_dialog_open={is_info_dialog_open}\n            is_open={is_open}\n            item={item}\n            selected={selected}\n            categories={categories}\n            onSearchBlur={onSearchBlur}\n            onClose={onClose}\n            onBackButtonClick={onBackButtonClick}\n            onChangeInput={onChangeInput}\n            onCategoryClick={onCategoryClick}\n            show_loading={show_loading}\n            learn_more_banner={learn_more_banner}\n            hide_back_button={hide_back_button}\n            title={title}\n        >\n            {children}\n        </ContractTypeMenu>\n    );\n};\n\nexport default ContractTypeDialog;\n","import React from 'react';\n\nimport { Icon, InlineMessage, Text } from '@deriv/components';\nimport { CONTRACT_STORAGE_VALUES, TRADE_TYPES } from '@deriv/shared';\n\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\n\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport {\n    findContractCategory,\n    getCategoriesSortedByKey,\n    getContractTypeCategoryIcons,\n    getContractTypes,\n} from '../../../Helpers/contract-type';\n\nimport ContractType from './contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\n\ntype TContractTypeWidget = {\n    name: string;\n    value: TContractType['value'];\n    list: TContractCategory[];\n    onChange: (e: {\n        target: {\n            name: string;\n            value: unknown;\n        };\n    }) => Promise<void>;\n    languageChanged?: boolean;\n    unavailable_trade_types_list?: TContractCategory[];\n};\n\nconst ContractTypeWidget = observer(\n    ({ name, value, list, onChange, languageChanged, unavailable_trade_types_list = [] }: TContractTypeWidget) => {\n        const {\n            active_symbols: { active_symbols },\n            ui: { is_mobile },\n        } = useStore();\n        const { symbol, contract_type } = useTraderStore();\n        const wrapper_ref = React.useRef<HTMLDivElement | null>(null);\n        const [is_dialog_open, setDialogVisibility] = React.useState<boolean | null>();\n        const [is_info_dialog_open, setInfoDialogVisibility] = React.useState(false);\n        const [hide_back_button, setHideBackButton] = React.useState(false);\n        const [selected_category, setSelectedCategory] = React.useState<TList['key']>('All');\n        const [search_query, setSearchQuery] = React.useState('');\n        const [item, setItem] = React.useState<TContractType | null>(null);\n        const animation_timeout = React.useRef<ReturnType<typeof setTimeout>>();\n\n        const handleClickOutside = React.useCallback(\n            (event: MouseEvent) => {\n                if (is_mobile) return;\n                if (wrapper_ref && !wrapper_ref.current?.contains(event.target as Node) && is_dialog_open) {\n                    setDialogVisibility(false);\n                    setItem({ ...item, value });\n                }\n            },\n            [item, value, is_dialog_open, is_mobile]\n        );\n\n        const getCategoryName = (clicked_item: TContractType) =>\n            getContractTypes(list_with_category(), clicked_item)?.find(item => item.value === clicked_item.value)?.text;\n\n        React.useEffect(() => {\n            return () => {\n                clearTimeout(animation_timeout.current);\n            };\n        }, []);\n\n        React.useEffect(() => {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }, [handleClickOutside]);\n\n        React.useEffect(() => {\n            if (typeof is_dialog_open === 'boolean') {\n                if (is_dialog_open && !is_info_dialog_open) {\n                    Analytics.trackEvent('ce_trade_types_form', {\n                        action: 'open',\n                        form_source: 'contract_set_up_form',\n                        form_name: 'default',\n                    });\n                }\n            }\n        }, [is_dialog_open]);\n\n        React.useEffect(() => {\n            if (contract_type) {\n                const contract_type_map = {\n                    [TRADE_TYPES.MULTIPLIER]: CONTRACT_STORAGE_VALUES.MULTIPLIERS,\n                    [TRADE_TYPES.ACCUMULATOR]: CONTRACT_STORAGE_VALUES.ACCUMULATORS,\n                };\n                const stored_value =\n                    contract_type_map[contract_type as keyof typeof contract_type_map] ??\n                    CONTRACT_STORAGE_VALUES.OPTIONS;\n                localStorage.setItem('contract_type_value', stored_value);\n            }\n        }, [contract_type]);\n\n        const handleCategoryClick: React.ComponentProps<typeof ContractType.Dialog>['onCategoryClick'] = ({ key }) => {\n            if (key) setSelectedCategory(key);\n        };\n\n        const handleSelect = (\n            clicked_item: TContractType,\n            e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n        ) => {\n            const categories = list_with_category();\n            const { key } = findContractCategory(categories, clicked_item);\n            if ('id' in e.target && e.target.id !== 'info-icon' && clicked_item) {\n                const is_from_info_dialog = /_btn$/.test(e.target.id as string);\n                const subform_name = is_from_info_dialog ? 'info_new' : 'trade_type';\n\n                setDialogVisibility(false);\n                setInfoDialogVisibility(false);\n                setItem(clicked_item);\n                setSelectedCategory(key);\n\n                onChange({ target: { name, value: clicked_item.value } });\n\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((window as any).hj) (window as any).hj('event', `selected_${clicked_item.value}_contract_type`);\n                if (subform_name === 'trade_type') {\n                    Analytics.trackEvent('ce_trade_types_form', {\n                        action: 'choose_trade_type',\n                        subform_name,\n                        tab_name: selected_category,\n                        trade_type_name: getCategoryName(clicked_item),\n                        form_name: 'default',\n                    });\n                } else {\n                    Analytics.trackEvent('ce_trade_types_form', {\n                        action: 'choose_trade_type',\n                        subform_name,\n                        trade_type_name: getCategoryName(clicked_item),\n                        form_name: 'default',\n                    });\n                }\n            }\n        };\n\n        const handleInfoClick = (clicked_item: TContractType) => {\n            setInfoDialogVisibility(!is_info_dialog_open);\n            setItem(clicked_item);\n\n            Analytics.trackEvent('ce_trade_types_form', {\n                action: 'info_open',\n                tab_name: selected_category,\n                trade_type_name: getCategoryName(clicked_item),\n            });\n        };\n\n        const onSearchBlur = () => {\n            if (search_query) {\n                Analytics.trackEvent('ce_trade_types_form', {\n                    action: 'search',\n                    search_string: search_query,\n                });\n            }\n        };\n\n        const onWidgetClick = () => {\n            setDialogVisibility(!is_dialog_open);\n            animation_timeout.current = setTimeout(() => {\n                setHideBackButton(false);\n                setInfoDialogVisibility(false);\n            }, 200);\n            setItem({ ...item, value });\n        };\n\n        const onBackButtonClick = () => {\n            setInfoDialogVisibility(false);\n            setItem({ ...item, value });\n        };\n\n        const onChangeInput = (searchQueryItem: string) => setSearchQuery(searchQueryItem);\n\n        const handleLearnMore = () => {\n            setDialogVisibility(true);\n            setInfoDialogVisibility(true);\n            setItem(item || { value });\n            Analytics.trackEvent('ce_trade_types_form', {\n                action: 'info_open',\n                tab_name: selected_category,\n                trade_type_name: getCategoryName(item || { value }),\n            });\n            setHideBackButton(true);\n        };\n\n        const onClose = () => {\n            onWidgetClick();\n        };\n\n        const list_with_category = () => {\n            const ordered_list = list && getCategoriesSortedByKey(list);\n            const ordered_unavailable_types_list = getCategoriesSortedByKey(unavailable_trade_types_list);\n            const all_trade_types_list = ordered_list?.concat(ordered_unavailable_types_list);\n            const accumulators_category = all_trade_types_list?.filter(\n                ({ label }) => label === localize('Accumulators')\n            );\n            const multipliers_category = all_trade_types_list?.filter(({ label }) => label === localize('Multipliers'));\n            const options_category = all_trade_types_list?.filter(\n                ({ label }) => label !== localize('Multipliers') && label !== localize('Accumulators')\n            );\n            const categories: TList[] = [];\n            const contract_type_category_icon: { [key: string]: string } = getContractTypeCategoryIcons();\n\n            if (list && list.length > 0) {\n                categories.push({\n                    label: localize('All'),\n                    contract_categories: all_trade_types_list,\n                    key: 'All',\n                    icon: '',\n                });\n            }\n\n            if (multipliers_category && multipliers_category.length > 0) {\n                categories.push({\n                    label: localize('Multipliers'),\n                    contract_categories: multipliers_category,\n                    key: 'Multipliers',\n                    icon: '',\n                });\n            }\n\n            if (options_category && options_category.length > 0) {\n                categories.push({\n                    label: localize('Options'),\n                    contract_categories: options_category,\n                    component: null,\n                    key: 'Options',\n                    icon: '',\n                });\n            }\n\n            if (accumulators_category && accumulators_category.length > 0) {\n                categories.push({\n                    label: localize('Accumulators'),\n                    contract_categories: accumulators_category,\n                    component: null,\n                    key: 'Accumulators',\n                    icon: '',\n                });\n            }\n\n            return categories.map(contract_category => {\n                const contract_types = contract_category?.contract_categories?.reduce<TContractType[]>(\n                    (prev, current) => [...prev, ...current.contract_types],\n                    []\n                );\n\n                const icon = contract_category.key\n                    ? contract_type_category_icon[contract_category.key]\n                    : contract_category.icon;\n\n                let contract_categories = contract_category.contract_categories;\n\n                if (search_query) {\n                    contract_categories = contract_category?.contract_categories\n                        ?.filter(category =>\n                            category.contract_types.find(type =>\n                                type.text?.toLowerCase().includes(search_query.toLowerCase())\n                            )\n                        )\n                        .map(category => ({\n                            ...category,\n                            contract_types: category.contract_types.filter(type =>\n                                type.text?.toLowerCase().includes(search_query.toLowerCase())\n                            ),\n                        }));\n                }\n\n                return {\n                    ...contract_category,\n                    contract_types,\n                    icon,\n                    contract_categories,\n                };\n            });\n        };\n\n        const selected_category_contracts = () => {\n            const selected_list_category = list_with_category()?.find(\n                categoryItem => categoryItem.key === selected_category\n            );\n            return (selected_list_category || list_with_category()[0]).contract_categories;\n        };\n        const should_show_info_banner = !!selected_category_contracts()?.some(i => i.is_unavailable);\n\n        const title =\n            Number(list_with_category()[0]?.contract_categories?.length) > 1\n                ? localize('Tutorial')\n                : getCategoryName(item || { value });\n\n        const info_banner = (\n            <InlineMessage\n                size={is_mobile ? 'sm' : 'xs'}\n                type='information'\n                message={\n                    <Localize\n                        i18n_default_text='Some trade types are unavailable for {{symbol}}.'\n                        values={{\n                            symbol: active_symbols.find(s => s.symbol === symbol)?.display_name,\n                        }}\n                        shouldUnescape\n                    />\n                }\n            />\n        );\n\n        return (\n            <React.Fragment>\n                <Text as='button' line_height='s' size='xxxs' className='learn-more_title' onClick={handleLearnMore}>\n                    <Localize i18n_default_text='Learn about this trade type' />\n                </Text>\n                <div\n                    data-testid='dt_contract_widget'\n                    id='dt_contract_dropdown'\n                    className={`contract-type-widget contract-type-widget--${value} dropdown--left`}\n                    ref={wrapper_ref}\n                    tabIndex={0}\n                >\n                    <ContractType.Display\n                        is_open={is_dialog_open || is_info_dialog_open}\n                        list={list}\n                        name={name ?? ''}\n                        onClick={onWidgetClick}\n                        value={value}\n                    />\n                    <ContractType.Dialog\n                        is_info_dialog_open={is_info_dialog_open}\n                        is_open={!!is_dialog_open}\n                        item={item || { value }}\n                        categories={list_with_category()}\n                        selected={selected_category || list_with_category()[0]?.key}\n                        onBackButtonClick={onBackButtonClick}\n                        onSearchBlur={onSearchBlur}\n                        onClose={onClose}\n                        onChangeInput={onChangeInput}\n                        onCategoryClick={handleCategoryClick}\n                        show_loading={languageChanged}\n                        title={title}\n                        hide_back_button={hide_back_button}\n                        info_banner={should_show_info_banner && info_banner}\n                        learn_more_banner={\n                            <button onClick={() => handleInfoClick(item || { value })} className='learn-more'>\n                                <Text size={is_mobile ? 'xxs' : 'xs'} line_height={is_mobile ? 'l' : 'xl'}>\n                                    <Localize i18n_default_text='Learn more about trade types' />\n                                </Text>\n                                <Icon icon='IcChevronRight' size={16} />\n                            </button>\n                        }\n                    >\n                        {is_info_dialog_open ? (\n                            <ContractType.Info\n                                handleSelect={handleSelect}\n                                item={item || { value }}\n                                selected_value={value}\n                                list={list_with_category()}\n                                info_banner={info_banner}\n                            />\n                        ) : (\n                            <ContractType.List\n                                handleSelect={handleSelect}\n                                list={selected_category_contracts() as TContractCategory[]}\n                                should_show_info_banner={should_show_info_banner}\n                                value={value}\n                            />\n                        )}\n                    </ContractType.Dialog>\n                </div>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default ContractTypeWidget;\n","import ContractTypeWidget from './contract-type-widget';\n\nexport default ContractTypeWidget;\n","import React from 'react';\nimport { MobileWrapper, usePrevious } from '@deriv/components';\nimport { getMarketNamesMap, unsupported_contract_types_list } from '@deriv/shared';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { Localize } from '@deriv/translations';\nimport { ToastPopup } from 'Modules/Trading/Containers/toast-popup';\nimport ContractTypeWidget from '../Components/Form/ContractType';\nimport { getAvailableContractTypes } from '../Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Contract = observer(() => {\n    const {\n        contract_type,\n        contract_types_list,\n        is_mobile_digit_view_selected: is_digit_view,\n        non_available_contract_types_list,\n        onChange,\n        symbol,\n    } = useTraderStore();\n    const {\n        common: { current_language },\n    } = useStore();\n\n    const list = getAvailableContractTypes(\n        contract_types_list as unknown as Parameters<typeof getAvailableContractTypes>[0],\n        unsupported_contract_types_list\n    );\n    const unavailable_trade_types_list = getAvailableContractTypes(\n        non_available_contract_types_list,\n        unsupported_contract_types_list\n    ).map(item => ({ ...item, is_unavailable: true }));\n    const prev_lang = usePrevious(current_language);\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                {isDigitTradeType(contract_type) && (\n                    <ToastPopup className='digits__toast-info' is_open={is_digit_view} type='info' timeout={3000}>\n                        <Localize\n                            i18n_default_text='Last digit stats for latest 1000 ticks for {{underlying_name}}'\n                            values={{\n                                underlying_name:\n                                    getMarketNamesMap()[\n                                        symbol?.toUpperCase() as keyof ReturnType<typeof getMarketNamesMap>\n                                    ],\n                            }}\n                        />\n                    </ToastPopup>\n                )}\n            </MobileWrapper>\n            <ContractTypeWidget\n                list={list}\n                name='contract_type'\n                onChange={onChange}\n                value={contract_type}\n                languageChanged={!!(prev_lang && prev_lang !== current_language)}\n                unavailable_trade_types_list={unavailable_trade_types_list}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default Contract;\n","import React from 'react';\nimport { getCardLabels, isValidToSell } from '@deriv/shared';\nimport { Button, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { TContractInfo } from '@deriv/shared/src/utils/contract/contract-types';\n\ntype TAccumSellButton = {\n    contract_info?: TContractInfo;\n    current_stake: number | null;\n    currency?: string;\n    is_disabled: boolean;\n    is_sell_requested?: boolean;\n    onClick: (e: React.MouseEvent<HTMLElement>) => void;\n};\nconst AccumulatorsSellButton = observer(\n    ({ contract_info, current_stake, currency, is_disabled, is_sell_requested, onClick }: TAccumSellButton) => {\n        const { ui } = useStore();\n        const { is_dark_mode_on } = ui;\n        const is_valid_to_sell = contract_info && isValidToSell(contract_info);\n        return (\n            <Fieldset className='trade-container__fieldset purchase-container__sell-button'>\n                <Button\n                    className='dc-btn--sell dc-btn__large'\n                    is_disabled={is_disabled || !is_valid_to_sell || is_sell_requested}\n                    onClick={onClick}\n                    secondary\n                >\n                    <span className='purchase-container__sell-button__stake'>{getCardLabels().SELL}</span>\n                    {current_stake && <Money amount={current_stake} currency={currency} show_currency />}\n                </Button>\n                <Text\n                    size='xxxs'\n                    line_height='s'\n                    as='p'\n                    color={is_dark_mode_on ? 'less-prominent' : 'disabled'}\n                    className='purchase-container__notification'\n                >\n                    <Localize\n                        i18n_default_text='<0>Note:</0> You can close your trade anytime. Be aware of slippage risk.'\n                        components={[\n                            <Text\n                                key={0}\n                                weight='bold'\n                                size='xxxs'\n                                line_height='s'\n                                color={is_dark_mode_on ? 'less-prominent' : 'disabled'}\n                            />,\n                        ]}\n                    />\n                </Text>\n            </Fieldset>\n        );\n    }\n);\n\nexport default AccumulatorsSellButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money } from '@deriv/components';\nimport { isDesktop, isMobile, getDecimalPlaces } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TProposalTypeInfo } from 'Types';\n\nconst CancelDealInfo = observer(\n    ({ proposal_info, data_testid }: { proposal_info: TProposalTypeInfo; data_testid?: string }) => {\n        const { currency, has_cancellation } = useTraderStore();\n        const { id, cancellation, has_error } = proposal_info;\n        const error = has_error ?? !id;\n        const [is_row_layout, setIsRowLayout] = React.useState(false);\n\n        const ref = React.useRef<HTMLDivElement>(null);\n\n        React.useEffect(() => {\n            if (ref.current) {\n                const el_height = Number(ref.current.parentElement?.clientHeight);\n                if (\n                    (el_height > 21 && isDesktop()) ||\n                    ((el_height > 21 || getDecimalPlaces(currency) > 2) && isMobile())\n                ) {\n                    setIsRowLayout(true);\n                } else {\n                    setIsRowLayout(false);\n                }\n            }\n        }, [cancellation, currency, is_row_layout, setIsRowLayout]);\n\n        if (!has_cancellation) return null;\n\n        return (\n            <div\n                className={classNames('trade-container__cancel-deal-info', {\n                    'trade-container__cancel-deal-info--row-layout': is_row_layout,\n                })}\n                data-testid={data_testid}\n            >\n                {cancellation && (\n                    <React.Fragment>\n                        <div className='trade-container__price-info-basis' ref={ref}>\n                            {localize('Deal cancel. fee')}\n                        </div>\n                        <div className='trade-container__price-info-value'>\n                            {!error && (\n                                <Money\n                                    amount={cancellation.ask_price}\n                                    className='trade-container__price-info-currency'\n                                    currency={currency}\n                                    show_currency\n                                />\n                            )}\n                        </div>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n);\n\nexport default CancelDealInfo;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, Popover, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode, getLocalizedBasis, getGrowthRatePercentage } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport CancelDealInfo from './cancel-deal-info';\nimport ValueMovement from './value-movement';\nimport { TProposalTypeInfo } from 'Types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TContractInfo = Pick<\n    ReturnType<typeof useTraderStore>,\n    'basis' | 'growth_rate' | 'is_accumulator' | 'is_turbos' | 'is_vanilla' | 'is_multiplier' | 'currency'\n> & {\n    is_loading: boolean;\n    is_vanilla_fx?: boolean;\n    proposal_info: TProposalTypeInfo;\n    should_fade: boolean;\n    type: string;\n};\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    growth_rate,\n    is_accumulator,\n    is_loading,\n    is_multiplier,\n    is_turbos,\n    is_vanilla_fx,\n    is_vanilla,\n    proposal_info,\n    should_fade,\n    type,\n}: TContractInfo) => {\n    const { isMobile } = useDevice();\n\n    const localized_basis = getLocalizedBasis();\n    const vanilla_payout_text = is_vanilla_fx ? localized_basis.payout_per_pip : localized_basis.payout_per_point;\n    const turbos_payout_message = (\n        <Localize i18n_default_text='This is the amount you’ll receive at expiry for every point of change in the underlying price, if the spot price never touches or breaches the barrier throughout the contract duration.' />\n    );\n    const vanilla_payout_message = is_vanilla_fx ? (\n        <Localize\n            i18n_default_text='The payout at expiry is equal to the payout per pip multiplied by the difference, <0>in pips</0>, between the final price and the strike price.'\n            components={[<strong key={0} />]}\n        />\n    ) : (\n        <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n    );\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake': {\n                if (is_vanilla) {\n                    return vanilla_payout_text;\n                }\n                return localized_basis.payout;\n            }\n            case 'payout': {\n                return localized_basis.stake;\n            }\n            default:\n                return basis;\n        }\n    };\n\n    const getBasisText = () => {\n        if (is_vanilla) {\n            return vanilla_payout_text;\n        }\n\n        return has_error_or_not_loaded ? stakeOrPayout() : proposal_info?.obj_contract_basis?.text || '';\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    const basis_text = getBasisText();\n    const { message, obj_contract_basis, stake } = proposal_info;\n\n    const setHintMessage = () => {\n        if (is_vanilla) return vanilla_payout_message;\n        return message;\n    };\n\n    return (\n        <div className='trade-container__price'>\n            <div\n                id={`dt_purchase_${type.toLowerCase()}_price`}\n                data-testid={`dt_purchase_${type.toLowerCase()}_price`}\n                className={classNames('trade-container__price-info', {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide': is_loading && !should_fade,\n                    'trade-container__price-info--fade': is_loading && should_fade,\n                })}\n            >\n                {is_multiplier || is_accumulator ? (\n                    <React.Fragment>\n                        {!is_accumulator && !isMobile && <CancelDealInfo proposal_info={proposal_info} />}\n                        {isMobile && (\n                            <div className='trade-container__price-info-wrapper'>\n                                <div className='btn-purchase__text_wrapper'>\n                                    <Text size='xs' weight='bold' color='colored-background'>\n                                        {!is_accumulator ? (\n                                            <Money amount={stake} currency={currency} show_currency />\n                                        ) : (\n                                            !is_loading && `${getGrowthRatePercentage(growth_rate)}%`\n                                        )}\n                                    </Text>\n                                </div>\n                            </div>\n                        )}\n                    </React.Fragment>\n                ) : (\n                    !is_multiplier &&\n                    !is_accumulator &&\n                    !is_turbos &&\n                    obj_contract_basis && (\n                        <React.Fragment>\n                            <div className='trade-container__price-info-basis'>{basis_text}</div>\n                            {isMobile ? (\n                                <div className='trade-container__price-info-wrapper'>\n                                    <ValueMovement\n                                        has_error_or_not_loaded={has_error_or_not_loaded}\n                                        proposal_info={proposal_info}\n                                        currency={getCurrencyDisplayCode(currency)}\n                                        is_vanilla={is_vanilla}\n                                    />\n                                </div>\n                            ) : (\n                                <ValueMovement\n                                    has_error_or_not_loaded={has_error_or_not_loaded}\n                                    proposal_info={proposal_info}\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    is_vanilla={is_vanilla}\n                                />\n                            )}\n                        </React.Fragment>\n                    )\n                )}\n            </div>\n            {!is_multiplier && !is_accumulator && !isMobile && (\n                <Popover\n                    alignment='left'\n                    icon='info'\n                    id={`dt_purchase_${type.toLowerCase()}_info`}\n                    is_bubble_hover_enabled\n                    margin={216}\n                    message={has_error_or_not_loaded ? '' : setHintMessage()}\n                    relative_render\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, IconTradeTypes, Text } from '@deriv/components';\nimport { useMFAccountStatus } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStore } from '@deriv/stores';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info';\nimport { MT5_ACCOUNT_STATUS, getContractTypeDisplay } from '@deriv/shared';\nimport { TProposalTypeInfo, TTradeStore } from 'Types';\n\ntype TPurchaseButton = {\n    basis: string;\n    buy_info: TTradeStore['purchase_info'];\n    currency: string;\n    growth_rate: number;\n    has_deal_cancellation: boolean;\n    index: number;\n    info: TProposalTypeInfo;\n    is_accumulator: boolean;\n    is_disabled: boolean;\n    is_high_low: boolean;\n    is_loading: boolean;\n    is_multiplier: boolean;\n    is_proposal_empty: boolean;\n    is_vanilla_fx?: boolean;\n    is_vanilla: boolean;\n    is_turbos: boolean;\n    onClickPurchase: (proposal_id: string, price: string | number, type: string, isMobile: boolean) => void;\n    purchased_states_arr: boolean[];\n    should_fade: boolean;\n    setPurchaseState: (index: number) => void;\n    type: string;\n};\n\ntype TButtonTextWrapper = {\n    should_fade: boolean;\n    is_loading: boolean;\n    type: string;\n    is_high_low: boolean;\n};\n\n// TODO [lazy-loading-required] Responsive related components\nconst ButtonTextWrapper = ({ should_fade, is_loading, type, is_high_low }: TButtonTextWrapper) => {\n    return (\n        <div className='btn-purchase__text_wrapper'>\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!should_fade && is_loading\n                    ? ''\n                    : getContractTypeDisplay(type, { isHighLow: is_high_low, showButtonName: true })}\n            </Text>\n        </div>\n    );\n};\n\nconst IconComponentWrapper = ({ type }: { type: string }) => (\n    <div className='btn-purchase__icon_wrapper'>\n        <IconTradeTypes type={type} className='btn-purchase__icon' color='active' />\n    </div>\n);\n\nconst PurchaseButton = ({\n    basis, // mobile-only\n    buy_info,\n    currency,\n    growth_rate,\n    has_deal_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_multiplier,\n    is_proposal_empty,\n    is_turbos,\n    is_vanilla_fx,\n    is_vanilla,\n    onClickPurchase,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    type,\n}: TPurchaseButton) => {\n    const {\n        ui: { setIsMFVericationPendingModal },\n    } = useStore();\n    const mf_account_status = useMFAccountStatus();\n    const { isMobile } = useDevice();\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return is_high_low ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = (is_disabled && !is_loading) || is_proposal_empty;\n\n    let button_value;\n\n    if (is_multiplier) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                <Money amount={info.stake} currency={currency} show_currency />\n            </Text>\n        );\n    } else if (!is_vanilla && !is_turbos && !is_accumulator) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!(is_loading || is_disabled) ? info.returns : ''}\n            </Text>\n        );\n    }\n\n    return (\n        <button\n            disabled={is_disabled}\n            id={`dt_purchase_${type.toLowerCase()}_button`}\n            className={classNames('btn-purchase', {\n                'btn-purchase--disabled': is_button_disabled || !!buy_info.error,\n                'btn-purchase--animated--slide': is_loading && !should_fade,\n                'btn-purchase--animated--fade': is_loading && should_fade,\n                'btn-purchase--swoosh': !!purchased_states_arr[index],\n                'btn-purchase--1': index === 0,\n                'btn-purchase--2': index === 1,\n                'btn-purchase--accumulator': is_accumulator,\n                'btn-purchase--multiplier': is_multiplier,\n                'btn-purchase--multiplier-deal-cancel': has_deal_cancellation,\n                'btn-purchase--turbos': is_turbos,\n                'btn-purchase--has-bottom-gradient-1': index === 0 && (is_accumulator || is_vanilla || is_turbos),\n                'btn-purchase--has-bottom-gradient-2': index === 1 && (is_vanilla || is_turbos),\n            })}\n            onClick={() => {\n                if (is_multiplier && mf_account_status === MT5_ACCOUNT_STATUS.PENDING) {\n                    setIsMFVericationPendingModal(true);\n                } else {\n                    setPurchaseState(index);\n                    onClickPurchase(info.id, info.stake, type, isMobile);\n                }\n            }}\n        >\n            {isMobile ? (\n                <React.Fragment>\n                    <div\n                        className={classNames('btn-purchase__top', {\n                            'btn-purchase__top--accumulator': is_accumulator,\n                            'btn-purchase--vanilla': is_vanilla,\n                        })}\n                    >\n                        <IconComponentWrapper type={getIconType()} />\n                        <ButtonTextWrapper\n                            should_fade={should_fade}\n                            is_loading={is_loading}\n                            type={type}\n                            is_high_low={is_high_low}\n                        />\n                    </div>\n                    {!is_turbos && !is_vanilla && !is_accumulator && (\n                        <div className='btn-purchase__bottom'>\n                            <ContractInfo\n                                basis={basis}\n                                currency={currency}\n                                growth_rate={growth_rate}\n                                is_accumulator={is_accumulator}\n                                is_loading={is_loading}\n                                is_multiplier={is_multiplier}\n                                is_turbos={is_turbos}\n                                is_vanilla_fx={is_vanilla_fx}\n                                is_vanilla={is_vanilla}\n                                should_fade={should_fade}\n                                proposal_info={info}\n                                type={type}\n                            />\n                        </div>\n                    )}\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <div className='btn-purchase__info btn-purchase__info--left'>\n                        <div className='btn-purchase__type-wrapper'>\n                            <IconComponentWrapper type={getIconType()} />\n                            <ButtonTextWrapper\n                                should_fade={should_fade}\n                                is_loading={is_loading}\n                                type={type}\n                                is_high_low={is_high_low}\n                            />\n                        </div>\n                    </div>\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__effect-detail--arrow' />\n                    <div className='btn-purchase__info btn-purchase__info--right'>\n                        <div className='btn-purchase__text_wrapper'>{button_value}</div>\n                    </div>\n                </React.Fragment>\n            )}\n        </button>\n    );\n};\n\nexport default PurchaseButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button';\nimport CancelDealInfo from '../Form/Purchase/cancel-deal-info';\nimport { TProposalTypeInfo, TTradeStore } from 'Types';\nimport { useDevice } from '@deriv-com/ui';\nimport { isTabletOs } from '@deriv/shared';\n\ntype TPurchaseFieldset = {\n    basis: string;\n    buy_info: TTradeStore['purchase_info'];\n    currency: string;\n    growth_rate: number;\n    has_cancellation: boolean;\n    index: number;\n    info: TProposalTypeInfo;\n    is_accumulator: boolean;\n    is_disabled: boolean;\n    is_high_low: boolean;\n    is_loading: boolean;\n    is_market_closed?: boolean;\n    is_multiplier: boolean;\n    is_proposal_empty: boolean;\n    is_proposal_error: boolean;\n    is_vanilla_fx?: boolean;\n    is_vanilla: boolean;\n    is_turbos: boolean;\n    onClickPurchase: (proposal_id: string, price: string | number, type: string, isMobile: boolean) => void;\n    onHoverPurchase: (is_over: boolean, contract_type: string) => void;\n    purchased_states_arr: boolean[];\n    setPurchaseState: (index: number) => void;\n    type: string;\n};\n\nconst PurchaseFieldset = ({\n    basis,\n    buy_info,\n    currency,\n    growth_rate,\n    has_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_market_closed,\n    is_multiplier,\n    is_proposal_empty,\n    is_proposal_error,\n    is_turbos,\n    is_vanilla_fx,\n    is_vanilla,\n    onClickPurchase,\n    onHoverPurchase,\n    purchased_states_arr,\n    setPurchaseState,\n    type,\n}: TPurchaseFieldset) => {\n    const [should_fade, setShouldFade] = React.useState(false);\n    const { isMobile } = useDevice();\n\n    React.useEffect(() => {\n        setShouldFade(true);\n    }, []);\n\n    const purchase_button = (\n        <React.Fragment>\n            {is_multiplier && has_cancellation && isMobile && <CancelDealInfo proposal_info={info} />}\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                growth_rate={growth_rate}\n                has_deal_cancellation={is_multiplier && has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_multiplier={is_multiplier}\n                is_vanilla={is_vanilla}\n                is_vanilla_fx={is_vanilla_fx}\n                is_proposal_empty={is_proposal_empty}\n                is_turbos={is_turbos}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={should_fade}\n                type={type}\n                basis={basis} // mobile-only\n            />\n        </React.Fragment>\n    );\n\n    return (\n        <Fieldset\n            className={classNames('trade-container__fieldset', 'purchase-container__option', {\n                'purchase-container__option--has-cancellation': has_cancellation,\n                'purchase-container__option--turbos': is_turbos,\n            })}\n        >\n            {!isMobile && (\n                <div\n                    className={classNames('trade-container__fieldset-wrapper', {\n                        'trade-container__fieldset-wrapper--disabled': is_proposal_error || is_disabled,\n                    })}\n                >\n                    {(has_cancellation || !is_multiplier) && !is_accumulator && !is_turbos && (\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_turbos={is_turbos}\n                            is_vanilla={is_vanilla}\n                            is_vanilla_fx={is_vanilla_fx}\n                            proposal_info={info}\n                            should_fade={should_fade}\n                            type={type}\n                            is_accumulator={is_accumulator}\n                            growth_rate={growth_rate}\n                        />\n                    )}\n                    <div\n                        className={classNames('btn-purchase__shadow-wrapper', {\n                            'btn-purchase__shadow-wrapper--disabled': is_proposal_error || is_disabled,\n                        })}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false, type);\n                            }\n                        }}\n                        onClick={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false, type);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {is_proposal_error && !is_market_closed ? (\n                            <Popover\n                                has_error\n                                alignment='left'\n                                message={info.message}\n                                is_open={is_proposal_error && !is_market_closed}\n                                relative_render\n                                margin={6}\n                            >\n                                {purchase_button}\n                            </Popover>\n                        ) : (\n                            <React.Fragment>\n                                {is_multiplier && !isTabletOs ? (\n                                    <Popover\n                                        alignment='left'\n                                        is_bubble_hover_enabled\n                                        margin={8}\n                                        message={info.message}\n                                        relative_render\n                                    >\n                                        {purchase_button}\n                                    </Popover>\n                                ) : (\n                                    purchase_button\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            )}\n            {isMobile && (\n                <React.Fragment>\n                    {is_proposal_error && <div className='btn-purchase__error'>{info.message}</div>}\n                    {purchase_button}\n                </React.Fragment>\n            )}\n        </Fieldset>\n    );\n};\n\nexport default React.memo(PurchaseFieldset);\n","import React from 'react';\nimport {\n    isAccumulatorContract,\n    isEmptyObject,\n    isOpen,\n    hasContractEntered,\n    getContractTypePosition,\n    getSupportedContracts,\n    getIndicativePrice,\n} from '@deriv/shared';\nimport AccumulatorsSellButton from '../Components/Form/TradeParams/Accumulator/accumulators-sell-button';\nimport PurchaseFieldset from 'Modules/Trading/Components/Elements/purchase-fieldset';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { TTradeStore } from 'Types';\n\ntype TGetSupportedContractsKey = keyof ReturnType<typeof getSupportedContracts>;\n\nconst getSortedIndex = (type: string, index: number) => {\n    switch (getContractTypePosition(type as TGetSupportedContractsKey)) {\n        case 'top':\n            return 0;\n        case 'bottom':\n            return 1;\n        default:\n            return index;\n    }\n};\n\nconst Purchase = observer(({ is_market_closed }: { is_market_closed?: boolean }) => {\n    const {\n        portfolio: { all_positions, onClickSell },\n        ui: {\n            purchase_states: purchased_states_arr,\n            is_mobile,\n            setPurchaseState,\n            setIsTradingDisabledByResidenceModal,\n        },\n        client: { is_account_to_be_closed_by_residence },\n    } = useStore();\n    const {\n        basis,\n        contract_type,\n        currency,\n        growth_rate,\n        has_cancellation,\n        has_open_accu_contract,\n        is_accumulator,\n        is_multiplier,\n        is_purchase_enabled,\n        is_trade_enabled,\n        is_turbos,\n        is_vanilla_fx,\n        is_vanilla,\n        onHoverPurchase,\n        onPurchase,\n        proposal_info,\n        purchase_info,\n        symbol,\n        trade_types,\n        validation_errors,\n    } = useTraderStore();\n\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const isLoading = (info: TTradeStore['proposal_info'][string] | Record<string, never>) => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info?.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n    const active_accu_contract = is_accumulator\n        ? all_positions.find(\n              ({ contract_info, type }) =>\n                  isAccumulatorContract(type) && contract_info.underlying === symbol && !contract_info.is_sold\n          )\n        : undefined;\n    const is_valid_to_sell = active_accu_contract?.contract_info\n        ? hasContractEntered(active_accu_contract.contract_info) && isOpen(active_accu_contract.contract_info)\n        : false;\n    const indicative =\n        (is_valid_to_sell && active_accu_contract && getIndicativePrice(active_accu_contract.contract_info)) || null;\n    const onClickSellButton = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (active_accu_contract && onClickSell) {\n            onClickSell(active_accu_contract.contract_info.contract_id);\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    const components: JSX.Element[] = [];\n\n    const onClickPurchase = is_account_to_be_closed_by_residence\n        ? () => setIsTradingDisabledByResidenceModal(true)\n        : onPurchase;\n\n    Object.keys(trade_types).forEach((type, index) => {\n        const info = proposal_info?.[type] || {};\n        const is_disabled = !is_trade_enabled || !info.id || !is_purchase_enabled;\n        const is_accum_or_mult_error = info?.has_error && !!info?.message;\n        const is_proposal_error =\n            is_multiplier || (is_accumulator && !is_mobile) ? is_accum_or_mult_error : info?.has_error;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={type}\n                index={getSortedIndex(type, index)}\n                growth_rate={growth_rate}\n                has_cancellation={has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                is_market_closed={is_market_closed}\n                is_multiplier={is_multiplier}\n                is_turbos={is_turbos}\n                is_vanilla={is_vanilla}\n                is_vanilla_fx={is_vanilla_fx}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={!!is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        if (!is_vanilla && (!is_accumulator || !has_open_accu_contract)) {\n            switch (getContractTypePosition(type as TGetSupportedContractsKey)) {\n                case 'top':\n                    components.unshift(purchase_fieldset);\n                    break;\n                case 'bottom':\n                    components.push(purchase_fieldset);\n                    break;\n                default:\n                    components.push(purchase_fieldset);\n                    break;\n            }\n        } else if (contract_type.toUpperCase() === type) {\n            components.push(purchase_fieldset);\n        } else if (is_accumulator && has_open_accu_contract) {\n            components.push(\n                <AccumulatorsSellButton\n                    is_disabled={!is_valid_to_sell}\n                    onClick={onClickSellButton}\n                    contract_info={active_accu_contract?.contract_info}\n                    is_sell_requested={active_accu_contract?.is_sell_requested}\n                    current_stake={indicative}\n                    currency={currency}\n                    key={type}\n                />\n            );\n        }\n    });\n\n    return components as unknown as JSX.Element;\n});\n\nexport default Purchase;\n","import { TTradeStore } from 'Types';\n\ntype TData = Partial<\n    Pick<\n        TTradeStore,\n        'cancellation_duration' | 'has_cancellation' | 'has_stop_loss' | 'has_take_profit' | 'stop_loss' | 'take_profit'\n    >\n>;\n\ntype TOnToggleCancellation = {\n    has_cancellation: TTradeStore['has_cancellation'];\n    onChangeMultiple: (data: TData) => void;\n};\n\ntype TOnChangeCancellationDuration = {\n    event: { target: { name: string; value: string } };\n    onChangeMultiple: (data: TData) => void;\n};\n\nexport const onToggleCancellation = ({ has_cancellation, onChangeMultiple }: TOnToggleCancellation) => {\n    // e.target.checked is not reliable, we have to toggle its previous value\n    const new_val = !has_cancellation;\n    onChangeMultiple({\n        has_cancellation: new_val,\n        ...(!new_val\n            ? {\n                  // reset deal cancellation price\n                  cancellation_price: undefined,\n              }\n            : {\n                  // unchecked Stop loss\n                  has_stop_loss: false,\n                  has_take_profit: false,\n              }),\n    });\n};\n\nexport const onChangeCancellationDuration = ({ event, onChangeMultiple }: TOnChangeCancellationDuration) => {\n    const { value } = event.target;\n    onChangeMultiple({\n        has_cancellation: true,\n        has_take_profit: false,\n        has_stop_loss: false,\n        cancellation_duration: value,\n    });\n};\n"],"names":["forwardRef","title","titleId","props","ref","xmlns","width","height","viewBox","role","id","d","_ref","children","className","header","header_tooltip","is_center","is_tooltip_disabled","popover_wrapper_class","onMouseEnter","onMouseLeave","fieldset_header_class","classNames","fieldset_info_class","React","_defineProperty","Popover","alignment","icon","is_bubble_hover_enabled","message","margin","relative_render","arr_arr_numbers","name","onChange","selected_number","should_show_in_percents","is_disabled","handleSelect","event","Number","currentTarget","getAttribute","target","value","map","arr_numbers","idx","key","toString","i","onClick","concat","LabeledQuantityInputMobile","input_label","_objectWithoutProperties","_excluded","wrapper_classname","Fieldset","InputField","_proposal_info$obj_co","_proposal_info$obj_co2","has_error_or_not_loaded","proposal_info","currency","_ref$is_vanilla","is_vanilla","_ref$show_currency","show_currency","Money","amount","obj_contract_basis","should_format","ArrowIndicator","observer","_useTraderStore","useTraderStore","maximum_payout","maximum_ticks","content","label","localize","tooltip_text","Text","size","weight","line_height","align","as","isMobile","classNameBubble","zIndex","min","max","duration_unit_text","Localize","i18n_default_text","values","addComma","expiry_epoch","has_error","fixed_date","formatted_date","Date","toUTCString","replace","substring","date","is_text_only","text_size","expiration","start_time","useStore","common","server_time","_formatDuration","formatDuration","getDiffDuration","unix","days","timestamp","getDateFromNow","_props$multiplier","_props$amount","_props$commission","_props$stop_out","commission_text_size","stop_out_text_size","is_tooltip_relative","should_show_tooltip","trade","has_stop_loss","multiplier","commission","stop_out","commission_text","components","stop_out_text","commission_tooltip","commission_percentage","toFixed","stop_out_tooltip","stop_out_percentage","Math","floor","abs","getInfo","_ref2","text","tooltip_params","_extends","_props$validation_err","_props$stop_loss","_props$has_stop_loss","_props$onChangeMultip","_props$onChange","_useStore","ui","client","addToast","removeToast","current_focus","setCurrentFocus","is_single_currency","validation_errors","stop_loss","onChangeMultiple","InputWithCheckbox","classNameInlinePrefix","classNameInput","isDesktop","defaultChecked","error_messages","undefined","is_negative_disabled","is_input_hidden","max_value","e","new_val","_objectSpread","has_cancellation","tooltip_label","tooltip_alignment","error_message_alignment","_props$take_profit","_props$has_take_profi","is_accumulator","has_open_accu_contract","take_profit","has_take_profit","take_profit_tooltip","transition","duration","ease","variants","enter","direction","x","y","opacity","center","exit","options","defaultValue","_useState2","_slicedToArray","useState","length","selectedIndex","setSelectedIndex","_useState4","setDirection","useEffect","indexOf","handleIndexChange","newIndex","newDirection","visibleValues","hasUndefinedValues","some","option","index","motion","div","custom","initial","animate","color","Button","disabled","small","Icon","payoutOptions","onPayoutClick","selectedBarrier","defaultPayout","tooltipText","is_desktop","useDevice","turbos_payout_message","WheelPicker","disable_target_icon","LabelPairedChevronsDownCaptionRegularIcon","stroke","LabelPairedChevronsUpCaptionRegularIcon","barrier_1","payout_choices","setPayoutPerPoint","togglePayoutWheelPicker","payout_per_point","header_tooltip_text","PayoutPerPointInput","_contract_info","_contract_info2","_contract_info3","_contract_info4","contract_info","is_minimized","is_absolute_only","barrier_2","barrier_count","barrier_pipsize","duration_unit","trade_types","_React$useState2","show_modal","setShowModal","type_with_current_spot","Object","keys","find","type","_proposal_info$type","spot","current_spot","current_barrier_price","barrier","barrier_title","input_class","is_absolute_barrier","format","float_value","parseFloat","sign","DesktopWrapper","is_float","is_signed","MobileWrapper","Modal","is_open","should_header_stick_body","toggleModal","ValueMovement","is_incrementable","is_incrementable_on_long_press","is_read_only","last_digit","arr_five","_toConsumableArray","Array","NumberSelector","max_stake","min_stake","is_mobile","isNaN","toLowerCase","BarriersListBody","barriers_list","onHover","selected_item","subheader","ThemedScrollbars","autohide","BarriersList","onClickCross","show_table","CSSTransition","appear","in","timeout","enterDone","unmountOnExit","data_testid","contract_type","strike","strike_price_list","is_title_centered","Div100vhContainer","max_autoheight_offset","trade_type","TRADE_TYPES","VANILLA","CALL","payout_status","RadioGroup","onToggle","selected","item","Item","String","Strike","strike_price_choices","barrier_choices","expiry_type","expiry_date","advanced_duration_unit","setIsOpen","_React$useState4","should_open_dropdown","setShouldOpenDropdown","_React$useState6","selected_value","setSelectedValue","toggleWidget","clickAndKeyEventHandler","is_24_hours_contract","toMoment","isSame","is_relative_strike_applicable","strike_price","should_show_spot","onKeyDown","StrikeParamModal","Dropdown","classNameDisplay","is_alignment_left","is_nativepicker","list","no_border","_tab_list$find$value","_tab_list$find","is_turbos","isTurbosContract","isVanillaContract","tab_list","TURBOS","LONG","is_displayed","SHORT","PUT","ButtonToggle","buttons_arr","filter","is_animated","_ref3","term","getTermDefinition","is_inline_block","background_color","arrow_color","_getTerm","getTerm","INDEX","STAKE","GROWTH_RATE","PAYOUT","BARRIER_RANGE","PREVIOUS_SPOT_PRICE","TAKE_PROFIT","SLIPPAGE_RISK","DefinitionPopover","CONTRACT_LIST","ACCUMULATORS","getContractDescription","paragraph","EXPIRY","EXIT_SPOT","EVEN_ODD","higher_lower_content","HIGHER_LOWER","MATCHES_DIFFERS","STOP_OUT","STOP_LOSS","DEAL_CANCELLATION","MULTIPLIERS","OVER_UNDER","ENTRY_SPOT","RISE_FALL","BARRIER","PAYOUT_PER_POINT","SPOT_PRICE","TOUCH_NO_TOUCH","STRIKE_PRICE","CONTRACT_VALUE","VANILLAS","TradeTypeTemplate","category","is_vanilla_fx","is_multiplier_fx","ACCUMULATOR","AccumulatorTradeDescription","RISE_FALL_EQUAL","RiseFallTradeDescription","HIGH_LOW","HighLowTradeDescription","END","EndTradeDescription","STAY","StayTradeDescription","MATCH_DIFF","MatchDiffTradeDescription","EvenOddTradeDescription","OverUnderTradeDescription","TOUCH","TouchTradeDescription","ASIAN","AsianTradeDescription","RUN_HIGH_LOW","RunHighLowTradeDescription","RESET","ResetTradeDescription","CALL_PUT_SPREAD","CallPutSpreadTradeDescription","TICK_HIGH_LOW","TickHighLowTradeDescription","LB_HIGH_LOW","LbHighLowTradeDescription","LB_PUT","LbPutTradeDescription","LB_CALL","LbCallTradeDescription","MULTIPLIER","MultiplierTradeDescription","TurbosTradeDescription","VanillaTradeDescription","styles","fill","rx","ContractTypeDescriptionVideo","selected_contract_type","is_dark_theme","is_dark_mode_on","is_video_player_opened","setIsVideoPlayerOpened","video_src","getDescriptionVideoId","VideoPlayer","src","should_show_controls","muted","hide_volume_control","VideoPreview","only_show_thumbnail","toggleVideoPlayer","custom_width","custom_height","ImageAsianUpDown","ImageSpread","ImageEndsInOut","ImageCloseToLow","ImageHighToClose","ImageHighToLow","ImageReset","ImageRunHighLow","ImageTickHighLow","iconSize","TABS","Info","_CONTRACT_TYPE_SUBSTI2","_getContractTypes","_contract_types$find","_list$0$contract_cate","info_banner","cached_multiplier_cancellation_list","_useStore$ui","modules","CONTRACT_TYPE_SUBSTITUTE","setSelectedTab","setSelectedContractType","_useMenuNavigation","menuRef","showLeftNav","setShowLeftNav","showRightNav","setShowRightNav","updateNavVisibility","current","scrollLeft","isAtEnd","clientWidth","scrollWidth","scrollChips","scrollAmount","currentScroll","maxScroll","scrollTo","left","behavior","handleResize","window","addEventListener","removeEventListener","scrollToSelected","selectedChip","querySelector","containerRect","getBoundingClientRect","chipRect","allChips","querySelectorAll","setTimeout","rightNavButton","document","click","useMenuNavigation","contract_types","getContractTypes","should_show_video","test","button_name","onClickGlossary","is_unavailable","contract_categories","should_show_dropdown","cards","style","transform","TradeCategories","TradeCategoriesGIF","StandaloneChevronLeftRegularIcon","onScroll","Chip","Selectable","onChipSelect","_contract_types$find2","Analytics","trackEvent","action","trade_type_name","StandaloneChevronRightRegularIcon","interpolation","escapeValue","black","onClickBack","onClose","_ref$should_render_ar","should_render_arrow","_ref$should_render_cl","should_render_close","_ref$text_size","SearchInput","onClickClearInput","onBlur","Input","leading_icon","trailing_icon","placeholder","displayName","_categories$find","_categories$find$cont","categories","is_info_dialog_open","onBackButtonClick","onCategoryClick","onChangeInput","onSearchBlur","show_loading","learn_more_banner","hide_back_button","input_ref","input_value","setInputValue","contract_category","getContractCategoryKey","selected_category_contract","_input_ref$current","focus","renderChildren","action_bar_item","Loading","is_fullscreen","Header","VerticalTab","Layout","Headers","header_title","items","selectedKey","NoResultsMessage","IconCategory","_findContractCategory","_findContractCategory2","_findContractCategory3","IconTradeCategory","findContractCategory","includes","tradeType","isArray","should_show_info_banner","tradeTypes","reduce","acc","newValue","c","ContractType","Dialog","current_mobile_title","MobileDialog","portal_element_id","header_classname","visible","has_content_scroll","ContractTypeMenu","Display","List","ContractTypeWidget","_selected_category_co","_list_with_category$","_list_with_category$$","_active_symbols$find","_list_with_category$2","languageChanged","_ref$unavailable_trad","unavailable_trade_types_list","active_symbols","symbol","wrapper_ref","is_dialog_open","setDialogVisibility","setInfoDialogVisibility","setHideBackButton","_React$useState8","selected_category","setSelectedCategory","_React$useState10","search_query","setSearchQuery","_React$useState12","setItem","animation_timeout","handleClickOutside","_wrapper_ref$current","contains","getCategoryName","clicked_item","_getContractTypes$fin","list_with_category","clearTimeout","form_source","form_name","_contract_type_map2","stored_value","CONTRACT_STORAGE_VALUES","OPTIONS","localStorage","subform_name","hj","tab_name","onWidgetClick","ordered_list","getCategoriesSortedByKey","ordered_unavailable_types_list","all_trade_types_list","accumulators_category","multipliers_category","_ref4","options_category","_ref5","contract_type_category_icon","getContractTypeCategoryIcons","push","component","_contract_category$co","_contract_category$co2","prev","_type$text","_type$text2","selected_category_contracts","_list_with_category","categoryItem","InlineMessage","s","display_name","shouldUnescape","tabIndex","search_string","searchQueryItem","Contract","contract_types_list","is_digit_view","is_mobile_digit_view_selected","non_available_contract_types_list","current_language","getAvailableContractTypes","unsupported_contract_types_list","prev_lang","usePrevious","isDigitTradeType","ToastPopup","underlying_name","getMarketNamesMap","toUpperCase","AccumulatorsSellButton","current_stake","is_sell_requested","is_valid_to_sell","isValidToSell","secondary","getCardLabels","SELL","cancellation","error","is_row_layout","setIsRowLayout","_ref$current$parentEl","el_height","parentElement","clientHeight","getDecimalPlaces","ask_price","basis","growth_rate","is_loading","is_multiplier","should_fade","localized_basis","getLocalizedBasis","vanilla_payout_text","payout_per_pip","vanilla_payout_message","basis_text","payout","stake","stakeOrPayout","CancelDealInfo","getGrowthRatePercentage","getCurrencyDisplayCode","ButtonTextWrapper","is_high_low","getContractTypeDisplay","isHighLow","showButtonName","IconComponentWrapper","IconTradeTypes","button_value","buy_info","has_deal_cancellation","info","is_proposal_empty","onClickPurchase","purchased_states_arr","setPurchaseState","setIsMFVericationPendingModal","mf_account_status","useMFAccountStatus","getIconType","is_button_disabled","returns","MT5_ACCOUNT_STATUS","PENDING","ContractInfo","PurchaseFieldset","is_market_closed","is_proposal_error","onHoverPurchase","setShouldFade","purchase_button","PurchaseButton","isTabletOs","getSortedIndex","getContractTypePosition","Purchase","_useStore$portfolio","portfolio","all_positions","onClickSell","purchase_states","setIsTradingDisabledByResidenceModal","is_account_to_be_closed_by_residence","is_purchase_enabled","is_trade_enabled","onPurchase","purchase_info","isLoading","isEmptyObject","active_accu_contract","isAccumulatorContract","underlying","is_sold","hasContractEntered","isOpen","indicative","getIndicativePrice","onClickSellButton","contract_id","stopPropagation","preventDefault","forEach","is_accum_or_mult_error","purchase_fieldset","unshift","onToggleCancellation","cancellation_price","onChangeCancellationDuration","cancellation_duration"],"sourceRoot":""}