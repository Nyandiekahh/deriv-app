{"version":3,"file":"trader/js/trader.hooks_src_useMFAccountStatus_ts-src_AppV2_Components_Guide_Description_video-preview_tsx-src_-6b1461.7c726e3f764750d83473.js","mappings":"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","sources":["webpack://@deriv/trader/../hooks/src/useHasMaltaInvestAccount.ts","webpack://@deriv/trader/../hooks/src/useGetMFAccountStatus.ts","webpack://@deriv/trader/../hooks/src/useMFAccountStatus.ts","webpack://@deriv/trader/./src/AppV2/Components/Guide/Description/video-preview.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/Description/video-fragment.tsx","webpack://@deriv/trader/./src/AppV2/Utils/contract-description-utils.tsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/video-config.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/allow-equals.ts"],"sourcesContent":["import { useStore } from '@deriv/stores';\n\nconst useHasMaltaInvestAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_malta_invest_account = active_accounts.some(\n        account => account.landing_company_shortcode === 'maltainvest'\n    );\n\n    return has_malta_invest_account;\n};\n\nexport default useHasMaltaInvestAccount;\n","import { useEffect } from 'react';\n\nimport { ACCOUNT_BADGE_STATUS, routes } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\n\nconst useGetMFAccountStatus = () => {\n    const { client } = useStore();\n    const { account_status, is_logged_in, updateAccountStatus } = client || {};\n\n    useEffect(() => {\n        async function fetchData() {\n            if (is_logged_in && (!account_status || !window.location.pathname.startsWith(routes.trade)))\n                await updateAccountStatus();\n        }\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const authentication = account_status?.authentication;\n    const poi_status = authentication?.identity?.status;\n    const onfido_status = authentication?.identity?.services?.onfido?.status;\n    const manual_status = authentication?.identity?.services?.manual?.status;\n    const poa_status = authentication?.document?.status;\n\n    const STATUS = {\n        NONE: 'none',\n        VERIFIED: 'verified',\n        PENDING: 'pending',\n        REJECTED: 'rejected',\n        EXPIRED: 'expired',\n        SUSPECTED: 'suspected',\n    } as const;\n    const failed_cases = [STATUS.REJECTED, STATUS.EXPIRED, STATUS.SUSPECTED];\n\n    //@ts-expect-error we can ignore this error since we are checking the status and returning true or false\n    const need_poa_resubmission = poa_status && failed_cases.includes(poa_status);\n    const poa_pending = poa_status === STATUS.PENDING;\n    const poa_not_submitted = poa_status === STATUS.NONE;\n\n    const poi_verified_by_onfido_or_manual = [onfido_status, manual_status].includes(STATUS.VERIFIED);\n    const poi_pending_by_onfido_or_manual =\n        [onfido_status, manual_status].includes(STATUS.PENDING) && !poi_verified_by_onfido_or_manual;\n\n    const poi_not_submitted_by_onfido_or_manual = [onfido_status, manual_status].every(\n        status => status === STATUS.NONE\n    );\n    const need_poi_submission = !poi_pending_by_onfido_or_manual && !poi_verified_by_onfido_or_manual;\n\n    const need_poi_resubmission = !poi_not_submitted_by_onfido_or_manual && need_poi_submission;\n    const is_verified = poi_status === STATUS.VERIFIED && poa_status === STATUS.VERIFIED;\n\n    const getMFAccountStatus = () => {\n        if (poa_status && onfido_status && manual_status) {\n            if (need_poi_resubmission || need_poa_resubmission) {\n                return ACCOUNT_BADGE_STATUS.FAILED;\n            } else if (poi_not_submitted_by_onfido_or_manual || poa_not_submitted) {\n                return ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION;\n            } else if (poi_pending_by_onfido_or_manual || poa_pending) {\n                return ACCOUNT_BADGE_STATUS.PENDING;\n            }\n            return null;\n        }\n        return null;\n    };\n    const getVerificationStatus = () => (!is_verified ? { poi_status, poa_status, valid_tin: 1, required_tin: 1 } : {});\n\n    return {\n        mf_account_status: getMFAccountStatus(),\n        kyc_status: getVerificationStatus(),\n    };\n};\n\nexport default useGetMFAccountStatus;\n","import { ACCOUNT_BADGE_STATUS } from '@deriv/shared';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\nimport useGetMFAccountStatus from './useGetMFAccountStatus';\nimport { useStore } from '@deriv/stores';\n\nconst useMFAccountStatus = () => {\n    const {\n        client: { is_eu },\n    } = useStore();\n    const has_malta_invest_account = useHasMaltaInvestAccount();\n    const { mf_account_status } = useGetMFAccountStatus();\n\n    const should_show_status_for_multipliers_account =\n        is_eu &&\n        has_malta_invest_account &&\n        mf_account_status &&\n        [ACCOUNT_BADGE_STATUS.PENDING, ACCOUNT_BADGE_STATUS.FAILED, ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION].includes(\n            mf_account_status\n        );\n    return should_show_status_for_multipliers_account ? mf_account_status : null;\n};\n\nexport default useMFAccountStatus;\n","import React from 'react';\nimport { Stream } from '@cloudflare/stream-react';\nimport { CaptionText } from '@deriv-com/quill-ui';\nimport { LabelPairedPlayMdFillIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\n\ntype TVideoPreview = {\n    contract_type: string;\n    toggleVideoPlayer: () => void;\n    video_src: string;\n    only_show_thumbnail?: boolean;\n    custom_width?: string;\n    custom_height?: string;\n};\n\nconst VideoPreview = ({\n    contract_type,\n    toggleVideoPlayer,\n    video_src,\n    only_show_thumbnail = false,\n    custom_width,\n    custom_height,\n}: TVideoPreview) => (\n    <div className='guide-video__wrapper' onClick={toggleVideoPlayer} onKeyDown={toggleVideoPlayer}>\n        <div className='guide-video__preview' data-testid='dt_video_preview'>\n            <Stream\n                className='guide-video'\n                letterboxColor='transparent'\n                muted\n                preload='auto'\n                responsive={false}\n                src={video_src}\n                width={custom_width || '112px'}\n                height={custom_height || '73px'}\n            />\n            <div className='guide-video__preview__icon__wrapper'>\n                <LabelPairedPlayMdFillIcon className='guide-video__preview__icon' />\n            </div>\n        </div>\n        {!only_show_thumbnail && (\n            <div className='guide-video__description'>\n                <CaptionText bold color='quill-typography__color--default'>\n                    <Localize i18n_default_text='How to trade ' />\n                    {contract_type}?\n                </CaptionText>\n                <CaptionText color='quill-typography__color--default'>\n                    <Localize i18n_default_text='Watch this video to learn about this trade type.' />\n                </CaptionText>\n            </div>\n        )}\n    </div>\n);\n\nexport default VideoPreview;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Skeleton } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { getUrlBase } from '@deriv/shared';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { DotLottieReact } from '@lottiefiles/dotlottie-react';\n\ntype TVideoFragment = {\n    contract_type: string;\n    is_mobile_forced?: boolean;\n};\n\nconst VideoFragment = ({ contract_type, is_mobile_forced = false }: TVideoFragment) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [dotLottie, setDotLottie] = React.useState<EventTarget | null>(null);\n\n    const { isMobile } = useDevice();\n\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        (extension: string) =>\n            getUrlBase(\n                `/public/videos/${contract_type.toLowerCase()}_${is_mobile_forced ? 'mobile' : isMobile ? 'mobile' : 'desktop'}.${extension}`\n            ),\n        [contract_type, isMobile]\n    );\n    const lottie_src = React.useMemo(() => getVideoSource('lottie'), [getVideoSource]);\n\n    React.useEffect(() => {\n        const onLoad = () => setIsLoading(false);\n\n        if (dotLottie) dotLottie.addEventListener('load', onLoad);\n\n        return () => {\n            if (dotLottie) dotLottie.removeEventListener('load', onLoad);\n        };\n    }, [dotLottie]);\n\n    return (\n        <div\n            className={classNames('video-fragment__wrapper', {\n                'video-fragment__wrapper--accumulator':\n                    contract_type.toLowerCase() === CONTRACT_LIST.ACCUMULATORS.toLowerCase(),\n            })}\n        >\n            {is_loading && <Skeleton width={248} height={161} className='skeleton-video-loader' />}\n            <DotLottieReact\n                className='video-fragment__wrapper--lottie'\n                autoplay\n                dotLottieRefCallback={\n                    ((dotLottie: EventTarget | null) => setDotLottie(dotLottie)) as React.ComponentProps<\n                        typeof DotLottieReact\n                    >['dotLottieRefCallback']\n                }\n                src={lottie_src}\n                loop\n            />\n        </div>\n    );\n};\n\nexport default VideoFragment;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\nimport VideoFragment from 'AppV2/Components/Guide/Description/video-fragment';\nimport { DESCRIPTION_VIDEO_ID } from 'Modules/Trading/Helpers/video-config';\nimport { CONTRACT_LIST } from './trade-types-utils';\n\ntype TDtraderVideoUrl = {\n    [key: string]: TVideoVariants;\n};\n\ntype TVideoVariants = {\n    dark: string;\n    light: string;\n};\n\nexport const getTerm = () => ({\n    BARRIER: localize('Barrier'),\n    CONTRACT_VALUE: localize('Contract value'),\n    DEAL_CANCELLATION: localize('Deal cancellation'),\n    ENTRY_SPOT: localize('Entry spot'),\n    EXIT_SPOT: localize('Exit spot'),\n    EXPIRY: localize('Expiry'),\n    FINAL_PRICE: localize('Final price'),\n    GROWTH_RATE: localize('Growth rate'),\n    INDEX: localize('Index price'),\n    STAKE: localize('Stake'),\n    PAYOUT: localize('Payout'),\n    PAYOUT_PER_POINT: localize('Payout per point'),\n    PREVIOUS_SPOT_PRICE: localize('Previous spot price'),\n    RANGE: localize('Range'),\n    SLIPPAGE_RISK: localize('Slippage risk'),\n    STOP_OUT: localize('Stop out'),\n    STOP_LOSS: localize('Stop loss'),\n    STRIKE_PRICE: localize('Strike price'),\n    TAKE_PROFIT: localize('Take profit'),\n    BARRIER_RANGE: localize('Barrier range'),\n    SPOT_PRICE: localize('Spot price'),\n});\n\nconst getDefinition = () => {\n    const {\n        BARRIER,\n        CONTRACT_VALUE,\n        DEAL_CANCELLATION,\n        ENTRY_SPOT,\n        EXIT_SPOT,\n        EXPIRY,\n        FINAL_PRICE,\n        GROWTH_RATE,\n        PAYOUT,\n        PAYOUT_PER_POINT,\n        PREVIOUS_SPOT_PRICE,\n        RANGE,\n        SLIPPAGE_RISK,\n        STOP_OUT,\n        STOP_LOSS,\n        STRIKE_PRICE,\n        TAKE_PROFIT,\n        INDEX,\n        STAKE,\n        BARRIER_RANGE,\n        SPOT_PRICE,\n    } = getTerm();\n    return {\n        [BARRIER]: (\n            <Localize i18n_default_text='The corresponding price level based on the payout per point you’ve selected.' />\n        ),\n        [SPOT_PRICE]: (\n            <Localize i18n_default_text='The real-time price of an asset for immediate buying and selling.' />\n        ),\n        [CONTRACT_VALUE]: (contract_type: string) =>\n            contract_type === CONTRACT_LIST.VANILLAS ? (\n                <Localize i18n_default_text='The current value of a trade contract, based on the initial buy price and the current profit/loss.' />\n            ) : (\n                <Localize i18n_default_text='This is the resale value of your contract, based on the prevailing market conditions (e.g, the current spot), including additional commissions if any.' />\n            ),\n        [DEAL_CANCELLATION]: (\n            <Localize i18n_default_text='A feature that lets you cancel your trade and get your stake back if the price moves against you.' />\n        ),\n        [ENTRY_SPOT]: (\n            <Localize i18n_default_text='The specific price level at which a trader decides to buy or sell an asset.' />\n        ),\n        [EXIT_SPOT]: (\n            <Localize i18n_default_text='The specific price level at which a trader closes their positions in a market, either to realise profits or limit losses.' />\n        ),\n        [EXPIRY]: (\n            <Localize i18n_default_text='The moment when a contract ends — the exact time at which it matures. It marks the final point when the outcome of the contract is determined.' />\n        ),\n        [FINAL_PRICE]: <Localize i18n_default_text='This is the spot price of the last tick at expiry.' />,\n        [GROWTH_RATE]: (\n            <Localize i18n_default_text='A feature that lets you select a percentage gain for your stake (1%, 2%, 3%, 4%, or 5%).' />\n        ),\n        [PAYOUT]: <Localize i18n_default_text='The sum of your initial stake and profit.' />,\n        [PAYOUT_PER_POINT]: (\n            <Localize i18n_default_text='The money you make or lose for every one-point change in an asset’s price.' />\n        ),\n        [PREVIOUS_SPOT_PRICE]: <Localize i18n_default_text='The price from the trading period that just ended.' />,\n        [RANGE]: (\n            <Localize i18n_default_text='It is a percentage of the previous spot price. The percentage rate is based on your choice of the index and the growth rate.' />\n        ),\n        [SLIPPAGE_RISK]: (\n            <Localize i18n_default_text='The chance that your order will be executed at a worse price than you expected.' />\n        ),\n        [STOP_OUT]: (\n            <Localize i18n_default_text='An automated action to close a trader’s open positions when their account’s equity falls to a predetermined level.' />\n        ),\n        [STOP_LOSS]: (\n            <Localize i18n_default_text='An order placed to automatically sell an asset once it reaches a certain price.' />\n        ),\n        [STRIKE_PRICE]: (\n            <Localize i18n_default_text='The agreed-upon price in the contract that decides whether your trade wins or loses.' />\n        ),\n        [TAKE_PROFIT]: (\n            <Localize i18n_default_text='An order set by a trader to automatically close a profitable position when an asset’s price reaches a specified level.' />\n        ),\n        [INDEX]: <Localize i18n_default_text='A measure of a section of shares in the stock market.' />,\n        [STAKE]: <Localize i18n_default_text='The amount of money risked in your trade.' />,\n        [BARRIER_RANGE]: (\n            <Localize i18n_default_text='The maximum amount the price is allowed to move from its previous value at each step. If the price goes beyond that amount, the contract ends.' />\n        ),\n    };\n};\n\nexport const getTermDefinition = ({ contract_type, term }: { contract_type?: string; term?: string }) => {\n    if (!contract_type || !term) return;\n    const result = getDefinition()[term];\n    if (typeof result === 'function') return result(contract_type);\n    return result ?? '';\n};\n\ninterface PayoutBadgeProps {\n    children: React.ReactNode;\n}\n\nconst PayoutBadge: React.FC<PayoutBadgeProps> = ({ children }) => {\n    return <div className='description__badge'>{children}</div>;\n};\n\nexport const getContractDescription = (\n    content: {\n        type: string;\n        text: JSX.Element | string;\n    }[],\n    is_mobile_forced = false\n) =>\n    content.map(({ type, text }, index) => {\n        if (type === 'heading' && typeof text !== 'string')\n            return (\n                <Text key={text.props.i18n_default_text} bold size='md' className='description__heading'>\n                    {text}\n                </Text>\n            );\n        if ((type === 'paragraph' || type === 'general') && typeof text !== 'string')\n            return (\n                <Text\n                    as='p'\n                    key={text.props.i18n_default_text}\n                    size='sm'\n                    className={`description__${type}`}\n                    color='quill-typography__color--default'\n                >\n                    {text}\n                </Text>\n            );\n        if (type === 'video' && typeof text === 'string')\n            return <VideoFragment contract_type={text} key={text + index} is_mobile_forced={is_mobile_forced} />;\n        if (type === 'badge' && typeof text !== 'string')\n            return <PayoutBadge key={`badge-${index}`}>{text}</PayoutBadge>;\n    });\n\nexport const DESCRIPTION_VIDEO_IDS: TDtraderVideoUrl = {\n    [CONTRACT_LIST.ACCUMULATORS]: DESCRIPTION_VIDEO_ID.accumulator,\n    [CONTRACT_LIST.EVEN_ODD]: DESCRIPTION_VIDEO_ID.even_odd,\n    [CONTRACT_LIST.HIGHER_LOWER]: DESCRIPTION_VIDEO_ID.high_low,\n    [CONTRACT_LIST.MATCHES_DIFFERS]: DESCRIPTION_VIDEO_ID.match_diff,\n    [CONTRACT_LIST.MULTIPLIERS]: DESCRIPTION_VIDEO_ID.multiplier,\n    [CONTRACT_LIST.OVER_UNDER]: DESCRIPTION_VIDEO_ID.over_under,\n    [CONTRACT_LIST.RISE_FALL]: DESCRIPTION_VIDEO_ID.rise_fall,\n    [CONTRACT_LIST.TOUCH_NO_TOUCH]: DESCRIPTION_VIDEO_ID.touch,\n    [CONTRACT_LIST.VANILLAS]: DESCRIPTION_VIDEO_ID.vanilla,\n    [CONTRACT_LIST.TURBOS]: DESCRIPTION_VIDEO_ID.turbos,\n};\n\nexport const getDescriptionVideoIds = (contract_type = '', is_dark_theme = false) =>\n    DESCRIPTION_VIDEO_IDS[contract_type]?.[is_dark_theme ? 'dark' : 'light'];\n","type TDtraderVideoUrl = {\n    [key: string]: TVideoVariants;\n};\n\ntype TVideoVariants = {\n    dark: string;\n    light: string;\n};\n\n/* The video upload feature is not available yet. The following video ids are taken from CF Stream account.\nIf considered necessary later, the current approach can be replaced with HTTP-request to fetch videos by their file names. */\nexport const DESCRIPTION_VIDEO_ID: TDtraderVideoUrl = {\n    accumulator: {\n        light: 'c1d64d5ffaf449e3326d387a70621a4c',\n        dark: '9657e4adcfd9274d41a042b7b6c42d60',\n    },\n    even_odd: {\n        light: 'a3930b0a535c4f23daea5cf98a718941',\n        dark: 'e311e25dd68761d6ab73e8158ec83ea4',\n    },\n    high_low: {\n        light: 'f528c662c377601908a741ae2aedaec6',\n        dark: '4c05445e1bd28f3f9f95b0ab566c4f9b',\n    },\n    turbos: {\n        light: '63f8b8f93e83e98481f20aa971ef7723',\n        dark: 'ce0158579fcee186de1ddeb97646f892',\n    },\n    match_diff: {\n        light: '8693a02397d284ffcf0608e4fda702d9',\n        dark: '2e56ad7ea67bf3f9a869de6336df1796',\n    },\n    multiplier: {\n        light: 'bca032791da88023e81ebf7341226f83',\n        dark: '3d10e25e2e0eaaf96d1874aae257029f',\n    },\n    over_under: {\n        light: '9e2be907cba9b38352890e52cfd8cbaf',\n\n        dark: '4b31fc188c2f365faa310f7e34715af7',\n    },\n    rise_fall: {\n        light: '7719c7e5436f58e59ab47510445108ba',\n        dark: 'b72ef7ec914afe3dbb2a1601cad3a76f',\n    },\n    touch: {\n        light: 'c781a6844f37a3308fe8774b4450dfc9',\n        dark: 'c91f2b9859dc95ce8eecf7df327aaf00',\n    },\n    vanilla: {\n        light: '9b8b6ae67d3a720e4aee2665889d17fb',\n        dark: '8f04e9d768b8e08a1d87830c95c6b9c8',\n    },\n    trade_type_selection: {\n        light: 'ffd6ce15fe1d47014262a00f562f5d7b',\n        dark: '194a02d2924a27fdbc7420da44d392cc',\n    },\n};\n\n// The ids here won't have dark and light theme\nexport const UNIFIED_MODE_VIDEO_ID = {\n    accumulator_stats: '26d1401d2e3f6ae16913a21ec0579fc1',\n};\n\nexport const getDescriptionVideoId = (contract_type = '', is_dark_theme = false) =>\n    DESCRIPTION_VIDEO_ID[contract_type]?.[is_dark_theme ? 'dark' : 'light'];\n","import { isEmptyObject, getPropertyValue, TRADE_TYPES } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\ntype THasDurationForCallPutEqual = {\n    contract_type_list: TTradeStore['contract_types_list'];\n    duration_unit: TTradeStore['duration_unit'];\n    contract_start_type: string;\n};\n\nexport const hasCallPutEqual = (contract_type_list: THasDurationForCallPutEqual['contract_type_list']) => {\n    if (isEmptyObject(contract_type_list)) return false;\n\n    return !!getPropertyValue(contract_type_list, 'Ups & Downs')?.categories?.some(\n        (contract: THasDurationForCallPutEqual['contract_type_list']['Ups & Downs']['categories'][0]) =>\n            contract.value === TRADE_TYPES.RISE_FALL_EQUAL\n    );\n};\n\nexport const hasDurationForCallPutEqual = (\n    contract_type_list: THasDurationForCallPutEqual['contract_type_list'],\n    duration_unit: THasDurationForCallPutEqual['duration_unit'],\n    contract_start_type: THasDurationForCallPutEqual['contract_start_type']\n) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {}).reduce<string[]>((key, list) => {\n        const item: THasDurationForCallPutEqual['contract_type_list']['Ups & Downs'] = contract_type_list[list];\n        return [...key, ...item.categories.map(contract => contract.value)];\n    }, []);\n\n    const contract_duration_list = contract_list.map(list => ({\n        [list]: getPropertyValue(ContractType.getFullContractTypes(), [\n            list,\n            'config',\n            'durations',\n            'units_display',\n            contract_start_type,\n        ]),\n    }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    if (hasCallPutEqual(contract_type_list)) {\n        const found = contract_duration_list.filter(contract => contract?.rise_fall_equal);\n        if (found.length > 0) {\n            return found[0].rise_fall_equal.some((duration: { value: string }) => duration.value === duration_unit);\n        }\n    }\n\n    return false;\n};\n\nexport const isRiseFallEqual = (contract_type: string) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n"],"names":["useStore","client","active_accounts","some","account","landing_company_shortcode","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_authentication$ident","_authentication$ident2","_authentication$ident3","_authentication$ident4","_authentication$ident5","_authentication$ident6","_authentication$ident7","_authentication$docum","_ref","account_status","is_logged_in","updateAccountStatus","useEffect","_fetchData","_callee","_context","window","location","pathname","startsWith","routes","trade","arguments","apply","_next","_throw","fetchData","authentication","poi_status","identity","status","onfido_status","services","onfido","manual_status","manual","poa_status","document","STATUS","need_poa_resubmission","includes","poa_pending","poa_not_submitted","poi_verified_by_onfido_or_manual","poi_pending_by_onfido_or_manual","poi_not_submitted_by_onfido_or_manual","every","is_verified","mf_account_status","ACCOUNT_BADGE_STATUS","FAILED","NEEDS_VERIFICATION","PENDING","kyc_status","valid_tin","required_tin","is_eu","has_malta_invest_account","useHasMaltaInvestAccount","useGetMFAccountStatus","contract_type","toggleVideoPlayer","video_src","_ref$only_show_thumbn","only_show_thumbnail","custom_width","custom_height","React","className","onClick","onKeyDown","Stream","letterboxColor","muted","preload","responsive","src","width","height","LabelPairedPlayMdFillIcon","CaptionText","bold","color","Localize","i18n_default_text","_ref$is_mobile_forced","is_mobile_forced","_React$useState2","_slicedToArray","is_loading","setIsLoading","_React$useState4","dotLottie","setDotLottie","isMobile","useDevice","getVideoSource","extension","getUrlBase","concat","toLowerCase","lottie_src","onLoad","addEventListener","removeEventListener","classNames","CONTRACT_LIST","ACCUMULATORS","Skeleton","DotLottieReact","autoplay","dotLottieRefCallback","loop","getTerm","BARRIER","localize","CONTRACT_VALUE","DEAL_CANCELLATION","ENTRY_SPOT","EXIT_SPOT","EXPIRY","FINAL_PRICE","GROWTH_RATE","INDEX","STAKE","PAYOUT","PAYOUT_PER_POINT","PREVIOUS_SPOT_PRICE","RANGE","SLIPPAGE_RISK","STOP_OUT","STOP_LOSS","STRIKE_PRICE","TAKE_PROFIT","BARRIER_RANGE","SPOT_PRICE","getTermDefinition","_ref2","term","_getTerm","result","_defineProperty","VANILLAS","PayoutBadge","_ref3","children","getContractDescription","content","undefined","map","_ref4","index","text","Text","key","props","size","VideoFragment","as","DESCRIPTION_VIDEO_IDS","DESCRIPTION_VIDEO_ID","accumulator","EVEN_ODD","even_odd","HIGHER_LOWER","high_low","MATCHES_DIFFERS","match_diff","MULTIPLIERS","multiplier","OVER_UNDER","over_under","RISE_FALL","rise_fall","TOUCH_NO_TOUCH","touch","vanilla","TURBOS","turbos","getDescriptionVideoIds","_DESCRIPTION_VIDEO_ID2","is_dark_theme","light","dark","trade_type_selection","UNIFIED_MODE_VIDEO_ID","accumulator_stats","getDescriptionVideoId","_DESCRIPTION_VIDEO_ID","hasCallPutEqual","contract_type_list","_getPropertyValue","_getPropertyValue$cat","isEmptyObject","getPropertyValue","categories","contract","TRADE_TYPES","RISE_FALL_EQUAL","hasDurationForCallPutEqual","duration_unit","contract_start_type","contract_duration_list","reduce","list","item","_toConsumableArray","ContractType","getFullContractTypes","found","filter","rise_fall_equal","duration","isRiseFallEqual","test"],"sourceRoot":""}